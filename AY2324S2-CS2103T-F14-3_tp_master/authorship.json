[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-F14-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-F14-3/tp/actions)","lastModifiedDate":"2024-03-04"},{"lineNumber":2,"author":{"gitId":"kailashgautham"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-F14-3/tp/graph/badge.svg?token\u003dLJBQBAER31)](https://codecov.io/gh/AY2324S2-CS2103T-F14-3/tp)","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"teojunda"},"content":"![Ui](docs/images/ActualUi.png)","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"* This is **a project for Software Engineering (SE) students in CS2103T**.\u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"  * For a TA to keep track of their students, or","lastModifiedDate":"2024-03-04"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"  * For a personal project to keep track of your contacts.","lastModifiedDate":"2024-03-04"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"* The project simulates an ongoing software project for a desktop application (called _TA Toolkit_) used for managing contact details.","lastModifiedDate":"2024-03-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"* It is named `TA Toolkit` because it is a toolkit that allows TAs to manage their students\u0027 contacts and other information in a more organised manner.","lastModifiedDate":"2024-03-04"}],"authorContributionMap":{"kailashgautham":7,"teojunda":1,"-":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"mainClassName \u003d \u0027seedu.tatoolkit.Main\u0027","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"g-tejas"},"content":"run {","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"g-tejas"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"g-tejas"},"content":"    archiveFileName \u003d \u0027tatoolkit.jar\u0027","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kailashgautham":1,"g-tejas":5,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"g-tejas"},"content":"### Tejas Garrepally","lastModifiedDate":"2024-02-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"teojunda"},"content":"\u003cimg src\u003d\"images/g-tejas.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"g-tejas"},"content":"[[homepage](http://www.gtejas.com)]","lastModifiedDate":"2024-02-24"},{"lineNumber":17,"author":{"gitId":"g-tejas"},"content":"[[github](https://github.com/g-tejas)]","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"g-tejas"},"content":"[[portfolio](team/g-tejas.md)]","lastModifiedDate":"2024-04-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"* Role: Developer","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"* Responsibilities: Features Development","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"### Gautham Kailash","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"kailashgautham"},"content":"\u003cimg src\u003d\"images/kailashgautham.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"[[homepage](https://www.kailashgautham.com)]","lastModifiedDate":"2024-02-24"},{"lineNumber":28,"author":{"gitId":"kailashgautham"},"content":"[[github](http://github.com/kailashgautham)]","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"kailashgautham"},"content":"[[portfolio](team/kailashgautham.md)]","lastModifiedDate":"2024-02-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"kailashgautham"},"content":"* Role: Developer","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"kailashgautham"},"content":"* Responsibilities: Features Development","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"hiivan"},"content":"### Ivan Ang","lastModifiedDate":"2024-03-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"hiivan"},"content":"\u003cimg src\u003d\"images/hiivan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"hiivan"},"content":"[[homepage](https://www.ivan-ang.com)]","lastModifiedDate":"2024-03-01"},{"lineNumber":39,"author":{"gitId":"hiivan"},"content":"[[github](https://github.com/hiivan)]","lastModifiedDate":"2024-03-01"},{"lineNumber":40,"author":{"gitId":"hiivan"},"content":"[[portfolio](team/hiivan.md)]","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"kailashgautham"},"content":"* Responsibilities: Features Development and UI","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"teojunda"},"content":"### Axel Teo","lastModifiedDate":"2024-03-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"teojunda"},"content":"\u003cimg src\u003d\"images/teojunda.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"teojunda"},"content":"[[github](http://github.com/teojunda)]","lastModifiedDate":"2024-03-02"},{"lineNumber":50,"author":{"gitId":"teojunda"},"content":"[[portfolio](team/teojunda.md)]","lastModifiedDate":"2024-03-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"teojunda"},"content":"* Responsibilities: Features Development","lastModifiedDate":"2024-04-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"YuSoonZ"},"content":"### Ng Yu Soon","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"YuSoonZ"},"content":"\u003cimg src\u003d\"images/yusoonz.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"YuSoonZ"},"content":"[[github](http://github.com/yusoonz)]","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"YuSoonZ"},"content":"[[portfolio](team/yusoonz.md)]","lastModifiedDate":"2024-04-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"YuSoonZ"},"content":"* Responsibilities: Features Development","lastModifiedDate":"2024-04-11"}],"authorContributionMap":{"YuSoonZ":5,"kailashgautham":10,"teojunda":6,"hiivan":5,"g-tejas":4,"-":33}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"DevOps guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# DevOps guide","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c!-- -------------------------------------------------------------------------------------------------------------------- --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.","lastModifiedDate":"2023-01-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI runs, it will generate code coverage data (based on the tests run by CI) and upload that data to the CodeCov website, which in turn can provide you more info about the coverage of your tests.","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"However, because Codecov is known to run into intermittent problems (e.g., report upload fails) due to issues on the Codecov service side, the CI is configured to pass even if the Codecov task failed. Therefore, developers are advised to check the code coverage levels periodically and take corrective actions if the coverage level falls below desired levels.","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"To enable Codecov for forks of this project, follow the steps given in [this se-edu guide](https://se-education.org/guides/tutorials/codecov.html).","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"kailashgautham"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/ay2324s2-cs2103t-f14-3/tp/tree/master/src/main/java/seedu/tatoolkit/MainApp.java).","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"kailashgautham":1,"-":81}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"teojunda"},"content":"# TA Toolkit Developer Guide","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"YuSoonZ"},"content":"### Ng Yu Soon\u0027s Acknowledgements","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":" * Used ChatGPT to generate documentation for `ViewCommand`, `ViewCommandParser`, `AddNoteCommand`, `AddNoteCommandParser`, `Note` and `Notes` classes.","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":" * Used ChatGPT to generate the format and structure in `ViewCommandTest`, `ViewCommandParserTest`, `AddNoteCommandTest`, `AddNoteCommandParserTest`, `NoteTest` and `NotesTest` classes.","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":" * Used ChatGPT to conform to better structure within Personal Portfolio Page.","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":21,"author":{"gitId":"g-tejas"},"content":"### Tejas Garrepally\u0027s Acknowledgements","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":" * Used GitHub Copilot to generate some of the JavaDocs for `Attendance`","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":" * Used GitHub Copilot to generate some of the format and structure for `WeekTest`, `ClassGroupTest`","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":" * Used ChatGPT to replace the color scheme in `DarkTheme.css` with Nord Theme.","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"kailashgautham"},"content":"### Gautham Kailash\u0027s Acknowledgements","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"* Used GitHub Copilot to generate Javadocs for `AddCommand`, `AddCommandParser`, `MarkCommand`, and `MarkCommandParser` classes.","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"hiivan"},"content":"### Ivan Ang\u0027s Acknowledgements","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"hiivan"},"content":"* Used ChatGPT to assist in writing my Project Portfolio Page in `docs/team/hiivan.md`.","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"kailashgautham"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\"\u003e\u003c/puml\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"kailashgautham"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2324S2-CS2103T-F14-3/tp/tree/master/src/main/java/seedu/tatoolkit/Main.java) and [`MainApp`](https://github.com/AY2324S2-CS2103T-F14-3/tp/tree/master/src/main/java/seedu/tatoolkit/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"hiivan"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `dc 1` to delete a person.","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"kailashgautham"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/ay2324s2-cs2103t-f14-3/tp/tree/master/src/main/java/seedu/tatoolkit/ui/Ui.java)","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"kailashgautham"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter`, `SidePanel` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2024-04-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"kailashgautham"},"content":"The `UI` component uses the JavaFX UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/ay2324s2-cs2103t-f14-3/tp/tree/master/src/main/java/seedu/tatoolkit/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/ay2324s2-cs2103t-f14-3/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2024-04-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"kailashgautham"},"content":"**API** : [`Logic.java`](https://github.com/ay2324s2-cs2103t-f14-3/tp/tree/master/src/main/java/seedu/tatoolkit/logic/Logic.java)","lastModifiedDate":"2024-04-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"hiivan"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"dc 1\")` API call as an example.","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":117,"author":{"gitId":"kailashgautham"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `TaToolkitParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"kailashgautham"},"content":"* When called upon to parse a user command, the `TaToolkitParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `TaToolkitParser` returns back as a `Command` object.","lastModifiedDate":"2024-04-01"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"kailashgautham"},"content":"**API** : [`Model.java`](https://github.com/AY2324S2-CS2103T-F14-3/tp/tree/master/src/main/java/seedu/tatoolkit/model/Model.java)","lastModifiedDate":"2024-04-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"kailashgautham"},"content":"* stores the TA Toolkit data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2024-04-01"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"kailashgautham"},"content":"**API** : [`Storage.java`](https://github.com/ay2324s2-cs2103t-f14-3/tp/tree/master/src/main/java/seedu/tatoolkit/storage/Storage.java)","lastModifiedDate":"2024-04-01"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"kailashgautham"},"content":"* can save both TA Toolkit data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2024-04-01"},{"lineNumber":153,"author":{"gitId":"kailashgautham"},"content":"* inherits from both `TaToolkitStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2024-04-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"kailashgautham"},"content":"Classes used by multiple components are in the `seedu.tatoolkit.commons` package.","lastModifiedDate":"2024-04-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"teojunda"},"content":"### Edit a `Person`","lastModifiedDate":"2024-03-19"},{"lineNumber":167,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":168,"author":{"gitId":"teojunda"},"content":"Edits the details of an existing `Person` identified by their `INDEX`in the displayed person list.","lastModifiedDate":"2024-03-19"},{"lineNumber":169,"author":{"gitId":"teojunda"},"content":"The commands are implemented in the `EditCommand` class which extend the `Command` class.","lastModifiedDate":"2024-03-19"},{"lineNumber":170,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":171,"author":{"gitId":"teojunda"},"content":"* Step 1. The `EditCommand` object\u0027s `execute()` method is called.","lastModifiedDate":"2024-03-19"},{"lineNumber":172,"author":{"gitId":"teojunda"},"content":"* Step 2. The `INDEX` is checked to be within the valid range of the displayed person list. If the `INDEX` given is invalid (i.e., out of range), a `CommandException` is thrown.","lastModifiedDate":"2024-03-19"},{"lineNumber":173,"author":{"gitId":"teojunda"},"content":"* Step 3. The `Person` at the given `INDEX` is referenced and `deletePerson()` is called to remove `originalPerson` from person list.","lastModifiedDate":"2024-03-27"},{"lineNumber":174,"author":{"gitId":"teojunda"},"content":"* Step 4. The field(s) to be edited are checked.","lastModifiedDate":"2024-03-19"},{"lineNumber":175,"author":{"gitId":"teojunda"},"content":"  * If there are no fields to be edited, a `CommandException` is thrown.","lastModifiedDate":"2024-03-19"},{"lineNumber":176,"author":{"gitId":"teojunda"},"content":"  * If any of the edited fields are invalid, a `CommandException` is thrown.","lastModifiedDate":"2024-03-19"},{"lineNumber":177,"author":{"gitId":"teojunda"},"content":"  * If the edited person is the same as the original person, a `CommandException` is thrown`.","lastModifiedDate":"2024-03-19"},{"lineNumber":178,"author":{"gitId":"teojunda"},"content":"  * If any of `Email`, `Phone`, `Telegram`, `Github` fields are duplicates with any existing person in person list, a `CommandException` is thrown.","lastModifiedDate":"2024-03-19"},{"lineNumber":179,"author":{"gitId":"teojunda"},"content":"* Step 5. The model object\u0027s `addPerson()` method is called. The input parameter is the `editedPerson` with the edited details.","lastModifiedDate":"2024-03-19"},{"lineNumber":180,"author":{"gitId":"teojunda"},"content":"* Step 6. The `Person` field(s) are edited.","lastModifiedDate":"2024-03-27"},{"lineNumber":181,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":182,"author":{"gitId":"teojunda"},"content":"The diagram below describes this behaviour concisely. It shows how a user’s command is processed and what message is ultimately shown if they decide to edit a person.","lastModifiedDate":"2024-03-19"},{"lineNumber":183,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":184,"author":{"gitId":"teojunda"},"content":"\u003cpuml src\u003d\"diagrams/EditCommandActivityDiagram.puml\" /\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":185,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":186,"author":{"gitId":"teojunda"},"content":"The sequence diagram below also shows the interaction between the various components during the execution of the `EditCommand`.","lastModifiedDate":"2024-03-19"},{"lineNumber":187,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":188,"author":{"gitId":"teojunda"},"content":"\u003cpuml src\u003d\"diagrams/EditCommandSequenceDiagram.puml\" /\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":189,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":190,"author":{"gitId":"teojunda"},"content":"#### Design considerations:","lastModifiedDate":"2024-03-27"},{"lineNumber":191,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":192,"author":{"gitId":"teojunda"},"content":"**Aspect: How editing a Person works:**","lastModifiedDate":"2024-03-27"},{"lineNumber":193,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":194,"author":{"gitId":"teojunda"},"content":"* **Alternative 1 (current choice):** Removes the `originalPerson` and adds the `editedPerson`.","lastModifiedDate":"2024-03-27"},{"lineNumber":195,"author":{"gitId":"teojunda"},"content":"    * Pros: Retains the sorted order of Persons by `Name` in the person list.","lastModifiedDate":"2024-03-27"},{"lineNumber":196,"author":{"gitId":"teojunda"},"content":"    * Cons: May have performance issues in terms of time complexity since it requires 2 operations (`deletePerson()` and `addPerson`).","lastModifiedDate":"2024-03-27"},{"lineNumber":197,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":198,"author":{"gitId":"teojunda"},"content":"* **Alternative 2:** Directly update the fields in the `originalPerson`","lastModifiedDate":"2024-03-27"},{"lineNumber":199,"author":{"gitId":"teojunda"},"content":"    * Pros: Better performance, since this only requires searching through the person list once.","lastModifiedDate":"2024-03-27"},{"lineNumber":200,"author":{"gitId":"teojunda"},"content":"    * Cons: The order of person list will be lost, since `Name` of a `Person` may be edited.","lastModifiedDate":"2024-03-27"},{"lineNumber":201,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":202,"author":{"gitId":"YuSoonZ"},"content":"### View a `Person`","lastModifiedDate":"2024-03-20"},{"lineNumber":203,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":204,"author":{"gitId":"YuSoonZ"},"content":"Views the details of an existing `Person` identified by their `INDEX`in the displayed person list.","lastModifiedDate":"2024-03-20"},{"lineNumber":205,"author":{"gitId":"YuSoonZ"},"content":"The commands are implemented in the `ViewCommand` class which extend the `Command` class.","lastModifiedDate":"2024-03-20"},{"lineNumber":206,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":207,"author":{"gitId":"YuSoonZ"},"content":"* Step 1. The `ViewCommand` object\u0027s `execute()` method is called.","lastModifiedDate":"2024-03-20"},{"lineNumber":208,"author":{"gitId":"YuSoonZ"},"content":"* Step 2. The `INDEX` is checked to be within the valid range of the displayed person list. If the `INDEX` given is invalid (i.e., out of range), a `CommandException` is thrown.","lastModifiedDate":"2024-03-20"},{"lineNumber":209,"author":{"gitId":"hiivan"},"content":"* Step 3. The `Person` at the given `INDEX` is referenced and then displayed to the user on the right side panel.","lastModifiedDate":"2024-03-28"},{"lineNumber":210,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":211,"author":{"gitId":"YuSoonZ"},"content":"The diagram below describes this behaviour concisely. It shows how a user’s command is processed and what message is ultimately shown if they decide to view a person.","lastModifiedDate":"2024-03-20"},{"lineNumber":212,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":213,"author":{"gitId":"YuSoonZ"},"content":"\u003cpuml src\u003d\"diagrams/ViewCommandActivityDiagram.puml\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":214,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":215,"author":{"gitId":"YuSoonZ"},"content":"The sequence diagram below also shows the interaction between the various components during the execution of the `ViewCommand`.","lastModifiedDate":"2024-03-20"},{"lineNumber":216,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":217,"author":{"gitId":"YuSoonZ"},"content":"\u003cpuml src\u003d\"diagrams/ViewCommandSequenceDiagram.puml\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":218,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":219,"author":{"gitId":"teojunda"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":220,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":221,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"kailashgautham"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedTaToolkit`. It extends `TaToolkit` with an undo/redo history, stored internally as an `taToolkitStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2024-04-01"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"kailashgautham"},"content":"* `VersionedTaToolkit#commit()` — Saves the current TA Toolkit state in its history.","lastModifiedDate":"2024-04-01"},{"lineNumber":228,"author":{"gitId":"kailashgautham"},"content":"* `VersionedTaToolkit#undo()` — Restores the previous TA Toolkit state from its history.","lastModifiedDate":"2024-04-01"},{"lineNumber":229,"author":{"gitId":"kailashgautham"},"content":"* `VersionedTaToolkit#redo()` — Restores a previously undone TA Toolkit state from its history.","lastModifiedDate":"2024-04-01"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"kailashgautham"},"content":"These operations are exposed in the `Model` interface as `Model#commitTaToolkit()`, `Model#undoTaToolkit()` and `Model#redoTaToolkit()` respectively.","lastModifiedDate":"2024-04-01"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"kailashgautham"},"content":"Step 1. The user launches the application for the first time. The `VersionedTaToolkit` will be initialized with the initial TA Toolkit state, and the `currentStatePointer` pointing to that single TA Toolkit state.","lastModifiedDate":"2024-04-01"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"kailashgautham"},"content":"Step 2. The user executes `dc 5` command to delete the 5th person in the TA Toolkit. The `dc` command calls `Model#commitTaToolkit()`, causing the modified state of the TA Toolkit after the `dc 5` command executes to be saved in the `taToolkitStateList`, and the `currentStatePointer` is shifted to the newly inserted TA Toolkit state.","lastModifiedDate":"2024-04-01"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"kailashgautham"},"content":"Step 3. The user executes `ac n/David …​` to add a new person. The `ac` command also calls `Model#commitTaToolkit()`, causing another modified TA Toolkit state to be saved into the `taToolkitStateList`.","lastModifiedDate":"2024-04-01"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"kailashgautham"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitTaToolkit()`, so the TA Toolkit state will not be saved into the `taToolkitStateList`.","lastModifiedDate":"2024-04-01"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"kailashgautham"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoTaToolkit()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous TA Toolkit state, and restores the TA Toolkit to that state.","lastModifiedDate":"2024-04-01"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":258,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"kailashgautham"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial TaToolkit state, then there are no previous TaToolkit states to restore. The `undo` command uses `Model#canUndoTaToolkit()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2024-04-01"},{"lineNumber":261,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":273,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":277,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":279,"author":{"gitId":"kailashgautham"},"content":"The `redo` command does the opposite — it calls `Model#redoTaToolkit()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the TA Toolkit to that state.","lastModifiedDate":"2024-04-01"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":283,"author":{"gitId":"kailashgautham"},"content":"**Note:** If the `currentStatePointer` is at index `taToolkitStateList.size() - 1`, pointing to the latest TA Toolkit state, then there are no undone TaToolkit states to restore. The `redo` command uses `Model#canRedoTaToolkit()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2024-04-01"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"kailashgautham"},"content":"Step 5. The user then decides to execute the command `ls`. Commands that do not modify the TA Toolkit, such as `ls`, will usually not call `Model#commitTaToolkit()`, `Model#undoTaToolkit()` or `Model#redoTaToolkit()`. Thus, the `taToolkitStateList` remains unchanged.","lastModifiedDate":"2024-04-01"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"kailashgautham"},"content":"Step 6. The user executes `clear`, which calls `Model#commitTaToolkit()`. Since the `currentStatePointer` is not pointing at the end of the `taToolkitStateList`, all TA Toolkit states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2024-04-01"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"kailashgautham"},"content":"* **Alternative 1 (current choice):** Saves the entire TA Toolkit.","lastModifiedDate":"2024-04-01"},{"lineNumber":304,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"g-tejas"},"content":"  * Pros: Will use less memory (e.g. for `dc`, just save the person being deleted).","lastModifiedDate":"2024-03-27"},{"lineNumber":310,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":324,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":325,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":326,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":327,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"teojunda"},"content":"* is a CS2100 TA in NUS School of Computing","lastModifiedDate":"2024-04-08"},{"lineNumber":338,"author":{"gitId":"teojunda"},"content":"* has a need to manage a significant number of contacts over different communication channels","lastModifiedDate":"2024-03-05"},{"lineNumber":339,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":342,"author":{"gitId":"teojunda"},"content":"* prefers to use a separate app that is made to manage student contacts efficiently","lastModifiedDate":"2024-03-05"},{"lineNumber":343,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"teojunda"},"content":"**Value proposition**:","lastModifiedDate":"2024-03-05"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"teojunda"},"content":"* TA Toolkit is a desktop app that helps the user manage a large number of student contacts","lastModifiedDate":"2024-03-05"},{"lineNumber":348,"author":{"gitId":"teojunda"},"content":"across different communication channels efficiently. It is optimised for use via a Command","lastModifiedDate":"2024-03-05"},{"lineNumber":349,"author":{"gitId":"teojunda"},"content":"Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI)","lastModifiedDate":"2024-03-05"},{"lineNumber":350,"author":{"gitId":"teojunda"},"content":"* It categorises contacts into their tutorial group, allowing for easier management of contacts","lastModifiedDate":"2024-03-05"},{"lineNumber":351,"author":{"gitId":"teojunda"},"content":"* It allows the user to add, delete, edit, find and view student contacts","lastModifiedDate":"2024-03-05"},{"lineNumber":352,"author":{"gitId":"teojunda"},"content":"* Users are able to take notes on specific students and keep track of students\u0027 attendance","lastModifiedDate":"2024-04-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"| Priority | As a …​ | I want to …​                                   | So that I can…​                                          |","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"teojunda"},"content":"|----------|---------|------------------------------------------------|----------------------------------------------------------|","lastModifiedDate":"2024-04-08"},{"lineNumber":359,"author":{"gitId":"teojunda"},"content":"| `* * *`  | TA      | add a student contact                          | keep track of my students when I need to                 |","lastModifiedDate":"2024-03-05"},{"lineNumber":360,"author":{"gitId":"teojunda"},"content":"| `* * *`  | TA      | delete a student contact                       | remove students from the database if they drop the class |","lastModifiedDate":"2024-03-05"},{"lineNumber":361,"author":{"gitId":"teojunda"},"content":"| `* * *`  | TA      | view all student contacts                      | see a list of all my students                            |","lastModifiedDate":"2024-03-05"},{"lineNumber":362,"author":{"gitId":"teojunda"},"content":"| `* *`    | TA      | view a students\u0027 detailed information          | see all the information related to a student             |","lastModifiedDate":"2024-03-06"},{"lineNumber":363,"author":{"gitId":"teojunda"},"content":"| `* *`    | TA      | edit a student contact                         | update a students’s details should they change           |","lastModifiedDate":"2024-03-05"},{"lineNumber":364,"author":{"gitId":"teojunda"},"content":"| `* *`    | TA      | assign student to a class                      | organise students by their class                         |","lastModifiedDate":"2024-04-08"},{"lineNumber":365,"author":{"gitId":"teojunda"},"content":"| `* *`    | TA      | take notes on students                         | keep track of their strengths and weaknesses             |","lastModifiedDate":"2024-03-05"},{"lineNumber":366,"author":{"gitId":"teojunda"},"content":"| `* *`    | TA      | delete notes on students                       | remove notes that are no longer relevant                 |","lastModifiedDate":"2024-03-05"},{"lineNumber":367,"author":{"gitId":"teojunda"},"content":"| `*`      | TA      | mark student as absent for a specific week     | be aware of who is missing lessons                       |","lastModifiedDate":"2024-04-08"},{"lineNumber":368,"author":{"gitId":"teojunda"},"content":"| `*`      | TA      | mark student as present for a specific week    | correct mistakes in attendance marking                   |","lastModifiedDate":"2024-04-08"},{"lineNumber":369,"author":{"gitId":"teojunda"},"content":"| `* `     | TA      | view all student contacts for a specific class | see a list of students in a project team                 |","lastModifiedDate":"2024-04-08"},{"lineNumber":370,"author":{"gitId":"teojunda"},"content":"| `* `     | TA      | view summary of all students attendance        | get a quick overview of class attendance                 |","lastModifiedDate":"2024-03-06"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"teojunda"},"content":"(For all use cases below, the **System** is the `TA Toolkit` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2024-03-05"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"teojunda"},"content":"**Use case: UC01 - Adding a student**","lastModifiedDate":"2024-03-06"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"teojunda"},"content":"1. User enters command to add a student","lastModifiedDate":"2024-03-06"},{"lineNumber":381,"author":{"gitId":"teojunda"},"content":"2. TA Toolkit adds the student to the list of students","lastModifiedDate":"2024-03-06"},{"lineNumber":382,"author":{"gitId":"teojunda"},"content":"3. TA Toolkit displays a success message along with the student’s contact details","lastModifiedDate":"2024-03-06"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"teojunda"},"content":"* 1a. The add student command format is invalid.","lastModifiedDate":"2024-03-06"},{"lineNumber":389,"author":{"gitId":"teojunda"},"content":"    * 1a1. TA Toolkit shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":390,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":391,"author":{"gitId":"teojunda"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-06"},{"lineNumber":392,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":393,"author":{"gitId":"teojunda"},"content":"* 2a. A field of the new student (Email, Phone number, Telegram, Github) already exists in the list of students.","lastModifiedDate":"2024-04-08"},{"lineNumber":394,"author":{"gitId":"teojunda"},"content":"    * 2a1. TA Toolkit shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":395,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":396,"author":{"gitId":"teojunda"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-04-08"},{"lineNumber":397,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":398,"author":{"gitId":"teojunda"},"content":"---","lastModifiedDate":"2024-03-06"},{"lineNumber":399,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":400,"author":{"gitId":"teojunda"},"content":"**Use case: UC02 - Deleting a student**","lastModifiedDate":"2024-03-06"},{"lineNumber":401,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":402,"author":{"gitId":"teojunda"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":403,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":404,"author":{"gitId":"teojunda"},"content":"1. User enters command to delete a student","lastModifiedDate":"2024-03-06"},{"lineNumber":405,"author":{"gitId":"teojunda"},"content":"2. TA Toolkit deletes the student’s contact and displays a success message","lastModifiedDate":"2024-04-08"},{"lineNumber":406,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":407,"author":{"gitId":"teojunda"},"content":"   Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":408,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":409,"author":{"gitId":"teojunda"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":410,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":411,"author":{"gitId":"teojunda"},"content":"* 1a. TA Toolkit does not contain the student specified","lastModifiedDate":"2024-03-06"},{"lineNumber":412,"author":{"gitId":"teojunda"},"content":"    * 1a1. TA Toolkit shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":413,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":414,"author":{"gitId":"teojunda"},"content":"      Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":415,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":416,"author":{"gitId":"teojunda"},"content":"---","lastModifiedDate":"2024-03-06"},{"lineNumber":417,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":418,"author":{"gitId":"teojunda"},"content":"**Use case: UC03 - Update a student**","lastModifiedDate":"2024-03-06"},{"lineNumber":419,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":420,"author":{"gitId":"teojunda"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":421,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":422,"author":{"gitId":"teojunda"},"content":"1. User enters the command to update a student’s details","lastModifiedDate":"2024-03-06"},{"lineNumber":423,"author":{"gitId":"teojunda"},"content":"2. TA Toolkit modifies the values that user intended to replace","lastModifiedDate":"2024-03-06"},{"lineNumber":424,"author":{"gitId":"teojunda"},"content":"3. TA Toolkit displays a success message along with the student’s updated contact details","lastModifiedDate":"2024-03-06"},{"lineNumber":425,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":426,"author":{"gitId":"teojunda"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":427,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":428,"author":{"gitId":"teojunda"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":429,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":430,"author":{"gitId":"teojunda"},"content":"* 1a. The update student command format is invalid.","lastModifiedDate":"2024-03-06"},{"lineNumber":431,"author":{"gitId":"teojunda"},"content":"    * 1a1. TA Toolkit shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":432,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":433,"author":{"gitId":"teojunda"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-06"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":435,"author":{"gitId":"teojunda"},"content":"* 2a. Student does not exist in the list of students.","lastModifiedDate":"2024-03-06"},{"lineNumber":436,"author":{"gitId":"teojunda"},"content":"    * 2a1. TA Toolkit shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":437,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":438,"author":{"gitId":"teojunda"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-06"},{"lineNumber":439,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":440,"author":{"gitId":"teojunda"},"content":"* 2b. The updated student contact is the same as the original student contact.","lastModifiedDate":"2024-04-08"},{"lineNumber":441,"author":{"gitId":"teojunda"},"content":"    * 2a1. TA Toolkit shows an error message.","lastModifiedDate":"2024-04-08"},{"lineNumber":442,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":443,"author":{"gitId":"teojunda"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-04-08"},{"lineNumber":444,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":445,"author":{"gitId":"teojunda"},"content":"* 2c. The updated student contact shares a duplicate field (Email, Phone number, Github, Telegram) with another contact.","lastModifiedDate":"2024-04-08"},{"lineNumber":446,"author":{"gitId":"teojunda"},"content":"    * 2c1. TA Toolkit shows an error message.","lastModifiedDate":"2024-04-08"},{"lineNumber":447,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":448,"author":{"gitId":"teojunda"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-04-08"},{"lineNumber":449,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":450,"author":{"gitId":"teojunda"},"content":"---","lastModifiedDate":"2024-03-06"},{"lineNumber":451,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":452,"author":{"gitId":"teojunda"},"content":"**Use case: UC04 - Viewing students overview**","lastModifiedDate":"2024-03-06"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":454,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":456,"author":{"gitId":"teojunda"},"content":"1. User requests to view all student","lastModifiedDate":"2024-03-06"},{"lineNumber":457,"author":{"gitId":"teojunda"},"content":"2. TA Toolkit shows a list of all members","lastModifiedDate":"2024-03-06"},{"lineNumber":458,"author":{"gitId":"teojunda"},"content":"3. TA Toolkit displays a success message","lastModifiedDate":"2024-03-06"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":460,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":462,"author":{"gitId":"teojunda"},"content":"---","lastModifiedDate":"2024-03-06"},{"lineNumber":463,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":464,"author":{"gitId":"teojunda"},"content":"**Use case: UC05 - View a student detailed information (contact details, attendance, notes)**","lastModifiedDate":"2024-04-08"},{"lineNumber":465,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":466,"author":{"gitId":"teojunda"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":467,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":468,"author":{"gitId":"teojunda"},"content":"1. User requests to view the detailed information of a student","lastModifiedDate":"2024-03-06"},{"lineNumber":469,"author":{"gitId":"teojunda"},"content":"2. TA Toolkit shows the detailed information of the student","lastModifiedDate":"2024-03-06"},{"lineNumber":470,"author":{"gitId":"teojunda"},"content":"3. TA Toolkit displays a success message","lastModifiedDate":"2024-03-06"},{"lineNumber":471,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":472,"author":{"gitId":"teojunda"},"content":"   Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":473,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":474,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":476,"author":{"gitId":"teojunda"},"content":"* 1a. The view student command format is invalid.","lastModifiedDate":"2024-03-06"},{"lineNumber":477,"author":{"gitId":"teojunda"},"content":"    * 1a1. TA Toolkit shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":478,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":479,"author":{"gitId":"teojunda"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-06"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":481,"author":{"gitId":"teojunda"},"content":"* 1b. The requested student is invalid.","lastModifiedDate":"2024-03-06"},{"lineNumber":482,"author":{"gitId":"teojunda"},"content":"    * 1b1. TA Toolkit shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":484,"author":{"gitId":"teojunda"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-06"},{"lineNumber":485,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":486,"author":{"gitId":"teojunda"},"content":"---","lastModifiedDate":"2024-03-06"},{"lineNumber":487,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":488,"author":{"gitId":"teojunda"},"content":"**Use case: UC06 - Add note on student**","lastModifiedDate":"2024-04-08"},{"lineNumber":489,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":490,"author":{"gitId":"teojunda"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":492,"author":{"gitId":"teojunda"},"content":"1. User requests to add a note regarding a student","lastModifiedDate":"2024-03-06"},{"lineNumber":493,"author":{"gitId":"teojunda"},"content":"2. TA Toolkit adds the note to the student’s list of notes","lastModifiedDate":"2024-03-06"},{"lineNumber":494,"author":{"gitId":"teojunda"},"content":"3. TA Toolkit displays a success message","lastModifiedDate":"2024-03-06"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":496,"author":{"gitId":"teojunda"},"content":"   Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":497,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":498,"author":{"gitId":"teojunda"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":499,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":500,"author":{"gitId":"teojunda"},"content":"* 1a. The add note command format is invalid.","lastModifiedDate":"2024-03-06"},{"lineNumber":501,"author":{"gitId":"teojunda"},"content":"    * 1a1. TA Toolkit shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":502,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":503,"author":{"gitId":"teojunda"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-06"},{"lineNumber":504,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":505,"author":{"gitId":"teojunda"},"content":"* 1b. The requested student is invalid.","lastModifiedDate":"2024-03-06"},{"lineNumber":506,"author":{"gitId":"teojunda"},"content":"    * 1b1. TA Toolkit shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":507,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":508,"author":{"gitId":"teojunda"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-06"},{"lineNumber":509,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":510,"author":{"gitId":"teojunda"},"content":"* 1c. The note to be added is invalid.","lastModifiedDate":"2024-04-08"},{"lineNumber":511,"author":{"gitId":"teojunda"},"content":"    * 1c1. TA Toolkit shows an error message.","lastModifiedDate":"2024-04-08"},{"lineNumber":512,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":513,"author":{"gitId":"teojunda"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-04-08"},{"lineNumber":514,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":515,"author":{"gitId":"teojunda"},"content":"---","lastModifiedDate":"2024-03-06"},{"lineNumber":516,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":517,"author":{"gitId":"teojunda"},"content":"**Use case: UC07 - Delete notes for a student**","lastModifiedDate":"2024-04-08"},{"lineNumber":518,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":519,"author":{"gitId":"teojunda"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":520,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":521,"author":{"gitId":"teojunda"},"content":"1. User requests to delete a set of notes for a student","lastModifiedDate":"2024-04-08"},{"lineNumber":522,"author":{"gitId":"teojunda"},"content":"2. TA Toolkit removes the note from the student’s list of notes","lastModifiedDate":"2024-03-06"},{"lineNumber":523,"author":{"gitId":"teojunda"},"content":"3. TA Toolkit displays a success message","lastModifiedDate":"2024-03-06"},{"lineNumber":524,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":525,"author":{"gitId":"teojunda"},"content":"   Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":526,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":527,"author":{"gitId":"teojunda"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":528,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":529,"author":{"gitId":"teojunda"},"content":"* 1a. The delete note command format is invalid.","lastModifiedDate":"2024-03-06"},{"lineNumber":530,"author":{"gitId":"teojunda"},"content":"    * 1a1. TA Toolkit shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":531,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":532,"author":{"gitId":"teojunda"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-06"},{"lineNumber":533,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":534,"author":{"gitId":"teojunda"},"content":"* 1b. The requested student is invalid.","lastModifiedDate":"2024-03-06"},{"lineNumber":535,"author":{"gitId":"teojunda"},"content":"    * 1b1. TA Toolkit shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":536,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":537,"author":{"gitId":"teojunda"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-06"},{"lineNumber":538,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":539,"author":{"gitId":"teojunda"},"content":"* 1c. The set of notes requested to be deleted is invalid.","lastModifiedDate":"2024-04-08"},{"lineNumber":540,"author":{"gitId":"teojunda"},"content":"    * 1c1. TA Toolkit shows an error message.","lastModifiedDate":"2024-04-08"},{"lineNumber":541,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":542,"author":{"gitId":"teojunda"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-06"},{"lineNumber":543,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":544,"author":{"gitId":"teojunda"},"content":"---","lastModifiedDate":"2024-03-06"},{"lineNumber":545,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":546,"author":{"gitId":"teojunda"},"content":"**Use case: UC08 - Mark students as present for a week**","lastModifiedDate":"2024-04-08"},{"lineNumber":547,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":548,"author":{"gitId":"teojunda"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":550,"author":{"gitId":"teojunda"},"content":"1. Use requests to mark a set of students as present for a week","lastModifiedDate":"2024-04-08"},{"lineNumber":551,"author":{"gitId":"teojunda"},"content":"2. TA Toolkit marks the set of students as present for that week","lastModifiedDate":"2024-04-08"},{"lineNumber":552,"author":{"gitId":"teojunda"},"content":"3. TA Toolkit displays a success message","lastModifiedDate":"2024-03-06"},{"lineNumber":553,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":554,"author":{"gitId":"teojunda"},"content":"   Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":555,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":556,"author":{"gitId":"teojunda"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":557,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":558,"author":{"gitId":"teojunda"},"content":"* 1a. The mark student command format is invalid.","lastModifiedDate":"2024-03-06"},{"lineNumber":559,"author":{"gitId":"teojunda"},"content":"    * 1a1. TA Toolkit shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":560,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":561,"author":{"gitId":"teojunda"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-06"},{"lineNumber":562,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":563,"author":{"gitId":"teojunda"},"content":"* 1b. The requested set of students is invalid.","lastModifiedDate":"2024-04-08"},{"lineNumber":564,"author":{"gitId":"teojunda"},"content":"    * 1b1. TA Toolkit shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":565,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":566,"author":{"gitId":"teojunda"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-06"},{"lineNumber":567,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":568,"author":{"gitId":"teojunda"},"content":"* 1c. The requested week to be marked is invalid.","lastModifiedDate":"2024-04-08"},{"lineNumber":569,"author":{"gitId":"teojunda"},"content":"    * 1c1. TA Toolkit shows an error message.","lastModifiedDate":"2024-04-08"},{"lineNumber":570,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":571,"author":{"gitId":"teojunda"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-06"},{"lineNumber":572,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":573,"author":{"gitId":"teojunda"},"content":"---","lastModifiedDate":"2024-04-08"},{"lineNumber":574,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":575,"author":{"gitId":"teojunda"},"content":"**Use case: UC09 - Mark students as absent for a week**","lastModifiedDate":"2024-04-08"},{"lineNumber":576,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":577,"author":{"gitId":"teojunda"},"content":"Similar to UC08 - Marking students as absent rather than present.","lastModifiedDate":"2024-04-08"},{"lineNumber":578,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":579,"author":{"gitId":"teojunda"},"content":"---","lastModifiedDate":"2024-03-06"},{"lineNumber":580,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":581,"author":{"gitId":"teojunda"},"content":"**Use case: UC10 - List all students by class**","lastModifiedDate":"2024-04-08"},{"lineNumber":582,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":583,"author":{"gitId":"teojunda"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":584,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":585,"author":{"gitId":"teojunda"},"content":"1. User requests to list all students from a specific class","lastModifiedDate":"2024-04-08"},{"lineNumber":586,"author":{"gitId":"teojunda"},"content":"2. TA Toolkit displays a list of all members from that class","lastModifiedDate":"2024-04-08"},{"lineNumber":587,"author":{"gitId":"teojunda"},"content":"3. TA Toolkit displays a success message","lastModifiedDate":"2024-03-06"},{"lineNumber":588,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":589,"author":{"gitId":"teojunda"},"content":"   Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":590,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":591,"author":{"gitId":"teojunda"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":592,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":593,"author":{"gitId":"teojunda"},"content":"* 1a. The list student command format is invalid.","lastModifiedDate":"2024-04-08"},{"lineNumber":594,"author":{"gitId":"teojunda"},"content":"    * 1a1. TA Toolkit shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":595,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":596,"author":{"gitId":"teojunda"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-06"},{"lineNumber":597,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":598,"author":{"gitId":"teojunda"},"content":"---","lastModifiedDate":"2024-03-06"},{"lineNumber":599,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":600,"author":{"gitId":"teojunda"},"content":"**Use case: UC11 - View summary of students attendance**","lastModifiedDate":"2024-04-08"},{"lineNumber":601,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":602,"author":{"gitId":"teojunda"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":603,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":604,"author":{"gitId":"teojunda"},"content":"1. User requests to view a summary of all students attendance","lastModifiedDate":"2024-03-06"},{"lineNumber":605,"author":{"gitId":"teojunda"},"content":"2. TA Toolkit displays a summary of all students attendance","lastModifiedDate":"2024-03-06"},{"lineNumber":606,"author":{"gitId":"teojunda"},"content":"3. TA Toolkit displays a success message","lastModifiedDate":"2024-03-06"},{"lineNumber":607,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":608,"author":{"gitId":"teojunda"},"content":"   Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":610,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"teojunda"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should","lastModifiedDate":"2024-03-05"},{"lineNumber":615,"author":{"gitId":"teojunda"},"content":"be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2024-03-05"},{"lineNumber":616,"author":{"gitId":"teojunda"},"content":"4.  All functions within the application must provide responses to user queries within a timeframe of 2 seconds.","lastModifiedDate":"2024-03-05"},{"lineNumber":617,"author":{"gitId":"teojunda"},"content":"5.  The application does not support concurrent usage by multiple users.","lastModifiedDate":"2024-04-08"},{"lineNumber":618,"author":{"gitId":"teojunda"},"content":"6.  The application does not offer support for languages aside from English.","lastModifiedDate":"2024-03-05"},{"lineNumber":619,"author":{"gitId":"teojunda"},"content":"7.  The application should be able to handle most common user input errors and provide meaningful error messages.","lastModifiedDate":"2024-03-05"},{"lineNumber":620,"author":{"gitId":"teojunda"},"content":"8.  The application should work without internet connection.","lastModifiedDate":"2024-04-08"},{"lineNumber":621,"author":{"gitId":"teojunda"},"content":"9.  The application\u0027s GUI should effectively organise and display data, facilitating easy comprehension of application details for users.","lastModifiedDate":"2024-04-08"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"teojunda"},"content":"* **Absent**: A attendance status to indicate that a student did not attend a class.","lastModifiedDate":"2024-04-08"},{"lineNumber":626,"author":{"gitId":"teojunda"},"content":"* **Alphanumeric**: A String consisting of only letters (a-z, A-Z) or numbers or both.","lastModifiedDate":"2024-04-08"},{"lineNumber":627,"author":{"gitId":"teojunda"},"content":"* **API**: Application Programming Interface","lastModifiedDate":"2024-04-08"},{"lineNumber":628,"author":{"gitId":"teojunda"},"content":"* **Command**: Commands are necessary to use TA Toolkit. A command has to be typed into the Command Box and entered to be executed.","lastModifiedDate":"2024-04-08"},{"lineNumber":629,"author":{"gitId":"teojunda"},"content":"* **Command terminal**: A command terminal is a text-based interface through which users can interact with a computer program by typing commands.","lastModifiedDate":"2024-04-08"},{"lineNumber":630,"author":{"gitId":"teojunda"},"content":"* **CLI**: Command Line Interface: A way of interacting with a computer program where the user issues commands to the","lastModifiedDate":"2024-03-05"},{"lineNumber":631,"author":{"gitId":"teojunda"},"content":"  program in the form of successive lines of text (command lines). It emphasises text-based user interaction over graphical user interfaces.","lastModifiedDate":"2024-03-05"},{"lineNumber":632,"author":{"gitId":"teojunda"},"content":"* **Email**: A unique identifier for an email account.","lastModifiedDate":"2024-04-08"},{"lineNumber":633,"author":{"gitId":"teojunda"},"content":"* **Index**: A number representing the position of an item in a list.","lastModifiedDate":"2024-04-08"},{"lineNumber":634,"author":{"gitId":"teojunda"},"content":"* **Github ID**: A unique identifier for a Github account. E.g. johnDoe","lastModifiedDate":"2024-04-08"},{"lineNumber":635,"author":{"gitId":"teojunda"},"content":"* **GUI**: Graphical User Interface: A mode of interacting with a computer program that relies on visual elements such as windows, icons, buttons, and menus.","lastModifiedDate":"2024-04-08"},{"lineNumber":636,"author":{"gitId":"teojunda"},"content":"* **Hard disk**: A component of a computer system responsible for long-term storage of data.","lastModifiedDate":"2024-04-08"},{"lineNumber":637,"author":{"gitId":"teojunda"},"content":"* **JSON file**: A JSON (JavaScript Object Notation) file is a structured data file format used for storing and transmitting data between the hard disk and TA Toolkit.","lastModifiedDate":"2024-04-08"},{"lineNumber":638,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-04-08"},{"lineNumber":639,"author":{"gitId":"g-tejas"},"content":"* **MSS**: Main Success Scenario: The main flow of events in a use case.","lastModifiedDate":"2024-04-02"},{"lineNumber":640,"author":{"gitId":"teojunda"},"content":"* **Note**: A String that can be associated to a person to provide additional details about them.","lastModifiedDate":"2024-04-08"},{"lineNumber":641,"author":{"gitId":"teojunda"},"content":"* **OOP**: Object-Oriented Programming","lastModifiedDate":"2024-04-08"},{"lineNumber":642,"author":{"gitId":"teojunda"},"content":"* **Phone number**: A sequence of digits that is dialled on a telephone to contact a person.","lastModifiedDate":"2024-04-08"},{"lineNumber":643,"author":{"gitId":"teojunda"},"content":"* **Present**: A attendance status to indicate that a student attended a class.","lastModifiedDate":"2024-04-08"},{"lineNumber":644,"author":{"gitId":"g-tejas"},"content":"* **TA**: Teaching Assistant","lastModifiedDate":"2024-04-02"},{"lineNumber":645,"author":{"gitId":"teojunda"},"content":"* **Telegram handle**: A unique identifier for a Telegram account. E.g. @johnDoe","lastModifiedDate":"2024-04-08"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":647,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"kailashgautham"},"content":"# **Appendix**","lastModifiedDate":"2024-04-08"},{"lineNumber":650,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":651,"author":{"gitId":"kailashgautham"},"content":"## Instructions for manual testing","lastModifiedDate":"2024-04-08"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":656,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":657,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":658,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"teojunda"},"content":"   1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar TAToolkit.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2024-04-08"},{"lineNumber":669,"author":{"gitId":"teojunda"},"content":"      Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2024-04-08"},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"teojunda"},"content":"### Adding a person","lastModifiedDate":"2024-04-08"},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"teojunda"},"content":"Prerequisite: There is no person in TA Toolkit with the same email, phone number, telegram, and github as the person to be added.","lastModifiedDate":"2024-04-08"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"teojunda"},"content":"Test case: `ac n/John Doe c/T42 p/98765432 e/johnd@example.com t/johndoe g/johnDoeGithub`","lastModifiedDate":"2024-04-08"},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"teojunda"},"content":"Expected Output in the Displayed Person List: The new person is added into the list.","lastModifiedDate":"2024-04-08"},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":679,"author":{"gitId":"teojunda"},"content":"Expected Output in the Result Display: A message to inform user that new person has been added along with the person’s details.","lastModifiedDate":"2024-04-08"},{"lineNumber":680,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":681,"author":{"gitId":"teojunda"},"content":"Test case: `ac`","lastModifiedDate":"2024-04-08"},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":683,"author":{"gitId":"teojunda"},"content":"Expected Output in the Result Display: An error message is shown, providing details on the correct format.","lastModifiedDate":"2024-04-08"},{"lineNumber":684,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"teojunda"},"content":"Prerequisite: There is at least 1 person in the Displayed Person List.","lastModifiedDate":"2024-04-08"},{"lineNumber":688,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":689,"author":{"gitId":"teojunda"},"content":"Test case: `dc 1`","lastModifiedDate":"2024-04-08"},{"lineNumber":690,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":691,"author":{"gitId":"teojunda"},"content":"Expected Output in the Displayed Person List: First contact is deleted from the list.","lastModifiedDate":"2024-04-08"},{"lineNumber":692,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":693,"author":{"gitId":"teojunda"},"content":"Expected Output in the Result Display: Details of the deleted person is shown in the status message.","lastModifiedDate":"2024-04-08"},{"lineNumber":694,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":695,"author":{"gitId":"teojunda"},"content":"Test case: `dc 0`","lastModifiedDate":"2024-04-08"},{"lineNumber":696,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":697,"author":{"gitId":"teojunda"},"content":"Expected: No person is deleted. Error details shown in the Result Display.","lastModifiedDate":"2024-04-08"},{"lineNumber":698,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":699,"author":{"gitId":"teojunda"},"content":"### Update a person","lastModifiedDate":"2024-04-08"},{"lineNumber":700,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":701,"author":{"gitId":"teojunda"},"content":"Prerequisite: There is at least 1 person in the Displayed Person List. This updated information must be different from the person to be updated.","lastModifiedDate":"2024-04-08"},{"lineNumber":702,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":703,"author":{"gitId":"teojunda"},"content":"Test case: `uc 1 n/Ryan Lim Jun Jie`","lastModifiedDate":"2024-04-08"},{"lineNumber":704,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":705,"author":{"gitId":"teojunda"},"content":"Expected Output in the Displayed Person List: The first person in the list has their name changed to “Ryan Lim Jun Jie”, and retains the rest of their details. The persons in the Displayed Person List are reordered.","lastModifiedDate":"2024-04-08"},{"lineNumber":706,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":707,"author":{"gitId":"teojunda"},"content":"Expected Output in the Result Display: Details of the updated person is shown in the status message.","lastModifiedDate":"2024-04-08"},{"lineNumber":708,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":709,"author":{"gitId":"teojunda"},"content":"### View a person","lastModifiedDate":"2024-04-08"},{"lineNumber":710,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":711,"author":{"gitId":"teojunda"},"content":"Prerequisite: There is at least 1 person in the Displayed Person List.","lastModifiedDate":"2024-04-08"},{"lineNumber":712,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":713,"author":{"gitId":"teojunda"},"content":"Test case: `view 1`","lastModifiedDate":"2024-04-08"},{"lineNumber":714,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":715,"author":{"gitId":"teojunda"},"content":"Expected Output in the Side Panel Display: All details related to the first person in the list are displayed.","lastModifiedDate":"2024-04-08"},{"lineNumber":716,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":717,"author":{"gitId":"teojunda"},"content":"Expected Output in the Result Display: Details of the viewed person is shown in the status message.","lastModifiedDate":"2024-04-08"},{"lineNumber":718,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":719,"author":{"gitId":"teojunda"},"content":"### Find a person by matching name","lastModifiedDate":"2024-04-08"},{"lineNumber":720,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":721,"author":{"gitId":"teojunda"},"content":"Prerequisite: There are only 2 persons named \"Alex Yeoh\" and \"Bernice Yu\" respectively in TA Toolkit.","lastModifiedDate":"2024-04-08"},{"lineNumber":722,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":723,"author":{"gitId":"teojunda"},"content":"Test case: `find Alex`","lastModifiedDate":"2024-04-08"},{"lineNumber":724,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":725,"author":{"gitId":"teojunda"},"content":"Expected Output in the Displayed Person List: The details of \"Alex Yeoh\" are shown.","lastModifiedDate":"2024-04-08"},{"lineNumber":726,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"teojunda"},"content":"Expected Output in the Result Display: Message states “1 persons listed”.","lastModifiedDate":"2024-04-08"},{"lineNumber":728,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":729,"author":{"gitId":"teojunda"},"content":"Test case: `find Zachary`","lastModifiedDate":"2024-04-08"},{"lineNumber":730,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":731,"author":{"gitId":"teojunda"},"content":"Expected Output in the Displayed Person List: The list is empty.","lastModifiedDate":"2024-04-08"},{"lineNumber":732,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":733,"author":{"gitId":"teojunda"},"content":"Expected Output in the Result Display: Message states “0 persons listed”.","lastModifiedDate":"2024-04-08"},{"lineNumber":734,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":735,"author":{"gitId":"teojunda"},"content":"### Mark attendance","lastModifiedDate":"2024-04-08"},{"lineNumber":736,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":737,"author":{"gitId":"teojunda"},"content":"Prerequisite: There is at least 1 person in the Displayed Person List.","lastModifiedDate":"2024-04-08"},{"lineNumber":738,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":739,"author":{"gitId":"teojunda"},"content":"Test case: `ma w/1 abs/1`","lastModifiedDate":"2024-04-08"},{"lineNumber":740,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":741,"author":{"gitId":"teojunda"},"content":"Expected Output in the Result Display: A message that informing that the first person in list has been marked as absent.","lastModifiedDate":"2024-04-08"},{"lineNumber":742,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":743,"author":{"gitId":"teojunda"},"content":"### List persons in a class/ View attendance for a class","lastModifiedDate":"2024-04-08"},{"lineNumber":744,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":745,"author":{"gitId":"teojunda"},"content":"Prerequisite: There is at least 1 person with the class \"T42\". They should be marked as absent.","lastModifiedDate":"2024-04-08"},{"lineNumber":746,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":747,"author":{"gitId":"teojunda"},"content":"Test case: `ls T42`","lastModifiedDate":"2024-04-08"},{"lineNumber":748,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":749,"author":{"gitId":"teojunda"},"content":"Expected Output in the Displayed Person List: All persons from the class \"T42\" are displayed.","lastModifiedDate":"2024-04-08"},{"lineNumber":750,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":751,"author":{"gitId":"teojunda"},"content":"Expected Output in the Result Display: Message states the number of persons displayed.","lastModifiedDate":"2024-04-08"},{"lineNumber":752,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":753,"author":{"gitId":"teojunda"},"content":"Expected Output in the Side Panel Display: The list of absentees from the class \"T42\" are displayed by week.","lastModifiedDate":"2024-04-08"},{"lineNumber":754,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":755,"author":{"gitId":"teojunda"},"content":"### Adding a note to a person","lastModifiedDate":"2024-04-08"},{"lineNumber":756,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":757,"author":{"gitId":"teojunda"},"content":"Prerequisite: There is at least 1 person in the Displayed Person List. The same person is being viewed in the Side Panel Display.","lastModifiedDate":"2024-04-08"},{"lineNumber":758,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":759,"author":{"gitId":"teojunda"},"content":"Test case: `an 1 note/very hardworking!`","lastModifiedDate":"2024-04-08"},{"lineNumber":760,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":761,"author":{"gitId":"teojunda"},"content":"Expected Output in the Result Display: Message states the details of the first person in the list, as well as the note added.","lastModifiedDate":"2024-04-08"},{"lineNumber":762,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":763,"author":{"gitId":"teojunda"},"content":"Expected Output in the Side Panel Display: The new note is displayed under the notes section of the person.","lastModifiedDate":"2024-04-08"},{"lineNumber":764,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":765,"author":{"gitId":"teojunda"},"content":"### Deleting a note from a person","lastModifiedDate":"2024-04-08"},{"lineNumber":766,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":767,"author":{"gitId":"teojunda"},"content":"Prerequisite: There is 1 person with 1 note in the Displayed Person List. The same person is being viewed in the Side Panel Display.","lastModifiedDate":"2024-04-08"},{"lineNumber":768,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":769,"author":{"gitId":"teojunda"},"content":"Test case: `dn 1 i/1`","lastModifiedDate":"2024-04-08"},{"lineNumber":770,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":771,"author":{"gitId":"teojunda"},"content":"Expected Output in the Result Display: Message states the details of the first person in the list, as well as the note deleted.","lastModifiedDate":"2024-04-08"},{"lineNumber":772,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":773,"author":{"gitId":"teojunda"},"content":"Expected Output in the Side Panel Display: The first note is removed from the notes section of the person.","lastModifiedDate":"2024-04-08"},{"lineNumber":774,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":775,"author":{"gitId":"teojunda"},"content":"### Clearing the application data","lastModifiedDate":"2024-04-08"},{"lineNumber":776,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":777,"author":{"gitId":"teojunda"},"content":"Test case: `clear`","lastModifiedDate":"2024-04-08"},{"lineNumber":778,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":779,"author":{"gitId":"teojunda"},"content":"Expected Output in the Displayed Person List: Nothing is displayed.","lastModifiedDate":"2024-04-08"},{"lineNumber":780,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":781,"author":{"gitId":"teojunda"},"content":"Expected Output in the Side Panel Display: Nothing is displayed.","lastModifiedDate":"2024-04-08"},{"lineNumber":782,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":783,"author":{"gitId":"teojunda"},"content":"Expected Output in the Result Display: A message stating that app data has been cleared.","lastModifiedDate":"2024-04-08"},{"lineNumber":784,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":785,"author":{"gitId":"teojunda"},"content":"### Help","lastModifiedDate":"2024-04-08"},{"lineNumber":786,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":787,"author":{"gitId":"teojunda"},"content":"Test case: `help`","lastModifiedDate":"2024-04-08"},{"lineNumber":788,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":789,"author":{"gitId":"teojunda"},"content":"Expected Output: A window shows up and provides the link to the User Guide.","lastModifiedDate":"2024-04-08"},{"lineNumber":790,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":791,"author":{"gitId":"teojunda"},"content":"### Exit","lastModifiedDate":"2024-04-08"},{"lineNumber":792,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":793,"author":{"gitId":"teojunda"},"content":"Test case: `exit`","lastModifiedDate":"2024-04-08"},{"lineNumber":794,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":795,"author":{"gitId":"teojunda"},"content":"Expected Output: TA Toolkit closes.","lastModifiedDate":"2024-04-08"},{"lineNumber":796,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":797,"author":{"gitId":"teojunda"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-08"},{"lineNumber":798,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":799,"author":{"gitId":"teojunda"},"content":"## Appendix: Planned Enhancements","lastModifiedDate":"2024-04-08"},{"lineNumber":800,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":801,"author":{"gitId":"teojunda"},"content":"Team Size: 5","lastModifiedDate":"2024-04-08"},{"lineNumber":802,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":803,"author":{"gitId":"teojunda"},"content":"### Better name validation","lastModifiedDate":"2024-04-08"},{"lineNumber":804,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":805,"author":{"gitId":"g-tejas"},"content":"**Background**: Currently, TA Toolkit only allows contacts\u0027 name to contain alphanumeric characters and spaces. Furthermore,","lastModifiedDate":"2024-04-13"},{"lineNumber":806,"author":{"gitId":"g-tejas"},"content":"names \"John Doe\" and \"John  Doe\" are considered different names due to the extra whitespace. ","lastModifiedDate":"2024-04-13"},{"lineNumber":807,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":808,"author":{"gitId":"teojunda"},"content":"**Issue**: The strict restrictions will prevent some valid names from being accepted.","lastModifiedDate":"2024-04-08"},{"lineNumber":809,"author":{"gitId":"teojunda"},"content":"For example, \"Ravi S/O Ramasamy\" is rejected as it contains a \u0027/\u0027 character.","lastModifiedDate":"2024-04-08"},{"lineNumber":810,"author":{"gitId":"g-tejas"},"content":"As for the extra whitespace between words in a name, it might confuse the user when searching for a contact.","lastModifiedDate":"2024-04-13"},{"lineNumber":811,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":812,"author":{"gitId":"teojunda"},"content":"**Enhancement**: We plan on changing the parameter prefixes to use the \u0027\u003d\u0027 character instead of the \u0027/\u0027 character.","lastModifiedDate":"2024-04-08"},{"lineNumber":813,"author":{"gitId":"teojunda"},"content":"Furthermore, we will loosen the restrictions on names to allow the \u0027/\u0027 character.","lastModifiedDate":"2024-04-08"},{"lineNumber":814,"author":{"gitId":"teojunda"},"content":"This will allow the TA Toolkit to accept legal names containing the \u0027/\u0027 character.","lastModifiedDate":"2024-04-08"},{"lineNumber":815,"author":{"gitId":"g-tejas"},"content":"We will also trim the extra whitespace between words in a name to prevent confusion when searching for a contact.","lastModifiedDate":"2024-04-13"},{"lineNumber":816,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":817,"author":{"gitId":"teojunda"},"content":"### Better email validation","lastModifiedDate":"2024-04-11"},{"lineNumber":818,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":819,"author":{"gitId":"teojunda"},"content":"**Background**: Currently, our system validates email addresses using the format local-part@domain, with specific restrictions for both parts to identify and reject invalid emails.","lastModifiedDate":"2024-04-11"},{"lineNumber":820,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":821,"author":{"gitId":"teojunda"},"content":"**Issue**: This validation method does not strictly adhere to the IETF standards for email addresses.","lastModifiedDate":"2024-04-11"},{"lineNumber":822,"author":{"gitId":"teojunda"},"content":"Consequently, our application may incorrectly deem invalid emails as valid.","lastModifiedDate":"2024-04-11"},{"lineNumber":823,"author":{"gitId":"teojunda"},"content":"For instance, an email like a@12.34 may pass validation despite having a domain that violates IETF standards.","lastModifiedDate":"2024-04-11"},{"lineNumber":824,"author":{"gitId":"teojunda"},"content":"Furthermore, while our validation accommodates formats commonly used by major email service providers like Google, Outlook, Hotmail, and Yahoo, the IETF\u0027s standards are more inclusive and may recognize additional formats.","lastModifiedDate":"2024-04-11"},{"lineNumber":825,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":826,"author":{"gitId":"teojunda"},"content":"**Enhancement**: To address this issue, we aim to enhance our email validation process to align more closely with IETF standards and specific RFCs such as RFC3696, RFC5322, and RFC6854.","lastModifiedDate":"2024-04-11"},{"lineNumber":827,"author":{"gitId":"teojunda"},"content":"This upgrade be able to accurately identify valid and invalid email addresses.","lastModifiedDate":"2024-04-11"},{"lineNumber":828,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":829,"author":{"gitId":"teojunda"},"content":"### Better identification of unique students","lastModifiedDate":"2024-04-08"},{"lineNumber":830,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":831,"author":{"gitId":"teojunda"},"content":"**Background**: Currently, TA Toolkit does not have a unique identifier to identify unique students.","lastModifiedDate":"2024-04-08"},{"lineNumber":832,"author":{"gitId":"teojunda"},"content":"There is only weak checking done to ensure students do not have duplicate email, phone number, telegram, github.","lastModifiedDate":"2024-04-08"},{"lineNumber":833,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":834,"author":{"gitId":"teojunda"},"content":"**Issue**: TAs might have difficulty differentiating between students with the same name.","lastModifiedDate":"2024-04-08"},{"lineNumber":835,"author":{"gitId":"teojunda"},"content":"This is a problem when looking at the attendance overview, when the TA sees a name as absent. If 2 people share that name, the TA does not know which of them is absent.","lastModifiedDate":"2024-04-08"},{"lineNumber":836,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":837,"author":{"gitId":"teojunda"},"content":"**Enhancement**: We plan on adding Student ID as a field for students, which will be the unique identifier for student contacts.","lastModifiedDate":"2024-04-08"},{"lineNumber":838,"author":{"gitId":"teojunda"},"content":"When displaying the attendance overview, the Student ID will accompany the student\u0027s name to uniquely identify him.","lastModifiedDate":"2024-04-08"},{"lineNumber":839,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":840,"author":{"gitId":"teojunda"},"content":"### More comprehensive attendance taking","lastModifiedDate":"2024-04-08"},{"lineNumber":841,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":842,"author":{"gitId":"teojunda"},"content":"**Background**: Currently, TA Toolkit only allows TAs to mark their students as present or absent.","lastModifiedDate":"2024-04-08"},{"lineNumber":843,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":844,"author":{"gitId":"teojunda"},"content":"**Issue**: This introduces confusion to the TA, when marking attendance for students with other attendance status.","lastModifiedDate":"2024-04-08"},{"lineNumber":845,"author":{"gitId":"teojunda"},"content":"For example, some students might be absent with valid reasons, like being on medical leave.","lastModifiedDate":"2024-04-08"},{"lineNumber":846,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-08"},{"lineNumber":847,"author":{"gitId":"teojunda"},"content":"**Enhancement**: We plan on introducing more attendance statuses that TAs can mark their students with, like being absent with valid reason.","lastModifiedDate":"2024-04-08"},{"lineNumber":848,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":849,"author":{"gitId":"teojunda"},"content":"### Handling duplicate keys in JSON object","lastModifiedDate":"2024-04-11"},{"lineNumber":850,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":851,"author":{"gitId":"teojunda"},"content":"**Background**: Currently, TA Toolkit does not check for duplicate keys in JSON objects used for storage of student contact details.","lastModifiedDate":"2024-04-11"},{"lineNumber":852,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":853,"author":{"gitId":"teojunda"},"content":"**Issue**: This could lead to unexpected behaviour if the storage file is corrupted.","lastModifiedDate":"2024-04-11"},{"lineNumber":854,"author":{"gitId":"teojunda"},"content":"For example, if the JSON object representing the student contact details contains 2 `name` keys, the application should throw an error that the data is corrupted.","lastModifiedDate":"2024-04-11"},{"lineNumber":855,"author":{"gitId":"teojunda"},"content":"However, the application reads the value of the last duplicate key.","lastModifiedDate":"2024-04-11"},{"lineNumber":856,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":857,"author":{"gitId":"teojunda"},"content":"**Enhancement**: We plan on introducing checks to ensure that there are no duplicate keys for any of the JSON objects in the storage file.","lastModifiedDate":"2024-04-11"},{"lineNumber":858,"author":{"gitId":"teojunda"},"content":"This will cause TA Toolkit to throw an error and reset the data if the storage file is invalid.","lastModifiedDate":"2024-04-11"},{"lineNumber":859,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":860,"author":{"gitId":"g-tejas"},"content":"### Errors Improvement","lastModifiedDate":"2024-04-12"},{"lineNumber":861,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":862,"author":{"gitId":"g-tejas"},"content":"**Background**: Currently, some of TA Toolkit\u0027s error messages are not specific enough for the user to understand what went wrong.","lastModifiedDate":"2024-04-12"},{"lineNumber":863,"author":{"gitId":"g-tejas"},"content":"A very large index, one that doesn\u0027t fit in an integer, might be mistakenly input by the user.","lastModifiedDate":"2024-04-12"},{"lineNumber":864,"author":{"gitId":"g-tejas"},"content":"A few examples include:","lastModifiedDate":"2024-04-12"},{"lineNumber":865,"author":{"gitId":"g-tejas"},"content":"1. When updating a contact with a very large index, the error message is \"Invalid command format\".","lastModifiedDate":"2024-04-12"},{"lineNumber":866,"author":{"gitId":"g-tejas"},"content":"2. When marking attendance with a very large number in the index field, the error message is \"Index is not a non-zero unsigned integer\".","lastModifiedDate":"2024-04-12"},{"lineNumber":867,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":868,"author":{"gitId":"g-tejas"},"content":"**Issue**: The error message provided is not consistent and not specific enough for the user to understand what went wrong.","lastModifiedDate":"2024-04-12"},{"lineNumber":869,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":870,"author":{"gitId":"g-tejas"},"content":"**Enhancement**: We plan on improving the error messages to provide more specific information to the user. For example,","lastModifiedDate":"2024-04-12"},{"lineNumber":871,"author":{"gitId":"g-tejas"},"content":"if a user tries to use a command with a very large index that doesn\u0027t fit in an integer, the error message will be \"The person index provided is invalid.\".","lastModifiedDate":"2024-04-12"},{"lineNumber":872,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":873,"author":{"gitId":"g-tejas"},"content":"### UI Improvements","lastModifiedDate":"2024-04-12"},{"lineNumber":874,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":875,"author":{"gitId":"g-tejas"},"content":"**Background**: Currently, the background of TA Toolkit behind the Person cards are black in colour and does not match the Nord theme.","lastModifiedDate":"2024-04-12"},{"lineNumber":876,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":877,"author":{"gitId":"g-tejas"},"content":"**Issue**: This could introduce some confusion to the user as the background colour does not match the theme of the application. ","lastModifiedDate":"2024-04-12"},{"lineNumber":878,"author":{"gitId":"g-tejas"},"content":"This could also lead to a poor user experience as the user might think that a bug has occurred.","lastModifiedDate":"2024-04-12"},{"lineNumber":879,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":880,"author":{"gitId":"g-tejas"},"content":"**Enhancement**: We plan on changing the background colour of the application to match the Nord theme, which will provide a more consistent user experience.","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"YuSoonZ":17,"kailashgautham":42,"teojunda":467,"hiivan":5,"g-tejas":23,"-":326}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Setting up and getting started\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Setting up and getting started","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":31,"author":{"gitId":"kailashgautham"},"content":"   1. Run the `seedu.tatoolkit.Main` and try a few commands.","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   **Tip:**","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"kailashgautham"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [TaToolkit’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"kailashgautham":2,"-":59}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Testing guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Testing guide","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c!-- -------------------------------------------------------------------------------------------------------------------- --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"**Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"kailashgautham"},"content":"   e.g. `seedu.tatoolkit.commons.StringUtilTest`","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"kailashgautham"},"content":"   e.g. `seedu.tatoolkit.storage.StorageManagerTest`","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"kailashgautham"},"content":"   e.g. `seedu.tatoolkit.logic.LogicManagerTest`","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"kailashgautham":3,"-":38}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"g-tejas"},"content":"# TA Toolkit User Guide","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"TA Toolkit is a desktop application designed to help CS2100 Teaching Assistants (TAs) from the School of Computing (SoC) at the National University of Singapore (NUS)","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"efficiently manage the contacts of their students. This User Guide assumes that you are familiar with the Command Line Interface (CLI)","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"applications and are a fast typist, allowing you to get your student management tasks done faster than traditional Graphical User Interface (GUI) apps.","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"teojunda"},"content":"Juggling teaching and administrative tasks, time is a precious resource for CS2100 TAs and effective contact management is crucial.","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"teojunda"},"content":"TA Toolkit is meticulously designed to cater to your administrative requirements, guaranteeing seamless handling of","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"teojunda"},"content":"your contact-related duties. It offers a rapid and user-friendly solution via a Command Line Interface (CLI), specifically","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"tailored to enhance the efficiency and effectiveness of your contact management endeavours.","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"teojunda"},"content":"Below are some ways to integrate TA Toolkit into your workflow:","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"teojunda"},"content":"- You can categorise student contacts into the different class groups that you teach.","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"teojunda"},"content":"- You can filter student contacts easily based on their name or class group.","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"teojunda"},"content":"- You can track the attendance of your students easily.","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"teojunda"},"content":"- You can take notes on individual students to personalise your teaching.","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"teojunda"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"teojunda"},"content":"**Tip:** If this is your first time using TA Toolkit, head over to [How to use TA Toolkit\u0027s User Guide](#how-to-use)","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"teojunda"},"content":"to start keeping track of all your students\u0027 contacts!","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"teojunda"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"teojunda"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"teojunda"},"content":"## How to Use","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"teojunda"},"content":"Welcome to TA Toolkit. We are confident that TA Toolkit will become your reliable ally throughout your journey as a CS2100 TA.","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"teojunda"},"content":"This user guide offers you detailed documentation of TA Toolkit\u0027s capabilities.","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"teojunda"},"content":"If this is your first encounter with TA Toolkit, ensure that the application has been downloaded.","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"teojunda"},"content":"Please proceed to [Quick Start](#quick-start) for instructions on installing the application.","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"kailashgautham"},"content":"If you would like to have a brief introduction to the application\u0027s interface,","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"teojunda"},"content":"head over to our [Interface Walkthrough](#interface-walkthrough) to better learn about TA Toolkit.","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"teojunda"},"content":"If you are already familiar with TA Toolkit, you can refer to [Command Summary](#command-summary) for a","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"teojunda"},"content":"summary of all the commands in TA Toolkit.","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"teojunda"},"content":"If you encounter any issues with the commands or find yourself uncertain about anything,","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"teojunda"},"content":"feel free to explore the [Glossary](#Glossary) for explanations on technical terms,","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"teojunda"},"content":"consult the [FAQ](#faq) for answers to common questions,","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"kailashgautham"},"content":"or explore [Common Mistakes](#common-mistakes) for typical errors that users may encounter while utilising the application.","lastModifiedDate":"2024-04-12"},{"lineNumber":57,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"teojunda"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"teojunda"},"content":"## Labels","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"teojunda"},"content":"In our user guide, you may find coloured labels that contain text nuggets.","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"teojunda"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"teojunda"},"content":"Blue labels represent helpful tips to enhance your experience.","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"teojunda"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"kailashgautham"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2024-04-06"},{"lineNumber":71,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"teojunda"},"content":"Yellow labels represent warnings that you should be cautious about.","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"teojunda"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"teojunda"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"teojunda"},"content":"## Key Terms","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"teojunda"},"content":"TA Toolkit stores students\u0027 contact details and allows the user to take notes on students and track their attendance.","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"teojunda"},"content":"As such, it is important that you familiarise yourself with the structure of each person as well as their key attributes (notes, attendance).","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"teojunda"},"content":"### Person","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"teojunda"},"content":"A person represents your student. At the start of the teaching semester, you should add your students\u0027 basic contact details (NAME, CLASS_GROUP, EMAIL).","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"teojunda"},"content":"A person has the following attributes:","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"teojunda"},"content":"- Name (Compulsory)","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"teojunda"},"content":"- Class_Group (Compulsory)","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"teojunda"},"content":"- Email address (Compulsory)","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"teojunda"},"content":"- Phone number (Optional)","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"teojunda"},"content":"- Telegram handle (Optional)","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"kailashgautham"},"content":"- GitHub ID (Optional)","lastModifiedDate":"2024-04-12"},{"lineNumber":94,"author":{"gitId":"teojunda"},"content":"- Attendance (Tracked by the application)","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"teojunda"},"content":"- Notes (Tracked by the application)","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"teojunda"},"content":"In TA Toolkit, duplicating entries with identical email addresses, phone numbers, Telegram handles, or GitHub IDs is not supported. The comparison of these fields for equality is case-insensitive. Therefore, you cannot add multiple individuals sharing the same email, phone number, Telegram handle, or GitHub ID.","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"teojunda"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"teojunda"},"content":"**Tip:**","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"kailashgautham"},"content":"After adding a student\u0027s contact, update their phone number, Telegram handle, and GitHub ID as and when you receive the necessary information.","lastModifiedDate":"2024-04-12"},{"lineNumber":103,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"teojunda"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"teojunda"},"content":"### Attendance","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"kailashgautham"},"content":"Each student has an attendance for each week tied to them. Since NUS semesters contain 13 weeks, TA Toolkit only supports taking attendance for 13 weeks.","lastModifiedDate":"2024-04-12"},{"lineNumber":109,"author":{"gitId":"teojunda"},"content":"When a student contact is added to TA Toolkit, he is assumed to be present for all 13 weeks.","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"teojunda"},"content":"You can use the [`ma`](#marking-attendance-ma) command to mark a student as present or absent for a specific week.","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"teojunda"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"teojunda"},"content":"**Tip:**","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"teojunda"},"content":"Use negative marking to quickly take attendance for a class. Since all students are initially assumed to be present,","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"kailashgautham"},"content":"you can quickly mark the attendance of an entire class by only marking the absentees as absent.","lastModifiedDate":"2024-04-09"},{"lineNumber":117,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"teojunda"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"teojunda"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"kailashgautham"},"content":"1. Ensure you have Java `11` or above installed on your computer.","lastModifiedDate":"2024-04-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"kailashgautham"},"content":"To install Java on a Windows computer, click [here](https://www.java.com/en/download/help/windows_manual_download.html).","lastModifiedDate":"2024-04-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":128,"author":{"gitId":"kailashgautham"},"content":"To install Java that is compatible with our application on a Mac computer, download and install the Azul build of OpenJDK 11 version found [here](https://www.azul.com/downloads/?version\u003djava-11-lts\u0026os\u003dmacos\u0026architecture\u003darm-64-bit\u0026package\u003djdk-fx) and ensure to choose the JDK FXversion.","lastModifiedDate":"2024-04-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":130,"author":{"gitId":"kailashgautham"},"content":"To install Java on a Linux computer, click [here](https://www.java.com/en/download/help/linux_x64_install.html).","lastModifiedDate":"2024-04-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":132,"author":{"gitId":"teojunda"},"content":"To check the version of Java installed on your computer, click [here](https://www.java.com/en/download/help/version_manual.html) if you are using a Windows or Mac computer, and click [here](https://phoenixnap.com/kb/check-java-version-linux)","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"teojunda"},"content":"if your computer is running Linux.","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"kailashgautham"},"content":"2. Download the latest `TAToolkit.jar` from [here](https://github.com/AY2324S2-CS2103T-F14-3/tp/releases).","lastModifiedDate":"2024-04-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"kailashgautham"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your TA Toolkit.","lastModifiedDate":"2024-04-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"kailashgautham"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar TAToolkit.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2024-04-06"},{"lineNumber":140,"author":{"gitId":"kailashgautham"},"content":"   A GUI similar to the one below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":141,"author":{"gitId":"teojunda"},"content":"   ![Ui](images/ActualUi.png)","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"kailashgautham"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2024-04-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"kailashgautham"},"content":"   * `ls` : Lists all contacts.","lastModifiedDate":"2024-04-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"kailashgautham"},"content":"   * `ac n/John Doe c/T42 p/98765432 e/johnd@example.com t/@johndoe g/johnDoeGithub` : Adds a student named `John Doe` to the TA Toolkit.","lastModifiedDate":"2024-04-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"g-tejas"},"content":"   * `dc 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2024-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"kailashgautham"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2024-04-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"teojunda"},"content":"## Interface walkthrough","lastModifiedDate":"2024-04-03"},{"lineNumber":161,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":162,"author":{"gitId":"teojunda"},"content":"This is the expected interface of the GUI when you launch TA Toolkit. Please note that this application has been populated with sample data.","lastModifiedDate":"2024-04-03"},{"lineNumber":163,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":164,"author":{"gitId":"kailashgautham"},"content":"The key windows are labelled as follows:","lastModifiedDate":"2024-04-12"},{"lineNumber":165,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":166,"author":{"gitId":"teojunda"},"content":"1. File button: Opens an option to exit the application.","lastModifiedDate":"2024-04-03"},{"lineNumber":167,"author":{"gitId":"teojunda"},"content":"2. Help button: Opens a menu with a link to the User Guide.","lastModifiedDate":"2024-04-03"},{"lineNumber":168,"author":{"gitId":"teojunda"},"content":"3. Command Box: Enter your command here.","lastModifiedDate":"2024-04-03"},{"lineNumber":169,"author":{"gitId":"teojunda"},"content":"4. Result Display: Displays the result of your command.","lastModifiedDate":"2024-04-03"},{"lineNumber":170,"author":{"gitId":"teojunda"},"content":"5. Displayed Person List: Displays a list of persons\u0027 contacts and their contact information.","lastModifiedDate":"2024-04-03"},{"lineNumber":171,"author":{"gitId":"teojunda"},"content":"6. Side Panel Display: Displays detailed information on a specific person or the attendance overview.","lastModifiedDate":"2024-04-03"},{"lineNumber":172,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":173,"author":{"gitId":"teojunda"},"content":"![Interface](images/InterfaceWalkthrough.png)","lastModifiedDate":"2024-04-03"},{"lineNumber":174,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":175,"author":{"gitId":"teojunda"},"content":"The \"Help\" window will look like as follows:","lastModifiedDate":"2024-04-03"},{"lineNumber":176,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":177,"author":{"gitId":"teojunda"},"content":"![Help_Window](images/helpMessage.png)","lastModifiedDate":"2024-04-03"},{"lineNumber":178,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":179,"author":{"gitId":"teojunda"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-03"},{"lineNumber":180,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":181,"author":{"gitId":"teojunda"},"content":"## Parameters","lastModifiedDate":"2024-04-03"},{"lineNumber":182,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":183,"author":{"gitId":"teojunda"},"content":"Some of TA Toolkit\u0027s commands require parameters, which have specific formats. Before heading to the [Features](#features) section, we recommend taking a look at the type of parameters and their constraints.","lastModifiedDate":"2024-04-03"},{"lineNumber":184,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":185,"author":{"gitId":"teojunda"},"content":"The following parameters are used for commands:","lastModifiedDate":"2024-04-03"},{"lineNumber":186,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":187,"author":{"gitId":"teojunda"},"content":"| Parameter     | Prefix | Format                                                                                                                                                                                                                    | Example                                         |","lastModifiedDate":"2024-04-03"},{"lineNumber":188,"author":{"gitId":"kailashgautham"},"content":"|---------------|--------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------|","lastModifiedDate":"2024-04-12"},{"lineNumber":189,"author":{"gitId":"teojunda"},"content":"| INDEX         | -      | Positive integers only                                                                                                                                                                                                    | `1`, `2`, `3`                                   |","lastModifiedDate":"2024-04-03"},{"lineNumber":190,"author":{"gitId":"teojunda"},"content":"| KEYWORD       | -      | Alphanumeric only                                                                                                                                                                                                         | `Alex`, `Bernice`                               |","lastModifiedDate":"2024-04-03"},{"lineNumber":191,"author":{"gitId":"teojunda"},"content":"| NAME          | n/     | Alphanumeric, can contain multiple words                                                                                                                                                                                  | `Alex Yeoh`, `Bernice Yu`                       |","lastModifiedDate":"2024-04-03"},{"lineNumber":192,"author":{"gitId":"kailashgautham"},"content":"| PHONE_NUMBER  | p/     | Numeric, minimum length of 3 digits. Users are responsible for ensuring the phone number is valid.                                                                                                                        | `99999999`, `88888888`                          |","lastModifiedDate":"2024-04-12"},{"lineNumber":193,"author":{"gitId":"kailashgautham"},"content":"| TELEGRAM      | t/     | Starts with @, followed by alphanumeric characters or underscores. Users are responsible for ensuring their Telegram ID is valid.                                                                                         | `@nus_cs2100` , `@johnDoe`                      |","lastModifiedDate":"2024-04-12"},{"lineNumber":194,"author":{"gitId":"kailashgautham"},"content":"| EMAIL         | e/     | A local-part (consisting of letters, numbers, underscores, dots, and dashes), followed by the \u0027@\u0027 symbol, then the domain name with at least 2 characters. Users are responsible for ensuring the email address is valid. | `damithch@comp.nus.edu.sg`, `dcsdcr@nus.edu.sg` |","lastModifiedDate":"2024-04-09"},{"lineNumber":195,"author":{"gitId":"kailashgautham"},"content":"| GITHUB        | g/     | Consists of alphanumeric characters, underscores, periods, and hyphens. Users are responsible for ensuring GitHub ID is valid.                                                                                            | `johnDoe`, `alice-yu`                           |","lastModifiedDate":"2024-04-12"},{"lineNumber":196,"author":{"gitId":"kailashgautham"},"content":"| CLASS_GROUP   | c/     | Consists of alphanumeric characters                                                                                                                                                                                       | `T10`, `T42`                                    |","lastModifiedDate":"2024-04-08"},{"lineNumber":197,"author":{"gitId":"teojunda"},"content":"| NOTE          | note/  | Consists of alphanumeric characters and basic punctuation (periods, commas, exclamation marks, question marks)                                                                                                            | `Proficient in Java!`, `Beginner to Python.`    |","lastModifiedDate":"2024-04-08"},{"lineNumber":198,"author":{"gitId":"teojunda"},"content":"| NOTE_INDEX    | i/     | Positive integers only                                                                                                                                                                                                    | `1`, `2`, `3`                                   |","lastModifiedDate":"2024-04-03"},{"lineNumber":199,"author":{"gitId":"teojunda"},"content":"| WEEK          | w/     | Positive integers from 1 - 13 only                                                                                                                                                                                        | `1`, `2`, `3`                                   |","lastModifiedDate":"2024-04-04"},{"lineNumber":200,"author":{"gitId":"teojunda"},"content":"| PRESENT_INDEX | pre/   | Positive integers only                                                                                                                                                                                                    | `1`, `2`, `3`                                   |","lastModifiedDate":"2024-04-03"},{"lineNumber":201,"author":{"gitId":"teojunda"},"content":"| ABSENT_INDEX  | abs/   | Positive integers only                                                                                                                                                                                                    | `1`, `2`, `3`                                   |","lastModifiedDate":"2024-04-03"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":203,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-03"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":205,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"teojunda"},"content":"* Commands are case-sensitive.","lastModifiedDate":"2024-04-03"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":213,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"kailashgautham"},"content":"  e.g. in `ac n/NAME`, `NAME` is a parameter which can be used as `ac n/John Doe`.","lastModifiedDate":"2024-03-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"kailashgautham"},"content":"* Items in square brackets are optional. If an optional prefix is used without a value, it is assumed that you are creating a user without the value or deleting the already existing value.\u003cbr\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":217,"author":{"gitId":"kailashgautham"},"content":"  e.g. `n/NAME [t/TELEGRAM]` can be used as `n/John Doe t/@johndoe` or as `n/John Doe`, or also as `n/John Doe t/`.","lastModifiedDate":"2024-04-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"teojunda"},"content":"* Items with … after them can be used multiple times (1 or more).\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":223,"author":{"gitId":"teojunda"},"content":"  For example, the `ls CLASS_GROUP` command can be used to search 1 `CLASS_GROUP` like `ls T10`, or 2 `CLASS_GROUP`s like `ls T10 T20`.","lastModifiedDate":"2024-04-03"},{"lineNumber":224,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":225,"author":{"gitId":"kailashgautham"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `ls`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2024-04-06"},{"lineNumber":226,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":228,"author":{"gitId":"kailashgautham"},"content":"* For any command that fails to execute, refer to the Result Display, which will provide a helpful explanation to help you correct your command.","lastModifiedDate":"2024-04-12"},{"lineNumber":229,"author":{"gitId":"teojunda"},"content":"  ![Result_Display](images/ErrorMessage_example.png)","lastModifiedDate":"2024-04-03"},{"lineNumber":230,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":231,"author":{"gitId":"kailashgautham"},"content":"* If any extra parameters with an invalid prefix are provided, the command will consider that prefix and parameter as part of the previous parameter.\u003cbr\u003e","lastModifiedDate":"2024-04-06"},{"lineNumber":232,"author":{"gitId":"teojunda"},"content":"  e.g. if the command specifies `ac n/John Doe c/T42 p/98765432 homework/Lab 4`, the command will interpret `homework/Lab 4` as part of the `PHONE_NUMBER` parameter, as `homework` is not a valid prefix for the `ac` command.","lastModifiedDate":"2024-04-08"},{"lineNumber":233,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":234,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"kailashgautham"},"content":"This opens a window containing a link to the User Guide.","lastModifiedDate":"2024-04-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"kailashgautham"},"content":"### Adding a person: `ac`","lastModifiedDate":"2024-03-13"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"teojunda"},"content":"This helps you to add a person to TA Toolkit.","lastModifiedDate":"2024-04-03"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"teojunda"},"content":"Format: `ac n/NAME c/CLASS_GROUP e/EMAIL [p/PHONE_NUMBER] [t/TELEGRAM] [g/GITHUB]`","lastModifiedDate":"2024-03-25"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"kailashgautham"},"content":"* When adding a contact, the contact\u0027s EMAIL, PHONE_NUMBER, TELEGRAM, and GITHUB must be unique compared to every other person in TA Toolkit.","lastModifiedDate":"2024-04-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":251,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2024-03-25"},{"lineNumber":252,"author":{"gitId":"kailashgautham"},"content":"* `ac n/John Doe c/T42 p/98765432 e/johnd@example.com t/@johndoe g/johnDoeGithub` This adds a new member named `John Doe` with class_group `T42`, phone number `98765432`, email `johnd@example.com`, Telegram","lastModifiedDate":"2024-04-09"},{"lineNumber":253,"author":{"gitId":"kailashgautham"},"content":"handle `@johndoe` and GitHub `johnDoeGithub` to the list of contacts.","lastModifiedDate":"2024-04-09"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":255,"author":{"gitId":"teojunda"},"content":"![Add_Contact](images/ac_example.png)","lastModifiedDate":"2024-04-03"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"teojunda"},"content":"### Updating a person : `uc`","lastModifiedDate":"2024-03-13"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"teojunda"},"content":"This helps you to update the contact details of an existing person in TA Toolkit.","lastModifiedDate":"2024-04-03"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"teojunda"},"content":"Format: `uc INDEX [n/NAME] [c/CLASS_GROUP] [e/EMAIL] [p/PHONE_NUMBER] [t/TELEGRAM] [g/GITHUB]`","lastModifiedDate":"2024-04-03"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"teojunda"},"content":"* Updates the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-13"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"teojunda"},"content":"* The updated person must have a different field compared to the original person.","lastModifiedDate":"2024-03-13"},{"lineNumber":267,"author":{"gitId":"kailashgautham"},"content":"* When updating any field, `EMAIL`, `PHONE_NUMBER`, `TELEGRAM`, and `GITHUB` must be unique compared to every other person.","lastModifiedDate":"2024-04-12"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"teojunda"},"content":"*  `uc 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears the Telegram field.","lastModifiedDate":"2024-03-13"},{"lineNumber":271,"author":{"gitId":"teojunda"},"content":"*  `uc 6 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 6th person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2024-04-03"},{"lineNumber":272,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":273,"author":{"gitId":"teojunda"},"content":"![Update_Contact](images/uc_example.png)","lastModifiedDate":"2024-04-03"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"kailashgautham"},"content":"This helps you find specific persons by their names.","lastModifiedDate":"2024-04-09"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"teojunda"},"content":"Format: `find KEYWORD [KEYWORD...]`","lastModifiedDate":"2024-04-03"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"kailashgautham"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`","lastModifiedDate":"2024-04-09"},{"lineNumber":282,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"teojunda"},"content":"* `find alex john` returns `Alex Yeoh`, `John Doe`\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":290,"author":{"gitId":"teojunda"},"content":"  ![result for \u0027find alex john\u0027](images/find_example.png)","lastModifiedDate":"2024-04-03"},{"lineNumber":291,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":292,"author":{"gitId":"teojunda"},"content":"### Listing persons : `ls`","lastModifiedDate":"2024-04-03"},{"lineNumber":293,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":294,"author":{"gitId":"kailashgautham"},"content":"This shows you a list of all persons in TA Toolkit based on a CLASS_GROUP in the Contact List Display.","lastModifiedDate":"2024-04-12"},{"lineNumber":295,"author":{"gitId":"teojunda"},"content":"Also, the attendance overview of all persons in the displayed person list will be displayed in the side panel display.","lastModifiedDate":"2024-04-03"},{"lineNumber":296,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":297,"author":{"gitId":"teojunda"},"content":"Format: `ls [CLASS_GROUP...]`","lastModifiedDate":"2024-04-03"},{"lineNumber":298,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":299,"author":{"gitId":"teojunda"},"content":"* If no parameters are provided, all persons in the TA Toolkit will be displayed.","lastModifiedDate":"2024-04-03"},{"lineNumber":300,"author":{"gitId":"teojunda"},"content":"* For a given parameter, all persons with a CLASS_GROUP beginning with the parameter will be displayed.","lastModifiedDate":"2024-04-03"},{"lineNumber":301,"author":{"gitId":"teojunda"},"content":"* The CLASS_GROUP parameter is case-sensitive.","lastModifiedDate":"2024-04-03"},{"lineNumber":302,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":303,"author":{"gitId":"teojunda"},"content":"Examples:","lastModifiedDate":"2024-04-03"},{"lineNumber":304,"author":{"gitId":"teojunda"},"content":"* `ls` Displays all persons in the TA Toolkit.","lastModifiedDate":"2024-04-03"},{"lineNumber":305,"author":{"gitId":"kailashgautham"},"content":"* `ls T4` Displays all person with a CLASS_GROUP beginning with T4, e.g. T40, T42, etc.","lastModifiedDate":"2024-04-08"},{"lineNumber":306,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":307,"author":{"gitId":"teojunda"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":308,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":309,"author":{"gitId":"kailashgautham"},"content":"**Tip:** If you try to list the students for a specific class, but nothing is displayed, check that the CLASS_GROUP","lastModifiedDate":"2024-04-12"},{"lineNumber":310,"author":{"gitId":"teojunda"},"content":"parameter has the correct letter casing.","lastModifiedDate":"2024-04-03"},{"lineNumber":311,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":312,"author":{"gitId":"teojunda"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"YuSoonZ"},"content":"### Viewing a person : `view`","lastModifiedDate":"2024-03-18"},{"lineNumber":315,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":316,"author":{"gitId":"kailashgautham"},"content":"This helps you to view the detailed information of a specified person on the side panel display.","lastModifiedDate":"2024-04-12"},{"lineNumber":317,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":318,"author":{"gitId":"YuSoonZ"},"content":"Format: `view INDEX`","lastModifiedDate":"2024-03-18"},{"lineNumber":319,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":320,"author":{"gitId":"YuSoonZ"},"content":"* View the person at the specified `INDEX`.","lastModifiedDate":"2024-03-18"},{"lineNumber":321,"author":{"gitId":"kailashgautham"},"content":"* The person\u0027s details will be displayed on the side panel display.","lastModifiedDate":"2024-04-12"},{"lineNumber":322,"author":{"gitId":"teojunda"},"content":"* `INDEX` refers to the index number shown in the displayed person list.","lastModifiedDate":"2024-04-03"},{"lineNumber":323,"author":{"gitId":"teojunda"},"content":"* `INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-04-03"},{"lineNumber":324,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":325,"author":{"gitId":"YuSoonZ"},"content":"Examples:","lastModifiedDate":"2024-03-18"},{"lineNumber":326,"author":{"gitId":"kailashgautham"},"content":"* `view 1` views the first person of the displayed person list on the side panel display.","lastModifiedDate":"2024-04-13"},{"lineNumber":327,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":328,"author":{"gitId":"teojunda"},"content":"  ![result for \u0027view 1\u0027](images/view_example.png)","lastModifiedDate":"2024-04-12"},{"lineNumber":329,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":330,"author":{"gitId":"kailashgautham"},"content":"### Adding a note to a person : `an`","lastModifiedDate":"2024-04-12"},{"lineNumber":331,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":332,"author":{"gitId":"kailashgautham"},"content":"This helps you to add notes to a specified person in TA Toolkit.","lastModifiedDate":"2024-04-12"},{"lineNumber":333,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":334,"author":{"gitId":"YuSoonZ"},"content":"Format: `an INDEX note/NOTE`","lastModifiedDate":"2024-04-02"},{"lineNumber":335,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":336,"author":{"gitId":"YuSoonZ"},"content":"* `INDEX` refers to the index number shown in the displayed person list.","lastModifiedDate":"2024-04-02"},{"lineNumber":337,"author":{"gitId":"YuSoonZ"},"content":"* `INDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-04-02"},{"lineNumber":338,"author":{"gitId":"kailashgautham"},"content":"* `NOTE` **must contain only alphanumeric characters and basic punctuation (periods, commas, exclamation marks, question marks) ** hardworking, sleepy, …​","lastModifiedDate":"2024-04-13"},{"lineNumber":339,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":340,"author":{"gitId":"YuSoonZ"},"content":"Examples:","lastModifiedDate":"2024-04-02"},{"lineNumber":341,"author":{"gitId":"kailashgautham"},"content":"* `an 1 note/very hardworking student!` adds a note of `very hardworking student!` to the first person in the TA Toolkit.","lastModifiedDate":"2024-04-13"},{"lineNumber":342,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":343,"author":{"gitId":"teojunda"},"content":"  ![result for \u0027an 1 note/very hardworking student!\u0027](images/an_example.png)","lastModifiedDate":"2024-04-03"},{"lineNumber":344,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":345,"author":{"gitId":"kailashgautham"},"content":"### Deleting a note from a person : `dn`","lastModifiedDate":"2024-04-12"},{"lineNumber":346,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":347,"author":{"gitId":"YuSoonZ"},"content":"Delete a note from a specified index of a specified person from the TA Toolkit.","lastModifiedDate":"2024-04-02"},{"lineNumber":348,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":349,"author":{"gitId":"teojunda"},"content":"Format: `dn INDEX i/NOTE_INDEX...`","lastModifiedDate":"2024-04-03"},{"lineNumber":350,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":351,"author":{"gitId":"YuSoonZ"},"content":"* `INDEX` refers to the index number shown in the displayed person list.","lastModifiedDate":"2024-04-02"},{"lineNumber":352,"author":{"gitId":"teojunda"},"content":"* `NOTEINDEX` refers to the index of the note within a person.","lastModifiedDate":"2024-04-03"},{"lineNumber":353,"author":{"gitId":"YuSoonZ"},"content":"* `INDEX` and `NOTEINDEX` **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-04-02"},{"lineNumber":354,"author":{"gitId":"kailashgautham"},"content":"* If multiple indices are provided, they should be comma-separated.","lastModifiedDate":"2024-04-08"},{"lineNumber":355,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":356,"author":{"gitId":"YuSoonZ"},"content":"Examples:","lastModifiedDate":"2024-04-02"},{"lineNumber":357,"author":{"gitId":"kailashgautham"},"content":"* `dn 1 i/2` deletes the second note from the first person in the TA Toolkit.","lastModifiedDate":"2024-04-13"},{"lineNumber":358,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":359,"author":{"gitId":"teojunda"},"content":"### Marking attendance : `ma`","lastModifiedDate":"2024-04-03"},{"lineNumber":360,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":361,"author":{"gitId":"teojunda"},"content":"Marks the attendance of a student as absent or present.","lastModifiedDate":"2024-04-03"},{"lineNumber":362,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":363,"author":{"gitId":"teojunda"},"content":"Format: `ma w/WEEK [pre/PRESENT_INDEX...] [abs/ABSENT_INDEX...]`","lastModifiedDate":"2024-04-03"},{"lineNumber":364,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":365,"author":{"gitId":"teojunda"},"content":"* Person indices under `pre/` will be marked as present. Person indices under `abs/` will be marked as absent.","lastModifiedDate":"2024-04-03"},{"lineNumber":366,"author":{"gitId":"teojunda"},"content":"* When a person contact is created, he will be assumed to be present for all weeks.","lastModifiedDate":"2024-04-03"},{"lineNumber":367,"author":{"gitId":"teojunda"},"content":"* This command will overwrite the existing attendance for the students.","lastModifiedDate":"2024-04-03"},{"lineNumber":368,"author":{"gitId":"teojunda"},"content":"* No duplicate indices are allowed in `PRESENT_INDEX` and `ABSENT_INDEX`.","lastModifiedDate":"2024-04-03"},{"lineNumber":369,"author":{"gitId":"teojunda"},"content":"* If multiple indices are provided, they should be comma-separated.","lastModifiedDate":"2024-04-03"},{"lineNumber":370,"author":{"gitId":"teojunda"},"content":"* At least one optional parameter must be present in the command.","lastModifiedDate":"2024-04-03"},{"lineNumber":371,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":372,"author":{"gitId":"teojunda"},"content":"Examples:","lastModifiedDate":"2024-04-03"},{"lineNumber":373,"author":{"gitId":"kailashgautham"},"content":"* `ma w/1 abs/1,2` marks the first and second persons in the displayed persons list as absent.","lastModifiedDate":"2024-04-13"},{"lineNumber":374,"author":{"gitId":"teojunda"},"content":"  ![result for \u0027ma w/1 abs/1,2\u0027](images/ma_example.png)","lastModifiedDate":"2024-04-03"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":376,"author":{"gitId":"teojunda"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":378,"author":{"gitId":"kailashgautham"},"content":"**Tip:** To quickly mark attendance of the class for the week, use the [ls](#listing-persons-ls) command to list all students in the class.","lastModifiedDate":"2024-04-12"},{"lineNumber":379,"author":{"gitId":"teojunda"},"content":"Then, mark the absentees for the week as absent. Since all students are initially assumed to be present, only the absentees will be marked as absent.","lastModifiedDate":"2024-04-03"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":381,"author":{"gitId":"teojunda"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":382,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":383,"author":{"gitId":"g-tejas"},"content":"### Deleting a person : `dc`","lastModifiedDate":"2024-03-14"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"teojunda"},"content":"Deletes a specified person from the TA Toolkit.","lastModifiedDate":"2024-04-03"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"g-tejas"},"content":"Format: `dc INDEX`","lastModifiedDate":"2024-03-14"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"teojunda"},"content":"* `dc 2` deletes the 2nd person in the displayed person list.","lastModifiedDate":"2024-04-03"},{"lineNumber":395,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":396,"author":{"gitId":"teojunda"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":397,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":398,"author":{"gitId":"teojunda"},"content":"**Caution:** There is no prompt to confirm this action. This command is not reversible. Deleted contacts will have to be","lastModifiedDate":"2024-04-03"},{"lineNumber":399,"author":{"gitId":"kailashgautham"},"content":"re-added to the list of students via the [`ac`](#adding-a-person-ac) command.","lastModifiedDate":"2024-04-12"},{"lineNumber":400,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":401,"author":{"gitId":"teojunda"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"kailashgautham"},"content":"Clears all entries from the TA Toolkit.","lastModifiedDate":"2024-03-06"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"teojunda"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":410,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":411,"author":{"gitId":"teojunda"},"content":"**Caution:** There is no prompt to confirm this action. You are advised to save a backup of the data as this","lastModifiedDate":"2024-04-03"},{"lineNumber":412,"author":{"gitId":"teojunda"},"content":"action will **not be reversible**.","lastModifiedDate":"2024-04-03"},{"lineNumber":413,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":414,"author":{"gitId":"teojunda"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":415,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":416,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"kailashgautham"},"content":"TAToolkit data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-03-06"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":428,"author":{"gitId":"kailashgautham"},"content":"TAToolkit data are saved automatically as a JSON file `[JAR file location]/data/TAToolkit.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2024-03-06"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":430,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":432,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":433,"author":{"gitId":"kailashgautham"},"content":"If your changes to the data file make its format invalid, TAToolkit will discard all data and start with an empty data file at the next run. Note that after discarding all data, TaToolkit will clear the data file only if the application is exited using the `exit` command. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":434,"author":{"gitId":"kailashgautham"},"content":"Furthermore, certain edits can cause the TAToolkit to behave in unexpected ways (e.g. if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-04-12"},{"lineNumber":435,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":437,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"teojunda"},"content":"**Q**: How do I see the attendance or notes of a specific student?\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":446,"author":{"gitId":"kailashgautham"},"content":"**A**: You have to use the [`view`](#viewing-a-person-view) command to view the detailed information containing the notes and attendance of the person.","lastModifiedDate":"2024-04-12"},{"lineNumber":447,"author":{"gitId":"kailashgautham"},"content":"For example, if you want to view the attendance of the first person in the displayed person list, use the `view 1` command to view their detailed information.","lastModifiedDate":"2024-04-13"},{"lineNumber":448,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":449,"author":{"gitId":"teojunda"},"content":"**Q**: How do I see the overall attendance for a specific class?\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":450,"author":{"gitId":"teojunda"},"content":"**A**: You have to use the [`ls`](#listing-persons-ls) command to list all the persons for a specific class.","lastModifiedDate":"2024-04-03"},{"lineNumber":451,"author":{"gitId":"teojunda"},"content":"The overall attendance of the class will be displayed in the side panel display.","lastModifiedDate":"2024-04-03"},{"lineNumber":452,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":453,"author":{"gitId":"teojunda"},"content":"**Q**: Why can\u0027t I see the application even though it is open?\u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":454,"author":{"gitId":"teojunda"},"content":"**A**: When using multiple screens, if you move the application to a secondary screen,","lastModifiedDate":"2024-04-03"},{"lineNumber":455,"author":{"gitId":"teojunda"},"content":"and later switch to using only the primary screen, the GUI will open off-screen.","lastModifiedDate":"2024-04-03"},{"lineNumber":456,"author":{"gitId":"teojunda"},"content":"The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2024-04-03"},{"lineNumber":457,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":458,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"kailashgautham"},"content":"**A**: Install the app on the other computer and overwrite the empty data file it creates with the file that contains","lastModifiedDate":"2024-04-12"},{"lineNumber":460,"author":{"gitId":"teojunda"},"content":"the data of your previous TAToolkit home folder.","lastModifiedDate":"2024-04-03"},{"lineNumber":461,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":462,"author":{"gitId":"teojunda"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":463,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":464,"author":{"gitId":"teojunda"},"content":"**Caution:**","lastModifiedDate":"2024-04-03"},{"lineNumber":465,"author":{"gitId":"teojunda"},"content":"If the tatoolkit.json file is invalid or has any formatting errors, the program might not start up. Please make sure","lastModifiedDate":"2024-04-03"},{"lineNumber":466,"author":{"gitId":"teojunda"},"content":"that the tatoolkit.json file used is **correct and accurate.**","lastModifiedDate":"2024-04-03"},{"lineNumber":467,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":468,"author":{"gitId":"teojunda"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"teojunda"},"content":"## Common mistakes","lastModifiedDate":"2024-04-03"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":474,"author":{"gitId":"teojunda"},"content":"1. **When [adding contacts](#adding-a-person-ac) or [updating contacts](#updating-a-person-uc)**,","lastModifiedDate":"2024-04-03"},{"lineNumber":475,"author":{"gitId":"teojunda"},"content":"if the command causes 2 persons in the TA Toolkit to have the same `EMAIL`, `PHONE_NUMBER`, `TELEGRAM`, or `GITHUB`,","lastModifiedDate":"2024-04-03"},{"lineNumber":476,"author":{"gitId":"kailashgautham"},"content":"the command will fail. This is because every contact should have a unique `EMAIL`, `PHONE_NUMBER`, `TELEGRAM`, and `GITHUB`.","lastModifiedDate":"2024-04-12"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":478,"author":{"gitId":"teojunda"},"content":"2. **When [updating contacts](#updating-a-person-uc), [deleting contacts](#deleting-a-person-dc)**,","lastModifiedDate":"2024-04-03"},{"lineNumber":479,"author":{"gitId":"kailashgautham"},"content":"i.e. any commands that utilise the `INDEX` parameter, the command is interacting with the wrong contact.","lastModifiedDate":"2024-04-12"},{"lineNumber":480,"author":{"gitId":"teojunda"},"content":"The `INDEX` must match the current index of the person on the displayed person list. Should you find yourself updating/ deleting the wrong person,","lastModifiedDate":"2024-04-03"},{"lineNumber":481,"author":{"gitId":"teojunda"},"content":"ensure you adhere to the index presently shown, rather than an index from a past view.","lastModifiedDate":"2024-04-03"},{"lineNumber":482,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":483,"author":{"gitId":"teojunda"},"content":"To reset the displayed person list, you can refer to the [`ls`](#listing-persons-ls) command.","lastModifiedDate":"2024-04-03"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":485,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":487,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"YuSoonZ"},"content":"| Action                                             | Format, Examples                                                                                                                                                      |","lastModifiedDate":"2024-04-02"},{"lineNumber":490,"author":{"gitId":"kailashgautham"},"content":"|----------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-08"},{"lineNumber":491,"author":{"gitId":"kailashgautham"},"content":"| [**Add**](#adding-a-person-ac)                     | `ac n/NAME c/CLASS_GROUP e/EMAIL p/PHONE_NUMBER [t/TELEGRAM] [g/GITHUB]` \u003cbr\u003e e.g., `ac c/T42 n/James Ho p/22224444 e/jamesho@example.com t/@jamesho g/jameshoGithub` |","lastModifiedDate":"2024-04-08"},{"lineNumber":492,"author":{"gitId":"teojunda"},"content":"| [**Add Note**](#adding-note-to-a-person-an)        | `an INDEX note/NOTE` \u003cbr\u003e e.g., `an 1 note/Very interested in Assembly`                                                                                               |","lastModifiedDate":"2024-04-03"},{"lineNumber":493,"author":{"gitId":"teojunda"},"content":"| [**Clear**](#clearing-all-entries-clear)           | `clear`                                                                                                                                                               |","lastModifiedDate":"2024-04-03"},{"lineNumber":494,"author":{"gitId":"teojunda"},"content":"| [**Delete**](#deleting-a-person-dc)                | `dc INDEX`\u003cbr\u003e e.g., `dc 3`                                                                                                                                           |","lastModifiedDate":"2024-04-03"},{"lineNumber":495,"author":{"gitId":"teojunda"},"content":"| [**Delete Note**](#deleting-note-from-a-person-dn) | `dn INDEX i/NOTEINDEX...`\u003cbr\u003e e.g., `dn 1 i/1,2`                                                                                                                      |","lastModifiedDate":"2024-04-03"},{"lineNumber":496,"author":{"gitId":"teojunda"},"content":"| [**Find**](#locating-persons-by-name-find)         | `find KEYWORD...`\u003cbr\u003e e.g., `find James Jake`                                                                                                                         |","lastModifiedDate":"2024-04-03"},{"lineNumber":497,"author":{"gitId":"teojunda"},"content":"| [**Help**](#viewing-help-help)                     | `help`                                                                                                                                                                |","lastModifiedDate":"2024-04-04"},{"lineNumber":498,"author":{"gitId":"teojunda"},"content":"| [**List**](#listing-persons-ls)                    | `ls [CLASS_GROUP...]` \u003cbr\u003e e.g., `ls T42`                                                                                                                             |","lastModifiedDate":"2024-04-08"},{"lineNumber":499,"author":{"gitId":"teojunda"},"content":"| [**Mark Attendance**](#marking-attendance-ma)      | `ma w/WEEK [pre/PRESENT_INDEX] [abs/ABSENT_INDEX]` \u003cbr\u003e e.g.,`ma w/1 pre/1,2 abs/3`                                                                                   |","lastModifiedDate":"2024-04-04"},{"lineNumber":500,"author":{"gitId":"teojunda"},"content":"| [**Update**](#updating-a-person-uc)                | `uc INDEX [n/NAME] [c/CLASS_GROUP] [e/EMAIL] [p/PHONE_NUMBER] [t/TELEGRAM] [g/GITHUB]` \u003cbr\u003e e.g.,`uc 2 n/James Lee e/jameslee@example.com`                            |","lastModifiedDate":"2024-04-03"},{"lineNumber":501,"author":{"gitId":"teojunda"},"content":"| [**View**](#viewing-a-person-view)                 | `view INDEX`                                                                                                                                                          |","lastModifiedDate":"2024-04-03"},{"lineNumber":502,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":503,"author":{"gitId":"teojunda"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-03"},{"lineNumber":504,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":505,"author":{"gitId":"teojunda"},"content":"## Glossary","lastModifiedDate":"2024-04-03"},{"lineNumber":506,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":507,"author":{"gitId":"kailashgautham"},"content":"* **Absent**: An attendance status to indicate that a student did not attend a class.","lastModifiedDate":"2024-04-12"},{"lineNumber":508,"author":{"gitId":"teojunda"},"content":"* **Alphanumeric**: A String consisting of only letters (a-z, A-Z) or numbers or both.","lastModifiedDate":"2024-04-03"},{"lineNumber":509,"author":{"gitId":"teojunda"},"content":"* **Command**: Commands are necessary to use TA Toolkit. A command has to be typed into the Command Box and entered to be executed.","lastModifiedDate":"2024-04-03"},{"lineNumber":510,"author":{"gitId":"teojunda"},"content":"* **Command terminal**: A command terminal is a text-based interface through which users can interact with a computer program by typing commands.","lastModifiedDate":"2024-04-03"},{"lineNumber":511,"author":{"gitId":"teojunda"},"content":"* **CLI**: Command Line Interface: A way of interacting with a computer program where the user issues commands to the","lastModifiedDate":"2024-04-03"},{"lineNumber":512,"author":{"gitId":"teojunda"},"content":"  program in the form of successive lines of text (command lines). It emphasises text-based user interaction over graphical user interfaces.","lastModifiedDate":"2024-04-03"},{"lineNumber":513,"author":{"gitId":"teojunda"},"content":"* **Email**: A unique identifier for an email account.","lastModifiedDate":"2024-04-03"},{"lineNumber":514,"author":{"gitId":"teojunda"},"content":"* **Index**: A number representing the position of an item in a list.","lastModifiedDate":"2024-04-03"},{"lineNumber":515,"author":{"gitId":"kailashgautham"},"content":"* **GitHub ID**: A unique identifier for a GitHub account. E.g. johnDoe","lastModifiedDate":"2024-04-12"},{"lineNumber":516,"author":{"gitId":"teojunda"},"content":"* **GUI**: Graphical User Interface: A mode of interacting with a computer program that relies on visual elements such as windows, icons, buttons, and menus.","lastModifiedDate":"2024-04-03"},{"lineNumber":517,"author":{"gitId":"teojunda"},"content":"* **Hard disk**: A component of a computer system responsible for long-term storage of data.","lastModifiedDate":"2024-04-03"},{"lineNumber":518,"author":{"gitId":"teojunda"},"content":"* **JSON file**: A JSON (JavaScript Object Notation) file is a structured data file format used for storing and transmitting data between the hard disk and TA Toolkit.","lastModifiedDate":"2024-04-03"},{"lineNumber":519,"author":{"gitId":"kailashgautham"},"content":"* **Note**: A String that can be associated with a person to provide additional details about them.","lastModifiedDate":"2024-04-12"},{"lineNumber":520,"author":{"gitId":"teojunda"},"content":"* **Phone number**: A sequence of digits that is dialled on a telephone to contact a person.","lastModifiedDate":"2024-04-03"},{"lineNumber":521,"author":{"gitId":"kailashgautham"},"content":"* **Present**: An attendance status to indicate that a student attended a class.","lastModifiedDate":"2024-04-12"},{"lineNumber":522,"author":{"gitId":"teojunda"},"content":"* **TA**: Teaching Assistant","lastModifiedDate":"2024-04-03"},{"lineNumber":523,"author":{"gitId":"teojunda"},"content":"* **Telegram handle**: A unique identifier for a Telegram account. E.g. @johnDoe","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"YuSoonZ":28,"kailashgautham":77,"teojunda":272,"hiivan":1,"g-tejas":4,"-":141}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eTA Toolkit\u003c/a\u003e","lastModifiedDate":"2024-02-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/index.html\" class\u003d\"nav-link\"\u003eHome\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/ay2324s2-cs2103t-f14-3/tp\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"kailashgautham":1,"-":66}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"user -[USER_COLOR]\u003e ui : \"dc 1\"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"dc 1\")","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveTaToolkit(TaToolkit)","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kailashgautham":3,"-":36}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"TaToolkit *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"Person *--\u003e ClassGroup","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"Person *--\u003e Phone","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"Person |o--\u003e Telegram","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"Person |o--\u003e Github","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kailashgautham":6,"-":13}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"skin rose","lastModifiedDate":"2023-07-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"if () then ([command commits TaToolkit])","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"    :Save TaToolkit to","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"    taToolkitStateList;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kailashgautham":3,"-":15}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"participant \":TaToolkitParser\" as TaToolkitParser LOGIC_COLOR","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"hiivan"},"content":"[-\u003e LogicManager : execute(\"dc 1\")","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"hiivan"},"content":"LogicManager -\u003e TaToolkitParser : parseCommand(\"dc 1\")","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"hiivan"},"content":"activate TaToolkitParser","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"hiivan"},"content":"TaToolkitParser -\u003e DeleteCommandParser","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"hiivan"},"content":"DeleteCommandParser --\u003e TaToolkitParser","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"hiivan"},"content":"TaToolkitParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser :","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"hiivan"},"content":"DeleteCommandParser --\u003e TaToolkitParser : d","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"hiivan"},"content":"DeleteCommandParser -[hidden]-\u003e TaToolkitParser","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"hiivan"},"content":"TaToolkitParser --\u003e LogicManager : d","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"hiivan"},"content":"deactivate TaToolkitParser","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute(m)","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : r","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kailashgautham":1,"hiivan":10,"-":59}},{"path":"docs/diagrams/EditCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"teojunda"},"content":"@startuml","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"teojunda"},"content":"skin rose","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"teojunda"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"teojunda"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"teojunda"},"content":"start","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"teojunda"},"content":":User enters command to update a Person;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"teojunda"},"content":"if () then ([command is invalid])","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"teojunda"},"content":"    :Show error message\\nfor invalid command;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"teojunda"},"content":"else ([else])","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"teojunda"},"content":"    if () then ([index is invalid])","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"teojunda"},"content":"        :Show error message\\nfor invalid index;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"teojunda"},"content":"    else ([else])","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"teojunda"},"content":"        if () then ([no field is entered])","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"teojunda"},"content":"            :Show error message\\nindicating no fields\\nenteredfor editing;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"teojunda"},"content":"        else ([else])","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"teojunda"},"content":"            if () then ([any field is invalid])","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"teojunda"},"content":"                :Show error message\\nindicating invalid field;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"teojunda"},"content":"                else ([else])","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"teojunda"},"content":"                    if () then ([updated person issame as original])","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"teojunda"},"content":"                        :Show error message indicating\\nupdated person is the same as\\nthe original person;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"teojunda"},"content":"                    else ([else])","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"teojunda"},"content":"                        if () then ([edited person contains duplicate\\nfields with another person])","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"teojunda"},"content":"                            :Show error message indicating\\n duplicated field.;","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"teojunda"},"content":"                        else ([else])","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"teojunda"},"content":"                            :Edit the details of the\\npersonin the person list;","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"teojunda"},"content":"                            :Update the person list\\nin the GUI, retaining\\nthe same filter;","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"teojunda"},"content":"                            :Show success message\\nwith person\u0027s information;","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"teojunda"},"content":"                        endif;","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"teojunda"},"content":"                    endif;","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"teojunda"},"content":"            endif;","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"teojunda"},"content":"        endif","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"teojunda"},"content":"    endif","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"teojunda"},"content":"endif","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"teojunda"},"content":"stop","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"teojunda"},"content":"@enduml","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"teojunda":38}},{"path":"docs/diagrams/EditCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"teojunda"},"content":"@startuml","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"teojunda"},"content":"!include style.puml","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"teojunda"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"teojunda"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"teojunda"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"participant \":TaToolkitParser\" as TaToolkitParser LOGIC_COLOR","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"teojunda"},"content":"participant \":EditCommandParser\" as EditCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"teojunda"},"content":"participant \"e:EditCommand\" as EditCommand LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"teojunda"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"teojunda"},"content":"end box","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"teojunda"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"teojunda"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"teojunda"},"content":"end box","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"teojunda"},"content":"[-\u003e LogicManager : execute(\"uc 1 n/Harry Potter p/98765432\")","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"teojunda"},"content":"activate LogicManager","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"LogicManager -\u003e TaToolkitParser : parseCommand(\"uc 1 n/Harry Potter p/98765432\")","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"activate TaToolkitParser","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"teojunda"},"content":"create EditCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":"TaToolkitParser -\u003e EditCommandParser","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"teojunda"},"content":"activate EditCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"EditCommandParser --\u003e TaToolkitParser","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"teojunda"},"content":"deactivate EditCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"kailashgautham"},"content":"TaToolkitParser -\u003e EditCommandParser : parse(\"uc 1 n/Harry Potter p/98765432\")","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"teojunda"},"content":"activate EditCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"teojunda"},"content":"create EditCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"teojunda"},"content":"EditCommandParser -\u003e EditCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"teojunda"},"content":"activate EditCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"teojunda"},"content":"EditCommand --\u003e EditCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"teojunda"},"content":"deactivate EditCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"kailashgautham"},"content":"EditCommandParser --\u003e TaToolkitParser","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"teojunda"},"content":"deactivate EditCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"teojunda"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"kailashgautham"},"content":"EditCommandParser -[hidden]-\u003e TaToolkitParser","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"teojunda"},"content":"destroy EditCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"kailashgautham"},"content":"TaToolkitParser --\u003e LogicManager","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"kailashgautham"},"content":"deactivate TaToolkitParser","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"teojunda"},"content":"LogicManager -\u003e EditCommand : execute()","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"teojunda"},"content":"activate EditCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"teojunda"},"content":"EditCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"teojunda"},"content":"activate Model","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"teojunda"},"content":"Model --\u003e EditCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"teojunda"},"content":"deactivate Model","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"teojunda"},"content":"EditCommand -\u003e Model : deletePerson(originalPerson)","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"teojunda"},"content":"activate Model","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"teojunda"},"content":"Model --\u003e EditCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"teojunda"},"content":"deactivate Model","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"teojunda"},"content":"EditCommand -\u003e Model : addPerson(editedPerson)","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"teojunda"},"content":"activate Model","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"teojunda"},"content":"Model --\u003e EditCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"teojunda"},"content":"deactivate Model","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"teojunda"},"content":"create CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"teojunda"},"content":"EditCommand -\u003e CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"teojunda"},"content":"activate CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"teojunda"},"content":"CommandResult --\u003e EditCommand : result","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"teojunda"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"teojunda"},"content":"EditCommand --\u003e LogicManager : result","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"teojunda"},"content":"deactivate EditCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"teojunda"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"teojunda"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"teojunda"},"content":"@enduml","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"kailashgautham":10,"teojunda":73}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"g-tejas"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyTaToolkit\" as ReadOnlyTaToolkit","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"g-tejas"},"content":"Class TaToolkit","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"g-tejas"},"content":"Class ClassGroup","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"g-tejas"},"content":"Class Email","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"g-tejas"},"content":"Class Telegram","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"g-tejas"},"content":"Class Github","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"teojunda"},"content":"Class Attendance","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"teojunda"},"content":"Class Notes","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"g-tejas"},"content":"TaToolkit .up.|\u003e ReadOnlyTaToolkit","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"g-tejas"},"content":"Model .left.\u003e ReadOnlyTaToolkit","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"g-tejas"},"content":"ModelManager -left-\u003e \"1\" TaToolkit","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"g-tejas"},"content":"TaToolkit *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"g-tejas"},"content":"Person *--\u003e ClassGroup","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"teojunda"},"content":"Person |o--\u003e Phone","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"g-tejas"},"content":"Person |o--\u003e Telegram","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"g-tejas"},"content":"Person |o--\u003e Github","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"teojunda"},"content":"Person *--\u003e Attendance","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"teojunda"},"content":"Person *--\u003e Notes","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":55,"author":{"gitId":"g-tejas"},"content":"Name -[hidden]right-\u003e ClassGroup","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"g-tejas"},"content":"ClassGroup -[hidden]right-\u003e Email","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"g-tejas"},"content":"Email -[hidden]right-\u003e Phone","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"g-tejas"},"content":"Phone -[hidden]right-\u003e Telegram","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"g-tejas"},"content":"Telegram -[hidden]right-\u003e Github","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"teojunda"},"content":"Github -[hidden]right-\u003e Attendance","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"teojunda"},"content":"Attendance -[hidden]right-\u003e Notes","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"teojunda":7,"g-tejas":18,"-":39}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"Class TaToolkitParser","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":"HiddenOutside ..\u003e TaToolkitParser","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":"TaToolkitParser .down.\u003e XYZCommandParser: \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : \u003c\u003ccreate\u003e\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"TaToolkitParser ..\u003e Command : \u003c\u003cuse\u003e\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"kailashgautham":4,"-":34}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"package \"TaToolkit Storage\" #F4F6F6{","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nTaToolkitStorage\" as TaToolkitStorage","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"Class JsonTaToolkitStorage","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"Class JsonSerializableTaToolkit","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"kailashgautham"},"content":"StorageManager -up-\u003e \"1\" TaToolkitStorage","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"kailashgautham"},"content":"Storage -right-|\u003e TaToolkitStorage","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"kailashgautham"},"content":"JsonTaToolkitStorage .up.|\u003e TaToolkitStorage","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"kailashgautham"},"content":"JsonTaToolkitStorage ..\u003e JsonSerializableTaToolkit","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"kailashgautham"},"content":"JsonSerializableTaToolkit --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kailashgautham":9,"-":32}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"hiivan"},"content":"Class SidePanel","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"teojunda"},"content":"MainWindow *-down-\u003e \"1\" SidePanel","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"hiivan"},"content":"SidePanel --|\u003e UiPart","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"teojunda":1,"hiivan":2,"-":60}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"    class State1 as \"\u003cu\u003eab0:TaToolkit\u003c/u\u003e\"","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"    class State2 as \"\u003cu\u003eab1:TaToolkit\u003c/u\u003e\"","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"    class State3 as \"\u003cu\u003eab2:TaToolkit\u003c/u\u003e\"","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kailashgautham":3,"-":18}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"    class State1 as \"\u003cu\u003eab0:TaToolkit\u003c/u\u003e\"","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"    class State2 as \"\u003cu\u003eab1:TaToolkit\u003c/u\u003e\"","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"    class State3 as \"\u003cu\u003eab2:TaToolkit\u003c/u\u003e\"","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kailashgautham":3,"-":20}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"    class State1 as \"\u003cu\u003eab0:TaToolkit\u003c/u\u003e\"","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"    class State2 as \"\u003cu\u003eab1:TaToolkit\u003c/u\u003e\"","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"    class State3 as \"\u003cu\u003eab2:TaToolkit\u003c/u\u003e\"","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kailashgautham":3,"-":18}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"    class State1 as \"\u003cu\u003eab0:TaToolkit\u003c/u\u003e\"","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"    class State2 as \"\u003cu\u003eab1:TaToolkit\u003c/u\u003e\"","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"    class State3 as \"\u003cu\u003eab2:TaToolkit\u003c/u\u003e\"","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kailashgautham":3,"-":18}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"    class State1 as \"\u003cu\u003eab0:TaToolkit\u003c/u\u003e\"","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"    class State2 as \"\u003cu\u003eab1:TaToolkit\u003c/u\u003e\"","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"    class State3 as \"\u003cu\u003eab2:TaToolkit\u003c/u\u003e\"","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kailashgautham":3,"-":18}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2023-07-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"    class State1 as \"\u003cu\u003eab0:TaToolkit\u003c/u\u003e\"","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"    class State2 as \"\u003cu\u003eab1:TaToolkit\u003c/u\u003e\"","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"    class State3 as \"\u003cu\u003eab3:TaToolkit\u003c/u\u003e\"","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"note right on link: State ab2 deleted.","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kailashgautham":3,"-":19}},{"path":"docs/diagrams/UndoSequenceDiagram-Logic.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"participant \":TaToolkitParser\" as TaToolkitParser LOGIC_COLOR","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"LogicManager -\u003e TaToolkitParser : parseCommand(undo)","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"activate TaToolkitParser","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"TaToolkitParser -\u003e UndoCommand","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":"UndoCommand --\u003e TaToolkitParser","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"TaToolkitParser --\u003e LogicManager : u","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"kailashgautham"},"content":"deactivate TaToolkitParser","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"kailashgautham"},"content":"UndoCommand -\u003e Model : undoTaToolkit()","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kailashgautham":8,"-":38}},{"path":"docs/diagrams/UndoSequenceDiagram-Model.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"participant \":VersionedTaToolkit\" as VersionedTaToolkit MODEL_COLOR","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"[-\u003e Model : undoTaToolkit()","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2024-02-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"Model -\u003e VersionedTaToolkit : undo()","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"activate VersionedTaToolkit","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"VersionedTaToolkit -\u003e VersionedTaToolkit :resetData(ReadOnlyTaToolkit)","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"VersionedTaToolkit --\u003e Model :","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"deactivate VersionedTaToolkit","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"[\u003c-- Model","lastModifiedDate":"2024-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2024-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"kailashgautham":7,"-":16}},{"path":"docs/diagrams/ViewCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YuSoonZ"},"content":"@startuml","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"YuSoonZ"},"content":"skin rose","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"YuSoonZ"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"YuSoonZ"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"YuSoonZ"},"content":"start","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"YuSoonZ"},"content":":User enters command to view a Person;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"YuSoonZ"},"content":"if () then ([command is invalid])","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"YuSoonZ"},"content":"    :Show error message\\nfor invalid command;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"YuSoonZ"},"content":"else ([else])","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"YuSoonZ"},"content":"        if () then ([no field is entered])","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"YuSoonZ"},"content":"            :Show error message\\nindicating no fields\\nenteredfor viewing;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"YuSoonZ"},"content":"            else ([else])","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"YuSoonZ"},"content":"                if () then ([index given is invalid])","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"YuSoonZ"},"content":"                    :Show error message indicating\\ninvalid index;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"YuSoonZ"},"content":"                    else ([else])","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"YuSoonZ"},"content":"                        :Show success message\\nwith person\u0027s information;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"hiivan"},"content":"                        :Display Person\u0027s details on\\nside panel;","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"YuSoonZ"},"content":"                    endif;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"YuSoonZ"},"content":"                endif;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"YuSoonZ"},"content":"            endif;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"YuSoonZ"},"content":"stop","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"YuSoonZ"},"content":"@enduml","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"YuSoonZ":23,"hiivan":1}},{"path":"docs/diagrams/ViewCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YuSoonZ"},"content":"@startuml","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"YuSoonZ"},"content":"!include style.puml","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"YuSoonZ"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"YuSoonZ"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"YuSoonZ"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"participant \":TaToolkitParser\" as TaToolkitParser LOGIC_COLOR","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"YuSoonZ"},"content":"participant \":ViewCommandParser\" as ViewCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"YuSoonZ"},"content":"participant \"v:ViewCommand\" as ViewCommand LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"YuSoonZ"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"YuSoonZ"},"content":"end box","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"YuSoonZ"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"YuSoonZ"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"YuSoonZ"},"content":"end box","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"YuSoonZ"},"content":"[-\u003e LogicManager : execute(\"view 1\")","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"YuSoonZ"},"content":"activate LogicManager","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"LogicManager -\u003e TaToolkitParser : parseCommand(\"view 1\")","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"activate TaToolkitParser","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"YuSoonZ"},"content":"create ViewCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":"TaToolkitParser -\u003e ViewCommand","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"YuSoonZ"},"content":"activate ViewCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"ViewCommand --\u003e TaToolkitParser : v","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"YuSoonZ"},"content":"deactivate ViewCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"kailashgautham"},"content":"TaToolkitParser --\u003e LogicManager : v","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"kailashgautham"},"content":"deactivate TaToolkitParser","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"YuSoonZ"},"content":"LogicManager -\u003e ViewCommand : execute()","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"YuSoonZ"},"content":"activate ViewCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"YuSoonZ"},"content":"create CommandResult","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"YuSoonZ"},"content":"ViewCommand -\u003e CommandResult","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"YuSoonZ"},"content":"activate CommandResult","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"YuSoonZ"},"content":"CommandResult --\u003e ViewCommand : result","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"YuSoonZ"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"YuSoonZ"},"content":"ViewCommand --\u003e LogicManager : result","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"YuSoonZ"},"content":"deactivate ViewCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"YuSoonZ"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"YuSoonZ"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"YuSoonZ"},"content":"@enduml@enduml","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"YuSoonZ":41,"kailashgautham":7}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"Participant \":TaToolkitParser\" as abp LOGIC_COLOR","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ecp -\u003e ec ++: index, editPersonDescriptor","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"kailashgautham":1,"-":21}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"hiivan"},"content":"# TA Toolkit","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-F14-3/tp/workflows/Java%20CI/badge.svg)](https://github.com//AY2324S2-CS2103T-F14-3/tp/actions)","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-F14-3/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2324S2-CS2103T-F14-3/tp)","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"teojunda"},"content":"![Ui](images/ActualUi.png)","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"hiivan"},"content":"**TA Toolkit is a desktop app for managing students.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"hiivan"},"content":"* If you are interested in using TA Toolkit, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"hiivan"},"content":"* If you are interested about developing TA Toolkit, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kailashgautham":2,"teojunda":1,"hiivan":4,"-":14}},{"path":"docs/team/g-tejas.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"g-tejas"},"content":"---","lastModifiedDate":"2024-04-09"},{"lineNumber":2,"author":{"gitId":"g-tejas"},"content":"  layout: default.md","lastModifiedDate":"2024-04-09"},{"lineNumber":3,"author":{"gitId":"g-tejas"},"content":"  title: \"Tejas Garrepally\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-04-09"},{"lineNumber":4,"author":{"gitId":"g-tejas"},"content":"---","lastModifiedDate":"2024-04-09"},{"lineNumber":5,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":6,"author":{"gitId":"g-tejas"},"content":"### Project: TaToolkit","lastModifiedDate":"2024-04-09"},{"lineNumber":7,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":8,"author":{"gitId":"g-tejas"},"content":"TaToolkit is a desktop application used for teaching assistants to manage their students\u0027 personal details and other information related to their classroom. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 28 kLoC.","lastModifiedDate":"2024-04-09"},{"lineNumber":9,"author":{"gitId":"g-tejas"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-04-09"},{"lineNumber":10,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":11,"author":{"gitId":"g-tejas"},"content":"* **New Feature**: Added the ability to mark the attendance of students in the TaToolkit","lastModifiedDate":"2024-04-09"},{"lineNumber":12,"author":{"gitId":"g-tejas"},"content":"  * What it does: Allows the user to mark the attendance of students in the class. Attendance is marked negatively, but students can be marked as present with the `pre/` prefix","lastModifiedDate":"2024-04-09"},{"lineNumber":13,"author":{"gitId":"g-tejas"},"content":"  * Justification: This feature is crucial for the product as it allows TAs to keep track of students\u0027 attendance in the class, with a simple command.","lastModifiedDate":"2024-04-09"},{"lineNumber":14,"author":{"gitId":"g-tejas"},"content":"  * Highlights: This feature is the hallmark of the TaToolkit, and allows TAs to get insights into the students\u0027 attendance patterns from the side panel, either by individual students or by class groups.","lastModifiedDate":"2024-04-09"},{"lineNumber":15,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":16,"author":{"gitId":"g-tejas"},"content":"* **Modified Feature**: Added the ability to list specific classes in the TaToolkit with class groups","lastModifiedDate":"2024-04-09"},{"lineNumber":17,"author":{"gitId":"g-tejas"},"content":"  * What it does: Allows the user to list students by one or more class groups, which is handled with prefix matching.","lastModifiedDate":"2024-04-09"},{"lineNumber":18,"author":{"gitId":"g-tejas"},"content":"  * Justification: This feature is crucial as it allows TAs to quickly find class groups if they manage multiple classes.","lastModifiedDate":"2024-04-09"},{"lineNumber":19,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":20,"author":{"gitId":"g-tejas"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s2.github.io/tp-dashboard/?search\u003dg-tejas\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2024-02-23\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dg-tejas\u0026tabRepo\u003dAY2324S2-CS2103T-F14-3/tp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2024-04-09"},{"lineNumber":21,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":22,"author":{"gitId":"g-tejas"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-04-09"},{"lineNumber":23,"author":{"gitId":"g-tejas"},"content":"  * Updated the GUI color scheme (Pull requests [\\#108](https://github.com/AY2324S2-CS2103T-F14-3/tp/pull/108))","lastModifiedDate":"2024-04-09"},{"lineNumber":24,"author":{"gitId":"g-tejas"},"content":"  * Wrote additional tests for new attendance tracking feature and new list classes feature (Pull requests [\\#51](https://github.com/AY2324S2-CS2103T-F14-3/tp/pull/51))","lastModifiedDate":"2024-04-09"},{"lineNumber":25,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":26,"author":{"gitId":"g-tejas"},"content":"* **Documentation**:","lastModifiedDate":"2024-04-09"},{"lineNumber":27,"author":{"gitId":"g-tejas"},"content":"  * User Guide:","lastModifiedDate":"2024-04-09"},{"lineNumber":28,"author":{"gitId":"g-tejas"},"content":"    * Updated the UG to remove traces of AB3","lastModifiedDate":"2024-04-09"},{"lineNumber":29,"author":{"gitId":"g-tejas"},"content":"    * Updated the UG with new command words","lastModifiedDate":"2024-04-09"},{"lineNumber":30,"author":{"gitId":"g-tejas"},"content":"  * Developer Guide:","lastModifiedDate":"2024-04-09"},{"lineNumber":31,"author":{"gitId":"g-tejas"},"content":"    * Updated UML diagrams to reflect the latest changes in the codebase [\\#53](https://github.com/AY2324S2-CS2103T-F14-3/tp/pull/53)","lastModifiedDate":"2024-04-09"},{"lineNumber":32,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":33,"author":{"gitId":"g-tejas"},"content":"* **Community**:","lastModifiedDate":"2024-04-09"},{"lineNumber":34,"author":{"gitId":"g-tejas"},"content":"  * 40 PRs reviewed (with non-trivial review comments): [\\#55](https://github.com/AY2324S2-CS2103T-F14-3/tp/pull/55), [\\#43](https://github.com/AY2324S2-CS2103T-F14-3/tp/pull/43)","lastModifiedDate":"2024-04-09"},{"lineNumber":35,"author":{"gitId":"g-tejas"},"content":"  * Contributed to forum discussions (examples: [408](https://github.com/nus-cs2103-AY2324S2/forum/issues/408))","lastModifiedDate":"2024-04-09"},{"lineNumber":36,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":37,"author":{"gitId":"g-tejas"},"content":"* **Tools**:","lastModifiedDate":"2024-04-09"},{"lineNumber":38,"author":{"gitId":"g-tejas"},"content":"  * Integrated a third party workflow (Telegram bot) to the project ([\\#34](https://github.com/AY2324S2-CS2103T-F14-3/tp/pull/34))","lastModifiedDate":"2024-04-09"},{"lineNumber":39,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-09"}],"authorContributionMap":{"g-tejas":39}},{"path":"docs/team/hiivan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hiivan"},"content":"---","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"hiivan"},"content":"layout: default.md","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"hiivan"},"content":"title: \"Ivan\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"hiivan"},"content":"---","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"hiivan"},"content":"# Project: TaToolkit","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"hiivan"},"content":"TaToolkit is a desktop application used for teaching assistants to manage their students\u0027 personal details and other information related to their classroom. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 28 kLoC.","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"hiivan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"hiivan"},"content":"## Dynamic Side Panel Integration","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"hiivan"},"content":"The introduction of the side panel within the main window is a cornerstone of our user interface, designed to provide detailed insights contextually based on user actions. It dynamically toggles between displaying individual student details and a comprehensive attendance view, offering tailored information that enhances decision-making and interaction efficiency.","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"hiivan"},"content":"### View Person Details","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"hiivan"},"content":"When the `view` command is executed, the side panel transitions to showcase detailed information about a selected student, including their name, class group, contact number, Telegram handle and Github username. This feature ensures that users have immediate access to comprehensive student profiles at their fingertips.","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"hiivan"},"content":"Utilizing JavaFX\u0027s ObservableList and property bindings, I ensured that any changes to a student\u0027s details are immediately propagated to the UI. This is crucial for maintaining data accuracy, especially in scenarios where student information might be modified through other parts of the application such as the `uc` update person command and the `dn` delete note command.","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"hiivan"},"content":"### Attendance View","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"hiivan"},"content":"In response to the `ls` or `ls CLASS_GROUP` list command, the side panel morphs to present an attendance summary, highlighting the weekly attendance record of all the students in that list. This transformation allows TAs to quickly view the attendance of a particular class or an entire cohort, all within the same intuitive interface.","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"hiivan"},"content":"The backbone of this feature is the innovative use of `ObservableList` within the `ModelManager` class, coupled with event listeners in `SidePanel.java`. This setup ensures that the attendance list in the side panel is updated in real time in response to any attendance marking actions performed elsewhere in the application. This real-time update mechanism safeguards against stale or inaccurate data being displayed to the user.","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"hiivan"},"content":"## Intelligent Command Recognition","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"hiivan"},"content":"By leveraging the `lastSidePanelCommand`, I\u0027ve introduced a mechanism that retains context on the last executed side panel related command (be it `None`, `ViewCommand`, or `ListCommand`). This innovative approach enables the side panel to intelligently display relevant information (individual details or attendance summary) based on the user\u0027s last interaction, promoting a fluid, contextual user experience.","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"hiivan"},"content":"## Adherence to MVC Architecture","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"hiivan"},"content":"The project\u0027s design strictly follows the Model-View-Controller (MVC) architecture, ensuring a clear separation of concerns. This architectural choice enhances maintainability, facilitates easier updates, and allows for more straightforward debugging. By compartmentalizing the application logic, UI, and data model, I\u0027ve ensured that each component can evolve independently, promoting scalability and flexibility.","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"hiivan"},"content":"## Other Links","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"hiivan"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2024-02-23\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dhiivan\u0026tabRepo\u003dAY2324S2-CS2103T-F14-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"hiivan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"hiivan"},"content":"  * Updated the NordTheme.css to include more UI customizations (Pull requests [\\#112](https://github.com/AY2324S2-CS2103T-F14-3/tp/pull/112))","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"hiivan"},"content":"  * Wrote additional tests for MarkCommand (Pull requests [\\#114](https://github.com/AY2324S2-CS2103T-F14-3/tp/pull/114))","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"hiivan"},"content":"* **Documentation**:","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"hiivan"},"content":"  * User Guide:","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"hiivan"},"content":"    * Updated steps on how to reproduce side panel","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"hiivan"},"content":"  * Developer Guide:","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"hiivan"},"content":"    * Updated UML diagrams for UIClassDiagram and View Command to reflect the new implementation of a side panel [\\#97](https://github.com/AY2324S2-CS2103T-F14-3/tp/pull/97)","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"hiivan"},"content":"* **Community**:","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"hiivan"},"content":"  * 29 PRs reviewed: ([link](https://github.com/AY2324S2-CS2103T-F14-3/tp/pulls?q\u003dis%3Apr+reviewed-by%3Ahiivan+-author%3Ahiivan+))","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"hiivan":47}},{"path":"docs/team/kailashgautham.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"---","lastModifiedDate":"2024-02-24"},{"lineNumber":2,"author":{"gitId":"kailashgautham"},"content":"layout: default.md","lastModifiedDate":"2024-02-24"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"title: \"Kailash Gautham\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-02-24"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"---","lastModifiedDate":"2024-02-24"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"### Project: TaToolkit","lastModifiedDate":"2024-04-06"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":8,"author":{"gitId":"teojunda"},"content":"TaToolkit is a desktop application used for teaching assistants to manage their students\u0027 personal details and other information related to their classroom. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 28 kLoC.","lastModifiedDate":"2024-04-08"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-02-24"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"* **Modified Feature**: Changed the `add` command to suit the purposes of TA Toolkit better.","lastModifiedDate":"2024-04-06"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"  * What it does: allows the user to add a student to the list of students.","lastModifiedDate":"2024-04-06"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"  * Justification: The original `add` command was designed for a different purpose. I modified it to suit the needs of TA Toolkit, including new student details such as a Telegram ID, GitHub ID, and ClassGroup Name.","lastModifiedDate":"2024-04-06"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-02-24"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"  * Credits: The code that I modified was part of an existing feature from the AB3 brownfield project that was forked to create the TA Toolkit.","lastModifiedDate":"2024-04-06"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"* **Modified Feature**: Improved the `mark` command to accept attendees as well as absentees in a tutorial class.","lastModifiedDate":"2024-04-06"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"* What it does: allows the user to mark students as present or absent in a tutorial class.","lastModifiedDate":"2024-04-06"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"* Justification: The original `mark` command was designed to mark students as absent only. I modified it to allow marking students as present as well.","lastModifiedDate":"2024-04-06"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"* Highlights: This enhancement required changes to the existing `mark` command and the addition of new prefixes `pre/` and `abs/`. It also required changes to the storage of student data.","lastModifiedDate":"2024-04-06"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":"* Credits: The code that I modified was part of an existing feature created by Tejas, my teammate.","lastModifiedDate":"2024-04-06"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2024-02-23\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dkailashgautham\u0026tabRepo\u003dAY2324S2-CS2103T-F14-3/tp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2024-04-06"},{"lineNumber":25,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":26,"author":{"gitId":"kailashgautham"},"content":"* **Project management**:","lastModifiedDate":"2024-02-24"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"  * Managed release `v1.2` and `v1.3` (2 releases) on GitHub","lastModifiedDate":"2024-04-06"},{"lineNumber":28,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":29,"author":{"gitId":"kailashgautham"},"content":"* **Other enhancements**:","lastModifiedDate":"2024-04-06"},{"lineNumber":30,"author":{"gitId":"kailashgautham"},"content":"  * Added persistence for attendance data (Pull request [\\#100](https://github.com/AY2324S2-CS2103T-F14-3/tp/pull/100)","lastModifiedDate":"2024-04-06"},{"lineNumber":31,"author":{"gitId":"kailashgautham"},"content":"  * Updated the GUI styling for class/groups (Pull request [\\#101](https://github.com/AY2324S2-CS2103T-F14-3/tp/pull/101)","lastModifiedDate":"2024-04-06"},{"lineNumber":32,"author":{"gitId":"kailashgautham"},"content":"  * Removed all references to the previous application\u0027s commands and terminologies (Pull request [\\#106](https://github.com/AY2324S2-CS2103T-F14-3/tp/pull/106)","lastModifiedDate":"2024-04-06"},{"lineNumber":33,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":34,"author":{"gitId":"kailashgautham"},"content":"* **Documentation**:","lastModifiedDate":"2024-02-24"},{"lineNumber":35,"author":{"gitId":"kailashgautham"},"content":"  * User Guide:","lastModifiedDate":"2024-02-24"},{"lineNumber":36,"author":{"gitId":"kailashgautham"},"content":"    * Added documentation for the features `add`[\\#39](https://github.com/AY2324S2-CS2103T-F14-3/tp/pull/39)","lastModifiedDate":"2024-04-06"},{"lineNumber":37,"author":{"gitId":"kailashgautham"},"content":"    * Did cosmetic tweaks to existing documentation of feature `list`: [\\#74](https://github.com/AY2324S2-CS2103T-F14-3/tp/pull/159)","lastModifiedDate":"2024-04-06"},{"lineNumber":38,"author":{"gitId":"kailashgautham"},"content":"    * Added changes to the Java installation instructions, yellow label information, and the e-mail address field format instructions: [\\#74](https://github.com/AY2324S2-CS2103T-F14-3/tp/pull/159)","lastModifiedDate":"2024-04-06"},{"lineNumber":39,"author":{"gitId":"kailashgautham"},"content":"  * Developer Guide:","lastModifiedDate":"2024-02-24"},{"lineNumber":40,"author":{"gitId":"kailashgautham"},"content":"    * Modified the links that led to the previous repository, and modified the command keywords to reflect any changes that were made in our project.","lastModifiedDate":"2024-04-06"},{"lineNumber":41,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-02-24"},{"lineNumber":42,"author":{"gitId":"kailashgautham"},"content":"* **Community**:","lastModifiedDate":"2024-02-24"},{"lineNumber":43,"author":{"gitId":"kailashgautham"},"content":"  * Reviewed 46 PRs from my team members.","lastModifiedDate":"2024-04-06"}],"authorContributionMap":{"kailashgautham":42,"teojunda":1}},{"path":"docs/team/teojunda.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"teojunda"},"content":"---","lastModifiedDate":"2024-03-02"},{"lineNumber":2,"author":{"gitId":"teojunda"},"content":"layout: default.md","lastModifiedDate":"2024-03-02"},{"lineNumber":3,"author":{"gitId":"teojunda"},"content":"title: \"Axel\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-03-02"},{"lineNumber":4,"author":{"gitId":"teojunda"},"content":"---","lastModifiedDate":"2024-03-02"},{"lineNumber":5,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"### Project: TaToolkit Level 3","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":8,"author":{"gitId":"teojunda"},"content":"TaToolkit is a desktop application used for teaching assistants to manage their students\u0027 personal details and other information related to their classroom. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 28 kLoC.","lastModifiedDate":"2024-04-08"},{"lineNumber":9,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":10,"author":{"gitId":"teojunda"},"content":"* **Technical Skills**","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"teojunda"},"content":"    * Object-Oriented Programming","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"teojunda"},"content":"    * Software Design Patterns","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"teojunda"},"content":"    * Continuous Integration/ Continuous Delivery","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"teojunda"},"content":"    * Git Version Control","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"teojunda"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-02"},{"lineNumber":17,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":18,"author":{"gitId":"teojunda"},"content":"* **Modified Feature**: Changed the `editCommand` to suit the purposes of TA Toolkit better.","lastModifiedDate":"2024-04-08"},{"lineNumber":19,"author":{"gitId":"teojunda"},"content":"    * What it does: allows the user to modify the fields in a student contact (Class group, Email, Phone number, Telegram, Github).","lastModifiedDate":"2024-04-08"},{"lineNumber":20,"author":{"gitId":"teojunda"},"content":"    * Justification: This feature improves the product significantly because a user can update student contact information to be correct.","lastModifiedDate":"2024-04-08"},{"lineNumber":21,"author":{"gitId":"teojunda"},"content":"    * Highlights and challenges:","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"teojunda"},"content":"        * Integration Challenge: Integrating the modified editCommand into the existing architecture presented a significant challenge, particularly ensuring compatibility with other related commands, such as the viewCommand.","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"teojunda"},"content":"        * Solution: To address this, I meticulously analyzed the existing codebase to identify dependencies and potential conflicts. By creating a series of unit tests, I was able to ensure that the updated editCommand functioned seamlessly within the larger ecosystem without disrupting existing functionalities.","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"teojunda"},"content":"        * Design Challenge: Adapting the command to fit into the AB3 project\u0027s established design architecture without excessive modifications required careful planning and execution.","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"teojunda"},"content":"        * Solution: I leveraged design patterns that were already familiar within the framework, such as Command and Observer patterns, ensuring that the enhancements were both effective and minimally invasive. This approach allowed for a smoother integration and improved maintainability.","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"teojunda"},"content":"    * Credits: The code was part of an existing feature from the AB3 brownfield project.","lastModifiedDate":"2024-04-08"},{"lineNumber":27,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":28,"author":{"gitId":"teojunda"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"teojunda"},"content":"* **New Feature**: Added a `deleteNoteCommand` to delete notes from a student contact.","lastModifiedDate":"2024-04-08"},{"lineNumber":31,"author":{"gitId":"teojunda"},"content":"  * What it does: allows the user to delete notes from a student contact.","lastModifiedDate":"2024-04-08"},{"lineNumber":32,"author":{"gitId":"teojunda"},"content":"  * Justification: This feature improves the product significantly because a user can update delete irrelevant notes to keep only information that is important.","lastModifiedDate":"2024-04-08"},{"lineNumber":33,"author":{"gitId":"teojunda"},"content":"  * Highlights and challenges:","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"teojunda"},"content":"      * Integration Challenge: Implementing the deleteNoteCommand required careful consideration to ensure it seamlessly integrates with existing commands like the addNoteCommand.","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"teojunda"},"content":"      * Solution: To achieve a smooth integration and prevent conflicts, I conducted a thorough review of the interaction between note-related commands. I then implemented a robust testing protocol that simulated various usage scenarios to detect and fix any issues early in the development process.","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"teojunda"},"content":"      * Design Challenge: The feature had to be designed in a way that it complemented the existing command structure and did not introduce bugs or usability issues.","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"teojunda"},"content":"      * Solution: I adopted a modular design approach, allowing the deleteNoteCommand to function independently yet cohesively within the system’s broader framework. This was achieved by encapsulating the command logic and ensuring it adhered to the principles of high cohesion and low coupling, thus enhancing the maintainability and scalability of the codebase.","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":39,"author":{"gitId":"teojunda"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":41,"author":{"gitId":"teojunda"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s2.github.io/tp-dashboard/?search\u003df14\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2024-02-23\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dteojunda\u0026tabRepo\u003dAY2324S2-CS2103T-F14-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2024-04-08"},{"lineNumber":42,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":43,"author":{"gitId":"teojunda"},"content":"* **Project management**:","lastModifiedDate":"2024-03-02"},{"lineNumber":44,"author":{"gitId":"teojunda"},"content":"    * Integrated CodeCov into project repository","lastModifiedDate":"2024-04-08"},{"lineNumber":45,"author":{"gitId":"teojunda"},"content":"    * Set up MarkBind project website","lastModifiedDate":"2024-04-08"},{"lineNumber":46,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":47,"author":{"gitId":"teojunda"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":49,"author":{"gitId":"teojunda"},"content":"* **Other enhancements**:","lastModifiedDate":"2024-04-08"},{"lineNumber":50,"author":{"gitId":"teojunda"},"content":"    * Implemented sorted order of contacts in TA Toolkit (Pull request [\\#43](https://github.com/AY2324S2-CS2103T-F14-3/tp/pull/43))","lastModifiedDate":"2024-04-08"},{"lineNumber":51,"author":{"gitId":"teojunda"},"content":"    * Ensured side panel display would correct update after every relevant command (Pull request [\\#65](https://github.com/AY2324S2-CS2103T-F14-3/tp/pull/65/files))","lastModifiedDate":"2024-04-08"},{"lineNumber":52,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":53,"author":{"gitId":"teojunda"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":54,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":55,"author":{"gitId":"teojunda"},"content":"* **Documentation**:","lastModifiedDate":"2024-03-02"},{"lineNumber":56,"author":{"gitId":"teojunda"},"content":"    * User Guide:","lastModifiedDate":"2024-03-02"},{"lineNumber":57,"author":{"gitId":"teojunda"},"content":"        * Added documentation for the feature `MarkCommand` (Pull request [\\#118](https://github.com/AY2324S2-CS2103T-F14-3/tp/pull/118))","lastModifiedDate":"2024-04-08"},{"lineNumber":58,"author":{"gitId":"teojunda"},"content":"        * Added introduction, interface walkthrough, parameter guidelines, example images, and glossary (Pull request [\\#115](https://github.com/AY2324S2-CS2103T-F14-3/tp/pull/115))","lastModifiedDate":"2024-04-08"},{"lineNumber":59,"author":{"gitId":"teojunda"},"content":"    * Developer Guide:","lastModifiedDate":"2024-03-02"},{"lineNumber":60,"author":{"gitId":"teojunda"},"content":"        * Added use cases and user stories (Pull requests [\\#30](https://github.com/AY2324S2-CS2103T-F14-3/tp/pull/30), [\\#37](https://github.com/AY2324S2-CS2103T-F14-3/tp/pull/37))","lastModifiedDate":"2024-04-08"},{"lineNumber":61,"author":{"gitId":"teojunda"},"content":"        * Included implementation details of Edit Command (Pull request [\\#57](https://github.com/AY2324S2-CS2103T-F14-3/tp/pull/57))","lastModifiedDate":"2024-04-08"},{"lineNumber":62,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-02"},{"lineNumber":63,"author":{"gitId":"teojunda"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-12"},{"lineNumber":64,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":65,"author":{"gitId":"teojunda"},"content":"* **Community**:","lastModifiedDate":"2024-03-02"},{"lineNumber":66,"author":{"gitId":"teojunda"},"content":"    * 36 PRs reviewed (examples: [\\#38](https://github.com/AY2324S2-CS2103T-F14-3/tp/pull/38), [\\#55](https://github.com/AY2324S2-CS2103T-F14-3/tp/pull/55), [\\#112](https://github.com/AY2324S2-CS2103T-F14-3/tp/pull/112))","lastModifiedDate":"2024-04-08"},{"lineNumber":67,"author":{"gitId":"teojunda"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](https://github.com/AY2324S2-CS2103T-T16-1/tp/issues/157), [2](https://github.com/teojunda/ped/issues/11), [3](https://github.com/teojunda/ped/issues/4))","lastModifiedDate":"2024-04-08"}],"authorContributionMap":{"kailashgautham":1,"teojunda":66}},{"path":"docs/team/yusoonz.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YuSoonZ"},"content":"---","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"YuSoonZ"},"content":"layout: default.md","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"YuSoonZ"},"content":"title: \"Yu Soon\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"YuSoonZ"},"content":"---","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"### Project: TaToolkit Level 3","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"YuSoonZ"},"content":"The TaToolkit - Level 3 is a sophisticated desktop application designed to aid in the instruction of Software Engineering principles. It offers a command-line interface (CLI) for efficient task handling and a graphical user interface (GUI) using JavaFX for an enhanced user experience. Comprising approximately 10,000 lines of Java code, it serves as a comprehensive tool for educational facilitators, especially teaching assistants (TAs), to manage student interactions more effectively.","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"YuSoonZ"},"content":"### Technical Skills","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"YuSoonZ"},"content":" * Java Programming: Proficiency in Java to implement complex functionalities.","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"YuSoonZ"},"content":" * JavaFX: Utilization of JavaFX for GUI development.","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"YuSoonZ"},"content":" * Software Engineering Principles: Applied principles like OOP, MVC, and CI/CD during development.","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"YuSoonZ"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"YuSoonZ"},"content":"* **New Feature**: Added the ability to add/delete notes for each student in TaToolkit.","lastModifiedDate":"2024-04-08"},{"lineNumber":18,"author":{"gitId":"YuSoonZ"},"content":"  * What it does: Allows the user to add customized notes to each student of their choice.","lastModifiedDate":"2024-04-08"},{"lineNumber":19,"author":{"gitId":"YuSoonZ"},"content":"  * Justification: This feature significantly improves the product, as it helps ease the mental burden of TAs in CS2100. It allows them to add unique notes to each student, reminding themselves of what they wish to take note of regarding the student.","lastModifiedDate":"2024-04-08"},{"lineNumber":20,"author":{"gitId":"YuSoonZ"},"content":"  * Highlights: This enhancement affects existing commands. It also had to fit into the wider design architecture to ensure it worked with other commands like the `viewCommand`.","lastModifiedDate":"2024-04-08"},{"lineNumber":21,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"YuSoonZ"},"content":"* **New Feature**: Added the ability to view students in TaToolkit.","lastModifiedDate":"2024-04-08"},{"lineNumber":23,"author":{"gitId":"YuSoonZ"},"content":"  * What it does: Allows the user to view a student of their choice stored within TaToolkit.","lastModifiedDate":"2024-04-08"},{"lineNumber":24,"author":{"gitId":"YuSoonZ"},"content":"  * Justification: This feature significantly improves the product as it allows TAs to view and retrieve their students\u0027 details, such as Telegram, email, or GitHub IDs, should they need to contact them quickly.","lastModifiedDate":"2024-04-08"},{"lineNumber":25,"author":{"gitId":"YuSoonZ"},"content":"  * Highlights: This enhancement affects existing commands. It also had to fit into the wider design architecture to ensure it worked with other commands like the `editCommand`.","lastModifiedDate":"2024-04-08"},{"lineNumber":26,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"YuSoonZ"},"content":"### Challenges and Problem-Solving","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"YuSoonZ"},"content":" * Integration with Existing Systems: Ensured new features were compatible with existing commands and conformed to the broader system architecture.","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"YuSoonZ"},"content":" * User-Centric Design: Focused on ease of use for the TAs, aligning with the mental model of users to minimize cognitive load.","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"YuSoonZ"},"content":"### Results and Impact","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"YuSoonZ"},"content":" * Improved the mental workload of TAs by streamlining the note-taking process.","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"YuSoonZ"},"content":" * Enhanced the accessibility of student information, leading to quicker and more efficient TA-student communication.","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"YuSoonZ"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s2.github.io/tp-dashboard/?search\u003dYuSoonZ\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2024-02-23)","lastModifiedDate":"2024-04-08"},{"lineNumber":36,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"YuSoonZ"},"content":"* **Documentation**:","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"YuSoonZ"},"content":"  * User Guide:","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"YuSoonZ"},"content":"    * Added documentation for the features `view`, `addnote` and `deletenote` [\\#55](https://github.com/AY2324S2-CS2103T-F14-3/tp/pull/55), [\\#111](https://github.com/AY2324S2-CS2103T-F14-3/tp/pull/111)","lastModifiedDate":"2024-04-08"},{"lineNumber":40,"author":{"gitId":"YuSoonZ"},"content":"    * Did tweaks to existing documentation of features `list`: [\\#55](https://github.com/AY2324S2-CS2103T-F14-3/tp/pull/55)","lastModifiedDate":"2024-04-08"},{"lineNumber":41,"author":{"gitId":"YuSoonZ"},"content":"  * Developer Guide:","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"YuSoonZ"},"content":"    * Added implementation details of the `view` feature [\\#60](https://github.com/AY2324S2-CS2103T-F14-3/tp/pull/60)","lastModifiedDate":"2024-04-08"},{"lineNumber":43,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"YuSoonZ"},"content":"* **Community**:","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"YuSoonZ"},"content":"  * Contributed to forum discussion (example: [\\#153](https://github.com/nus-cs2103-AY2324S2/forum/issues/153))","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"YuSoonZ":44,"kailashgautham":1}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Adding a command","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"kailashgautham"},"content":" * Changes the remark of an existing person in the TA Toolkit.","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/add-remark/RemarkClass.puml\" alt\u003d\"The relationship between RemarkCommand and Command\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"kailashgautham"},"content":"Create a `RemarkCommandParser` class in the `seedu.tatoolkit.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2024-04-01"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/add-remark/ParserClass.puml\" alt\u003d\"The relationship between Parser and RemarkCommandParser\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"kailashgautham"},"content":"Create a new `Remark` in `seedu.tatoolkit.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2024-04-01"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":238,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"kailashgautham"},"content":"Simply add the following to [`seedu.tatoolkit.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2024-04-01"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2023-09-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2023-09-12"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":351,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":352,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":362,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":363,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":381,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":404,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"kailashgautham":9,"-":395}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Removing Fields","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"success\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003c!-- {:toc} --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"kailashgautham"},"content":"The `address` field in `Person` is actually an instance of the `seedu.tatoolkit.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"   **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kailashgautham":1,"-":114}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Tracing code","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c!-- {:toc} --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureDiagram.puml\" alt\u003d\"ArchitectureDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"kailashgautham"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.tatoolkit.logic.Logic`.","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"kailashgautham"},"content":"A quick look at the `seedu.tatoolkit.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ComponentManagers.puml\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"**Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2023-09-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"../diagrams/tracing/LogicSequenceDiagram.puml\" alt\u003d\"Tracing an `edit` command through the Logic component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     \u003cpuml src\u003d\"../diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"../diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"   **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"1. As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kailashgautham":2,"-":309}},{"path":"src/main/java/seedu/tatoolkit/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.LogsCenter;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.util.FileUtil;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Objects.equals(configPath, otherAppParameters.configPath);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .add(\"configPath\", configPath)","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"kailashgautham":4,"-":69}},{"path":"src/main/java/seedu/tatoolkit/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.LogsCenter;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-07-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // As per https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","lastModifiedDate":"2023-07-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are loaded from","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are ignored when","lastModifiedDate":"2023-07-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist even then.","lastModifiedDate":"2023-07-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // the user (if looking at the log output) that the said warning appearing in the log","lastModifiedDate":"2023-07-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // can be ignored.","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below can be ignored.\");","lastModifiedDate":"2023-07-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"kailashgautham":2,"-":39}},{"path":"src/main/java/seedu/tatoolkit/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.Config;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.LogsCenter;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.Version;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.util.ConfigUtil;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.util.StringUtil;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.Logic;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.LogicManager;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.ModelManager;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.ReadOnlyTaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.TaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.UserPrefs;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.util.SampleDataUtil;","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.storage.JsonTaToolkitStorage;","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.storage.Storage;","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.storage.StorageManager;","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.storage.TaToolkitStorage;","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.storage.UserPrefsStorage;","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.ui.Ui;","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.ui.UiManager;","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"kailashgautham"},"content":"    public static final Version VERSION \u003d new Version(1, 4, 0, true);","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"kailashgautham"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing TaToolkit ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"kailashgautham"},"content":"        TaToolkitStorage taToolkitStorage \u003d new JsonTaToolkitStorage(userPrefs.getTaToolkitFilePath());","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"kailashgautham"},"content":"        storage \u003d new StorageManager(taToolkitStorage, userPrefsStorage);","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"kailashgautham"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s TA Toolkit and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"kailashgautham"},"content":"     * The data from the sample TA Toolkit will be used instead if {@code storage}\u0027s TA Toolkit is not found,","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"kailashgautham"},"content":"     * or an empty TA Toolkit will be used instead if errors occur when reading {@code storage}\u0027s TA Toolkit.","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"kailashgautham"},"content":"        logger.info(\"Using data file : \" + storage.getTaToolkitFilePath());","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"kailashgautham"},"content":"        Optional\u003cReadOnlyTaToolkit\u003e taToolkitOptional;","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"kailashgautham"},"content":"        ReadOnlyTaToolkit initialData;","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"kailashgautham"},"content":"            taToolkitOptional \u003d storage.readTaToolkit();","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"kailashgautham"},"content":"            if (!taToolkitOptional.isPresent()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"kailashgautham"},"content":"                logger.info(\"Creating a new data file \" + storage.getTaToolkitFilePath()","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"kailashgautham"},"content":"                        + \" populated with a sample taToolkit.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"kailashgautham"},"content":"            initialData \u003d taToolkitOptional.orElseGet(SampleDataUtil::getSampleTaToolkit);","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"kailashgautham"},"content":"            logger.warning(\"Data file at \" + storage.getTaToolkitFilePath() + \" could not be loaded.\"","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"kailashgautham"},"content":"                    + \" Will be starting with an empty taToolkit.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"kailashgautham"},"content":"            initialData \u003d new TaToolkit();","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"kailashgautham"},"content":"        logger.info(\"Starting taToolkit \" + MainApp.VERSION);","lastModifiedDate":"2024-04-01"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"kailashgautham"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping TA Toolkit ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-04-01"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kailashgautham":44,"-":142}},{"path":"src/main/java/seedu/tatoolkit/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.commons.core;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Config otherConfig \u003d (Config) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, otherConfig.logLevel)","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, otherConfig.userPrefsFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .add(\"logLevel\", logLevel)","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .add(\"userPrefsFilePath\", userPrefsFilePath)","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kailashgautham":2,"-":64}},{"path":"src/main/java/seedu/tatoolkit/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.commons.core;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings otherGuiSettings \u003d (GuiSettings) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d otherGuiSettings.windowWidth","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d otherGuiSettings.windowHeight","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, otherGuiSettings.windowCoordinates);","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"windowWidth\", windowWidth)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"windowHeight\", windowHeight)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .add(\"windowCoordinates\", windowCoordinates)","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kailashgautham":2,"-":80}},{"path":"src/main/java/seedu/tatoolkit/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.commons.core;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-05-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-05-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"    private static final String LOG_FILE \u003d \"tatoolkit.log\";","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger; // logger for this class","lastModifiedDate":"2023-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger baseLogger; // to be used as the parent of all other loggers created by this class.","lastModifiedDate":"2023-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // This static block ensures essential loggers are created early","lastModifiedDate":"2023-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        setBaseLogger();","lastModifiedDate":"2023-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes loggers with the log level specified in the {@code config} object. Applies to all loggers created","lastModifiedDate":"2023-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * using {@link #getLogger(String)} and {@link #getLogger(Class)} methods except for those that are manually set.","lastModifiedDate":"2023-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Log level will be set as: \" + currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // set the level of the baseLogger which will be inherited by other loggers","lastModifiedDate":"2023-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        baseLogger.setLevel(currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name prefixed by the {@code baseLogger}\u0027s name so that the created logger","lastModifiedDate":"2023-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * becomes a descendant of the {@code baseLogger}. Furthermore, the returned logger will have the same log handlers","lastModifiedDate":"2023-07-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * as the {@code baseLogger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Java organizes loggers into a hierarchy based on their names (using \u0027.\u0027 as a separator, similar to how Java","lastModifiedDate":"2023-07-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // packages form a hierarchy). Furthermore, loggers without a level inherit the level of their parent logger.","lastModifiedDate":"2023-07-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // By prefixing names of all loggers with baseLogger\u0027s name + \".\", we make the baseLogger the parent of all","lastModifiedDate":"2023-07-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // loggers. This allows us to change the level of all loggers simply by changing the baseLogger level.","lastModifiedDate":"2023-07-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(baseLogger.getName() + \".\" + name);","lastModifiedDate":"2023-07-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(true);","lastModifiedDate":"2023-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2023-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(clazz);","lastModifiedDate":"2023-05-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Removes all handlers from the {@code logger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Creates a logger named \u0027ab3\u0027, containing a {@code ConsoleHandler} and a {@code FileHandler}.","lastModifiedDate":"2023-07-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets it as the {@code baseLogger}, to be used as the parent logger of all other loggers.","lastModifiedDate":"2023-07-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static void setBaseLogger() {","lastModifiedDate":"2023-07-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        baseLogger \u003d Logger.getLogger(\"ab3\");","lastModifiedDate":"2023-07-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        baseLogger.setUseParentHandlers(false);","lastModifiedDate":"2023-07-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        removeHandlers(baseLogger);","lastModifiedDate":"2023-07-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Level.ALL is used as the level for the handlers because the baseLogger filters the log messages by level","lastModifiedDate":"2023-07-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // already; there is no need to control log message level of the handlers.","lastModifiedDate":"2023-07-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // add a ConsoleHandler to log to the console","lastModifiedDate":"2023-07-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-07-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        baseLogger.addHandler(consoleHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // add a FileHandler to log to a file","lastModifiedDate":"2023-07-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-07-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            baseLogger.addHandler(fileHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kailashgautham":2,"-":104}},{"path":"src/main/java/seedu/tatoolkit/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.commons.core;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!(other instanceof Version)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Version otherVersion \u003d (Version) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return major \u003d\u003d otherVersion.major","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 minor \u003d\u003d otherVersion.minor","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 patch \u003d\u003d otherVersion.patch","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 isEarlyAccess \u003d\u003d otherVersion.isEarlyAccess;","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kailashgautham":1,"-":120}},{"path":"src/main/java/seedu/tatoolkit/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.commons.core.index;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof Index)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Index otherIndex \u003d (Index) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return zeroBasedIndex \u003d\u003d otherIndex.zeroBasedIndex;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"zeroBasedIndex\", zeroBasedIndex).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"kailashgautham":2,"-":67}},{"path":"src/main/java/seedu/tatoolkit/commons/exceptions/DataLoadingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.commons.exceptions;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-06-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during loading of data from a file.","lastModifiedDate":"2023-06-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-06-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataLoadingException extends Exception {","lastModifiedDate":"2023-06-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataLoadingException(Exception cause) {","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2023-06-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-06-14"}],"authorContributionMap":{"kailashgautham":1,"-":10}},{"path":"src/main/java/seedu/tatoolkit/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.commons.exceptions;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kailashgautham":1,"-":20}},{"path":"src/main/java/seedu/tatoolkit/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.commons.util;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.MainApp;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kailashgautham":2,"-":40}},{"path":"src/main/java/seedu/tatoolkit/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.commons.util;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kailashgautham":1,"-":34}},{"path":"src/main/java/seedu/tatoolkit/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.commons.util;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.Config;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"kailashgautham":3,"-":20}},{"path":"src/main/java/seedu/tatoolkit/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.commons.util;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kailashgautham":1,"-":82}},{"path":"src/main/java/seedu/tatoolkit/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.commons.util;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.LogsCenter;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the JSON object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2023-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid JSON file.","lastModifiedDate":"2023-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize JSON file has to correspond to the structure in the class given here.","lastModifiedDate":"2023-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading of the JSON file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.info(\"JSON file \" + filePath + \" found.\");","lastModifiedDate":"2023-01-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2023-06-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kailashgautham":3,"-":141}},{"path":"src/main/java/seedu/tatoolkit/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.commons.util;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kailashgautham":2,"-":66}},{"path":"src/main/java/seedu/tatoolkit/commons/util/ToStringBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.commons.util;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Builds a string representation of an object that is suitable as the return value of {@link Object#toString()}.","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ToStringBuilder {","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private static final String OBJECT_PREFIX \u003d \"{\";","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final String OBJECT_SUFFIX \u003d \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private static final String FIELD_SEPARATOR \u003d \", \";","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String FIELD_NAME_VALUE_SEPARATOR \u003d \"\u003d\";","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private boolean hasField;","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with {@code objectName}.","lastModifiedDate":"2019-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public ToStringBuilder(String objectName) {","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        stringBuilder.append(objectName).append(OBJECT_PREFIX);","lastModifiedDate":"2019-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with the","lastModifiedDate":"2019-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * canonical class name of {@code object}.","lastModifiedDate":"2019-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public ToStringBuilder(Object object) {","lastModifiedDate":"2019-02-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this(object.getClass().getCanonicalName());","lastModifiedDate":"2019-02-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Adds a field name/value pair to the output string.","lastModifiedDate":"2019-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param fieldName The name of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param fieldValue The value of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @return A reference to this {@code ToStringBuilder} object, allowing method calls to be chained.","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ToStringBuilder add(String fieldName, Object fieldValue) {","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"kailashgautham"},"content":"        if (fieldValue instanceof Optional\u003c?\u003e) {","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"kailashgautham"},"content":"            fieldValue \u003d ((Optional\u003c?\u003e) fieldValue).orElse(null);","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"kailashgautham"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (hasField) {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            stringBuilder.append(FIELD_SEPARATOR);","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        stringBuilder.append(fieldName).append(FIELD_NAME_VALUE_SEPARATOR).append(fieldValue);","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        hasField \u003d true;","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the built formatted string representation.","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return stringBuilder.toString() + OBJECT_SUFFIX;","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"kailashgautham":5,"-":53}},{"path":"src/main/java/seedu/tatoolkit/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"teojunda"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.GuiSettings;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"hiivan"},"content":"import seedu.tatoolkit.logic.commands.Command;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.CommandResult;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"hiivan"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.ReadOnlyTaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"kailashgautham"},"content":"     * Returns the TaToolkit.","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"kailashgautham"},"content":"     * @see seedu.tatoolkit.model.Model#getTaToolkit()","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"kailashgautham"},"content":"    ReadOnlyTaToolkit getTaToolkit();","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"teojunda"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"teojunda"},"content":"     * Retrieves the last viewed {@link Person} instance.","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"teojunda"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"teojunda"},"content":"     * This method returns an {@link Optional} which will be empty if no person has","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"teojunda"},"content":"     * been viewed last, or will contain a reference to the {@link Person} object","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"teojunda"},"content":"     * that was last viewed.","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"teojunda"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"teojunda"},"content":"     * @return an {@link Optional} containing the last viewed {@link Person} if such","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"teojunda"},"content":"     *     a person exists, or an empty {@link Optional} if no person has been viewed last.","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"teojunda"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"teojunda"},"content":"    Optional\u003cPerson\u003e getLastViewedPerson();","lastModifiedDate":"2024-03-22"},{"lineNumber":50,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"hiivan"},"content":"     * Retrieves the last executed command.","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"hiivan"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"hiivan"},"content":"     * This method returns an {@link Optional} which will be empty if no command has","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"hiivan"},"content":"     * been executed, or will contain a reference to the {@link Command} object","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"hiivan"},"content":"     * that was last executed.","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"hiivan"},"content":"     * @return an {@link Optional} containing the last executed {@link Command} if such","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"hiivan"},"content":"     *         a command exists, or an empty {@link Optional} if no command has been executed.","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"hiivan"},"content":"    Optional\u003cCommand\u003e getlastSidePanelCommand();","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"hiivan"},"content":"     * Returns an ObservableList of attendance strings for each person in the filtered person list.","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"hiivan"},"content":"     * Each string represents the attendance of one person.","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"hiivan"},"content":"     * @return ObservableList of attendance details as {@code String} objects.","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"hiivan"},"content":"    ObservableList\u003cString\u003e getFilteredPersonAttendanceList();","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"hiivan"},"content":"     * Returns the Model component of the application.","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"hiivan"},"content":"     * This can be used by UI components to directly interact with application data.","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"hiivan"},"content":"     * @return the current model of the application.","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"hiivan"},"content":"    Model getModel();","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"kailashgautham"},"content":"     * Returns the user prefs\u0027 TA Toolkit file path.","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"kailashgautham"},"content":"    Path getTaToolkitFilePath();","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"kailashgautham":12,"teojunda":13,"hiivan":29,"-":38}},{"path":"src/main/java/seedu/tatoolkit/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"teojunda"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.GuiSettings;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.LogsCenter;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.Command;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.CommandResult;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"hiivan"},"content":"import seedu.tatoolkit.logic.commands.ListCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"hiivan"},"content":"import seedu.tatoolkit.logic.commands.MarkCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"hiivan"},"content":"import seedu.tatoolkit.logic.commands.ViewCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.parser.TaToolkitParser;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.ReadOnlyTaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.storage.Storage;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"kailashgautham"},"content":"    private final TaToolkitParser taToolkitParser;","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"hiivan"},"content":"    private Optional\u003cCommand\u003e lastSidePanelCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"kailashgautham"},"content":"        taToolkitParser \u003d new TaToolkitParser();","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"hiivan"},"content":"        lastSidePanelCommand \u003d Optional.empty();","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"kailashgautham"},"content":"        Command command \u003d taToolkitParser.parseCommand(commandText);","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"kailashgautham"},"content":"            storage.saveTaToolkit(model.getTaToolkit());","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"hiivan"},"content":"        if (command instanceof ViewCommand || command instanceof ListCommand) {","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"hiivan"},"content":"            lastSidePanelCommand \u003d Optional.of(command);","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"hiivan"},"content":"        if (command instanceof MarkCommand) {","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"hiivan"},"content":"            model.updateObservableAttendanceList();","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":78,"author":{"gitId":"kailashgautham"},"content":"    public ReadOnlyTaToolkit getTaToolkit() {","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"kailashgautham"},"content":"        return model.getTaToolkit();","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":87,"author":{"gitId":"teojunda"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":88,"author":{"gitId":"teojunda"},"content":"    public Optional\u003cPerson\u003e getLastViewedPerson() {","lastModifiedDate":"2024-03-22"},{"lineNumber":89,"author":{"gitId":"teojunda"},"content":"        return model.getLastViewedPerson();","lastModifiedDate":"2024-03-22"},{"lineNumber":90,"author":{"gitId":"teojunda"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":91,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":92,"author":{"gitId":"hiivan"},"content":"    public Optional\u003cCommand\u003e getlastSidePanelCommand() {","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"hiivan"},"content":"        return lastSidePanelCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"hiivan"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"hiivan"},"content":"    public ObservableList\u003cString\u003e getFilteredPersonAttendanceList() {","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"hiivan"},"content":"        return model.getFilteredPersonAttendanceList();","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"hiivan"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"hiivan"},"content":"    public Model getModel() {","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"hiivan"},"content":"        return this.model;","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"kailashgautham"},"content":"    public Path getTaToolkitFilePath() {","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"kailashgautham"},"content":"        return model.getTaToolkitFilePath();","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"kailashgautham":20,"teojunda":6,"hiivan":25,"-":68}},{"path":"src/main/java/seedu/tatoolkit/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.parser.Prefix;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"teojunda"},"content":"    public static final String MESSAGE_INVALID_NOTE_DISPLAYED_INDEX \u003d \"The note index provided is invalid\";","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"teojunda"},"content":"    public static final String MESSAGE_DUPLICATES_IN_ABSENTEES_AND_ATTENDEES \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"teojunda"},"content":"            \"There are duplicate values for absentees and attendees\";","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"kailashgautham"},"content":"                .append(\"; Class/Group: \")","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"kailashgautham"},"content":"                .append(person.getClassGroup())","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"kailashgautham"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"teojunda"},"content":"                .append(person.getPhone().isPresent() ? person.getPhone().get().value : \"\")","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"kailashgautham"},"content":"                .append(\"; Telegram: \")","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"kailashgautham"},"content":"                .append(person.getTelegram().isPresent() ? person.getTelegram().get().telegramId : \"\")","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"kailashgautham"},"content":"                .append(\"; Github: \")","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"kailashgautham"},"content":"                .append(person.getGithub().isPresent() ? person.getGithub().get().githubId : \"\");","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kailashgautham":10,"teojunda":4,"-":42}},{"path":"src/main/java/seedu/tatoolkit/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_CLASS_GROUP;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.LogsCenter;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.Messages;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":" * Adds a person to the TA Toolkit.","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"kailashgautham"},"content":"    public static final String COMMAND_WORD \u003d \"ac\";","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"kailashgautham"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the TA Toolkit. \"","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"kailashgautham"},"content":"            + PREFIX_CLASS_GROUP + \"CLASS/GROUP \"","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"teojunda"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"kailashgautham"},"content":"            + \"[\" + PREFIX_TELEGRAM + \"TELEGRAM ID] \"","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"YuSoonZ"},"content":"            + \"[\" + PREFIX_GITHUB + \"GITHUB ID]\\n\"","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"kailashgautham"},"content":"            + PREFIX_CLASS_GROUP + \"T42 \"","lastModifiedDate":"2024-04-08"},{"lineNumber":39,"author":{"gitId":"kailashgautham"},"content":"            + PREFIX_EMAIL + \"johndoe@gmail.com \"","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"kailashgautham"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"kailashgautham"},"content":"            + PREFIX_TELEGRAM + \"@johndoe \"","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"kailashgautham"},"content":"            + PREFIX_GITHUB + \"johnDoeGithub \";","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"teojunda"},"content":"    public static final String MESSAGE_DUPLICATE_FIELD \u003d \"This person contains duplicate fields\"","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"teojunda"},"content":"            + \"(Email, Phone, Telegram, or Github) with another person.\";","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"kailashgautham"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddCommand.class);","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"kailashgautham"},"content":"        logger.log(Level.INFO, \"AddCommand created with Person: \" + person.toString());","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"teojunda"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_FIELD);","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"YuSoonZ":1,"kailashgautham":28,"teojunda":4,"-":60}},{"path":"src/main/java/seedu/tatoolkit/logic/commands/AddNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"YuSoonZ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"YuSoonZ"},"content":"import java.util.List;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"YuSoonZ"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"YuSoonZ"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.Messages;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Note;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"YuSoonZ"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":" * Adds a note to a person identified using it\u0027s displayed index from the TA Toolkit.","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"YuSoonZ"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"YuSoonZ"},"content":"public class AddNoteCommand extends Command {","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"YuSoonZ"},"content":"    public static final String COMMAND_WORD \u003d \"an\";","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"YuSoonZ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"YuSoonZ"},"content":"            + \": Adds a note to a person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"teojunda"},"content":"            + \"Note may only contain alphanumeric characters basic punctuation \"","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"teojunda"},"content":"            + \"(periods, commas, exclamation marks, question marks)\\n\"","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"YuSoonZ"},"content":"            + \"Parameters:\"","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"teojunda"},"content":"            + \" INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"YuSoonZ"},"content":"            + PREFIX_NOTE + \"NOTE\\n\"","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"YuSoonZ"},"content":"            + \"Example: \"","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"YuSoonZ"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"teojunda"},"content":"            + \"1 \"","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"teojunda"},"content":"            + PREFIX_NOTE + \"Asked a question regarding test cases.\";","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"YuSoonZ"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New note added to %1$s.\\nNote: %2$s\";","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"YuSoonZ"},"content":"    private static final Logger logger \u003d Logger.getLogger(AddNoteCommand.class.getName());","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"YuSoonZ"},"content":"    private final Index index;","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"YuSoonZ"},"content":"    private final Note note;","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"YuSoonZ"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"YuSoonZ"},"content":"     * @param index of the person in the filtered person list to add a note","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"YuSoonZ"},"content":"     * @param note the note that should be added","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"YuSoonZ"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"YuSoonZ"},"content":"    public AddNoteCommand(Index index, Note note) {","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"YuSoonZ"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"YuSoonZ"},"content":"        requireNonNull(note);","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"YuSoonZ"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"YuSoonZ"},"content":"        this.note \u003d note;","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"YuSoonZ"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"YuSoonZ"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"YuSoonZ"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"YuSoonZ"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"YuSoonZ"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"YuSoonZ"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"YuSoonZ"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"YuSoonZ"},"content":"        Person personToAddNote \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"YuSoonZ"},"content":"        personToAddNote.addNote(note);","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"YuSoonZ"},"content":"        String message \u003d String.format(MESSAGE_SUCCESS, Messages.format(personToAddNote), note);","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"YuSoonZ"},"content":"        logger.log(Level.INFO, \"Note added: \" + note + \" to person: \" + personToAddNote.getName());","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"YuSoonZ"},"content":"        return new CommandResult(message);","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"YuSoonZ"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"YuSoonZ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"YuSoonZ"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"YuSoonZ"},"content":"            return true;","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"YuSoonZ"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"YuSoonZ"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"YuSoonZ"},"content":"        if (!(other instanceof AddNoteCommand)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"YuSoonZ"},"content":"            return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"YuSoonZ"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"YuSoonZ"},"content":"        AddNoteCommand otherAddNoteCommand \u003d (AddNoteCommand) other;","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"YuSoonZ"},"content":"        return index.equals(otherAddNoteCommand.index)","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"YuSoonZ"},"content":"                \u0026\u0026 note.equals(otherAddNoteCommand.note);","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"YuSoonZ"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"YuSoonZ"},"content":"    public String toString() {","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"YuSoonZ"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"YuSoonZ"},"content":"                .add(\"index\", index)","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"YuSoonZ"},"content":"                .add(\"note\", note)","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"YuSoonZ"},"content":"                .toString();","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"YuSoonZ"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"YuSoonZ":83,"kailashgautham":10,"teojunda":5}},{"path":"src/main/java/seedu/tatoolkit/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.TaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":" * Clears the TA Toolkit.","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"TA Toolkit has been cleared!\";","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"        model.setTaToolkit(new TaToolkit());","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"teojunda"},"content":"        model.resetLastViewedPerson();","lastModifiedDate":"2024-04-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kailashgautham":6,"teojunda":1,"-":17}},{"path":"src/main/java/seedu/tatoolkit/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kailashgautham":3,"-":17}},{"path":"src/main/java/seedu/tatoolkit/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kailashgautham":2,"-":80}},{"path":"src/main/java/seedu/tatoolkit/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.Messages;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":" * Deletes a person identified using it\u0027s displayed index from the TA Toolkit.","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"g-tejas"},"content":"    public static final String COMMAND_WORD \u003d \"dc\";","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"g-tejas"},"content":"        assert !model.hasPerson(personToDelete) : \"Person should not exist after deletion\";","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"teojunda"},"content":"        updateLastViewedPersonIfNecessary(personToDelete, model);","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"teojunda"},"content":"    private void updateLastViewedPersonIfNecessary(Person personToDelete, Model model) {","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"teojunda"},"content":"        model.getLastViewedPerson()","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"teojunda"},"content":"                .filter(lastViewedPerson -\u003e lastViewedPerson.equals(personToDelete))","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"teojunda"},"content":"                .ifPresent(lastViewedPerson -\u003e model.resetLastViewedPerson());","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"teojunda"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":56,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kailashgautham":8,"teojunda":8,"g-tejas":2,"-":60}},{"path":"src/main/java/seedu/tatoolkit/logic/commands/DeleteNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"teojunda"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_INDICES;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"teojunda"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"teojunda"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"teojunda"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"teojunda"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"teojunda"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.Messages;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Note;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"teojunda"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":" * Deletes notes for a person identified using the person\u0027s displayed index from the TA Toolkit.","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"teojunda"},"content":" * The note to delete is identified by its index number in the side panel.","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"teojunda"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"teojunda"},"content":"public class DeleteNoteCommand extends Command {","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"teojunda"},"content":"    public static final String COMMAND_WORD \u003d \"dn\";","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"teojunda"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"teojunda"},"content":"            + \": Deletes a note for a person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"teojunda"},"content":"            + \"Notes are identified by the index number in the side panel.\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"teojunda"},"content":"            + \"Parameters:\"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"teojunda"},"content":"            + \" PERSON_INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"teojunda"},"content":"            + PREFIX_INDICES + \"NOTE_INDEX\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"teojunda"},"content":"            + \"Example: \"","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"teojunda"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"teojunda"},"content":"            + \"1 \"","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"teojunda"},"content":"            + PREFIX_INDICES + \"1, 2\";","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"teojunda"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Note(s) deleted from %1$s: %2$s\";","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"teojunda"},"content":"    private static final Logger logger \u003d Logger.getLogger(DeleteNoteCommand.class.getName());","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"teojunda"},"content":"    private final Index personIndex;","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"teojunda"},"content":"    private final List\u003cIndex\u003e notes;","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"teojunda"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"teojunda"},"content":"     * @param personIndex of the person in the filtered person list to delete notes","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"teojunda"},"content":"     * @param notes the list of notes\u0027 indices that should be deleted","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"teojunda"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"teojunda"},"content":"    public DeleteNoteCommand(Index personIndex, List\u003cIndex\u003e notes) {","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"teojunda"},"content":"        requireNonNull(personIndex);","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"teojunda"},"content":"        requireNonNull(notes);","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"teojunda"},"content":"        this.personIndex \u003d personIndex;","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"teojunda"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"teojunda"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"teojunda"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"teojunda"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"teojunda"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"teojunda"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"teojunda"},"content":"        List\u003cInteger\u003e indices \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"teojunda"},"content":"        if (personIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"teojunda"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"teojunda"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"teojunda"},"content":"        Person personToDeleteNote \u003d lastShownList.get(personIndex.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"teojunda"},"content":"        // We don\u0027t proceed even if the other indices are valid since it\u0027s likely that the user","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"teojunda"},"content":"        // has made a mistake in the other inputs as well.","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"teojunda"},"content":"        for (Index noteIndex : notes) {","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"teojunda"},"content":"            int zeroBasedIndex \u003d noteIndex.getZeroBased();","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"teojunda"},"content":"            // Check if the index is valid","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"teojunda"},"content":"            if (zeroBasedIndex \u003e\u003d personToDeleteNote.getNoteSize()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"teojunda"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_NOTE_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"teojunda"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"teojunda"},"content":"            indices.add(zeroBasedIndex);","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"teojunda"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"teojunda"},"content":"        Collections.sort(indices, Collections.reverseOrder());","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"teojunda"},"content":"        StringBuilder deletedNotes \u003d new StringBuilder();","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"teojunda"},"content":"        for (int i: indices) {","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"teojunda"},"content":"            Note note \u003d personToDeleteNote.getNotes().get(i);","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"teojunda"},"content":"            personToDeleteNote.deleteNote(i);","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"teojunda"},"content":"            deletedNotes.append(\"\\n\" + note);","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"teojunda"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"teojunda"},"content":"        String message \u003d String.format(MESSAGE_SUCCESS, Messages.format(personToDeleteNote), deletedNotes.toString());","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"teojunda"},"content":"        logger.log(Level.INFO, \"Notes deleted from \" + personToDeleteNote.getName() + \": \"","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"teojunda"},"content":"                + deletedNotes.toString());","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"teojunda"},"content":"        return new CommandResult(message);","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"teojunda"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"teojunda"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"teojunda"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"teojunda"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"teojunda"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"teojunda"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"teojunda"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"teojunda"},"content":"        if (!(other instanceof DeleteNoteCommand)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"teojunda"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"teojunda"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"teojunda"},"content":"        DeleteNoteCommand otherDeleteNoteCommand \u003d (DeleteNoteCommand) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"teojunda"},"content":"        return personIndex.equals(otherDeleteNoteCommand.personIndex) \u0026\u0026 notes.equals(otherDeleteNoteCommand.notes);","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"teojunda"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"teojunda"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"kailashgautham":9,"teojunda":100}},{"path":"src/main/java/seedu/tatoolkit/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_CLASS_GROUP;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"teojunda"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"teojunda"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.LogsCenter;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.util.CollectionUtil;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.Messages;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.attendance.Attendance;","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.ClassGroup;","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Email;","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Github;","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Name;","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Notes;","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Phone;","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Telegram;","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"kailashgautham"},"content":" * Edits the details of an existing person in the TA Toolkit.","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"teojunda"},"content":"    public static final String COMMAND_WORD \u003d \"uc\";","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"teojunda"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Updates the details of the person identified \"","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"teojunda"},"content":"            + \"[\" + PREFIX_CLASS_GROUP + \"CLASS/GROUP] \"","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"teojunda"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"teojunda"},"content":"            + \"[\" + PREFIX_TELEGRAM + \"TELEGRAM ID] \"","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"YuSoonZ"},"content":"            + \"[\" + PREFIX_GITHUB + \"GITHUB ID]\\n\"","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"teojunda"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Updated Person: %1$s\";","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"teojunda"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to update must be provided.\";","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"teojunda"},"content":"    public static final String MESSAGE_NO_CHANGE \u003d \"The updated person is the same as the original person\";","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"teojunda"},"content":"    public static final String MESSAGE_DUPLICATE_FIELD \u003d \"The updated person contains duplicate fields\"","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"teojunda"},"content":"            + \"(Email, Phone, Telegram, or Github) with another person.\";","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"teojunda"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(EditCommand.class);","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"teojunda"},"content":"        String message \u003d \"EditCommand created to update person at index: \" + index.getOneBased()","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"teojunda"},"content":"                + \", with editPersonDescriptor: \" + editPersonDescriptor;","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"teojunda"},"content":"        logger.log(Level.INFO, message);","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"teojunda"},"content":"        updatePerson(personToEdit, editedPerson, model);","lastModifiedDate":"2024-03-22"},{"lineNumber":93,"author":{"gitId":"teojunda"},"content":"        updateLastViewedPersonIfNecessary(personToEdit, editedPerson, model);","lastModifiedDate":"2024-03-22"},{"lineNumber":94,"author":{"gitId":"teojunda"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2024-03-22"},{"lineNumber":95,"author":{"gitId":"teojunda"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":96,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":97,"author":{"gitId":"teojunda"},"content":"    private void updatePerson(Person personToEdit, Person editedPerson, Model model) throws CommandException {","lastModifiedDate":"2024-03-22"},{"lineNumber":98,"author":{"gitId":"teojunda"},"content":"        if (personToEdit.equals(editedPerson)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":99,"author":{"gitId":"teojunda"},"content":"            throw new CommandException(MESSAGE_NO_CHANGE);","lastModifiedDate":"2024-03-13"},{"lineNumber":100,"author":{"gitId":"teojunda"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":101,"author":{"gitId":"teojunda"},"content":"        model.deletePerson(personToEdit);","lastModifiedDate":"2024-03-13"},{"lineNumber":102,"author":{"gitId":"teojunda"},"content":"        if (model.hasPerson(editedPerson)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"teojunda"},"content":"            model.addPersonKeepFilter(personToEdit);","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"teojunda"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_FIELD);","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"teojunda"},"content":"        model.addPersonKeepFilter(editedPerson);","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"teojunda"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":108,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":109,"author":{"gitId":"teojunda"},"content":"    private void updateLastViewedPersonIfNecessary(Person personToEdit, Person editedPerson, Model model) {","lastModifiedDate":"2024-03-22"},{"lineNumber":110,"author":{"gitId":"teojunda"},"content":"        model.getLastViewedPerson()","lastModifiedDate":"2024-03-22"},{"lineNumber":111,"author":{"gitId":"teojunda"},"content":"                .filter(lastViewedPerson -\u003e lastViewedPerson.equals(personToEdit))","lastModifiedDate":"2024-03-22"},{"lineNumber":112,"author":{"gitId":"teojunda"},"content":"                .ifPresent(lastViewedPerson -\u003e model.updateLastViewedPerson(editedPerson));","lastModifiedDate":"2024-03-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":123,"author":{"gitId":"kailashgautham"},"content":"        ClassGroup updatedClassGroup \u003d editPersonDescriptor.getClassGroup().orElse(personToEdit.getClassGroup());","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":125,"author":{"gitId":"teojunda"},"content":"        Optional\u003cPhone\u003e updatedPhone \u003d editPersonDescriptor.getPhone().isPresent()","lastModifiedDate":"2024-03-24"},{"lineNumber":126,"author":{"gitId":"teojunda"},"content":"                ? editPersonDescriptor.getPhone() : personToEdit.getPhone();","lastModifiedDate":"2024-03-24"},{"lineNumber":127,"author":{"gitId":"kailashgautham"},"content":"        Optional\u003cTelegram\u003e updatedTelegram \u003d editPersonDescriptor.getTelegram().isPresent()","lastModifiedDate":"2024-03-11"},{"lineNumber":128,"author":{"gitId":"kailashgautham"},"content":"                ? editPersonDescriptor.getTelegram() : personToEdit.getTelegram();","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"kailashgautham"},"content":"        Optional\u003cGithub\u003e updatedGithub \u003d editPersonDescriptor.getGithub().isPresent()","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"kailashgautham"},"content":"                ? editPersonDescriptor.getGithub() : personToEdit.getGithub();","lastModifiedDate":"2024-03-11"},{"lineNumber":131,"author":{"gitId":"teojunda"},"content":"        Attendance existingAttendance \u003d personToEdit.getAttendance();","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"teojunda"},"content":"        Notes existingNotes \u003d personToEdit.getNotes();","lastModifiedDate":"2024-03-27"},{"lineNumber":133,"author":{"gitId":"kailashgautham"},"content":"        return new Person(updatedName, updatedClassGroup, updatedEmail,","lastModifiedDate":"2024-03-11"},{"lineNumber":134,"author":{"gitId":"teojunda"},"content":"                updatedPhone, updatedTelegram, updatedGithub, existingAttendance, existingNotes);","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"kailashgautham"},"content":"        private ClassGroup classGroup;","lastModifiedDate":"2024-03-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"teojunda"},"content":"        private Optional\u003cPhone\u003e phone;","lastModifiedDate":"2024-03-24"},{"lineNumber":170,"author":{"gitId":"kailashgautham"},"content":"        private Optional\u003cTelegram\u003e telegram;","lastModifiedDate":"2024-03-11"},{"lineNumber":171,"author":{"gitId":"kailashgautham"},"content":"        private Optional\u003cGithub\u003e github;","lastModifiedDate":"2024-03-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"kailashgautham"},"content":"        /**","lastModifiedDate":"2024-03-11"},{"lineNumber":174,"author":{"gitId":"kailashgautham"},"content":"         * Creates a new EditPersonDescriptor with empty fields.","lastModifiedDate":"2024-03-11"},{"lineNumber":175,"author":{"gitId":"kailashgautham"},"content":"         */","lastModifiedDate":"2024-03-11"},{"lineNumber":176,"author":{"gitId":"kailashgautham"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2024-03-11"},{"lineNumber":177,"author":{"gitId":"teojunda"},"content":"            phone \u003d Optional.empty();","lastModifiedDate":"2024-03-25"},{"lineNumber":178,"author":{"gitId":"kailashgautham"},"content":"            telegram \u003d Optional.empty();","lastModifiedDate":"2024-03-11"},{"lineNumber":179,"author":{"gitId":"kailashgautham"},"content":"            github \u003d Optional.empty();","lastModifiedDate":"2024-03-11"},{"lineNumber":180,"author":{"gitId":"kailashgautham"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":187,"author":{"gitId":"kailashgautham"},"content":"            setClassGroup(toCopy.classGroup);","lastModifiedDate":"2024-03-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":189,"author":{"gitId":"kailashgautham"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2024-03-11"},{"lineNumber":190,"author":{"gitId":"kailashgautham"},"content":"            setTelegram(toCopy.telegram);","lastModifiedDate":"2024-03-11"},{"lineNumber":191,"author":{"gitId":"kailashgautham"},"content":"            setGithub(toCopy.github);","lastModifiedDate":"2024-03-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"teojunda"},"content":"            return CollectionUtil.isAnyNonNull(name, email, classGroup)","lastModifiedDate":"2024-03-24"},{"lineNumber":199,"author":{"gitId":"teojunda"},"content":"                    || (phone.isPresent() || github.isPresent() || telegram.isPresent());","lastModifiedDate":"2024-03-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"kailashgautham"},"content":"        public void setClassGroup(ClassGroup classGroup) {","lastModifiedDate":"2024-03-11"},{"lineNumber":211,"author":{"gitId":"kailashgautham"},"content":"            this.classGroup \u003d classGroup;","lastModifiedDate":"2024-03-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"kailashgautham"},"content":"        public Optional\u003cClassGroup\u003e getClassGroup() {","lastModifiedDate":"2024-03-11"},{"lineNumber":215,"author":{"gitId":"kailashgautham"},"content":"            return Optional.ofNullable(classGroup);","lastModifiedDate":"2024-03-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"teojunda"},"content":"        public void setPhone(Optional\u003cPhone\u003e phone) {","lastModifiedDate":"2024-03-24"},{"lineNumber":227,"author":{"gitId":"kailashgautham"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2024-03-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"kailashgautham"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2024-03-11"},{"lineNumber":231,"author":{"gitId":"teojunda"},"content":"            return phone;","lastModifiedDate":"2024-03-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"kailashgautham"},"content":"        public void setTelegram(Optional\u003cTelegram\u003e telegram) {","lastModifiedDate":"2024-03-11"},{"lineNumber":235,"author":{"gitId":"kailashgautham"},"content":"            this.telegram \u003d telegram;","lastModifiedDate":"2024-03-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":238,"author":{"gitId":"kailashgautham"},"content":"        public Optional\u003cTelegram\u003e getTelegram() {","lastModifiedDate":"2024-03-11"},{"lineNumber":239,"author":{"gitId":"kailashgautham"},"content":"            return telegram;","lastModifiedDate":"2024-03-11"},{"lineNumber":240,"author":{"gitId":"kailashgautham"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":241,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":242,"author":{"gitId":"kailashgautham"},"content":"        public void setGithub(Optional\u003cGithub\u003e github) {","lastModifiedDate":"2024-03-11"},{"lineNumber":243,"author":{"gitId":"kailashgautham"},"content":"            this.github \u003d github;","lastModifiedDate":"2024-03-11"},{"lineNumber":244,"author":{"gitId":"kailashgautham"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":245,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":246,"author":{"gitId":"kailashgautham"},"content":"        public Optional\u003cGithub\u003e getGithub() {","lastModifiedDate":"2024-03-11"},{"lineNumber":247,"author":{"gitId":"kailashgautham"},"content":"            return github;","lastModifiedDate":"2024-03-11"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":263,"author":{"gitId":"kailashgautham"},"content":"                    \u0026\u0026 Objects.equals(classGroup, otherEditPersonDescriptor.classGroup)","lastModifiedDate":"2024-03-11"},{"lineNumber":264,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":265,"author":{"gitId":"kailashgautham"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2024-03-11"},{"lineNumber":266,"author":{"gitId":"kailashgautham"},"content":"                    \u0026\u0026 Objects.equals(telegram, otherEditPersonDescriptor.telegram)","lastModifiedDate":"2024-03-11"},{"lineNumber":267,"author":{"gitId":"kailashgautham"},"content":"                    \u0026\u0026 Objects.equals(github, otherEditPersonDescriptor.github);","lastModifiedDate":"2024-03-11"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":274,"author":{"gitId":"kailashgautham"},"content":"                    .add(\"classGroup\", classGroup)","lastModifiedDate":"2024-03-11"},{"lineNumber":275,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":276,"author":{"gitId":"kailashgautham"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2024-03-11"},{"lineNumber":277,"author":{"gitId":"kailashgautham"},"content":"                    .add(\"telegram\", telegram)","lastModifiedDate":"2024-03-11"},{"lineNumber":278,"author":{"gitId":"kailashgautham"},"content":"                    .add(\"github\", github)","lastModifiedDate":"2024-03-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"YuSoonZ":1,"kailashgautham":70,"teojunda":48,"-":163}},{"path":"src/main/java/seedu/tatoolkit/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting TA Toolkit as requested ...\";","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"kailashgautham":3,"-":16}},{"path":"src/main/java/seedu/tatoolkit/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.Messages;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":" * Finds and lists all persons in TA Toolkit whose name contains any of the argument keywords.","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"kailashgautham":6,"-":52}},{"path":"src/main/java/seedu/tatoolkit/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kailashgautham":2,"-":19}},{"path":"src/main/java/seedu/tatoolkit/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"g-tejas"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"g-tejas"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.LogsCenter;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.ListCommandPredicate;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"g-tejas"},"content":" * Lists students in the TA Toolkit to the user.","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"g-tejas"},"content":"    public static final String COMMAND_WORD \u003d \"ls\";","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"g-tejas"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": List all students or students from a specific \"","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"g-tejas"},"content":"            + \"class group given the class group identifier and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"g-tejas"},"content":"            + \"Parameters: [CLASSGROUP_ID] (must be a valid class group identifier)\\n\"","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"            + \"Example: \" + COMMAND_WORD + \" T42\";","lastModifiedDate":"2024-04-08"},{"lineNumber":24,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"g-tejas"},"content":"    public static final String MESSAGE_LIST_ALL_SUCCESS \u003d \"Listed all %1$d students\";","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"g-tejas"},"content":"    public static final String MESSAGE_LIST_CLASS_SUCCESS \u003d \"Listed %1$d students from class groups: %2$s\";","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"g-tejas"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ListCommand.class);","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"g-tejas"},"content":"    private final ListCommandPredicate predicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"g-tejas"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"g-tejas"},"content":"     * Creates a ListCommand to list all students or students from specific class groups.","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"g-tejas"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"g-tejas"},"content":"     * @param predicate Predicate to filter students by a list of class groups","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"g-tejas"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"g-tejas"},"content":"    public ListCommand(ListCommandPredicate predicate) {","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"g-tejas"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"g-tejas"},"content":"        logger.info(\"ListCommand created with predicate: \" + predicate.toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"g-tejas"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"g-tejas"},"content":"        if (predicate.getClassGroups().isEmpty()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"g-tejas"},"content":"            String msg \u003d String.format(MESSAGE_LIST_ALL_SUCCESS, model.getFilteredPersonList().size());","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"g-tejas"},"content":"            return new CommandResult(msg);","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"g-tejas"},"content":"        } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"g-tejas"},"content":"            String classGroupsString \u003d predicate.getClassGroups().get()","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"g-tejas"},"content":"                    .stream()","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"g-tejas"},"content":"                    .map(Object::toString)","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"g-tejas"},"content":"                    .collect(Collectors.joining(\", \"));","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"g-tejas"},"content":"            String msg \u003d String.format(MESSAGE_LIST_CLASS_SUCCESS,","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"g-tejas"},"content":"                    model.getFilteredPersonList().size(), classGroupsString);","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"g-tejas"},"content":"            return new CommandResult(msg);","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"g-tejas"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"g-tejas"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"g-tejas"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"g-tejas"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"g-tejas"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"g-tejas"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"g-tejas"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"g-tejas"},"content":"        if (!(other instanceof ListCommand)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"g-tejas"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"g-tejas"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"g-tejas"},"content":"        ListCommand otherListCommand \u003d (ListCommand) other;","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"g-tejas"},"content":"        return predicate.equals(otherListCommand.predicate);","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"g-tejas"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"g-tejas"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"g-tejas"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"g-tejas"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"g-tejas"},"content":"                .toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kailashgautham":6,"g-tejas":62,"-":16}},{"path":"src/main/java/seedu/tatoolkit/logic/commands/MarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"g-tejas"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_ABSENT;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_PRESENT;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_WEEK;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"g-tejas"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"g-tejas"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"g-tejas"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.LogsCenter;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.Messages;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.attendance.Week;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"g-tejas"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":" * Adds a person to the TA Toolkit.","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"g-tejas"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"kailashgautham"},"content":"    public static final String COMMAND_WORD \u003d \"ma\";","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"kailashgautham"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Marks students\u0027 attendance in the TA Toolkit \"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"kailashgautham"},"content":"            + \"by their index in the displayed list for the specified week. \"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"teojunda"},"content":"            + \"At least one of (\" + PREFIX_PRESENT + \"/\" + PREFIX_ABSENT + \") need to be specified, \"","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"teojunda"},"content":"            + \"All students are assumed to be present initially.\\n\"","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"g-tejas"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"g-tejas"},"content":"            + PREFIX_WEEK + \"WEEK \"","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"kailashgautham"},"content":"            + PREFIX_PRESENT + \"PRESENT_INDEX [MORE_INDICES]...\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"kailashgautham"},"content":"            + PREFIX_ABSENT + \"ABSENT_INDEX [MORE_INDICES]...\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"hiivan"},"content":"            + \"Example: \" + COMMAND_WORD + \" w/1 \" + PREFIX_PRESENT + \"1, 2, 3 \" + PREFIX_ABSENT + \"4, 5\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"teojunda"},"content":"            + \"Example: \" + COMMAND_WORD + \" w/1 \" + PREFIX_ABSENT + \"1, 4\";","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"kailashgautham"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Marked the following students as present for %1$s: %2$s\"","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"kailashgautham"},"content":"        + \"\\nMarked the following students as absent for %3$s: %4$s\";","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"kailashgautham"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MarkCommand.class);","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"g-tejas"},"content":"    private final Week week;","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"g-tejas"},"content":"    private final List\u003cIndex\u003e absentees;","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"kailashgautham"},"content":"    private final List\u003cIndex\u003e attendees;","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"g-tejas"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"g-tejas"},"content":"     * Creates an MarkCommand to add the specified {@code Person}","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"g-tejas"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"kailashgautham"},"content":"    public MarkCommand(Week week, List\u003cIndex\u003e attendees, List\u003cIndex\u003e absentees) {","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"g-tejas"},"content":"        requireNonNull(week);","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"kailashgautham"},"content":"        requireNonNull(attendees);","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"g-tejas"},"content":"        requireNonNull(absentees);","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"g-tejas"},"content":"        this.week \u003d week;","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"kailashgautham"},"content":"        this.attendees \u003d attendees;","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"g-tejas"},"content":"        this.absentees \u003d absentees;","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"kailashgautham"},"content":"        logger.info(\"MarkCommand created for \" + week","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"kailashgautham"},"content":"                + \" with attendees: \" + attendees + \" and absentees: \" + absentees);","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"g-tejas"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"g-tejas"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"g-tejas"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"g-tejas"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"g-tejas"},"content":"        for (Index index : absentees) {","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"g-tejas"},"content":"            if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"g-tejas"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"g-tejas"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"g-tejas"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"kailashgautham"},"content":"        for (Index index : attendees) {","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"kailashgautham"},"content":"            if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"kailashgautham"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"kailashgautham"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"teojunda"},"content":"            if (absentees.contains(index)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"teojunda"},"content":"                throw new CommandException(Messages.MESSAGE_DUPLICATES_IN_ABSENTEES_AND_ATTENDEES);","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"teojunda"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"kailashgautham"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"g-tejas"},"content":"        List\u003cPerson\u003e absentStudents \u003d this.absentees.stream()","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"g-tejas"},"content":"                .map(index -\u003e lastShownList.get(index.getZeroBased()))","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"g-tejas"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"kailashgautham"},"content":"        List\u003cPerson\u003e presentStudents \u003d this.attendees.stream()","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"kailashgautham"},"content":"                .map(index -\u003e lastShownList.get(index.getZeroBased()))","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"kailashgautham"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"g-tejas"},"content":"        for (Person student : absentStudents) {","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"g-tejas"},"content":"            student.markAbsent(week);","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"g-tejas"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"kailashgautham"},"content":"        for (Person student : presentStudents) {","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"kailashgautham"},"content":"            student.markPresent(week);","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"kailashgautham"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"g-tejas"},"content":"        String absenteeNames \u003d absentStudents.stream()","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"g-tejas"},"content":"                .map(Person::getName)","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"g-tejas"},"content":"                .map(Object::toString)","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"g-tejas"},"content":"                .collect(Collectors.joining(\", \"));","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"kailashgautham"},"content":"        String attendeeNames \u003d presentStudents.stream()","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"kailashgautham"},"content":"                .map(Person::getName)","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"kailashgautham"},"content":"                .map(Object::toString)","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"kailashgautham"},"content":"                .collect(Collectors.joining(\", \"));","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"hiivan"},"content":"        model.updateObservableAttendanceList();","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"kailashgautham"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, week, attendeeNames, week, absenteeNames));","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"g-tejas"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"g-tejas"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"g-tejas"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"g-tejas"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"g-tejas"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"g-tejas"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"kailashgautham"},"content":"        if (!(other instanceof MarkCommand)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"g-tejas"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"g-tejas"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"kailashgautham"},"content":"        MarkCommand otherMarkCommand \u003d (MarkCommand) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"kailashgautham"},"content":"        return week.equals(otherMarkCommand.week) \u0026\u0026 absentees.equals(otherMarkCommand.absentees)","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"kailashgautham"},"content":"                \u0026\u0026 attendees.equals(otherMarkCommand.attendees);","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"g-tejas"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"g-tejas"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"g-tejas"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"g-tejas"},"content":"                .add(\"week\", week)","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"kailashgautham"},"content":"                .add(\"attendees\", attendees)","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"g-tejas"},"content":"                .add(\"absentees\", absentees)","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"g-tejas"},"content":"                .toString();","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"kailashgautham":53,"teojunda":6,"hiivan":2,"g-tejas":74}},{"path":"src/main/java/seedu/tatoolkit/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"YuSoonZ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"YuSoonZ"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"YuSoonZ"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"YuSoonZ"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.LogsCenter;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.Messages;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"YuSoonZ"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":" * Views details of a person in the TA Toolkit identified using its displayed index from the TA Toolkit.","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"YuSoonZ"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"YuSoonZ"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"YuSoonZ"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"YuSoonZ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"YuSoonZ"},"content":"            + \": View the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"YuSoonZ"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"YuSoonZ"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"YuSoonZ"},"content":"    public static final String MESSAGE_VIEW_PERSON_SUCCESS \u003d \"View Person: %1$s\";","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"YuSoonZ"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ViewCommand.class);","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"YuSoonZ"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"YuSoonZ"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"YuSoonZ"},"content":"     * Constructs a ViewCommand with the specified index.","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"YuSoonZ"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"YuSoonZ"},"content":"     * @param targetIndex Index of the person to view.","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"YuSoonZ"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"YuSoonZ"},"content":"    public ViewCommand(Index targetIndex) {","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"YuSoonZ"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"YuSoonZ"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"YuSoonZ"},"content":"     * Executes the view command to display details of the person specified by the index.","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"YuSoonZ"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"YuSoonZ"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"YuSoonZ"},"content":"     * @return The command result indicating the success of the execution.","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"YuSoonZ"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"YuSoonZ"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"YuSoonZ"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"YuSoonZ"},"content":"        public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"YuSoonZ"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"YuSoonZ"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"YuSoonZ"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"YuSoonZ"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"YuSoonZ"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"YuSoonZ"},"content":"        Person personToView \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"hiivan"},"content":"        assert personToView !\u003d null : \"Viewed person should not be null\";","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"YuSoonZ"},"content":"        logger.log(Level.INFO, \"View command created with index: \" + targetIndex);","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"teojunda"},"content":"        model.updateLastViewedPerson(personToView);","lastModifiedDate":"2024-03-22"},{"lineNumber":62,"author":{"gitId":"YuSoonZ"},"content":"        return new CommandResult(String.format(MESSAGE_VIEW_PERSON_SUCCESS, Messages.format(personToView)));","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"hiivan"},"content":"     * Gets targetIndex.","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"hiivan"},"content":"     * @return targetIndex","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"hiivan"},"content":"    public Index getTargetIndex() {","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"hiivan"},"content":"        return targetIndex;","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"YuSoonZ"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"YuSoonZ"},"content":"     * Checks if this ViewCommand is equal to another object.","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"YuSoonZ"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"YuSoonZ"},"content":"     * @param other The other object to compare with.","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"YuSoonZ"},"content":"     * @return True if the objects are equal, false otherwise.","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"YuSoonZ"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"YuSoonZ"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"YuSoonZ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"YuSoonZ"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"YuSoonZ"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"YuSoonZ"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"YuSoonZ"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"YuSoonZ"},"content":"        if (!(other instanceof ViewCommand)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"YuSoonZ"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"YuSoonZ"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"YuSoonZ"},"content":"        ViewCommand otherViewCommand \u003d (ViewCommand) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"YuSoonZ"},"content":"        return targetIndex.equals(otherViewCommand.targetIndex);","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"YuSoonZ"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"YuSoonZ"},"content":"     * Generates a string representation of this ViewCommand.","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"YuSoonZ"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"YuSoonZ"},"content":"     * @return The string representation of this ViewCommand.","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"YuSoonZ"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"YuSoonZ"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"YuSoonZ"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"YuSoonZ"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"YuSoonZ"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"YuSoonZ"},"content":"                .toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"YuSoonZ"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"YuSoonZ":86,"kailashgautham":9,"teojunda":1,"hiivan":10}},{"path":"src/main/java/seedu/tatoolkit/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.commands.exceptions;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"kailashgautham":1,"-":16}},{"path":"src/main/java/seedu/tatoolkit/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_CLASS_GROUP;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.AddCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.ClassGroup;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Email;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Github;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Name;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Phone;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Telegram;","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"kailashgautham"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_CLASS_GROUP, PREFIX_EMAIL,","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"kailashgautham"},"content":"                        PREFIX_PHONE, PREFIX_TELEGRAM, PREFIX_GITHUB);","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"teojunda"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_CLASS_GROUP, PREFIX_EMAIL)","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"kailashgautham"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_CLASS_GROUP,","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"kailashgautham"},"content":"                PREFIX_EMAIL, PREFIX_PHONE, PREFIX_TELEGRAM, PREFIX_GITHUB);","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"kailashgautham"},"content":"        ClassGroup classGroup \u003d ParserUtil.parseClassGroup(argMultimap.getValue(PREFIX_CLASS_GROUP).get());","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"teojunda"},"content":"        Optional\u003cPhone\u003e phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).orElse(\"\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"kailashgautham"},"content":"        Optional\u003cTelegram\u003e telegram \u003d ParserUtil.parseTelegram(argMultimap.getValue(PREFIX_TELEGRAM).orElse(\"\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"kailashgautham"},"content":"        Optional\u003cGithub\u003e github \u003d ParserUtil.parseGithub(argMultimap.getValue(PREFIX_GITHUB).orElse(\"\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"kailashgautham"},"content":"        Person person \u003d new Person(name, classGroup, email, phone, telegram, github);","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"kailashgautham":26,"teojunda":2,"-":37}},{"path":"src/main/java/seedu/tatoolkit/logic/parser/AddNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"teojunda"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.AddNoteCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Note;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"YuSoonZ"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"YuSoonZ"},"content":" * Parses input arguments and creates a new AddNote object","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"YuSoonZ"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"YuSoonZ"},"content":"public class AddNoteCommandParser implements Parser\u003cAddNoteCommand\u003e {","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"YuSoonZ"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"YuSoonZ"},"content":"     * Parses the given {@code String} of arguments in the context of the AddNoteCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"YuSoonZ"},"content":"     * and returns an AddNoteCommand object for execution.","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"YuSoonZ"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"YuSoonZ"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"YuSoonZ"},"content":"    public AddNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"teojunda"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"YuSoonZ"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"teojunda"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NOTE);","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"teojunda"},"content":"        Index index;","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"teojunda"},"content":"        try {","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"teojunda"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"teojunda"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"teojunda"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddNoteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"YuSoonZ"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"teojunda"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_NOTE)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"teojunda"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"teojunda"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"teojunda"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NOTE);","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"YuSoonZ"},"content":"        Note note \u003d ParserUtil.parseNote(argMultimap.getValue(PREFIX_NOTE).get());","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"YuSoonZ"},"content":"        return new AddNoteCommand(index, note);","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"YuSoonZ"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"YuSoonZ":23,"kailashgautham":7,"teojunda":14}},{"path":"src/main/java/seedu/tatoolkit/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.Messages;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"kailashgautham":3,"-":75}},{"path":"src/main/java/seedu/tatoolkit/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"kailashgautham":1,"-":147}},{"path":"src/main/java/seedu/tatoolkit/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"    public static final Prefix PREFIX_CLASS_GROUP \u003d new Prefix(\"c/\");","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"YuSoonZ"},"content":"    public static final Prefix PREFIX_NOTE \u003d new Prefix(\"note/\");","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"    public static final Prefix PREFIX_TELEGRAM \u003d new Prefix(\"t/\");","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"    public static final Prefix PREFIX_GITHUB \u003d new Prefix(\"g/\");","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"g-tejas"},"content":"    public static final Prefix PREFIX_WEEK \u003d new Prefix(\"w/\");","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"g-tejas"},"content":"    public static final Prefix PREFIX_INDICES \u003d new Prefix(\"i/\");","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"    public static final Prefix PREFIX_PRESENT \u003d new Prefix(\"pre/\");","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"    public static final Prefix PREFIX_ABSENT \u003d new Prefix(\"abs/\");","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"YuSoonZ":1,"kailashgautham":7,"g-tejas":2,"-":11}},{"path":"src/main/java/seedu/tatoolkit/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.DeleteCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"kailashgautham":5,"-":24}},{"path":"src/main/java/seedu/tatoolkit/logic/parser/DeleteNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"teojunda"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_INDICES;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"teojunda"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.DeleteNoteCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"teojunda"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"teojunda"},"content":" * Parses input arguments and creates a new DeleteNoteCommand object","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"teojunda"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"teojunda"},"content":"public class DeleteNoteCommandParser implements Parser\u003cDeleteNoteCommand\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"teojunda"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"teojunda"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteNoteCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"teojunda"},"content":"     * and returns an DeleteNoteCommand object for execution.","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"teojunda"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"teojunda"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"teojunda"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"teojunda"},"content":"    public DeleteNoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"teojunda"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"teojunda"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"teojunda"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_INDICES);","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"teojunda"},"content":"        Index personIndex;","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"teojunda"},"content":"        try {","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"teojunda"},"content":"            personIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"teojunda"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"teojunda"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"teojunda"},"content":"                    DeleteNoteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"teojunda"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"teojunda"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_INDICES)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"teojunda"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteNoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"teojunda"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"teojunda"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_INDICES);","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"teojunda"},"content":"        List\u003cIndex\u003e notes \u003d ParserUtil.parseIndices(argMultimap.getValue(PREFIX_INDICES).get());","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"teojunda"},"content":"        return new DeleteNoteCommand(personIndex, notes);","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"teojunda"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"teojunda"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"kailashgautham":6,"teojunda":40}},{"path":"src/main/java/seedu/tatoolkit/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_CLASS_GROUP;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.EditCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"kailashgautham"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_CLASS_GROUP,","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"kailashgautham"},"content":"                        PREFIX_EMAIL, PREFIX_PHONE, PREFIX_TELEGRAM, PREFIX_GITHUB);","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"teojunda"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_CLASS_GROUP, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"teojunda"},"content":"                PREFIX_TELEGRAM, PREFIX_GITHUB);","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"teojunda"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).orElse(\"\")));","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"kailashgautham"},"content":"        if (argMultimap.getValue(PREFIX_CLASS_GROUP).isPresent()) {","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"kailashgautham"},"content":"            editPersonDescriptor.setClassGroup(","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"kailashgautham"},"content":"                    ParserUtil.parseClassGroup(argMultimap.getValue(PREFIX_CLASS_GROUP).get()));","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"kailashgautham"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"kailashgautham"},"content":"        if (argMultimap.getValue(PREFIX_TELEGRAM).isPresent()) {","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"kailashgautham"},"content":"            editPersonDescriptor.setTelegram(","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"kailashgautham"},"content":"                    ParserUtil.parseTelegram(argMultimap.getValue(PREFIX_TELEGRAM).orElse(\"\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"kailashgautham"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"kailashgautham"},"content":"        if (argMultimap.getValue(PREFIX_GITHUB).isPresent()) {","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"kailashgautham"},"content":"            editPersonDescriptor.setGithub(","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"kailashgautham"},"content":"                    ParserUtil.parseGithub(argMultimap.getValue(PREFIX_GITHUB).orElse(\"\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"kailashgautham":26,"teojunda":3,"-":46}},{"path":"src/main/java/seedu/tatoolkit/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.FindCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"kailashgautham":5,"-":28}},{"path":"src/main/java/seedu/tatoolkit/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"g-tejas"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"g-tejas"},"content":"import java.util.List;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"g-tejas"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"g-tejas"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.ListCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.ClassGroup;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.ListCommandPredicate;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"g-tejas"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"g-tejas"},"content":" * Parses input arguments and creates a new ListCommand object","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"g-tejas"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"g-tejas"},"content":"public class ListCommandParser implements Parser\u003cListCommand\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"g-tejas"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"g-tejas"},"content":"     * Parses the given {@code String} of arguments in the context of the ListCommand","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"g-tejas"},"content":"     * and returns a ListCommand object for execution.","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"g-tejas"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"g-tejas"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"g-tejas"},"content":"    public ListCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"g-tejas"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"g-tejas"},"content":"        if (!trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"g-tejas"},"content":"            String[] classGroups \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"g-tejas"},"content":"            List\u003cClassGroup\u003e groups;","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"g-tejas"},"content":"            try {","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"g-tejas"},"content":"                groups \u003d Arrays.stream(classGroups).map(ClassGroup::new).collect(Collectors.toList());","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"g-tejas"},"content":"            } catch (IllegalArgumentException err) {","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"g-tejas"},"content":"                throw new ParseException(","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"g-tejas"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE)","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"g-tejas"},"content":"                );","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"g-tejas"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"g-tejas"},"content":"            return new ListCommand(new ListCommandPredicate(Optional.of(groups)));","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"g-tejas"},"content":"        } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"g-tejas"},"content":"            return new ListCommand(new ListCommandPredicate(Optional.empty()));","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"g-tejas"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"kailashgautham":6,"g-tejas":39}},{"path":"src/main/java/seedu/tatoolkit/logic/parser/MarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_ABSENT;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_PRESENT;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_WEEK;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"g-tejas"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.LogsCenter;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.MarkCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.attendance.Week;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"g-tejas"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"g-tejas"},"content":" * Parses input arguments and creates a new MarkCommand object","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"g-tejas"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"g-tejas"},"content":"public class MarkCommandParser implements Parser\u003cMarkCommand\u003e {","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MarkCommandParser.class);","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"g-tejas"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"g-tejas"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"g-tejas"},"content":"     * and returns an MarkCommand object for execution.","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"g-tejas"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"g-tejas"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"g-tejas"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"g-tejas"},"content":"    public MarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"g-tejas"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"kailashgautham"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_WEEK, PREFIX_PRESENT, PREFIX_ABSENT);","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"teojunda"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_WEEK)","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"teojunda"},"content":"            || (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_PRESENT)","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"teojunda"},"content":"                \u0026\u0026 !ParserUtil.arePrefixesPresent(argMultimap, PREFIX_ABSENT))","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"teojunda"},"content":"            || (ParserUtil.arePrefixesPresent(argMultimap, PREFIX_PRESENT)","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"teojunda"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_PRESENT).get().isEmpty())","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"teojunda"},"content":"            || (ParserUtil.arePrefixesPresent(argMultimap, PREFIX_ABSENT)","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"teojunda"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_ABSENT).get().isEmpty()) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"g-tejas"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"g-tejas"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"kailashgautham"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_WEEK, PREFIX_PRESENT, PREFIX_ABSENT);","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"g-tejas"},"content":"        Week week \u003d ParserUtil.parseWeek(argMultimap.getValue(PREFIX_WEEK).get());","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"kailashgautham"},"content":"        List\u003cIndex\u003e presentIndices \u003d ParserUtil.parseIndices(argMultimap.getValue(PREFIX_PRESENT).orElse(\"\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"kailashgautham"},"content":"        List\u003cIndex\u003e absentIndices \u003d ParserUtil.parseIndices(argMultimap.getValue(PREFIX_ABSENT).orElse(\"\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"kailashgautham"},"content":"        if (presentIndices.isEmpty() \u0026\u0026 absentIndices.isEmpty()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"kailashgautham"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"kailashgautham"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"kailashgautham"},"content":"        return new MarkCommand(week, presentIndices, absentIndices);","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"kailashgautham":22,"teojunda":7,"g-tejas":23}},{"path":"src/main/java/seedu/tatoolkit/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.Command;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"kailashgautham":3,"-":13}},{"path":"src/main/java/seedu/tatoolkit/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"g-tejas"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"g-tejas"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"g-tejas"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"teojunda"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.util.StringUtil;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.attendance.Week;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.ClassGroup;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Email;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Github;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Name;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Note;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Phone;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Telegram;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"teojunda"},"content":"    public static final String MESSAGE_NO_VALID_INDICES \u003d \"No valid indices were provided.\";","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"teojunda"},"content":"    public static final String MESSAGE_DUPLICATE_INDICES \u003d \"Duplicate indices were provided.\";","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"teojunda"},"content":"    public static Optional\u003cPhone\u003e parsePhone(String phone) throws ParseException {","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"teojunda"},"content":"        if (phone.isEmpty()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"teojunda"},"content":"            return Optional.of(Phone.EMPTY);","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"teojunda"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"teojunda"},"content":"        return Optional.of(new Phone(trimmedPhone));","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"kailashgautham"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"kailashgautham"},"content":"     * Parses a {@code String classGroup} into an {@code ClassGroup}.","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"kailashgautham"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"kailashgautham"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"kailashgautham"},"content":"     * @throws ParseException if the given {@code classGroup} is invalid.","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"kailashgautham"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"kailashgautham"},"content":"    public static ClassGroup parseClassGroup(String classGroup) throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"kailashgautham"},"content":"        requireNonNull(classGroup);","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"kailashgautham"},"content":"        String trimmedClassGroup \u003d classGroup.trim();","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"kailashgautham"},"content":"        if (!ClassGroup.isValidClassGroup(trimmedClassGroup)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"kailashgautham"},"content":"            throw new ParseException(ClassGroup.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"kailashgautham"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"kailashgautham"},"content":"        return new ClassGroup(trimmedClassGroup);","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"kailashgautham"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"kailashgautham"},"content":"     * Parses a {@code String telegram} into an {@code Telegram}.","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"kailashgautham"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"kailashgautham"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"kailashgautham"},"content":"     * @throws ParseException if the given {@code telegram} is invalid.","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"kailashgautham"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"kailashgautham"},"content":"    public static Optional\u003cTelegram\u003e parseTelegram(String telegram) throws ParseException {","lastModifiedDate":"2024-03-13"},{"lineNumber":115,"author":{"gitId":"kailashgautham"},"content":"        if (telegram.isEmpty()) {","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"kailashgautham"},"content":"            return Optional.of(Telegram.EMPTY);","lastModifiedDate":"2024-03-13"},{"lineNumber":117,"author":{"gitId":"kailashgautham"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"kailashgautham"},"content":"        String trimmedTelegram \u003d telegram.trim();","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"kailashgautham"},"content":"        if (!Telegram.isValidTelegram(trimmedTelegram)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"kailashgautham"},"content":"            throw new ParseException(Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"kailashgautham"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"kailashgautham"},"content":"        return Optional.of(new Telegram(trimmedTelegram));","lastModifiedDate":"2024-03-13"},{"lineNumber":123,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"kailashgautham"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":126,"author":{"gitId":"kailashgautham"},"content":"     * Parses a {@code String github} into an {@code Github}.","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"kailashgautham"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-11"},{"lineNumber":128,"author":{"gitId":"kailashgautham"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"kailashgautham"},"content":"     * @throws ParseException if the given {@code github} is invalid.","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"kailashgautham"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":131,"author":{"gitId":"kailashgautham"},"content":"    public static Optional\u003cGithub\u003e parseGithub(String github) throws ParseException {","lastModifiedDate":"2024-03-13"},{"lineNumber":132,"author":{"gitId":"kailashgautham"},"content":"        if (github.isEmpty()) {","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"kailashgautham"},"content":"            return Optional.of(Github.EMPTY);","lastModifiedDate":"2024-03-13"},{"lineNumber":134,"author":{"gitId":"kailashgautham"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":135,"author":{"gitId":"kailashgautham"},"content":"        String trimmedGithub \u003d github.trim();","lastModifiedDate":"2024-03-11"},{"lineNumber":136,"author":{"gitId":"kailashgautham"},"content":"        if (!Github.isValidGithub(trimmedGithub)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":137,"author":{"gitId":"kailashgautham"},"content":"            throw new ParseException(Github.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"kailashgautham"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"kailashgautham"},"content":"        return Optional.of(new Github(trimmedGithub));","lastModifiedDate":"2024-03-13"},{"lineNumber":140,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":141,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":142,"author":{"gitId":"g-tejas"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":143,"author":{"gitId":"YuSoonZ"},"content":"     * Parses a {@code String note} into an {@code Note}.","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"YuSoonZ"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-27"},{"lineNumber":145,"author":{"gitId":"YuSoonZ"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":146,"author":{"gitId":"YuSoonZ"},"content":"     * @throws ParseException if the given {@code note} is invalid.","lastModifiedDate":"2024-03-27"},{"lineNumber":147,"author":{"gitId":"YuSoonZ"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":148,"author":{"gitId":"YuSoonZ"},"content":"    public static Note parseNote(String note) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":149,"author":{"gitId":"YuSoonZ"},"content":"        requireNonNull(note);","lastModifiedDate":"2024-03-27"},{"lineNumber":150,"author":{"gitId":"YuSoonZ"},"content":"        String trimmedNote \u003d note.trim();","lastModifiedDate":"2024-03-27"},{"lineNumber":151,"author":{"gitId":"YuSoonZ"},"content":"        if (!Note.isValidNote(trimmedNote)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":152,"author":{"gitId":"YuSoonZ"},"content":"            throw new ParseException(Note.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":153,"author":{"gitId":"YuSoonZ"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":154,"author":{"gitId":"YuSoonZ"},"content":"        return new Note(note);","lastModifiedDate":"2024-03-27"},{"lineNumber":155,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":156,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":157,"author":{"gitId":"YuSoonZ"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":158,"author":{"gitId":"YuSoonZ"},"content":"     * Parses a {@code String week} into an {@code Week}.","lastModifiedDate":"2024-03-27"},{"lineNumber":159,"author":{"gitId":"g-tejas"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-25"},{"lineNumber":160,"author":{"gitId":"g-tejas"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":161,"author":{"gitId":"g-tejas"},"content":"     * @throws ParseException if the given {@code week} is invalid.","lastModifiedDate":"2024-03-25"},{"lineNumber":162,"author":{"gitId":"g-tejas"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":163,"author":{"gitId":"g-tejas"},"content":"    public static Week parseWeek(String week) throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":164,"author":{"gitId":"g-tejas"},"content":"        requireNonNull(week);","lastModifiedDate":"2024-03-25"},{"lineNumber":165,"author":{"gitId":"g-tejas"},"content":"        String trimmedWeek \u003d week.trim();","lastModifiedDate":"2024-03-25"},{"lineNumber":166,"author":{"gitId":"teojunda"},"content":"        Index weekIndex;","lastModifiedDate":"2024-03-27"},{"lineNumber":167,"author":{"gitId":"teojunda"},"content":"        try {","lastModifiedDate":"2024-03-27"},{"lineNumber":168,"author":{"gitId":"teojunda"},"content":"            weekIndex \u003d parseIndex(trimmedWeek);","lastModifiedDate":"2024-03-27"},{"lineNumber":169,"author":{"gitId":"teojunda"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2024-03-27"},{"lineNumber":170,"author":{"gitId":"teojunda"},"content":"            throw new ParseException(Week.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":171,"author":{"gitId":"teojunda"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":172,"author":{"gitId":"g-tejas"},"content":"        if (!Week.isValidWeek(weekIndex)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":173,"author":{"gitId":"g-tejas"},"content":"            throw new ParseException(Week.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":174,"author":{"gitId":"g-tejas"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":175,"author":{"gitId":"g-tejas"},"content":"        return new Week(weekIndex);","lastModifiedDate":"2024-03-25"},{"lineNumber":176,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":177,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":178,"author":{"gitId":"g-tejas"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":179,"author":{"gitId":"g-tejas"},"content":"     * Parses a {@code String indices} into a {@code List\u003cIndex\u003e}.","lastModifiedDate":"2024-03-25"},{"lineNumber":180,"author":{"gitId":"g-tejas"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-25"},{"lineNumber":181,"author":{"gitId":"g-tejas"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":182,"author":{"gitId":"g-tejas"},"content":"     * @throws ParseException if the given {@code indices} is invalid.","lastModifiedDate":"2024-03-25"},{"lineNumber":183,"author":{"gitId":"g-tejas"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":184,"author":{"gitId":"g-tejas"},"content":"    public static List\u003cIndex\u003e parseIndices(String indices) throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":185,"author":{"gitId":"kailashgautham"},"content":"        if (indices.isEmpty()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"kailashgautham"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-29"},{"lineNumber":187,"author":{"gitId":"kailashgautham"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":188,"author":{"gitId":"g-tejas"},"content":"        String[] trimmedIndices \u003d Arrays.stream(indices.trim().split(\",\"))","lastModifiedDate":"2024-03-25"},{"lineNumber":189,"author":{"gitId":"g-tejas"},"content":"                .map(String::trim)","lastModifiedDate":"2024-03-25"},{"lineNumber":190,"author":{"gitId":"g-tejas"},"content":"                .filter(str -\u003e !str.isEmpty())","lastModifiedDate":"2024-03-25"},{"lineNumber":191,"author":{"gitId":"g-tejas"},"content":"                .toArray(String[]::new);","lastModifiedDate":"2024-03-25"},{"lineNumber":192,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":193,"author":{"gitId":"g-tejas"},"content":"        List\u003cIndex\u003e indexList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":194,"author":{"gitId":"g-tejas"},"content":"        for (String index : trimmedIndices) {","lastModifiedDate":"2024-03-25"},{"lineNumber":195,"author":{"gitId":"teojunda"},"content":"            Index parsedIndex \u003d parseIndex(index);","lastModifiedDate":"2024-03-29"},{"lineNumber":196,"author":{"gitId":"teojunda"},"content":"            if (!indexList.contains(parsedIndex)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":197,"author":{"gitId":"teojunda"},"content":"                indexList.add(parsedIndex);","lastModifiedDate":"2024-03-29"},{"lineNumber":198,"author":{"gitId":"teojunda"},"content":"            } else {","lastModifiedDate":"2024-03-29"},{"lineNumber":199,"author":{"gitId":"teojunda"},"content":"                throw new ParseException(MESSAGE_DUPLICATE_INDICES);","lastModifiedDate":"2024-03-29"},{"lineNumber":200,"author":{"gitId":"teojunda"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":201,"author":{"gitId":"g-tejas"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":202,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":203,"author":{"gitId":"teojunda"},"content":"        if (indexList.isEmpty()) {","lastModifiedDate":"2024-03-27"},{"lineNumber":204,"author":{"gitId":"teojunda"},"content":"            throw new ParseException(MESSAGE_NO_VALID_INDICES);","lastModifiedDate":"2024-03-27"},{"lineNumber":205,"author":{"gitId":"teojunda"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":206,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":207,"author":{"gitId":"g-tejas"},"content":"        return indexList;","lastModifiedDate":"2024-03-25"},{"lineNumber":208,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":209,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":210,"author":{"gitId":"teojunda"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":211,"author":{"gitId":"teojunda"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-29"},{"lineNumber":212,"author":{"gitId":"teojunda"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-29"},{"lineNumber":213,"author":{"gitId":"teojunda"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":214,"author":{"gitId":"teojunda"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-29"},{"lineNumber":215,"author":{"gitId":"teojunda"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-29"},{"lineNumber":216,"author":{"gitId":"teojunda"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"YuSoonZ":16,"kailashgautham":65,"teojunda":33,"g-tejas":35,"-":68}},{"path":"src/main/java/seedu/tatoolkit/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!(other instanceof Prefix)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return prefix.equals(otherPrefix.prefix);","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"kailashgautham":1,"-":41}},{"path":"src/main/java/seedu/tatoolkit/logic/parser/TaToolkitParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.LogsCenter;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.AddCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.AddNoteCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.ClearCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.Command;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.DeleteCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.DeleteNoteCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.EditCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.ExitCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.FindCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.HelpCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.ListCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.MarkCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.ViewCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"kailashgautham"},"content":"public class TaToolkitParser {","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"kailashgautham"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(TaToolkitParser.class);","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"YuSoonZ"},"content":"        case AddNoteCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"YuSoonZ"},"content":"            return new AddNoteCommandParser().parse(arguments);","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"teojunda"},"content":"        case DeleteNoteCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"teojunda"},"content":"            return new DeleteNoteCommandParser().parse(arguments);","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"g-tejas"},"content":"            return new ListCommandParser().parse(arguments);","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":90,"author":{"gitId":"YuSoonZ"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"YuSoonZ"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"g-tejas"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"g-tejas"},"content":"            return new MarkCommandParser().parse(arguments);","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"YuSoonZ":6,"kailashgautham":20,"teojunda":3,"g-tejas":4,"-":69}},{"path":"src/main/java/seedu/tatoolkit/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"YuSoonZ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.ViewCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"YuSoonZ"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"YuSoonZ"},"content":" * Parses input arguments and creates a new ViewCommand object.","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"YuSoonZ"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"YuSoonZ"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"YuSoonZ"},"content":"    public static final String MESSAGE_ONE_BASED_INDEXING \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"YuSoonZ"},"content":"            \"Please input a 1-based index.\";","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"YuSoonZ"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"YuSoonZ"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"YuSoonZ"},"content":"     * and returns a ViewCommand object for execution.","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"YuSoonZ"},"content":"     * @param args The user input arguments.","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"YuSoonZ"},"content":"     * @return A ViewCommand object representing the parsed command.","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"YuSoonZ"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"YuSoonZ"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"YuSoonZ"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"YuSoonZ"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"YuSoonZ"},"content":"        Index index;","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"YuSoonZ"},"content":"        try {","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"YuSoonZ"},"content":"            index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"YuSoonZ"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"YuSoonZ"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"YuSoonZ"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"YuSoonZ"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"YuSoonZ"},"content":"        if (index.getOneBased() \u003c\u003d 0) {","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"YuSoonZ"},"content":"            throw new ParseException(MESSAGE_ONE_BASED_INDEXING);","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"YuSoonZ"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"YuSoonZ"},"content":"        return new ViewCommand(index);","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"YuSoonZ"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"YuSoonZ":34,"kailashgautham":5}},{"path":"src/main/java/seedu/tatoolkit/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.parser.exceptions;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"kailashgautham":2,"-":15}},{"path":"src/main/java/seedu/tatoolkit/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"teojunda"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.GuiSettings;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"kailashgautham"},"content":"     * Returns the user prefs\u0027 TA Toolkit file path.","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"kailashgautham"},"content":"    Path getTaToolkitFilePath();","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"kailashgautham"},"content":"     * Sets the user prefs\u0027 TA Toolkit file path.","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"kailashgautham"},"content":"    void setTaToolkitFilePath(Path taToolkitFilePath);","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"kailashgautham"},"content":"     * Replaces TaToolkit data with the data in {@code taToolkit}.","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"kailashgautham"},"content":"    void setTaToolkit(ReadOnlyTaToolkit taToolkit);","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"kailashgautham"},"content":"    /** Returns the TaToolkit */","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"kailashgautham"},"content":"    ReadOnlyTaToolkit getTaToolkit();","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"kailashgautham"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the TA Toolkit.","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"kailashgautham"},"content":"     * The person must exist in the TA Toolkit.","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"teojunda"},"content":"     * Adds the given person and updates the filteredList to show all.","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"kailashgautham"},"content":"     * {@code person} must not already exist in the TA Toolkit.","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"teojunda"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"teojunda"},"content":"     * Adds the given person without updating the filteredList.","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"kailashgautham"},"content":"     * {@code person} must not already exist in the TA Toolkit.","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"teojunda"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"teojunda"},"content":"    void addPersonKeepFilter(Person person);","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":88,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"hiivan"},"content":"     * Returns an ObservableList of attendance strings for each person in the filtered person list.","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"hiivan"},"content":"     * Each string represents the attendance of one person.","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"hiivan"},"content":"     * @return ObservableList\u0026lt;String\u0026gt; of attendance details.","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"hiivan"},"content":"    ObservableList\u003cString\u003e getFilteredPersonAttendanceList();","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"hiivan"},"content":"     * Returns an observable list of attendance information strings.","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"hiivan"},"content":"     * This list is dynamically updated when attendance marks change.","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"hiivan"},"content":"     * @return An observable list of attendance info strings.","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"hiivan"},"content":"    ObservableList\u003cString\u003e getObservableAttendanceList();","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"hiivan"},"content":"     * Updates the observable list of attendance information.","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"hiivan"},"content":"     * This should be called after any operation that changes attendance data.","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"hiivan"},"content":"    void updateObservableAttendanceList();","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"teojunda"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":110,"author":{"gitId":"teojunda"},"content":"     * Retrieves the last viewed {@link Person} instance.","lastModifiedDate":"2024-03-22"},{"lineNumber":111,"author":{"gitId":"teojunda"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":112,"author":{"gitId":"teojunda"},"content":"     * This method returns an {@link Optional} which will be empty if no person has","lastModifiedDate":"2024-03-22"},{"lineNumber":113,"author":{"gitId":"teojunda"},"content":"     * been viewed last, or will contain a reference to the {@link Person} object","lastModifiedDate":"2024-03-22"},{"lineNumber":114,"author":{"gitId":"teojunda"},"content":"     * that was last viewed.","lastModifiedDate":"2024-03-22"},{"lineNumber":115,"author":{"gitId":"teojunda"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":116,"author":{"gitId":"teojunda"},"content":"     * @return an {@link Optional} containing the last viewed {@link Person} if such","lastModifiedDate":"2024-03-22"},{"lineNumber":117,"author":{"gitId":"teojunda"},"content":"     *     a person exists, or an empty {@link Optional} if no person has been viewed last.","lastModifiedDate":"2024-03-22"},{"lineNumber":118,"author":{"gitId":"teojunda"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":119,"author":{"gitId":"teojunda"},"content":"    Optional\u003cPerson\u003e getLastViewedPerson();","lastModifiedDate":"2024-03-22"},{"lineNumber":120,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":121,"author":{"gitId":"teojunda"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":122,"author":{"gitId":"teojunda"},"content":"     * Resets the information about the last viewed person.","lastModifiedDate":"2024-03-22"},{"lineNumber":123,"author":{"gitId":"teojunda"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":124,"author":{"gitId":"teojunda"},"content":"    void resetLastViewedPerson();","lastModifiedDate":"2024-03-22"},{"lineNumber":125,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":126,"author":{"gitId":"teojunda"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":127,"author":{"gitId":"teojunda"},"content":"     * Updates the record of the last viewed person to the specified {@link Person}.","lastModifiedDate":"2024-03-22"},{"lineNumber":128,"author":{"gitId":"teojunda"},"content":"     * \u003cp\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":129,"author":{"gitId":"teojunda"},"content":"     * This method sets the internally tracked last viewed person to the provided","lastModifiedDate":"2024-03-22"},{"lineNumber":130,"author":{"gitId":"teojunda"},"content":"     * {@link Person} instance.","lastModifiedDate":"2024-03-22"},{"lineNumber":131,"author":{"gitId":"teojunda"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":132,"author":{"gitId":"teojunda"},"content":"     * @param p the {@link Person} instance to set as the last viewed person; cannot be {@code null}.","lastModifiedDate":"2024-03-22"},{"lineNumber":133,"author":{"gitId":"teojunda"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":134,"author":{"gitId":"teojunda"},"content":"    void updateLastViewedPerson(Person p);","lastModifiedDate":"2024-03-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"kailashgautham":15,"teojunda":34,"hiivan":21,"-":65}},{"path":"src/main/java/seedu/tatoolkit/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"hiivan"},"content":"import java.util.List;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"teojunda"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"hiivan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"hiivan"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"hiivan"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.GuiSettings;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.LogsCenter;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"hiivan"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"hiivan"},"content":"import seedu.tatoolkit.model.attendance.Week;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":" * Represents the in-memory model of the TA Toolkit data.","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"kailashgautham"},"content":"    private final TaToolkit taToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"teojunda"},"content":"    private Optional\u003cPerson\u003e lastViewedPerson;","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"hiivan"},"content":"    private ObservableList\u003cString\u003e observableAttendanceList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"kailashgautham"},"content":"     * Initializes a ModelManager with the given taToolkit and userPrefs.","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"kailashgautham"},"content":"    public ModelManager(ReadOnlyTaToolkit taToolkit, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"kailashgautham"},"content":"        requireAllNonNull(taToolkit, userPrefs);","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"kailashgautham"},"content":"        logger.fine(\"Initializing with TA Toolkit: \" + taToolkit + \" and user prefs \" + userPrefs);","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"kailashgautham"},"content":"        this.taToolkit \u003d new TaToolkit(taToolkit);","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"kailashgautham"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.taToolkit.getPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"teojunda"},"content":"        lastViewedPerson \u003d Optional.empty();","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"kailashgautham"},"content":"        this(new TaToolkit(), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"kailashgautham"},"content":"    public Path getTaToolkitFilePath() {","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"kailashgautham"},"content":"        return userPrefs.getTaToolkitFilePath();","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"kailashgautham"},"content":"    public void setTaToolkitFilePath(Path taToolkitFilePath) {","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"kailashgautham"},"content":"        requireNonNull(taToolkitFilePath);","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"kailashgautham"},"content":"        userPrefs.setTaToolkitFilePath(taToolkitFilePath);","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"kailashgautham"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaToolkit \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"kailashgautham"},"content":"    public void setTaToolkit(ReadOnlyTaToolkit taToolkit) {","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"kailashgautham"},"content":"        this.taToolkit.resetData(taToolkit);","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"kailashgautham"},"content":"    public ReadOnlyTaToolkit getTaToolkit() {","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"kailashgautham"},"content":"        return taToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"kailashgautham"},"content":"        return taToolkit.hasPerson(person);","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":108,"author":{"gitId":"kailashgautham"},"content":"        taToolkit.removePerson(target);","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":113,"author":{"gitId":"kailashgautham"},"content":"        taToolkit.addPerson(person);","lastModifiedDate":"2024-04-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":117,"author":{"gitId":"teojunda"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":118,"author":{"gitId":"teojunda"},"content":"    public void addPersonKeepFilter(Person person) {","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"kailashgautham"},"content":"        taToolkit.addPerson(person);","lastModifiedDate":"2024-04-01"},{"lineNumber":120,"author":{"gitId":"teojunda"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"kailashgautham"},"content":"     * {@code versionedTaToolkit}","lastModifiedDate":"2024-04-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":133,"author":{"gitId":"hiivan"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"hiivan"},"content":"    public ObservableList\u003cString\u003e getFilteredPersonAttendanceList() {","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"hiivan"},"content":"        return IntStream.rangeClosed(1, 13)","lastModifiedDate":"2024-04-03"},{"lineNumber":136,"author":{"gitId":"hiivan"},"content":"                .mapToObj(weekNumber -\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"hiivan"},"content":"                    Week week \u003d new Week(Index.fromOneBased(weekNumber));","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"hiivan"},"content":"                    List\u003cString\u003e absentPersons \u003d filteredPersons.stream()","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"hiivan"},"content":"                            .filter(person -\u003e person.isAbsent(week))","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"hiivan"},"content":"                            .map(person -\u003e person.getName().fullName)","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"hiivan"},"content":"                            .collect(Collectors.toList());","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"hiivan"},"content":"                    String absenteesFormatted \u003d absentPersons.isEmpty() ? \"None\" : String.join(\", \", absentPersons);","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"teojunda"},"content":"                    return String.format(\"Week %d\\nAbsentees: %s\",","lastModifiedDate":"2024-04-04"},{"lineNumber":144,"author":{"gitId":"teojunda"},"content":"                            weekNumber, absenteesFormatted);","lastModifiedDate":"2024-04-04"},{"lineNumber":145,"author":{"gitId":"hiivan"},"content":"                })","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"hiivan"},"content":"                .collect(Collectors.toCollection(FXCollections::observableArrayList));","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":155,"author":{"gitId":"teojunda"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Last Viewed Person Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-22"},{"lineNumber":156,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":157,"author":{"gitId":"teojunda"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":158,"author":{"gitId":"teojunda"},"content":"    public Optional\u003cPerson\u003e getLastViewedPerson() {","lastModifiedDate":"2024-03-22"},{"lineNumber":159,"author":{"gitId":"teojunda"},"content":"        return lastViewedPerson;","lastModifiedDate":"2024-03-22"},{"lineNumber":160,"author":{"gitId":"teojunda"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":161,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":162,"author":{"gitId":"teojunda"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":163,"author":{"gitId":"teojunda"},"content":"    public void resetLastViewedPerson() {","lastModifiedDate":"2024-03-22"},{"lineNumber":164,"author":{"gitId":"teojunda"},"content":"        lastViewedPerson \u003d Optional.empty();","lastModifiedDate":"2024-03-22"},{"lineNumber":165,"author":{"gitId":"teojunda"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":166,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":167,"author":{"gitId":"teojunda"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":168,"author":{"gitId":"teojunda"},"content":"    public void updateLastViewedPerson(Person p) {","lastModifiedDate":"2024-03-22"},{"lineNumber":169,"author":{"gitId":"teojunda"},"content":"        requireNonNull(p);","lastModifiedDate":"2024-03-22"},{"lineNumber":170,"author":{"gitId":"teojunda"},"content":"        lastViewedPerson \u003d Optional.of(p);","lastModifiedDate":"2024-03-22"},{"lineNumber":171,"author":{"gitId":"teojunda"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":172,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":185,"author":{"gitId":"kailashgautham"},"content":"        return taToolkit.equals(otherModelManager.taToolkit)","lastModifiedDate":"2024-04-01"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":190,"author":{"gitId":"hiivan"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Attendance List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":191,"author":{"gitId":"hiivan"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":192,"author":{"gitId":"hiivan"},"content":"    public ObservableList\u003cString\u003e getObservableAttendanceList() {","lastModifiedDate":"2024-04-03"},{"lineNumber":193,"author":{"gitId":"hiivan"},"content":"        return observableAttendanceList;","lastModifiedDate":"2024-04-03"},{"lineNumber":194,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":195,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":196,"author":{"gitId":"hiivan"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":197,"author":{"gitId":"hiivan"},"content":"    public void updateObservableAttendanceList() {","lastModifiedDate":"2024-04-03"},{"lineNumber":198,"author":{"gitId":"hiivan"},"content":"        observableAttendanceList.setAll(getFilteredPersonAttendanceList());","lastModifiedDate":"2024-04-03"},{"lineNumber":199,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kailashgautham":30,"teojunda":26,"hiivan":32,"-":112}},{"path":"src/main/java/seedu/tatoolkit/model/ReadOnlyTaToolkit.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":" * Unmodifiable view of a TA Toolkit","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"public interface ReadOnlyTaToolkit {","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kailashgautham":4,"-":13}},{"path":"src/main/java/seedu/tatoolkit/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.GuiSettings;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"    Path getTaToolkitFilePath();","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"kailashgautham":3,"-":13}},{"path":"src/main/java/seedu/tatoolkit/model/TaToolkit.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.UniquePersonList;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":" * Wraps all data at the tatoolkit level","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"public class TaToolkit implements ReadOnlyTaToolkit {","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"kailashgautham"},"content":"    public TaToolkit() {}","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"kailashgautham"},"content":"     * Creates a TaToolkit using the Persons in the {@code toBeCopied}","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"kailashgautham"},"content":"    public TaToolkit(ReadOnlyTaToolkit toBeCopied) {","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"kailashgautham"},"content":"     * Resets the existing data of this {@code TaToolkit} with {@code newData}.","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"kailashgautham"},"content":"    public void resetData(ReadOnlyTaToolkit newData) {","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"kailashgautham"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the TA Toolkit.","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"kailashgautham"},"content":"     * Adds a person to the TA Toolkit.","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"kailashgautham"},"content":"     * The person must not already exist in the TA Toolkit.","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"kailashgautham"},"content":"     * Removes {@code key} from this {@code TaToolkit}.","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"kailashgautham"},"content":"     * {@code key} must exist in the TA Toolkit.","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"kailashgautham"},"content":"        if (!(other instanceof TaToolkit)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"kailashgautham"},"content":"        TaToolkit otherTaToolkit \u003d (TaToolkit) other;","lastModifiedDate":"2024-04-01"},{"lineNumber":112,"author":{"gitId":"kailashgautham"},"content":"        return persons.equals(otherTaToolkit.persons);","lastModifiedDate":"2024-04-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kailashgautham":19,"-":100}},{"path":"src/main/java/seedu/tatoolkit/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.GuiSettings;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"    private Path taToolkitFilePath \u003d Paths.get(\"data\" , \"tatoolkit.json\");","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"kailashgautham"},"content":"        setTaToolkitFilePath(newUserPrefs.getTaToolkitFilePath());","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"kailashgautham"},"content":"    public Path getTaToolkitFilePath() {","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"kailashgautham"},"content":"        return taToolkitFilePath;","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"kailashgautham"},"content":"    public void setTaToolkitFilePath(Path taToolkitFilePath) {","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"kailashgautham"},"content":"        requireNonNull(taToolkitFilePath);","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"kailashgautham"},"content":"        this.taToolkitFilePath \u003d taToolkitFilePath;","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"kailashgautham"},"content":"                \u0026\u0026 taToolkitFilePath.equals(otherUserPrefs.taToolkitFilePath);","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"kailashgautham"},"content":"        return Objects.hash(guiSettings, taToolkitFilePath);","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"kailashgautham"},"content":"        sb.append(\"\\nLocal data file location : \" + taToolkitFilePath);","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kailashgautham":12,"-":76}},{"path":"src/main/java/seedu/tatoolkit/model/attendance/Attendance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model.attendance;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"g-tejas"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"g-tejas"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"g-tejas"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"g-tejas"},"content":" * Represents the attendance of a student in TA Toolkit. The attendance of someone is marked negatively.","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"g-tejas"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"g-tejas"},"content":"public class Attendance {","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"g-tejas"},"content":"    private final Status[] attendanceList;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"g-tejas"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"g-tejas"},"content":"     * An enum that represents the status of a week\u0027s attendance.","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"g-tejas"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"g-tejas"},"content":"    public enum Status {","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"g-tejas"},"content":"        PRESENT, ABSENT","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"g-tejas"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"g-tejas"},"content":"     * Creates an Attendance object with all weeks unmarked.","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"hiivan"},"content":"     * By default, all 13 weeks are marked as present since attendance is marked negatively.","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"g-tejas"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"g-tejas"},"content":"    public Attendance() {","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"g-tejas"},"content":"        attendanceList \u003d new Status[13];","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"g-tejas"},"content":"        resetAttendance();","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"g-tejas"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"g-tejas"},"content":"     * Returns true if the student is absent for the specified week.","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"g-tejas"},"content":"     * @param week The week to check the attendance status of","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"g-tejas"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"g-tejas"},"content":"    public boolean isAbsent(Week week) {","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"g-tejas"},"content":"        return attendanceList[week.getWeekIndex().getZeroBased()].equals(Status.ABSENT);","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"g-tejas"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"g-tejas"},"content":"     * Changes the attendance status of a week. If the week is already modified, return false.","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"g-tejas"},"content":"     * @param week The week to change the attendance status of","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"g-tejas"},"content":"     * @param status The new status of the week","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"g-tejas"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"g-tejas"},"content":"    public void changeAttendanceStatus(Week week, Status status) {","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"g-tejas"},"content":"        attendanceList[week.getWeekIndex().getZeroBased()] \u003d status;","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"g-tejas"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"g-tejas"},"content":"     * Resets the attendance of the student to all present.","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"g-tejas"},"content":"     * Attendance is marked negatively, hence all weeks are marked as present by default.","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"g-tejas"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"g-tejas"},"content":"    public void resetAttendance() {","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"g-tejas"},"content":"        for (int i \u003d 0; i \u003c 13; i++) {","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"g-tejas"},"content":"            attendanceList[i] \u003d Status.PRESENT;","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"g-tejas"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"g-tejas"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"g-tejas"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"g-tejas"},"content":"        StringBuilder sb \u003d new StringBuilder(\"Weeks Absent: \");","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"g-tejas"},"content":"        String absentWeeks \u003d IntStream.rangeClosed(0, 12)","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"g-tejas"},"content":"                .filter(i -\u003e attendanceList[i] \u003d\u003d Status.ABSENT)","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"g-tejas"},"content":"                .map(i -\u003e i + 1)","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"g-tejas"},"content":"                .mapToObj(String::valueOf)","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"g-tejas"},"content":"                .collect(Collectors.joining(\", \"));","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"kailashgautham"},"content":"        sb.append(absentWeeks.isEmpty() ? \"None\" : absentWeeks);","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"g-tejas"},"content":"        return sb.toString();","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"kailashgautham"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"kailashgautham"},"content":"     * Returns the attendance status of the student as an array.","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"kailashgautham"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"kailashgautham"},"content":"    public Status[] getStatusAsArray() {","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"kailashgautham"},"content":"        return attendanceList;","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"g-tejas"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"g-tejas"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"g-tejas"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"g-tejas"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"g-tejas"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"g-tejas"},"content":"        if (!(other instanceof Attendance)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"g-tejas"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"g-tejas"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"g-tejas"},"content":"        Attendance otherAttendance \u003d (Attendance) other;","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"g-tejas"},"content":"        for (int i \u003d 0; i \u003c 13; i++) {","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"g-tejas"},"content":"            if (attendanceList[i] !\u003d otherAttendance.attendanceList[i]) {","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"g-tejas"},"content":"                return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"g-tejas"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"g-tejas"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"g-tejas"},"content":"        return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"kailashgautham"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"kailashgautham"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"kailashgautham"},"content":"        return attendanceList.hashCode();","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"kailashgautham":14,"hiivan":1,"g-tejas":82}},{"path":"src/main/java/seedu/tatoolkit/model/attendance/Week.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model.attendance;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"g-tejas"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"g-tejas"},"content":" * Represents a single week in a 13 Week Semester in TA Toolkit.","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"g-tejas"},"content":" * Each week is identified by a unique index, between 1 and 13 (inclusive).","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"g-tejas"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"g-tejas"},"content":"public class Week {","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"g-tejas"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Week number should be between 1 and 13 (inclusive)\";","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"g-tejas"},"content":"    private final Index weekIndex;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"g-tejas"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"g-tejas"},"content":"     * Constructs a {@code Week}.","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"g-tejas"},"content":"     * @param weekIndex A valid week index.","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"g-tejas"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"g-tejas"},"content":"    public Week(Index weekIndex) { // The parsing into index is done in the parser","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"g-tejas"},"content":"        checkArgument(isValidWeek(weekIndex), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"g-tejas"},"content":"        this.weekIndex \u003d weekIndex;","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"g-tejas"},"content":"    public Index getWeekIndex() {","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"g-tejas"},"content":"        return weekIndex;","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"g-tejas"},"content":"    public static boolean isValidWeek(Index weekIndex) {","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"g-tejas"},"content":"        return weekIndex.getOneBased() \u003e\u003d 1 \u0026\u0026 weekIndex.getOneBased() \u003c\u003d 13;","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"g-tejas"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"g-tejas"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"g-tejas"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"g-tejas"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"g-tejas"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"g-tejas"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"g-tejas"},"content":"        if (!(other instanceof Week)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"g-tejas"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"g-tejas"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"g-tejas"},"content":"        Week otherWeek \u003d (Week) other;","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"g-tejas"},"content":"        return weekIndex.equals(otherWeek.weekIndex);","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"g-tejas"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"g-tejas"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"g-tejas"},"content":"        return weekIndex.getOneBased();","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"g-tejas"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"g-tejas"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"g-tejas"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"g-tejas"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"g-tejas"},"content":"        return \"Week \" + weekIndex.getOneBased();","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"kailashgautham":3,"g-tejas":56}},{"path":"src/main/java/seedu/tatoolkit/model/person/ClassGroup.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model.person;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"g-tejas"},"content":" * Represents a Person\u0027s class/group in the TA Toolkit.","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidClassGroup(String)}","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"public class ClassGroup {","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"            \"Class/groups should only contain alphanumeric characters.\\n\"","lastModifiedDate":"2024-04-08"},{"lineNumber":14,"author":{"gitId":"g-tejas"},"content":"                    + \"It cannot contain symbols, whitespaces and it should not be blank\";","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"    /*","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"     * The first character of the class/group must not be a whitespace,","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"g-tejas"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?:[\\\\p{Alnum}]+-?)*[\\\\p{Alnum}]+$\";","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":"    public final String classGroup;","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"kailashgautham"},"content":"     * Constructs a {@code ClassGroup}.","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"kailashgautham"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"     * @param classGroup A valid classGroup.","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"kailashgautham"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"kailashgautham"},"content":"    public ClassGroup(String classGroup) {","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"kailashgautham"},"content":"        requireNonNull(classGroup);","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"kailashgautham"},"content":"        checkArgument(isValidClassGroup(classGroup), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"kailashgautham"},"content":"        this.classGroup \u003d classGroup;","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"kailashgautham"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"kailashgautham"},"content":"     * Returns true if a given string is a valid class/group.","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"kailashgautham"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"kailashgautham"},"content":"    public static boolean isValidClassGroup(String test) {","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"kailashgautham"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"kailashgautham"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"kailashgautham"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"kailashgautham"},"content":"        return classGroup;","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"kailashgautham"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"kailashgautham"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"kailashgautham"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"kailashgautham"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"kailashgautham"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"kailashgautham"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"kailashgautham"},"content":"        if (!(other instanceof ClassGroup)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"kailashgautham"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"kailashgautham"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"kailashgautham"},"content":"        ClassGroup otherClassGroup \u003d (ClassGroup) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"kailashgautham"},"content":"        return classGroup.equals(otherClassGroup.classGroup);","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"kailashgautham"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"kailashgautham"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"kailashgautham"},"content":"        return classGroup.hashCode();","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"kailashgautham"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"kailashgautham":65,"g-tejas":3}},{"path":"src/main/java/seedu/tatoolkit/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model.person;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":" * Represents a Person\u0027s email in the TA Toolkit.","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"kailashgautham"},"content":"        return value.equalsIgnoreCase(otherEmail.value);","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kailashgautham":4,"-":75}},{"path":"src/main/java/seedu/tatoolkit/model/person/Github.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model.person;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":" * Represents a Person\u0027s GitHub ID in the TA Toolkit.","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGithub(String)}","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"public class Github {","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"            \"GitHub ID should only contain alphanumeric characters and symbols\";","lastModifiedDate":"2024-04-09"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"    public static final Github EMPTY \u003d new Github(\"\", true);","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"    /*","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"     * The first character of the GitHub ID must not be a whitespace,","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9_.-]+$\";","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"    public final String githubId;","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"kailashgautham"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"kailashgautham"},"content":"     * Constructs a {@code Github}.","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"kailashgautham"},"content":"     * @param githubId A valid Github ID.","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"kailashgautham"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"kailashgautham"},"content":"    public Github(String githubId) {","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"kailashgautham"},"content":"        requireNonNull(githubId);","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"kailashgautham"},"content":"        checkArgument(isValidGithub(githubId), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"kailashgautham"},"content":"        this.githubId \u003d githubId;","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"kailashgautham"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"kailashgautham"},"content":"     * Constructs a {@code Github}.","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"kailashgautham"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"kailashgautham"},"content":"     * @param githubId An empty string.","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"kailashgautham"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"kailashgautham"},"content":"    private Github(String githubId, boolean isSentinel) {","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"kailashgautham"},"content":"        if (!isSentinel) {","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"kailashgautham"},"content":"            throw new IllegalArgumentException(\"This constructor is only for creating the EMPTY object\");","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"kailashgautham"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"kailashgautham"},"content":"        this.githubId \u003d githubId;","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"kailashgautham"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"kailashgautham"},"content":"     * Returns true if a given string is a valid GitHub ID.","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"kailashgautham"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"kailashgautham"},"content":"    public static boolean isValidGithub(String test) {","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"kailashgautham"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"teojunda"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"teojunda"},"content":"     * Returns true if the Github ID is empty.","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"teojunda"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"teojunda"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"teojunda"},"content":"        return githubId.isEmpty();","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"teojunda"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"kailashgautham"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"kailashgautham"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"kailashgautham"},"content":"        return githubId;","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"kailashgautham"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"kailashgautham"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"kailashgautham"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"kailashgautham"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"kailashgautham"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"kailashgautham"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"kailashgautham"},"content":"        if (!(other instanceof Github)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"kailashgautham"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"kailashgautham"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"kailashgautham"},"content":"        Github otherGithub \u003d (Github) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"kailashgautham"},"content":"        return githubId.equalsIgnoreCase(otherGithub.githubId);","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"kailashgautham"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"kailashgautham"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"kailashgautham"},"content":"        return githubId.hashCode();","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"kailashgautham"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"kailashgautham":81,"teojunda":6}},{"path":"src/main/java/seedu/tatoolkit/model/person/ListCommandPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model.person;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"g-tejas"},"content":"import java.util.List;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"g-tejas"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"g-tejas"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"g-tejas"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"g-tejas"},"content":" * Tests that a {@code Person}\u0027s {@code Name} is from any of the classGroups given or all","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"g-tejas"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"g-tejas"},"content":"public class ListCommandPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"g-tejas"},"content":"    private final Optional\u003cList\u003cClassGroup\u003e\u003e classGroups;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"g-tejas"},"content":"    public ListCommandPredicate(Optional\u003cList\u003cClassGroup\u003e\u003e classGroups) {","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"g-tejas"},"content":"        this.classGroups \u003d classGroups;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"g-tejas"},"content":"    public Optional\u003cList\u003cClassGroup\u003e\u003e getClassGroups() {","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"g-tejas"},"content":"        return classGroups;","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"g-tejas"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"g-tejas"},"content":"     * If the classGroups is not empty, tests that a {@code Person}\u0027s {@code ClassGroup} matches any of the","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"g-tejas"},"content":"     * keywords given. If the classGroups is empty, all persons are shown, so return true.","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"g-tejas"},"content":"     * @param person The person to be tested","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"g-tejas"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"g-tejas"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"g-tejas"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"g-tejas"},"content":"        return classGroups.map(groups -\u003e groups.stream()","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"g-tejas"},"content":"                .anyMatch(keyword -\u003e person.getClassGroup().toString().startsWith(keyword.toString())))","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"g-tejas"},"content":"                .orElse(true);","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"g-tejas"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"g-tejas"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"g-tejas"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"g-tejas"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"g-tejas"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"g-tejas"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"g-tejas"},"content":"        if (!(other instanceof ListCommandPredicate)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"g-tejas"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"g-tejas"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"g-tejas"},"content":"        ListCommandPredicate otherPredicate \u003d (ListCommandPredicate) other;","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"g-tejas"},"content":"        return classGroups.equals(otherPredicate.classGroups);","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"g-tejas"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"g-tejas"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"g-tejas"},"content":"        return new ToStringBuilder(this).add(\"classGroups\", classGroups).toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"kailashgautham":2,"g-tejas":53}},{"path":"src/main/java/seedu/tatoolkit/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model.person;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":" * Represents a Person\u0027s name in the TA Toolkit.","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"teojunda"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"teojunda"},"content":"     * Compares this Name object with the specified Name object for order based on their full names,","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"teojunda"},"content":"     * ignoring case considerations.","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"teojunda"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"teojunda"},"content":"     * \u003cp\u003eReturns a negative integer, zero, or a positive integer as this Name object is less than, equal to,","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"teojunda"},"content":"     * or greater than the specified Name object.","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"teojunda"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"teojunda"},"content":"     * \u003cp\u003eThe comparison is based on lexicographic ordering of the full names of the Names.","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"teojunda"},"content":"     * The comparison is case-insensitive.","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"teojunda"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"teojunda"},"content":"     * @param other The Name object to be compared.","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"teojunda"},"content":"     * @return A negative integer if this Name is less than the specified Name, zero if they are equal, or a","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"teojunda"},"content":"     *     positive integer if this Name is greater than the specified Name.","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"teojunda"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"teojunda"},"content":"    public int compare(Name other) {","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"teojunda"},"content":"        return fullName.compareToIgnoreCase(other.toString());","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"teojunda"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kailashgautham":4,"teojunda":17,"-":62}},{"path":"src/main/java/seedu/tatoolkit/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model.person;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.util.StringUtil;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kailashgautham":3,"-":41}},{"path":"src/main/java/seedu/tatoolkit/model/person/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model.person;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"YuSoonZ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"YuSoonZ"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":" * Represents a Person\u0027s note in the TA Toolkit.","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"YuSoonZ"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidNote(String)}","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"YuSoonZ"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"YuSoonZ"},"content":"public class Note {","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"YuSoonZ"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"YuSoonZ"},"content":"            \"Notes should only contain alphanumeric characters and punctuation(.,!?),\"","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"YuSoonZ"},"content":"                    + \" and it should not be blank\";","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"YuSoonZ"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?\u003d.*[a-zA-Z0-9.,!?])[a-zA-Z0-9.,!? ]+$\";","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"YuSoonZ"},"content":"    private final String note;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"YuSoonZ"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"YuSoonZ"},"content":"     * Constructs a {@code Note}.","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"YuSoonZ"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"YuSoonZ"},"content":"     * @param note A valid note.","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"YuSoonZ"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"YuSoonZ"},"content":"    public Note(String note) {","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"YuSoonZ"},"content":"        requireNonNull(note);","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"YuSoonZ"},"content":"        checkArgument(isValidNote(note), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"YuSoonZ"},"content":"        this.note \u003d note;","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"YuSoonZ"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"YuSoonZ"},"content":"     * Returns true if a given string is a note.","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"YuSoonZ"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"YuSoonZ"},"content":"    public static boolean isValidNote(String test) {","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"YuSoonZ"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"YuSoonZ"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"YuSoonZ"},"content":"    public String toString() {","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"YuSoonZ"},"content":"        return note;","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"YuSoonZ"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"YuSoonZ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"YuSoonZ"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"YuSoonZ"},"content":"            return true;","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"YuSoonZ"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"YuSoonZ"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"YuSoonZ"},"content":"        if (!(other instanceof Note)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"YuSoonZ"},"content":"            return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"YuSoonZ"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"YuSoonZ"},"content":"        Note otherNote \u003d (Note) other;","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"YuSoonZ"},"content":"        return note.equals(otherNote.note);","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"YuSoonZ"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"YuSoonZ"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"YuSoonZ"},"content":"        return note.hashCode();","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"YuSoonZ"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"YuSoonZ":59,"kailashgautham":3}},{"path":"src/main/java/seedu/tatoolkit/model/person/Notes.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model.person;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"YuSoonZ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"YuSoonZ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"YuSoonZ"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":" * Represents a Person\u0027s notes in the TA Toolkit.","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"YuSoonZ"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"YuSoonZ"},"content":"public class Notes {","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"YuSoonZ"},"content":"    public final ArrayList\u003cNote\u003e notes;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"YuSoonZ"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"YuSoonZ"},"content":"     * Constructs an empty {@code Notes}.","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"YuSoonZ"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"YuSoonZ"},"content":"    public Notes() {","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"YuSoonZ"},"content":"        this.notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"YuSoonZ"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"YuSoonZ"},"content":"     * Constructs a list of {@code Notes}.","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"YuSoonZ"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"YuSoonZ"},"content":"    public Notes(ArrayList\u003cString\u003e stringNotes) {","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"YuSoonZ"},"content":"        ArrayList\u003cNote\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"YuSoonZ"},"content":"        for (String stringNote: stringNotes) {","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"YuSoonZ"},"content":"            Note note \u003d new Note(stringNote);","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"YuSoonZ"},"content":"            notes.add(note);","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"YuSoonZ"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"YuSoonZ"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"teojunda"},"content":"    public Note get(int index) {","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"teojunda"},"content":"        return notes.get(index);","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"teojunda"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"teojunda"},"content":"    public int size() {","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"YuSoonZ"},"content":"        return notes.size();","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"YuSoonZ"},"content":"    public ArrayList\u003cString\u003e getAsStrings() {","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"YuSoonZ"},"content":"        ArrayList\u003cString\u003e notesAsStrings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"YuSoonZ"},"content":"        for (Note note: notes) {","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"YuSoonZ"},"content":"            notesAsStrings.add(note.toString());","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"YuSoonZ"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"YuSoonZ"},"content":"        return notesAsStrings;","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"YuSoonZ"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"YuSoonZ"},"content":"     * Adds a note to Notes.","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"YuSoonZ"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"YuSoonZ"},"content":"    public void addNote(Note note) {","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"YuSoonZ"},"content":"        requireNonNull(note);","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"YuSoonZ"},"content":"        notes.add(note);","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"YuSoonZ"},"content":"    public void deleteNote(int index) {","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"YuSoonZ"},"content":"        notes.remove(index);","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"YuSoonZ"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"YuSoonZ"},"content":"        return notes.isEmpty();","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"YuSoonZ"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"YuSoonZ"},"content":"    public String toString() {","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"YuSoonZ"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"YuSoonZ"},"content":"        int counter \u003d 1;","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"YuSoonZ"},"content":"        for (Note note: notes) {","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"YuSoonZ"},"content":"            result.append(\u0027\\n\u0027);","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"YuSoonZ"},"content":"            result.append(counter + \": \" + note.toString());","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"YuSoonZ"},"content":"            counter++;","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"YuSoonZ"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"YuSoonZ"},"content":"        return result.toString();","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"YuSoonZ"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"YuSoonZ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"YuSoonZ"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"YuSoonZ"},"content":"            return true;","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"YuSoonZ"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"YuSoonZ"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"YuSoonZ"},"content":"        if (!(other instanceof Notes)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"YuSoonZ"},"content":"            return false;","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"YuSoonZ"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"YuSoonZ"},"content":"        Notes otherNotes \u003d (Notes) other;","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"YuSoonZ"},"content":"        return notes.equals(otherNotes.notes);","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"YuSoonZ"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"YuSoonZ"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"YuSoonZ"},"content":"        return notes.hashCode();","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"YuSoonZ"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"YuSoonZ":89,"kailashgautham":2,"teojunda":5}},{"path":"src/main/java/seedu/tatoolkit/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model.person;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"YuSoonZ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.attendance.Attendance;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.attendance.Week;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":" * Represents a Person in the TA Toolkit.","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":"    private final ClassGroup classGroup;","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"teojunda"},"content":"    private final Optional\u003cPhone\u003e phone;","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"kailashgautham"},"content":"    private final Optional\u003cTelegram\u003e telegram;","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"kailashgautham"},"content":"    private final Optional\u003cGithub\u003e github;","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"YuSoonZ"},"content":"    private final Notes notes;","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"g-tejas"},"content":"    private final Attendance attendance;","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"teojunda"},"content":"     * Create a new contact with name, classGroup, email, phone, telegram, github.","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"teojunda"},"content":"    public Person(Name name, ClassGroup classGroup, Email email, Optional\u003cPhone\u003e phone,","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"kailashgautham"},"content":"                  Optional\u003cTelegram\u003e telegram, Optional\u003cGithub\u003e github) {","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"kailashgautham"},"content":"        requireAllNonNull(name, classGroup, email, phone);","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"kailashgautham"},"content":"        this.classGroup \u003d classGroup;","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"kailashgautham"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"kailashgautham"},"content":"        this.telegram \u003d telegram;","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"kailashgautham"},"content":"        this.github \u003d github;","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"g-tejas"},"content":"        this.attendance \u003d new Attendance();","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"YuSoonZ"},"content":"        this.notes \u003d new Notes();","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"YuSoonZ"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"YuSoonZ"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"YuSoonZ"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"YuSoonZ"},"content":"    public Person(Name name, ClassGroup classGroup, Email email, Optional\u003cPhone\u003e phone,","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"YuSoonZ"},"content":"                  Optional\u003cTelegram\u003e telegram, Optional\u003cGithub\u003e github, Notes notes) {","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"YuSoonZ"},"content":"        requireAllNonNull(name, classGroup, email, phone);","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"YuSoonZ"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"YuSoonZ"},"content":"        this.classGroup \u003d classGroup;","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"YuSoonZ"},"content":"        this.email \u003d email;","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"YuSoonZ"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"YuSoonZ"},"content":"        this.telegram \u003d telegram;","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"YuSoonZ"},"content":"        this.github \u003d github;","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"YuSoonZ"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"YuSoonZ"},"content":"        this.attendance \u003d new Attendance();","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"teojunda"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"teojunda"},"content":"     * Create a copy of an existing contact with name, classGroup, email, phone, telegram, github, attendance.","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"teojunda"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"teojunda"},"content":"    public Person(Name name, ClassGroup classGroup, Email email, Optional\u003cPhone\u003e phone,","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"teojunda"},"content":"                  Optional\u003cTelegram\u003e telegram, Optional\u003cGithub\u003e github, Attendance attendance, Notes notes) {","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"teojunda"},"content":"        requireAllNonNull(name, classGroup, email, phone, attendance, notes);","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"teojunda"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"teojunda"},"content":"        this.classGroup \u003d classGroup;","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"teojunda"},"content":"        this.email \u003d email;","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"teojunda"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"teojunda"},"content":"        this.telegram \u003d telegram;","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"teojunda"},"content":"        this.github \u003d github;","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"teojunda"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"teojunda"},"content":"        this.attendance \u003d attendance;","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"teojunda"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"teojunda"},"content":"    public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"kailashgautham"},"content":"    public ClassGroup getClassGroup() {","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"kailashgautham"},"content":"        return classGroup;","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":96,"author":{"gitId":"kailashgautham"},"content":"    public Optional\u003cTelegram\u003e getTelegram() {","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"kailashgautham"},"content":"        return telegram;","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"kailashgautham"},"content":"    public Optional\u003cGithub\u003e getGithub() {","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"kailashgautham"},"content":"        return github;","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"YuSoonZ"},"content":"    public Notes getNotes() {","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"YuSoonZ"},"content":"        return notes;","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"teojunda"},"content":"    public int getNoteSize() {","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"teojunda"},"content":"        return notes.size();","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"teojunda"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"YuSoonZ"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"YuSoonZ"},"content":"     * Adds a note to a person\u0027s notes","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"YuSoonZ"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":115,"author":{"gitId":"YuSoonZ"},"content":"     * @param note The note to be added.","lastModifiedDate":"2024-03-27"},{"lineNumber":116,"author":{"gitId":"YuSoonZ"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"YuSoonZ"},"content":"    public void addNote(Note note) {","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"YuSoonZ"},"content":"        requireNonNull(note);","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"YuSoonZ"},"content":"        notes.addNote(note);","lastModifiedDate":"2024-03-27"},{"lineNumber":120,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":121,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":122,"author":{"gitId":"teojunda"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"teojunda"},"content":"     * Deletes a note to a person\u0027s notes","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"teojunda"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"teojunda"},"content":"     * @param index The index of the note to be deleted.","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"teojunda"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"teojunda"},"content":"    public void deleteNote(int index) {","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"teojunda"},"content":"        notes.deleteNote(index);","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"teojunda"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"g-tejas"},"content":"    public Attendance getAttendance() {","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"g-tejas"},"content":"        return attendance;","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"g-tejas"},"content":"    public boolean isAbsent(Week week) {","lastModifiedDate":"2024-03-25"},{"lineNumber":136,"author":{"gitId":"g-tejas"},"content":"        return attendance.isAbsent(week);","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":138,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"g-tejas"},"content":"    public void markPresent(Week week) {","lastModifiedDate":"2024-03-25"},{"lineNumber":140,"author":{"gitId":"g-tejas"},"content":"        attendance.changeAttendanceStatus(week, Attendance.Status.PRESENT);","lastModifiedDate":"2024-03-25"},{"lineNumber":141,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":142,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":143,"author":{"gitId":"g-tejas"},"content":"    public void markAbsent(Week week) {","lastModifiedDate":"2024-03-25"},{"lineNumber":144,"author":{"gitId":"g-tejas"},"content":"        attendance.changeAttendanceStatus(week, Attendance.Status.ABSENT);","lastModifiedDate":"2024-03-25"},{"lineNumber":145,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":146,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":147,"author":{"gitId":"g-tejas"},"content":"    public void resetAttendance() {","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"g-tejas"},"content":"        attendance.resetAttendance();","lastModifiedDate":"2024-03-25"},{"lineNumber":149,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":150,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"teojunda"},"content":"     * Returns true if both persons have the same Email, Phone (optional), Telegram (optional), or Github (optional).","lastModifiedDate":"2024-03-24"},{"lineNumber":153,"author":{"gitId":"teojunda"},"content":"     * Persons are allowed to have the same name.","lastModifiedDate":"2024-03-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"teojunda"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":156,"author":{"gitId":"teojunda"},"content":"     * @param otherPerson The Person object whose fields are to be compared.","lastModifiedDate":"2024-03-14"},{"lineNumber":157,"author":{"gitId":"teojunda"},"content":"     * @return True if both persons have either the same Email, Phone (optional), Telegram (optional),","lastModifiedDate":"2024-03-24"},{"lineNumber":158,"author":{"gitId":"teojunda"},"content":"     *     or Github (optional).","lastModifiedDate":"2024-03-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"teojunda"},"content":"    public boolean checkDuplicateField(Person otherPerson) {","lastModifiedDate":"2024-03-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"teojunda"},"content":"        if (otherPerson \u003d\u003d null) {","lastModifiedDate":"2024-03-13"},{"lineNumber":165,"author":{"gitId":"teojunda"},"content":"            return false;","lastModifiedDate":"2024-03-13"},{"lineNumber":166,"author":{"gitId":"teojunda"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":168,"author":{"gitId":"teojunda"},"content":"        boolean isEmailEqual \u003d otherPerson.getEmail().equals(getEmail());","lastModifiedDate":"2024-03-13"},{"lineNumber":169,"author":{"gitId":"teojunda"},"content":"        boolean isBothPhoneNonEmpty \u003d !getPhone().orElse(Phone.EMPTY).isEmpty()","lastModifiedDate":"2024-03-24"},{"lineNumber":170,"author":{"gitId":"teojunda"},"content":"                \u0026\u0026 !otherPerson.getPhone().orElse(Phone.EMPTY).isEmpty();","lastModifiedDate":"2024-03-24"},{"lineNumber":171,"author":{"gitId":"teojunda"},"content":"        boolean isBothTelegramNonEmpty \u003d !getTelegram().orElse(Telegram.EMPTY).isEmpty()","lastModifiedDate":"2024-03-13"},{"lineNumber":172,"author":{"gitId":"teojunda"},"content":"                \u0026\u0026 !otherPerson.getTelegram().orElse(Telegram.EMPTY).isEmpty();","lastModifiedDate":"2024-03-13"},{"lineNumber":173,"author":{"gitId":"teojunda"},"content":"        boolean isBothGithubNonEmpty \u003d !getGithub().orElse(Github.EMPTY).isEmpty()","lastModifiedDate":"2024-03-13"},{"lineNumber":174,"author":{"gitId":"teojunda"},"content":"                \u0026\u0026 !otherPerson.getGithub().orElse(Github.EMPTY).isEmpty();","lastModifiedDate":"2024-03-13"},{"lineNumber":175,"author":{"gitId":"teojunda"},"content":"        boolean isPhoneNonEmptyAndEqual \u003d isBothPhoneNonEmpty \u0026\u0026 otherPerson.getPhone().equals(getPhone());","lastModifiedDate":"2024-03-24"},{"lineNumber":176,"author":{"gitId":"teojunda"},"content":"        boolean isTelegramNonEmptyAndEqual \u003d isBothTelegramNonEmpty \u0026\u0026 otherPerson.getTelegram().equals(getTelegram());","lastModifiedDate":"2024-03-13"},{"lineNumber":177,"author":{"gitId":"teojunda"},"content":"        boolean isGithubNonEmptyAndEqual \u003d isBothGithubNonEmpty \u0026\u0026 otherPerson.getGithub().equals(getGithub());","lastModifiedDate":"2024-03-13"},{"lineNumber":178,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":179,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":180,"author":{"gitId":"teojunda"},"content":"        return (isEmailEqual","lastModifiedDate":"2024-03-13"},{"lineNumber":181,"author":{"gitId":"teojunda"},"content":"                || isPhoneNonEmptyAndEqual","lastModifiedDate":"2024-03-24"},{"lineNumber":182,"author":{"gitId":"teojunda"},"content":"                || isTelegramNonEmptyAndEqual","lastModifiedDate":"2024-03-13"},{"lineNumber":183,"author":{"gitId":"teojunda"},"content":"                || isGithubNonEmptyAndEqual);","lastModifiedDate":"2024-03-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":186,"author":{"gitId":"teojunda"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":187,"author":{"gitId":"teojunda"},"content":"     * Compares this Person\u0027s name with the specified Person\u0027s name for order based on their names, ignoring case","lastModifiedDate":"2024-03-13"},{"lineNumber":188,"author":{"gitId":"teojunda"},"content":"     * considerations.","lastModifiedDate":"2024-03-13"},{"lineNumber":189,"author":{"gitId":"teojunda"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":190,"author":{"gitId":"teojunda"},"content":"     * \u003cp\u003eReturns a negative integer, zero, or a positive integer as this Person\u0027s name is less than, equal to,","lastModifiedDate":"2024-03-13"},{"lineNumber":191,"author":{"gitId":"teojunda"},"content":"     * or greater than the specified Person\u0027s name.","lastModifiedDate":"2024-03-13"},{"lineNumber":192,"author":{"gitId":"teojunda"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":193,"author":{"gitId":"teojunda"},"content":"     * \u003cp\u003eThe comparison is based on lexicographic ordering of the names of the Persons.","lastModifiedDate":"2024-03-13"},{"lineNumber":194,"author":{"gitId":"teojunda"},"content":"     * The comparison is case-insensitive.","lastModifiedDate":"2024-03-13"},{"lineNumber":195,"author":{"gitId":"teojunda"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":196,"author":{"gitId":"teojunda"},"content":"     * @param other The Person object whose name is to be compared.","lastModifiedDate":"2024-03-13"},{"lineNumber":197,"author":{"gitId":"teojunda"},"content":"     * @return A negative integer if this Person\u0027s name is less than the specified Person\u0027s name,","lastModifiedDate":"2024-03-13"},{"lineNumber":198,"author":{"gitId":"teojunda"},"content":"     *     zero if they are equal, or a positive integer if this Person\u0027s name is greater than the other Person\u0027s name.","lastModifiedDate":"2024-03-13"},{"lineNumber":199,"author":{"gitId":"teojunda"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":200,"author":{"gitId":"teojunda"},"content":"    public int compareName(Person other) {","lastModifiedDate":"2024-03-13"},{"lineNumber":201,"author":{"gitId":"teojunda"},"content":"        return name.compare(other.getName());","lastModifiedDate":"2024-03-13"},{"lineNumber":202,"author":{"gitId":"teojunda"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":203,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":221,"author":{"gitId":"kailashgautham"},"content":"                \u0026\u0026 classGroup.equals(otherPerson.classGroup)","lastModifiedDate":"2024-03-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":223,"author":{"gitId":"kailashgautham"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2024-03-11"},{"lineNumber":224,"author":{"gitId":"kailashgautham"},"content":"                \u0026\u0026 telegram.equals(otherPerson.telegram)","lastModifiedDate":"2024-03-11"},{"lineNumber":225,"author":{"gitId":"g-tejas"},"content":"                \u0026\u0026 github.equals(otherPerson.github)","lastModifiedDate":"2024-03-25"},{"lineNumber":226,"author":{"gitId":"teojunda"},"content":"                \u0026\u0026 attendance.equals(otherPerson.attendance)","lastModifiedDate":"2024-03-30"},{"lineNumber":227,"author":{"gitId":"teojunda"},"content":"                \u0026\u0026 notes.equals(otherPerson.notes);","lastModifiedDate":"2024-03-30"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":233,"author":{"gitId":"YuSoonZ"},"content":"        return Objects.hash(name, classGroup, email, phone, telegram, github, attendance, notes);","lastModifiedDate":"2024-03-27"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":240,"author":{"gitId":"kailashgautham"},"content":"                .add(\"classGroup\", classGroup)","lastModifiedDate":"2024-03-11"},{"lineNumber":241,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":242,"author":{"gitId":"teojunda"},"content":"                .add(\"phone\", phone.isPresent() ? phone.get() : \"\")","lastModifiedDate":"2024-03-24"},{"lineNumber":243,"author":{"gitId":"kailashgautham"},"content":"                .add(\"telegram\", telegram.isPresent() ? telegram.get() : \"\")","lastModifiedDate":"2024-03-11"},{"lineNumber":244,"author":{"gitId":"kailashgautham"},"content":"                .add(\"github\", github.isPresent() ? github.get() : \"\")","lastModifiedDate":"2024-03-11"},{"lineNumber":245,"author":{"gitId":"g-tejas"},"content":"                .add(\"attendance\", attendance)","lastModifiedDate":"2024-03-25"},{"lineNumber":246,"author":{"gitId":"teojunda"},"content":"                .add(\"notes\", notes)","lastModifiedDate":"2024-03-30"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"YuSoonZ":36,"kailashgautham":31,"teojunda":80,"g-tejas":25,"-":77}},{"path":"src/main/java/seedu/tatoolkit/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model.person;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":" * Represents a Person\u0027s phone number in the TA Toolkit.","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2024-04-08"},{"lineNumber":15,"author":{"gitId":"teojunda"},"content":"    public static final Phone EMPTY \u003d new Phone(\"\", true);","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2024-04-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"teojunda"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"teojunda"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"teojunda"},"content":"     *","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"teojunda"},"content":"     * @param phone An empty string.","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"teojunda"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"teojunda"},"content":"    private Phone(String phone, boolean isSentinel) {","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"teojunda"},"content":"        if (!isSentinel) {","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"teojunda"},"content":"            throw new IllegalArgumentException(\"This constructor is only for creating the EMPTY object\");","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"teojunda"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"teojunda"},"content":"        this.value \u003d phone;","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"teojunda"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"teojunda"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"teojunda"},"content":"     * Returns true if Phone is empty.","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"teojunda"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"teojunda"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"teojunda"},"content":"        return value.isEmpty();","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"teojunda"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kailashgautham":3,"teojunda":20,"-":58}},{"path":"src/main/java/seedu/tatoolkit/model/person/Telegram.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model.person;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":" * Represents a Person\u0027s Telegram ID in the TA Toolkit.","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTelegram(String)}","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"public class Telegram {","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"            \"Telegram ID should only contain alphanumeric characters and symbols, and start with an @ symbol\";","lastModifiedDate":"2024-04-09"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"    public static final Telegram EMPTY \u003d new Telegram(\"\", true);","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"    /*","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"     * The first character of the telegram ID must not be a whitespace,","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[@][a-zA-Z0-9_.-]+$\";","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"    public final String telegramId;","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"kailashgautham"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"kailashgautham"},"content":"     * Constructs a {@code Telegram}.","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"kailashgautham"},"content":"     * @param telegramId A valid Telegram ID.","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"kailashgautham"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"kailashgautham"},"content":"    public Telegram(String telegramId) {","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"kailashgautham"},"content":"        requireNonNull(telegramId);","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"kailashgautham"},"content":"        checkArgument(isValidTelegram(telegramId), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"kailashgautham"},"content":"        this.telegramId \u003d telegramId;","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"kailashgautham"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"kailashgautham"},"content":"     * Constructs a {@code Telegram}.","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"kailashgautham"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"kailashgautham"},"content":"     * @param telegramId An empty string.","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"kailashgautham"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"kailashgautham"},"content":"    private Telegram(String telegramId, boolean isSentinel) {","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"kailashgautham"},"content":"        if (!isSentinel) {","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"kailashgautham"},"content":"            throw new IllegalArgumentException(\"This constructor is only for creating the EMPTY object\");","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"kailashgautham"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"kailashgautham"},"content":"        this.telegramId \u003d telegramId;","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"kailashgautham"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"kailashgautham"},"content":"     * Returns true if a given string is a valid Telegram ID.","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"kailashgautham"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"kailashgautham"},"content":"    public static boolean isValidTelegram(String test) {","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"kailashgautham"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"teojunda"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"teojunda"},"content":"     * Returns true is the Telegram ID is empty.","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"teojunda"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"teojunda"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"teojunda"},"content":"        return telegramId.isEmpty();","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"teojunda"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"kailashgautham"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"kailashgautham"},"content":"    public String toString() {","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"kailashgautham"},"content":"        return telegramId;","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"kailashgautham"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"kailashgautham"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"kailashgautham"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"kailashgautham"},"content":"            return true;","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"kailashgautham"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"kailashgautham"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-11"},{"lineNumber":74,"author":{"gitId":"kailashgautham"},"content":"        if (!(other instanceof Telegram)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"kailashgautham"},"content":"            return false;","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"kailashgautham"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"kailashgautham"},"content":"        Telegram otherTelegram \u003d (Telegram) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"kailashgautham"},"content":"        return telegramId.equalsIgnoreCase(otherTelegram.telegramId);","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"kailashgautham"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"kailashgautham"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"kailashgautham"},"content":"        return telegramId.hashCode();","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"kailashgautham"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"kailashgautham":81,"teojunda":6}},{"path":"src/main/java/seedu/tatoolkit/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model.person;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"teojunda"},"content":" * The list of persons is always sorted by name by ensuring all inserts are added in the correct index.","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"teojunda"},"content":" *","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"teojunda"},"content":" * @see Person#checkDuplicateField(Person)","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"teojunda"},"content":"        return internalList.stream().anyMatch(toCheck::checkDuplicateField);","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"teojunda"},"content":"        int insertionIndex \u003d 0;","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"teojunda"},"content":"        for (Person person : internalList) {","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"teojunda"},"content":"            if (toAdd.compareName(person) \u003c 0) {","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"teojunda"},"content":"                break;","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"teojunda"},"content":"            }","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"teojunda"},"content":"            insertionIndex++;","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"teojunda"},"content":"        internalList.add(insertionIndex, toAdd);","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"teojunda"},"content":"                if (persons.get(i).checkDuplicateField(persons.get(j))) {","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kailashgautham":4,"teojunda":12,"-":123}},{"path":"src/main/java/seedu/tatoolkit/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model.person.exceptions;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"kailashgautham":1,"-":10}},{"path":"src/main/java/seedu/tatoolkit/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model.person.exceptions;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"kailashgautham":1,"-":5}},{"path":"src/main/java/seedu/tatoolkit/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model.util;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.ReadOnlyTaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.TaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.ClassGroup;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Email;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Github;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Name;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Phone;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Telegram;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":" * Contains utility methods for populating {@code TaToolkit} with sample data.","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"            new Person(new Name(\"Alex Yeoh\"), new ClassGroup(\"T10-2\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"teojunda"},"content":"                    Optional.of(new Phone(\"87438807\")), Optional.of(new Telegram(\"@alex123\")),","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"teojunda"},"content":"                    Optional.of(new Github(\"alexyeoh\"))),","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":"            new Person(new Name(\"Bernice Yu\"), new ClassGroup(\"T11-2\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"teojunda"},"content":"                    Optional.of(new Phone(\"99272758\")), Optional.of(new Telegram(\"@bernice123\")),","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"kailashgautham"},"content":"                    Optional.of(new Github(\"berniceyu123\"))),","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new ClassGroup(\"T11-2\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"teojunda"},"content":"                    Optional.of(new Phone(\"93210283\")), Optional.of(new Telegram(\"@charlotte123\")),","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"kailashgautham"},"content":"                    Optional.of(new Github(\"charlotte123\"))),","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"kailashgautham"},"content":"            new Person(new Name(\"David Li\"), new ClassGroup(\"F14-3\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"teojunda"},"content":"                    Optional.of(new Phone(\"91031282\")), Optional.of(new Telegram(\"@david123\")),","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"teojunda"},"content":"                    Optional.of(new Github(\"david123\"))),","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"kailashgautham"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new ClassGroup(\"A12-3\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"teojunda"},"content":"                    Optional.of(new Phone(\"92492021\")), Optional.of(new Telegram(\"@irfan123\")),","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"teojunda"},"content":"                    Optional.of(new Github(\"irfan123\"))),","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"kailashgautham"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new ClassGroup(\"A05-4\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"teojunda"},"content":"                    Optional.of(new Phone(\"92624417\")), Optional.of(new Telegram(\"@roy123\")),","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"teojunda"},"content":"                    Optional.of(new Github(\"roy123\")))","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"kailashgautham"},"content":"    public static ReadOnlyTaToolkit getSampleTaToolkit() {","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"kailashgautham"},"content":"        TaToolkit sampleAb \u003d new TaToolkit();","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"kailashgautham":23,"teojunda":10,"-":16}},{"path":"src/main/java/seedu/tatoolkit/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.storage;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"YuSoonZ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.attendance.Attendance;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.attendance.Week;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.ClassGroup;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Email;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Github;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Name;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Note;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Notes;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Phone;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Telegram;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"kailashgautham"},"content":"    private final String classGroup;","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"kailashgautham"},"content":"    private final String telegram;","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"kailashgautham"},"content":"    private final String github;","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"YuSoonZ"},"content":"    private final ArrayList\u003cString\u003e notes;","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"kailashgautham"},"content":"    private final Attendance.Status[] attendance;","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"kailashgautham"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"classGroup\") String classGroup,","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"YuSoonZ"},"content":"                             @JsonProperty(\"telegram\") String telegram, @JsonProperty(\"github\") String github,","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"kailashgautham"},"content":"                             @JsonProperty(\"notes\") ArrayList\u003cString\u003e notes,","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"kailashgautham"},"content":"                             @JsonProperty(\"attendance\") Attendance.Status[] attendance) {","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"kailashgautham"},"content":"        this.classGroup \u003d classGroup;","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"kailashgautham"},"content":"        this.telegram \u003d telegram;","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"kailashgautham"},"content":"        this.github \u003d github;","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"YuSoonZ"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"kailashgautham"},"content":"        this.attendance \u003d attendance;","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"teojunda"},"content":"        phone \u003d source.getPhone().orElse(Phone.EMPTY).value;","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"kailashgautham"},"content":"        classGroup \u003d source.getClassGroup().classGroup;","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"kailashgautham"},"content":"        telegram \u003d source.getTelegram().orElse(Telegram.EMPTY).telegramId;","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"kailashgautham"},"content":"        github \u003d source.getGithub().orElse(Github.EMPTY).githubId;","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"YuSoonZ"},"content":"        notes \u003d source.getNotes().getAsStrings();","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"kailashgautham"},"content":"        attendance \u003d source.getAttendance().getStatusAsArray();","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"teojunda"},"content":"        final Optional\u003cPhone\u003e modelPhone;","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"teojunda"},"content":"        if (phone \u003d\u003d null || phone.isEmpty()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"teojunda"},"content":"            modelPhone \u003d Optional.of(Phone.EMPTY);","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"teojunda"},"content":"        } else if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"teojunda"},"content":"        } else {","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"teojunda"},"content":"            modelPhone \u003d Optional.of(new Phone(phone));","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"kailashgautham"},"content":"        if (classGroup \u003d\u003d null) {","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"kailashgautham"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"kailashgautham"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, ClassGroup.class.getSimpleName()));","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"kailashgautham"},"content":"        if (!ClassGroup.isValidClassGroup(classGroup)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"kailashgautham"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"kailashgautham"},"content":"        final ClassGroup modelClassGroup \u003d new ClassGroup(classGroup);","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"kailashgautham"},"content":"        final Optional\u003cTelegram\u003e modelTelegram;","lastModifiedDate":"2024-03-13"},{"lineNumber":113,"author":{"gitId":"g-tejas"},"content":"        if (telegram \u003d\u003d null || telegram.isEmpty()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"kailashgautham"},"content":"            modelTelegram \u003d Optional.of(Telegram.EMPTY);","lastModifiedDate":"2024-03-13"},{"lineNumber":115,"author":{"gitId":"kailashgautham"},"content":"        } else if (!Telegram.isValidTelegram(telegram)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"kailashgautham"},"content":"            throw new IllegalValueException(Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"kailashgautham"},"content":"        } else {","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"kailashgautham"},"content":"            modelTelegram \u003d Optional.of(new Telegram(telegram));","lastModifiedDate":"2024-03-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"kailashgautham"},"content":"        final Optional\u003cGithub\u003e modelGithub;","lastModifiedDate":"2024-03-13"},{"lineNumber":122,"author":{"gitId":"g-tejas"},"content":"        if (github \u003d\u003d null || github.isEmpty()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"kailashgautham"},"content":"            modelGithub \u003d Optional.of(Github.EMPTY);","lastModifiedDate":"2024-03-13"},{"lineNumber":124,"author":{"gitId":"kailashgautham"},"content":"        } else if (!Github.isValidGithub(github)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":125,"author":{"gitId":"kailashgautham"},"content":"            throw new IllegalValueException(Github.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":126,"author":{"gitId":"kailashgautham"},"content":"        } else {","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"kailashgautham"},"content":"            modelGithub \u003d Optional.of(new Github(github));","lastModifiedDate":"2024-03-13"},{"lineNumber":128,"author":{"gitId":"kailashgautham"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":129,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"YuSoonZ"},"content":"        final Notes modelNotes \u003d new Notes();","lastModifiedDate":"2024-03-27"},{"lineNumber":131,"author":{"gitId":"YuSoonZ"},"content":"        if (notes \u003d\u003d null) {","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"YuSoonZ"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Notes.class.getSimpleName()));","lastModifiedDate":"2024-03-27"},{"lineNumber":133,"author":{"gitId":"YuSoonZ"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"YuSoonZ"},"content":"        for (String note: notes) {","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"YuSoonZ"},"content":"            if (!Note.isValidNote(note)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"YuSoonZ"},"content":"                throw new IllegalValueException(Note.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":137,"author":{"gitId":"YuSoonZ"},"content":"            } else {","lastModifiedDate":"2024-03-27"},{"lineNumber":138,"author":{"gitId":"YuSoonZ"},"content":"                Note modelNote \u003d new Note(note);","lastModifiedDate":"2024-03-27"},{"lineNumber":139,"author":{"gitId":"YuSoonZ"},"content":"                modelNotes.addNote(modelNote);","lastModifiedDate":"2024-03-27"},{"lineNumber":140,"author":{"gitId":"YuSoonZ"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":141,"author":{"gitId":"YuSoonZ"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":143,"author":{"gitId":"kailashgautham"},"content":"        final Attendance modelAttendance \u003d new Attendance();","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"kailashgautham"},"content":"        if (attendance !\u003d null) {","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"kailashgautham"},"content":"            for (int i \u003d 0; i \u003c attendance.length; i++) {","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"kailashgautham"},"content":"                modelAttendance.changeAttendanceStatus(new Week(Index.fromZeroBased(i)), attendance[i]);","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"kailashgautham"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"kailashgautham"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":150,"author":{"gitId":"kailashgautham"},"content":"        return new Person(modelName, modelClassGroup, modelEmail, modelPhone,","lastModifiedDate":"2024-03-29"},{"lineNumber":151,"author":{"gitId":"kailashgautham"},"content":"                modelTelegram, modelGithub, modelAttendance, modelNotes);","lastModifiedDate":"2024-03-29"},{"lineNumber":152,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"YuSoonZ":18,"kailashgautham":61,"teojunda":7,"g-tejas":2,"-":65}},{"path":"src/main/java/seedu/tatoolkit/storage/JsonSerializableTaToolkit.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.storage;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.ReadOnlyTaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.TaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":" * An Immutable TaToolkit that is serializable to JSON format.","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"@JsonRootName(value \u003d \"tatoolkit\")","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"class JsonSerializableTaToolkit {","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"     * Constructs a {@code JsonSerializableTaToolkit} with the given persons.","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"kailashgautham"},"content":"    public JsonSerializableTaToolkit(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"kailashgautham"},"content":"     * Converts a given {@code ReadOnlyTaToolkit} into this class for Jackson use.","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"kailashgautham"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableTaToolkit}.","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"kailashgautham"},"content":"    public JsonSerializableTaToolkit(ReadOnlyTaToolkit source) {","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"kailashgautham"},"content":"     * Converts this TA Toolkit into the model\u0027s {@code TaToolkit} object.","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"kailashgautham"},"content":"    public TaToolkit toModelType() throws IllegalValueException {","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"kailashgautham"},"content":"        TaToolkit taToolkit \u003d new TaToolkit();","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"kailashgautham"},"content":"            if (taToolkit.hasPerson(person)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"kailashgautham"},"content":"            taToolkit.addPerson(person);","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"kailashgautham"},"content":"        return taToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kailashgautham":19,"-":41}},{"path":"src/main/java/seedu/tatoolkit/storage/JsonTaToolkitStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.storage;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.LogsCenter;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.util.FileUtil;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.util.JsonUtil;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.ReadOnlyTaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":" * A class to access TaToolkit data stored as a json file on the hard disk.","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"public class JsonTaToolkitStorage implements TaToolkitStorage {","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonTaToolkitStorage.class);","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":"    private Path filePath;","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"kailashgautham"},"content":"    public JsonTaToolkitStorage(Path filePath) {","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"kailashgautham"},"content":"    public Path getTaToolkitFilePath() {","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"kailashgautham"},"content":"        return filePath;","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"kailashgautham"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"kailashgautham"},"content":"    public Optional\u003cReadOnlyTaToolkit\u003e readTaToolkit() throws DataLoadingException {","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"kailashgautham"},"content":"        return readTaToolkit(filePath);","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"kailashgautham"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"kailashgautham"},"content":"     * Similar to {@link #readTaToolkit()}.","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"kailashgautham"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"kailashgautham"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"kailashgautham"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"kailashgautham"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"kailashgautham"},"content":"    public Optional\u003cReadOnlyTaToolkit\u003e readTaToolkit(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"kailashgautham"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"kailashgautham"},"content":"        Optional\u003cJsonSerializableTaToolkit\u003e jsonTaToolkit \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"kailashgautham"},"content":"                filePath, JsonSerializableTaToolkit.class);","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"kailashgautham"},"content":"        if (!jsonTaToolkit.isPresent()) {","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"kailashgautham"},"content":"            return Optional.empty();","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"kailashgautham"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"kailashgautham"},"content":"        try {","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"kailashgautham"},"content":"            return Optional.of(jsonTaToolkit.get().toModelType());","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"kailashgautham"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"kailashgautham"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"kailashgautham"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"kailashgautham"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"kailashgautham"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"kailashgautham"},"content":"    public void saveTaToolkit(ReadOnlyTaToolkit taToolkit) throws IOException {","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"kailashgautham"},"content":"        saveTaToolkit(taToolkit, filePath);","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"kailashgautham"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"kailashgautham"},"content":"     * Similar to {@link #saveTaToolkit(ReadOnlyTaToolkit)}.","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"kailashgautham"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"kailashgautham"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"kailashgautham"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"kailashgautham"},"content":"    public void saveTaToolkit(ReadOnlyTaToolkit taToolkit, Path filePath) throws IOException {","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"kailashgautham"},"content":"        requireNonNull(taToolkit);","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"kailashgautham"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"kailashgautham"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"kailashgautham"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableTaToolkit(taToolkit), filePath);","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"kailashgautham"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"kailashgautham":80}},{"path":"src/main/java/seedu/tatoolkit/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.storage;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.util.JsonUtil;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.UserPrefs;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the file format is not as expected.","lastModifiedDate":"2023-06-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"kailashgautham":5,"-":42}},{"path":"src/main/java/seedu/tatoolkit/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.storage;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.ReadOnlyTaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.UserPrefs;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":" * API of the Storage component","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"public interface Storage extends TaToolkitStorage, UserPrefsStorage {","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":"    Path getTaToolkitFilePath();","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"kailashgautham"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"    Optional\u003cReadOnlyTaToolkit\u003e readTaToolkit() throws DataLoadingException;","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"kailashgautham"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"kailashgautham"},"content":"    void saveTaToolkit(ReadOnlyTaToolkit taToolkit) throws IOException;","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"kailashgautham"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"kailashgautham":32}},{"path":"src/main/java/seedu/tatoolkit/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.storage;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.LogsCenter;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.ReadOnlyTaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.UserPrefs;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":" * Manages storage of TaToolkit data in local storage.","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"    private TaToolkitStorage taToolkitStorage;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":"     * Creates a {@code StorageManager} with the given {@code TaToolkitStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"kailashgautham"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"kailashgautham"},"content":"    public StorageManager(TaToolkitStorage taToolkitStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"        this.taToolkitStorage \u003d taToolkitStorage;","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"kailashgautham"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"kailashgautham"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"kailashgautham"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"kailashgautham"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"kailashgautham"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"kailashgautham"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"kailashgautham"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"kailashgautham"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"kailashgautham"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"kailashgautham"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"kailashgautham"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"kailashgautham"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaToolkit methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"kailashgautham"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"kailashgautham"},"content":"    public Path getTaToolkitFilePath() {","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"kailashgautham"},"content":"        return taToolkitStorage.getTaToolkitFilePath();","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"kailashgautham"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"kailashgautham"},"content":"    public Optional\u003cReadOnlyTaToolkit\u003e readTaToolkit() throws DataLoadingException {","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"kailashgautham"},"content":"        return readTaToolkit(taToolkitStorage.getTaToolkitFilePath());","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"kailashgautham"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"kailashgautham"},"content":"    public Optional\u003cReadOnlyTaToolkit\u003e readTaToolkit(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"kailashgautham"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"kailashgautham"},"content":"        return taToolkitStorage.readTaToolkit(filePath);","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"kailashgautham"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"kailashgautham"},"content":"    public void saveTaToolkit(ReadOnlyTaToolkit taToolkit) throws IOException {","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"kailashgautham"},"content":"        saveTaToolkit(taToolkit, taToolkitStorage.getTaToolkitFilePath());","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"kailashgautham"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"kailashgautham"},"content":"    public void saveTaToolkit(ReadOnlyTaToolkit taToolkit, Path filePath) throws IOException {","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"kailashgautham"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"kailashgautham"},"content":"        taToolkitStorage.saveTaToolkit(taToolkit, filePath);","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"kailashgautham"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"kailashgautham":78}},{"path":"src/main/java/seedu/tatoolkit/storage/TaToolkitStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.storage;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.ReadOnlyTaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.TaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":" * Represents a storage for {@link TaToolkit}.","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"public interface TaToolkitStorage {","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"    Path getTaToolkitFilePath();","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":"     * Returns TaToolkit data as a {@link ReadOnlyTaToolkit}.","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"kailashgautham"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"kailashgautham"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"    Optional\u003cReadOnlyTaToolkit\u003e readTaToolkit() throws DataLoadingException;","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"kailashgautham"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"kailashgautham"},"content":"     * @see #getTaToolkitFilePath()","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"kailashgautham"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"kailashgautham"},"content":"    Optional\u003cReadOnlyTaToolkit\u003e readTaToolkit(Path filePath) throws DataLoadingException;","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"kailashgautham"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"kailashgautham"},"content":"     * Saves the given {@link ReadOnlyTaToolkit} to the storage.","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"kailashgautham"},"content":"     * @param taToolkit cannot be null.","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"kailashgautham"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"kailashgautham"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"kailashgautham"},"content":"    void saveTaToolkit(ReadOnlyTaToolkit taToolkit) throws IOException;","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"kailashgautham"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"kailashgautham"},"content":"     * @see #saveTaToolkit(ReadOnlyTaToolkit)","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"kailashgautham"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"kailashgautham"},"content":"    void saveTaToolkit(ReadOnlyTaToolkit taToolkit, Path filePath) throws IOException;","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"kailashgautham"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"kailashgautham":46}},{"path":"src/main/java/seedu/tatoolkit/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.storage;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.UserPrefs;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":" * Represents a storage for {@link seedu.tatoolkit.model.UserPrefs}.","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the loading of data from preference file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"kailashgautham"},"content":"     * Saves the given {@link seedu.tatoolkit.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"kailashgautham":6,"-":30}},{"path":"src/main/java/seedu/tatoolkit/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.ui;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.CommandResult;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"kailashgautham"},"content":"         * @see seedu.tatoolkit.logic.Logic#execute(String)","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"kailashgautham":5,"-":80}},{"path":"src/main/java/seedu/tatoolkit/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.ui;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.LogsCenter;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"hiivan"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s2-cs2103t-f14-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kailashgautham":2,"hiivan":1,"-":99}},{"path":"src/main/java/seedu/tatoolkit/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.ui;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.GuiSettings;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.LogsCenter;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.Logic;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.CommandResult;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"hiivan"},"content":"import seedu.tatoolkit.logic.commands.ListCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"hiivan"},"content":"import seedu.tatoolkit.logic.commands.ViewCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"hiivan"},"content":"    private SidePanel sidePanel;","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"hiivan"},"content":"    @FXML","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"hiivan"},"content":"    private StackPane sidePanelPlaceholder;","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"kailashgautham"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getTaToolkitFilePath());","lastModifiedDate":"2024-04-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":131,"author":{"gitId":"hiivan"},"content":"        sidePanel \u003d new SidePanel(logic.getModel());","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"hiivan"},"content":"        sidePanelPlaceholder.getChildren().add(sidePanel.getRoot());","lastModifiedDate":"2024-03-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"kailashgautham"},"content":"     * @see seedu.tatoolkit.logic.Logic#execute(String)","lastModifiedDate":"2024-04-01"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":190,"author":{"gitId":"hiivan"},"content":"            logic.getlastSidePanelCommand().ifPresent(command -\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":191,"author":{"gitId":"hiivan"},"content":"                if (command instanceof ViewCommand) {","lastModifiedDate":"2024-04-03"},{"lineNumber":192,"author":{"gitId":"hiivan"},"content":"                    logic.getLastViewedPerson().ifPresentOrElse(sidePanel::displayPerson, sidePanel::resetDetails);","lastModifiedDate":"2024-04-03"},{"lineNumber":193,"author":{"gitId":"hiivan"},"content":"                } else if (command instanceof ListCommand) {","lastModifiedDate":"2024-04-03"},{"lineNumber":194,"author":{"gitId":"hiivan"},"content":"                    sidePanel.displayAttendanceList(logic.getFilteredPersonAttendanceList());","lastModifiedDate":"2024-04-03"},{"lineNumber":195,"author":{"gitId":"hiivan"},"content":"                }","lastModifiedDate":"2024-04-03"},{"lineNumber":196,"author":{"gitId":"hiivan"},"content":"            });","lastModifiedDate":"2024-04-03"},{"lineNumber":197,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kailashgautham":9,"hiivan":17,"-":187}},{"path":"src/main/java/seedu/tatoolkit/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.ui;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Github;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Phone;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Telegram;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"kailashgautham"},"content":"    private Label telegram;","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"kailashgautham"},"content":"    @FXML","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"kailashgautham"},"content":"    private Label github;","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"kailashgautham"},"content":"    @FXML","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"kailashgautham"},"content":"    private Label classGroup;","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"kailashgautham"},"content":"    @FXML","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"kailashgautham"},"content":"    private int width \u003d 800;","lastModifiedDate":"2024-04-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"kailashgautham"},"content":"        name.setWrapText(true);","lastModifiedDate":"2024-04-09"},{"lineNumber":60,"author":{"gitId":"kailashgautham"},"content":"        name.setPrefWidth(400);","lastModifiedDate":"2024-04-09"},{"lineNumber":61,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":62,"author":{"gitId":"kailashgautham"},"content":"        classGroup.setText(person.getClassGroup().classGroup);","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"kailashgautham"},"content":"        classGroup.setWrapText(true);","lastModifiedDate":"2024-04-09"},{"lineNumber":64,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":65,"author":{"gitId":"kailashgautham"},"content":"        email.setText(\"E-mail: \" + person.getEmail().value);","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"kailashgautham"},"content":"        email.setWrapText(true);","lastModifiedDate":"2024-04-09"},{"lineNumber":67,"author":{"gitId":"kailashgautham"},"content":"        email.setPrefWidth(width);","lastModifiedDate":"2024-04-09"},{"lineNumber":68,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":69,"author":{"gitId":"teojunda"},"content":"        phone.setText(","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"teojunda"},"content":"                \"Phone Number: \" + person.getPhone().orElse(Phone.EMPTY).value);","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"kailashgautham"},"content":"        phone.setWrapText(true);","lastModifiedDate":"2024-04-09"},{"lineNumber":72,"author":{"gitId":"kailashgautham"},"content":"        phone.setPrefWidth(width);","lastModifiedDate":"2024-04-09"},{"lineNumber":73,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":74,"author":{"gitId":"kailashgautham"},"content":"        telegram.setText(","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"kailashgautham"},"content":"                \"Telegram ID: \" + person.getTelegram().orElse(Telegram.EMPTY).telegramId);","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"kailashgautham"},"content":"        telegram.setWrapText(true);","lastModifiedDate":"2024-04-09"},{"lineNumber":77,"author":{"gitId":"kailashgautham"},"content":"        telegram.setPrefWidth(width);","lastModifiedDate":"2024-04-09"},{"lineNumber":78,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-09"},{"lineNumber":79,"author":{"gitId":"kailashgautham"},"content":"        github.setText(","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"kailashgautham"},"content":"                \"GitHub ID: \" + person.getGithub().orElse(Github.EMPTY).githubId);","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"kailashgautham"},"content":"        github.setWrapText(true);","lastModifiedDate":"2024-04-09"},{"lineNumber":82,"author":{"gitId":"kailashgautham"},"content":"        github.setPrefWidth(width);","lastModifiedDate":"2024-04-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"kailashgautham":37,"teojunda":2,"-":45}},{"path":"src/main/java/seedu/tatoolkit/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.ui;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.LogsCenter;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kailashgautham":3,"-":46}},{"path":"src/main/java/seedu/tatoolkit/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.ui;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kailashgautham":1,"-":27}},{"path":"src/main/java/seedu/tatoolkit/ui/SidePanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.ui;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"hiivan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"hiivan"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"hiivan"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"hiivan"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"hiivan"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"hiivan"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"hiivan"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.LogsCenter;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"hiivan"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Github;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Phone;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Telegram;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"hiivan"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"hiivan"},"content":" * Panel displaying the details of a selected person.","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"hiivan"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"hiivan"},"content":"public class SidePanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"hiivan"},"content":"    private static final String FXML \u003d \"SidePanel.fxml\";","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"hiivan"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(SidePanel.class);","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"hiivan"},"content":"    private Model model;","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"kailashgautham"},"content":"    private int width \u003d 800;","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"hiivan"},"content":"    @FXML","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"hiivan"},"content":"    private Label defaultMessageLabel;","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"hiivan"},"content":"    @FXML","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"hiivan"},"content":"    private Label nameLabel;","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"hiivan"},"content":"    @FXML","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"hiivan"},"content":"    private Label classGroupLabel;","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"hiivan"},"content":"    @FXML","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"hiivan"},"content":"    private Label emailLabel;","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"hiivan"},"content":"    @FXML","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"hiivan"},"content":"    private Label phoneLabel;","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"hiivan"},"content":"    @FXML","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"hiivan"},"content":"    private Label telegramLabel;","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"hiivan"},"content":"    @FXML","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"hiivan"},"content":"    private Label githubLabel;","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"g-tejas"},"content":"    @FXML","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"g-tejas"},"content":"    private Label attendanceLabel;","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"YuSoonZ"},"content":"    @FXML","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"YuSoonZ"},"content":"    private Label noteLabel;","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"hiivan"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"hiivan"},"content":"    private ListView\u003cString\u003e attendanceListView;","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"hiivan"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"hiivan"},"content":"    private Label attendanceHeader;","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"hiivan"},"content":"     * Creates a SidePanel using the provided model.","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"hiivan"},"content":"     * It initializes the attendance list view and displays the default message.","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"hiivan"},"content":"     * @param model The model from which this panel will retrieve data.","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"hiivan"},"content":"    public SidePanel(Model model) {","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"hiivan"},"content":"        super(FXML);","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"hiivan"},"content":"        this.model \u003d model;","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"hiivan"},"content":"        initializeAttendanceListView();","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"hiivan"},"content":"        showDefaultMessage();","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"hiivan"},"content":"    private void initializeAttendanceListView() {","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"kailashgautham"},"content":"        nameLabel.setWrapText(true);","lastModifiedDate":"2024-04-12"},{"lineNumber":66,"author":{"gitId":"kailashgautham"},"content":"        nameLabel.setPrefWidth(width);","lastModifiedDate":"2024-04-12"},{"lineNumber":67,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":68,"author":{"gitId":"kailashgautham"},"content":"        classGroupLabel.setWrapText(true);","lastModifiedDate":"2024-04-12"},{"lineNumber":69,"author":{"gitId":"kailashgautham"},"content":"        classGroupLabel.setPrefWidth(width);","lastModifiedDate":"2024-04-12"},{"lineNumber":70,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":71,"author":{"gitId":"kailashgautham"},"content":"        emailLabel.setWrapText(true);","lastModifiedDate":"2024-04-12"},{"lineNumber":72,"author":{"gitId":"kailashgautham"},"content":"        emailLabel.setPrefWidth(width);","lastModifiedDate":"2024-04-12"},{"lineNumber":73,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":74,"author":{"gitId":"kailashgautham"},"content":"        phoneLabel.setWrapText(true);","lastModifiedDate":"2024-04-12"},{"lineNumber":75,"author":{"gitId":"kailashgautham"},"content":"        phoneLabel.setPrefWidth(width);","lastModifiedDate":"2024-04-12"},{"lineNumber":76,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":77,"author":{"gitId":"kailashgautham"},"content":"        telegramLabel.setWrapText(true);","lastModifiedDate":"2024-04-12"},{"lineNumber":78,"author":{"gitId":"kailashgautham"},"content":"        telegramLabel.setPrefWidth(width);","lastModifiedDate":"2024-04-12"},{"lineNumber":79,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":80,"author":{"gitId":"kailashgautham"},"content":"        githubLabel.setWrapText(true);","lastModifiedDate":"2024-04-12"},{"lineNumber":81,"author":{"gitId":"kailashgautham"},"content":"        githubLabel.setPrefWidth(width);","lastModifiedDate":"2024-04-12"},{"lineNumber":82,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":83,"author":{"gitId":"kailashgautham"},"content":"        attendanceLabel.setWrapText(true);","lastModifiedDate":"2024-04-12"},{"lineNumber":84,"author":{"gitId":"kailashgautham"},"content":"        attendanceLabel.setPrefWidth(width);","lastModifiedDate":"2024-04-12"},{"lineNumber":85,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":86,"author":{"gitId":"kailashgautham"},"content":"        noteLabel.setWrapText(true);","lastModifiedDate":"2024-04-12"},{"lineNumber":87,"author":{"gitId":"kailashgautham"},"content":"        noteLabel.setPrefWidth(width);","lastModifiedDate":"2024-04-12"},{"lineNumber":88,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":89,"author":{"gitId":"hiivan"},"content":"        ObservableList\u003cString\u003e attendanceList \u003d model.getObservableAttendanceList();","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"hiivan"},"content":"        attendanceList.addListener((ListChangeListener.Change\u003c? extends String\u003e change) -\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"hiivan"},"content":"            while (change.next()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"hiivan"},"content":"                if (change.wasUpdated() || change.wasAdded() || change.wasRemoved()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"hiivan"},"content":"                    displayAttendanceList(attendanceList);","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"hiivan"},"content":"                }","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"hiivan"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"hiivan"},"content":"        });","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"hiivan"},"content":"    private void showDefaultMessage() {","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"hiivan"},"content":"        defaultMessageLabel.setVisible(true);","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"hiivan"},"content":"        setDetailVisibility(false);","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"hiivan"},"content":"        setAttendanceListVisibility(false);","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"hiivan"},"content":"     * Displays the details of the given person on the side panel.","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"hiivan"},"content":"     * If the provided person is null, the details are reset to default.","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"hiivan"},"content":"     * @param person The person whose details are to be displayed, or null to reset.","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"hiivan"},"content":"    public void displayPerson(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"hiivan"},"content":"        if (person !\u003d null) {","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"hiivan"},"content":"            fillPersonDetails(person);","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"hiivan"},"content":"            setDetailVisibility(true);","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"hiivan"},"content":"            setAttendanceListVisibility(false);","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"hiivan"},"content":"            attendanceHeader.setVisible(false);","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"hiivan"},"content":"            attendanceHeader.setManaged(false);","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"hiivan"},"content":"            defaultMessageLabel.setVisible(false);","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"hiivan"},"content":"        } else {","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"hiivan"},"content":"            resetDetails();","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"hiivan"},"content":"        attendanceListView.setVisible(false);","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"hiivan"},"content":"        attendanceListView.setManaged(false);","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"hiivan"},"content":"     * Resets the details displayed on the side panel to default values.","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"hiivan"},"content":"     * This typically involves clearing any person details and showing the default message.","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":131,"author":{"gitId":"teojunda"},"content":"    public void resetDetails() {","lastModifiedDate":"2024-03-22"},{"lineNumber":132,"author":{"gitId":"hiivan"},"content":"        clearPersonDetails();","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"hiivan"},"content":"        attendanceHeader.setVisible(false);","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"hiivan"},"content":"        showDefaultMessage();","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":136,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"hiivan"},"content":"     * Displays an attendance list on the side panel.","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"hiivan"},"content":"     * This method sets the attendance header and list view to visible and populates the list view with attendance data.","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"hiivan"},"content":"     * It hides personal details during the display of the attendance list.","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"hiivan"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"hiivan"},"content":"     * @param attendanceList An ObservableList of strings representing attendance information.","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"hiivan"},"content":"    public void displayAttendanceList(ObservableList\u003cString\u003e attendanceList) {","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"hiivan"},"content":"        attendanceHeader.setVisible(true);","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"hiivan"},"content":"        attendanceHeader.setManaged(true);","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"hiivan"},"content":"        attendanceListView.setItems(attendanceList);","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"hiivan"},"content":"        setDetailVisibility(false);","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"hiivan"},"content":"        setAttendanceListVisibility(true);","lastModifiedDate":"2024-04-03"},{"lineNumber":150,"author":{"gitId":"hiivan"},"content":"        defaultMessageLabel.setVisible(false);","lastModifiedDate":"2024-04-03"},{"lineNumber":151,"author":{"gitId":"hiivan"},"content":"        attendanceListView.setMinHeight(500);","lastModifiedDate":"2024-04-03"},{"lineNumber":152,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":153,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":154,"author":{"gitId":"hiivan"},"content":"    private void setDetailVisibility(boolean isVisible) {","lastModifiedDate":"2024-04-03"},{"lineNumber":155,"author":{"gitId":"hiivan"},"content":"        nameLabel.setVisible(isVisible);","lastModifiedDate":"2024-04-03"},{"lineNumber":156,"author":{"gitId":"hiivan"},"content":"        classGroupLabel.setVisible(isVisible);","lastModifiedDate":"2024-04-03"},{"lineNumber":157,"author":{"gitId":"hiivan"},"content":"        emailLabel.setVisible(isVisible);","lastModifiedDate":"2024-04-03"},{"lineNumber":158,"author":{"gitId":"hiivan"},"content":"        phoneLabel.setVisible(isVisible);","lastModifiedDate":"2024-04-03"},{"lineNumber":159,"author":{"gitId":"hiivan"},"content":"        telegramLabel.setVisible(isVisible);","lastModifiedDate":"2024-04-03"},{"lineNumber":160,"author":{"gitId":"hiivan"},"content":"        githubLabel.setVisible(isVisible);","lastModifiedDate":"2024-04-03"},{"lineNumber":161,"author":{"gitId":"hiivan"},"content":"        attendanceLabel.setVisible(isVisible);","lastModifiedDate":"2024-04-03"},{"lineNumber":162,"author":{"gitId":"hiivan"},"content":"        noteLabel.setVisible(isVisible);","lastModifiedDate":"2024-04-03"},{"lineNumber":163,"author":{"gitId":"hiivan"},"content":"        defaultMessageLabel.setVisible(!isVisible);","lastModifiedDate":"2024-04-03"},{"lineNumber":164,"author":{"gitId":"hiivan"},"content":"        setAttendanceListVisibility(false);","lastModifiedDate":"2024-04-03"},{"lineNumber":165,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":166,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":167,"author":{"gitId":"hiivan"},"content":"    private void setAttendanceListVisibility(boolean isVisible) {","lastModifiedDate":"2024-04-03"},{"lineNumber":168,"author":{"gitId":"hiivan"},"content":"        attendanceListView.setVisible(isVisible);","lastModifiedDate":"2024-04-03"},{"lineNumber":169,"author":{"gitId":"hiivan"},"content":"        attendanceListView.setManaged(isVisible);","lastModifiedDate":"2024-04-03"},{"lineNumber":170,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":171,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":172,"author":{"gitId":"hiivan"},"content":"    private void fillPersonDetails(Person person) {","lastModifiedDate":"2024-04-03"},{"lineNumber":173,"author":{"gitId":"hiivan"},"content":"        nameLabel.setText(person.getName().fullName);","lastModifiedDate":"2024-04-03"},{"lineNumber":174,"author":{"gitId":"hiivan"},"content":"        classGroupLabel.setText(\"Class Group: \" + person.getClassGroup().toString());","lastModifiedDate":"2024-04-03"},{"lineNumber":175,"author":{"gitId":"hiivan"},"content":"        emailLabel.setText(\"Email: \" + person.getEmail().toString());","lastModifiedDate":"2024-04-03"},{"lineNumber":176,"author":{"gitId":"hiivan"},"content":"        phoneLabel.setText(\"Phone: \" + person.getPhone().map(Phone::toString).orElse(\"N/A\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":177,"author":{"gitId":"hiivan"},"content":"        telegramLabel.setText(\"Telegram: \" + person.getTelegram().map(Telegram::toString).orElse(\"N/A\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":178,"author":{"gitId":"hiivan"},"content":"        githubLabel.setText(\"GitHub: \" + person.getGithub().map(Github::toString).orElse(\"N/A\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":179,"author":{"gitId":"hiivan"},"content":"        attendanceLabel.setText(person.getAttendance().toString());","lastModifiedDate":"2024-04-03"},{"lineNumber":180,"author":{"gitId":"hiivan"},"content":"        noteLabel.setText(\"Notes: \" + person.getNotes().toString());","lastModifiedDate":"2024-04-03"},{"lineNumber":181,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":182,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":183,"author":{"gitId":"hiivan"},"content":"    private void clearPersonDetails() {","lastModifiedDate":"2024-04-03"},{"lineNumber":184,"author":{"gitId":"hiivan"},"content":"        nameLabel.setText(\"\");","lastModifiedDate":"2024-03-21"},{"lineNumber":185,"author":{"gitId":"hiivan"},"content":"        classGroupLabel.setText(\"\");","lastModifiedDate":"2024-03-21"},{"lineNumber":186,"author":{"gitId":"hiivan"},"content":"        emailLabel.setText(\"\");","lastModifiedDate":"2024-03-21"},{"lineNumber":187,"author":{"gitId":"hiivan"},"content":"        phoneLabel.setText(\"\");","lastModifiedDate":"2024-03-21"},{"lineNumber":188,"author":{"gitId":"hiivan"},"content":"        telegramLabel.setText(\"\");","lastModifiedDate":"2024-03-21"},{"lineNumber":189,"author":{"gitId":"hiivan"},"content":"        githubLabel.setText(\"\");","lastModifiedDate":"2024-03-21"},{"lineNumber":190,"author":{"gitId":"g-tejas"},"content":"        attendanceLabel.setText(\"\");","lastModifiedDate":"2024-03-25"},{"lineNumber":191,"author":{"gitId":"YuSoonZ"},"content":"        noteLabel.setText(\"\");","lastModifiedDate":"2024-03-29"},{"lineNumber":192,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":193,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":194,"author":{"gitId":"hiivan"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":195,"author":{"gitId":"hiivan"},"content":"     * Updates the display of the attendance list in the side panel.","lastModifiedDate":"2024-04-03"},{"lineNumber":196,"author":{"gitId":"hiivan"},"content":"     * This method retrieves the filtered attendance list from the model and displays it.","lastModifiedDate":"2024-04-03"},{"lineNumber":197,"author":{"gitId":"hiivan"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":198,"author":{"gitId":"hiivan"},"content":"    public void updateAttendanceDisplay() {","lastModifiedDate":"2024-04-03"},{"lineNumber":199,"author":{"gitId":"hiivan"},"content":"        displayAttendanceList(model.getFilteredPersonAttendanceList());","lastModifiedDate":"2024-04-03"},{"lineNumber":200,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":201,"author":{"gitId":"hiivan"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"YuSoonZ":3,"kailashgautham":31,"teojunda":1,"hiivan":163,"g-tejas":3}},{"path":"src/main/java/seedu/tatoolkit/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.ui;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kailashgautham":1,"-":27}},{"path":"src/main/java/seedu/tatoolkit/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.ui;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"kailashgautham":1,"-":12}},{"path":"src/main/java/seedu/tatoolkit/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.ui;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.MainApp;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.LogsCenter;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.util.StringUtil;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.Logic;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/ta_toolkit_32.png\";","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"g-tejas"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/NordTheme.css\");","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kailashgautham":6,"g-tejas":1,"-":81}},{"path":"src/main/java/seedu/tatoolkit/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.ui;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.MainApp;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kailashgautham":2,"-":86}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"hiivan"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"hiivan"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"kailashgautham"},"content":"#classGroup {","lastModifiedDate":"2024-03-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":354,"author":{"gitId":"hiivan"},"content":".side-panel .label {","lastModifiedDate":"2024-03-21"},{"lineNumber":355,"author":{"gitId":"hiivan"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-21"},{"lineNumber":356,"author":{"gitId":"hiivan"},"content":"}","lastModifiedDate":"2024-03-21"},{"lineNumber":357,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":358,"author":{"gitId":"hiivan"},"content":".header-label {","lastModifiedDate":"2024-04-03"},{"lineNumber":359,"author":{"gitId":"hiivan"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2024-04-03"},{"lineNumber":360,"author":{"gitId":"hiivan"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2024-04-03"},{"lineNumber":361,"author":{"gitId":"hiivan"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-04-03"},{"lineNumber":362,"author":{"gitId":"hiivan"},"content":"    -fx-underline: true;","lastModifiedDate":"2024-04-03"},{"lineNumber":363,"author":{"gitId":"hiivan"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":364,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":365,"author":{"gitId":"hiivan"},"content":".custom-list-view {","lastModifiedDate":"2024-04-03"},{"lineNumber":366,"author":{"gitId":"hiivan"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2024-04-03"},{"lineNumber":367,"author":{"gitId":"hiivan"},"content":"    -fx-border-color: #383838;","lastModifiedDate":"2024-04-03"},{"lineNumber":368,"author":{"gitId":"hiivan"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2024-04-03"},{"lineNumber":369,"author":{"gitId":"hiivan"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2024-04-03"},{"lineNumber":370,"author":{"gitId":"hiivan"},"content":"    -fx-cell-size: 24px;","lastModifiedDate":"2024-04-03"},{"lineNumber":371,"author":{"gitId":"hiivan"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":372,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":373,"author":{"gitId":"hiivan"},"content":".custom-list-view .list-cell {","lastModifiedDate":"2024-04-03"},{"lineNumber":374,"author":{"gitId":"hiivan"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-04-03"},{"lineNumber":375,"author":{"gitId":"hiivan"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2024-04-03"},{"lineNumber":376,"author":{"gitId":"hiivan"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"kailashgautham":1,"hiivan":26,"-":349}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"hiivan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":16,"author":{"gitId":"hiivan"},"content":"         title\u003d\"TA Toolkit\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"    \u003cImage url\u003d\"@/images/ta_toolkit_32.png\" /\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"g-tejas"},"content":"        \u003cURL value\u003d\"@NordTheme.css\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"hiivan"},"content":"        \u003cSplitPane dividerPositions\u003d\"0.75\" focusTraversable\u003d\"true\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"hiivan"},"content":"          \u003cStackPane fx:id\u003d\"sidePanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"hiivan"},"content":"        \u003c/SplitPane\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"kailashgautham":1,"hiivan":5,"g-tejas":1,"-":53}},{"path":"src/main/resources/view/NordTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"g-tejas"},"content":".background {","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: derive(#e4e8f0, 20%);","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"g-tejas"},"content":"    background-color: #D7DDE9; /* Used in the default.html file */","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"g-tejas"},"content":".label {","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"g-tejas"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"g-tejas"},"content":"    -fx-font-family: \"System Light\";","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"g-tejas"},"content":"    -fx-text-fill: #1A202C;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"g-tejas"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"g-tejas"},"content":".label-bright {","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"g-tejas"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"g-tejas"},"content":"    -fx-font-family: \"System Light\";","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"g-tejas"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"g-tejas"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"g-tejas"},"content":".label-header {","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"g-tejas"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"g-tejas"},"content":"    -fx-font-family: \"System Light\";","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"g-tejas"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"g-tejas"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"g-tejas"},"content":".text-field {","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"g-tejas"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"g-tejas"},"content":"    -fx-font-family: \"System Light\";","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"g-tejas"},"content":".tab-pane {","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"g-tejas"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"g-tejas"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"g-tejas"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"g-tejas"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"g-tejas"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"g-tejas"},"content":".table-view {","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"g-tejas"},"content":"    -fx-base: #e4e8f0;","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"g-tejas"},"content":"    -fx-control-inner-background: #e4e8f0;","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: #e4e8f0;","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"g-tejas"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"g-tejas"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"g-tejas"},"content":"    -fx-padding: 5;","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"g-tejas"},"content":".table-view .column-header-background {","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"g-tejas"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"g-tejas"},"content":"    -fx-size: 35;","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"g-tejas"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"g-tejas"},"content":"    -fx-border-color:","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"g-tejas"},"content":"            transparent","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"g-tejas"},"content":"            transparent","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"g-tejas"},"content":"            derive(-fx-base, 80%)","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"g-tejas"},"content":"            transparent;","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"g-tejas"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"g-tejas"},"content":".table-view .column-header .label {","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"g-tejas"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"g-tejas"},"content":"    -fx-font-family: \"System Light\";","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"g-tejas"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"g-tejas"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"g-tejas"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"g-tejas"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"g-tejas"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: derive(#e4e8f0, 20%);","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"g-tejas"},"content":"    -fx-border-color: transparent transparent transparent #ffffff;","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"g-tejas"},"content":".split-pane {","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"g-tejas"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"g-tejas"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: derive(#e4e8f0, 20%);","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"g-tejas"},"content":".list-view {","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"g-tejas"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"g-tejas"},"content":"    -fx-padding: 0;","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: derive(#e4e8f0, 20%);","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"g-tejas"},"content":".list-cell {","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"g-tejas"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"g-tejas"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"g-tejas"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"g-tejas"},"content":".list-cell:filled:even {","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: #C1CCDE;","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"g-tejas"},"content":".list-cell:filled:odd {","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: #D1DEEF;","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"g-tejas"},"content":".list-cell:filled:selected {","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: #ABC7DA;","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"g-tejas"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"g-tejas"},"content":"    -fx-border-color: #84c3ee;","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"g-tejas"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"g-tejas"},"content":".list-cell .label {","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"g-tejas"},"content":"    -fx-text-fill: #1A202C;","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"g-tejas"},"content":".cell_big_label {","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"g-tejas"},"content":"    -fx-font-family: \"Arial Rounded MT Bold\";","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"g-tejas"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"g-tejas"},"content":"    -fx-text-fill: #2E3440;","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"g-tejas"},"content":".cell_small_label {","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"g-tejas"},"content":"    -fx-font-family: \"System\";","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"hiivan"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"g-tejas"},"content":"    -fx-text-fill: #2E3440;","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"g-tejas"},"content":".stack-pane {","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: derive(#e4e8f0, 20%);","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"g-tejas"},"content":".pane-with-border {","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: derive(#e4e8f0, 20%);","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"g-tejas"},"content":"    -fx-border-color: derive(#e4e8f0, 10%);","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"g-tejas"},"content":"    -fx-border-top-width: 1px;","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"g-tejas"},"content":".status-bar {","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: derive(#e4e8f0, 30%);","lastModifiedDate":"2024-04-02"},{"lineNumber":147,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"g-tejas"},"content":".result-display {","lastModifiedDate":"2024-04-02"},{"lineNumber":150,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-04-02"},{"lineNumber":151,"author":{"gitId":"g-tejas"},"content":"    -fx-font-family: \"System Light\";","lastModifiedDate":"2024-04-02"},{"lineNumber":152,"author":{"gitId":"g-tejas"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2024-04-02"},{"lineNumber":153,"author":{"gitId":"g-tejas"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-02"},{"lineNumber":154,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":155,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":156,"author":{"gitId":"g-tejas"},"content":".result-display .label {","lastModifiedDate":"2024-04-02"},{"lineNumber":157,"author":{"gitId":"g-tejas"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2024-04-02"},{"lineNumber":158,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":159,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":160,"author":{"gitId":"g-tejas"},"content":".status-bar .label {","lastModifiedDate":"2024-04-02"},{"lineNumber":161,"author":{"gitId":"g-tejas"},"content":"    -fx-font-family: \"System Light\";","lastModifiedDate":"2024-04-02"},{"lineNumber":162,"author":{"gitId":"g-tejas"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-02"},{"lineNumber":163,"author":{"gitId":"g-tejas"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2024-04-02"},{"lineNumber":164,"author":{"gitId":"g-tejas"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2024-04-02"},{"lineNumber":165,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":166,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":167,"author":{"gitId":"g-tejas"},"content":".status-bar-with-border {","lastModifiedDate":"2024-04-02"},{"lineNumber":168,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: derive(#e4e8f0, 30%);","lastModifiedDate":"2024-04-02"},{"lineNumber":169,"author":{"gitId":"g-tejas"},"content":"    -fx-border-color: derive(#e4e8f0, 25%);","lastModifiedDate":"2024-04-02"},{"lineNumber":170,"author":{"gitId":"g-tejas"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2024-04-02"},{"lineNumber":171,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":172,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":173,"author":{"gitId":"g-tejas"},"content":".status-bar-with-border .label {","lastModifiedDate":"2024-04-02"},{"lineNumber":174,"author":{"gitId":"g-tejas"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-02"},{"lineNumber":175,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":176,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":177,"author":{"gitId":"g-tejas"},"content":".grid-pane {","lastModifiedDate":"2024-04-02"},{"lineNumber":178,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: derive(#e4e8f0, 30%);","lastModifiedDate":"2024-04-02"},{"lineNumber":179,"author":{"gitId":"g-tejas"},"content":"    -fx-border-color: derive(#e4e8f0, 30%);","lastModifiedDate":"2024-04-02"},{"lineNumber":180,"author":{"gitId":"g-tejas"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2024-04-02"},{"lineNumber":181,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":182,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":183,"author":{"gitId":"g-tejas"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2024-04-02"},{"lineNumber":184,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: derive(#e4e8f0, 30%);","lastModifiedDate":"2024-04-02"},{"lineNumber":185,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":186,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":187,"author":{"gitId":"g-tejas"},"content":".context-menu {","lastModifiedDate":"2024-04-02"},{"lineNumber":188,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: derive(#e4e8f0, 50%);","lastModifiedDate":"2024-04-02"},{"lineNumber":189,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":190,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":191,"author":{"gitId":"g-tejas"},"content":".context-menu .label {","lastModifiedDate":"2024-04-02"},{"lineNumber":192,"author":{"gitId":"g-tejas"},"content":"    -fx-text-fill: #1A202C;","lastModifiedDate":"2024-04-02"},{"lineNumber":193,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":194,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":195,"author":{"gitId":"g-tejas"},"content":".menu-bar {","lastModifiedDate":"2024-04-02"},{"lineNumber":196,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: derive(#e4e8f0, 20%);","lastModifiedDate":"2024-04-02"},{"lineNumber":197,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":198,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":199,"author":{"gitId":"g-tejas"},"content":".menu-bar .label {","lastModifiedDate":"2024-04-02"},{"lineNumber":200,"author":{"gitId":"g-tejas"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2024-04-02"},{"lineNumber":201,"author":{"gitId":"g-tejas"},"content":"    -fx-font-family: \"System Light\";","lastModifiedDate":"2024-04-02"},{"lineNumber":202,"author":{"gitId":"g-tejas"},"content":"    -fx-text-fill: #1A202C;","lastModifiedDate":"2024-04-02"},{"lineNumber":203,"author":{"gitId":"g-tejas"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2024-04-02"},{"lineNumber":204,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":205,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":206,"author":{"gitId":"g-tejas"},"content":".menu .left-container {","lastModifiedDate":"2024-04-02"},{"lineNumber":207,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: black;","lastModifiedDate":"2024-04-02"},{"lineNumber":208,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":209,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":210,"author":{"gitId":"g-tejas"},"content":"/*","lastModifiedDate":"2024-04-02"},{"lineNumber":211,"author":{"gitId":"g-tejas"},"content":" * Metro style Push Button","lastModifiedDate":"2024-04-02"},{"lineNumber":212,"author":{"gitId":"g-tejas"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2024-04-02"},{"lineNumber":213,"author":{"gitId":"g-tejas"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2024-04-02"},{"lineNumber":214,"author":{"gitId":"g-tejas"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":215,"author":{"gitId":"g-tejas"},"content":".button {","lastModifiedDate":"2024-04-02"},{"lineNumber":216,"author":{"gitId":"g-tejas"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2024-04-02"},{"lineNumber":217,"author":{"gitId":"g-tejas"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2024-04-02"},{"lineNumber":218,"author":{"gitId":"g-tejas"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2024-04-02"},{"lineNumber":219,"author":{"gitId":"g-tejas"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2024-04-02"},{"lineNumber":220,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: #e4e8f0;","lastModifiedDate":"2024-04-02"},{"lineNumber":221,"author":{"gitId":"g-tejas"},"content":"    -fx-font-family: \"System\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2024-04-02"},{"lineNumber":222,"author":{"gitId":"g-tejas"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2024-04-02"},{"lineNumber":223,"author":{"gitId":"g-tejas"},"content":"    -fx-text-fill: #FFFFFF;","lastModifiedDate":"2024-04-02"},{"lineNumber":224,"author":{"gitId":"g-tejas"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2024-04-02"},{"lineNumber":225,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":226,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":227,"author":{"gitId":"g-tejas"},"content":".button:hover {","lastModifiedDate":"2024-04-02"},{"lineNumber":228,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: #D7DDE9;","lastModifiedDate":"2024-04-02"},{"lineNumber":229,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":230,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":231,"author":{"gitId":"g-tejas"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2024-04-02"},{"lineNumber":232,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-04-02"},{"lineNumber":233,"author":{"gitId":"g-tejas"},"content":"    -fx-text-fill: #e4e8f0;","lastModifiedDate":"2024-04-02"},{"lineNumber":234,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":235,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":236,"author":{"gitId":"g-tejas"},"content":".button:focused {","lastModifiedDate":"2024-04-02"},{"lineNumber":237,"author":{"gitId":"g-tejas"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2024-04-02"},{"lineNumber":238,"author":{"gitId":"g-tejas"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2024-04-02"},{"lineNumber":239,"author":{"gitId":"g-tejas"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2024-04-02"},{"lineNumber":240,"author":{"gitId":"g-tejas"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2024-04-02"},{"lineNumber":241,"author":{"gitId":"g-tejas"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2024-04-02"},{"lineNumber":242,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":243,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":244,"author":{"gitId":"g-tejas"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2024-04-02"},{"lineNumber":245,"author":{"gitId":"g-tejas"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2024-04-02"},{"lineNumber":246,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: #e4e8f0;","lastModifiedDate":"2024-04-02"},{"lineNumber":247,"author":{"gitId":"g-tejas"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-02"},{"lineNumber":248,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":249,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":250,"author":{"gitId":"g-tejas"},"content":".button:default {","lastModifiedDate":"2024-04-02"},{"lineNumber":251,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2024-04-02"},{"lineNumber":252,"author":{"gitId":"g-tejas"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-02"},{"lineNumber":253,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":254,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":255,"author":{"gitId":"g-tejas"},"content":".button:default:hover {","lastModifiedDate":"2024-04-02"},{"lineNumber":256,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2024-04-02"},{"lineNumber":257,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":258,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":259,"author":{"gitId":"g-tejas"},"content":".dialog-pane {","lastModifiedDate":"2024-04-02"},{"lineNumber":260,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: #e4e8f0;","lastModifiedDate":"2024-04-02"},{"lineNumber":261,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":262,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":263,"author":{"gitId":"g-tejas"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2024-04-02"},{"lineNumber":264,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: #e4e8f0;","lastModifiedDate":"2024-04-02"},{"lineNumber":265,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":266,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":267,"author":{"gitId":"g-tejas"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2024-04-02"},{"lineNumber":268,"author":{"gitId":"g-tejas"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2024-04-02"},{"lineNumber":269,"author":{"gitId":"g-tejas"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2024-04-02"},{"lineNumber":270,"author":{"gitId":"g-tejas"},"content":"    -fx-text-fill: #1A202C;","lastModifiedDate":"2024-04-02"},{"lineNumber":271,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":272,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":273,"author":{"gitId":"g-tejas"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2024-04-02"},{"lineNumber":274,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: derive(#e4e8f0, 25%);","lastModifiedDate":"2024-04-02"},{"lineNumber":275,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":276,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":277,"author":{"gitId":"g-tejas"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2024-04-02"},{"lineNumber":278,"author":{"gitId":"g-tejas"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2024-04-02"},{"lineNumber":279,"author":{"gitId":"g-tejas"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2024-04-02"},{"lineNumber":280,"author":{"gitId":"g-tejas"},"content":"    -fx-fill: #1A202C;","lastModifiedDate":"2024-04-02"},{"lineNumber":281,"author":{"gitId":"g-tejas"},"content":"    -fx-text-fill: #1A202C;","lastModifiedDate":"2024-04-02"},{"lineNumber":282,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":283,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":284,"author":{"gitId":"g-tejas"},"content":".scroll-bar {","lastModifiedDate":"2024-04-02"},{"lineNumber":285,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: derive(#e4e8f0, 20%);","lastModifiedDate":"2024-04-02"},{"lineNumber":286,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":287,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":288,"author":{"gitId":"g-tejas"},"content":".scroll-bar .thumb {","lastModifiedDate":"2024-04-02"},{"lineNumber":289,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: derive(#e4e8f0, 50%);","lastModifiedDate":"2024-04-02"},{"lineNumber":290,"author":{"gitId":"g-tejas"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2024-04-02"},{"lineNumber":291,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":292,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":293,"author":{"gitId":"g-tejas"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2024-04-02"},{"lineNumber":294,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-04-02"},{"lineNumber":295,"author":{"gitId":"g-tejas"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2024-04-02"},{"lineNumber":296,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":297,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":298,"author":{"gitId":"g-tejas"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2024-04-02"},{"lineNumber":299,"author":{"gitId":"g-tejas"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2024-04-02"},{"lineNumber":300,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":301,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":302,"author":{"gitId":"g-tejas"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2024-04-02"},{"lineNumber":303,"author":{"gitId":"g-tejas"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2024-04-02"},{"lineNumber":304,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":305,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":306,"author":{"gitId":"g-tejas"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2024-04-02"},{"lineNumber":307,"author":{"gitId":"g-tejas"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2024-04-02"},{"lineNumber":308,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":309,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":310,"author":{"gitId":"g-tejas"},"content":"#cardPane {","lastModifiedDate":"2024-04-02"},{"lineNumber":311,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2024-04-02"},{"lineNumber":312,"author":{"gitId":"g-tejas"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2024-04-02"},{"lineNumber":313,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":314,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":315,"author":{"gitId":"g-tejas"},"content":"#commandTypeLabel {","lastModifiedDate":"2024-04-02"},{"lineNumber":316,"author":{"gitId":"g-tejas"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2024-04-02"},{"lineNumber":317,"author":{"gitId":"g-tejas"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2024-04-02"},{"lineNumber":318,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":319,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":320,"author":{"gitId":"g-tejas"},"content":"#commandTextField {","lastModifiedDate":"2024-04-02"},{"lineNumber":321,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: transparent #D7DDE9 transparent #D7DDE9;","lastModifiedDate":"2024-04-02"},{"lineNumber":322,"author":{"gitId":"g-tejas"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2024-04-02"},{"lineNumber":323,"author":{"gitId":"g-tejas"},"content":"    -fx-border-color: #D7DDE9 #D7DDE9 #ffffff #D7DDE9;","lastModifiedDate":"2024-04-02"},{"lineNumber":324,"author":{"gitId":"g-tejas"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2024-04-02"},{"lineNumber":325,"author":{"gitId":"g-tejas"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2024-04-02"},{"lineNumber":326,"author":{"gitId":"g-tejas"},"content":"    -fx-font-family: \"System Light\";","lastModifiedDate":"2024-04-02"},{"lineNumber":327,"author":{"gitId":"g-tejas"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2024-04-02"},{"lineNumber":328,"author":{"gitId":"g-tejas"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-02"},{"lineNumber":329,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":330,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":331,"author":{"gitId":"g-tejas"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2024-04-02"},{"lineNumber":332,"author":{"gitId":"g-tejas"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2024-04-02"},{"lineNumber":333,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":334,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":335,"author":{"gitId":"g-tejas"},"content":"#resultDisplay .content {","lastModifiedDate":"2024-04-02"},{"lineNumber":336,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: transparent, #D7DDE9, transparent, #D7DDE9;","lastModifiedDate":"2024-04-02"},{"lineNumber":337,"author":{"gitId":"g-tejas"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2024-04-02"},{"lineNumber":338,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":339,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":340,"author":{"gitId":"g-tejas"},"content":"#tags {","lastModifiedDate":"2024-04-02"},{"lineNumber":341,"author":{"gitId":"g-tejas"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2024-04-02"},{"lineNumber":342,"author":{"gitId":"g-tejas"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2024-04-02"},{"lineNumber":343,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":344,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":345,"author":{"gitId":"g-tejas"},"content":"#classGroup {","lastModifiedDate":"2024-04-02"},{"lineNumber":346,"author":{"gitId":"g-tejas"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-02"},{"lineNumber":347,"author":{"gitId":"g-tejas"},"content":"    -fx-background-color: #A1D8F8;","lastModifiedDate":"2024-04-02"},{"lineNumber":348,"author":{"gitId":"g-tejas"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2024-04-02"},{"lineNumber":349,"author":{"gitId":"g-tejas"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2024-04-02"},{"lineNumber":350,"author":{"gitId":"g-tejas"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2024-04-02"},{"lineNumber":351,"author":{"gitId":"g-tejas"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2024-04-02"},{"lineNumber":352,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":353,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":354,"author":{"gitId":"g-tejas"},"content":".side-panel .label {","lastModifiedDate":"2024-04-02"},{"lineNumber":355,"author":{"gitId":"g-tejas"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-04-02"},{"lineNumber":356,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":357,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":358,"author":{"gitId":"hiivan"},"content":".header-label {","lastModifiedDate":"2024-04-03"},{"lineNumber":359,"author":{"gitId":"hiivan"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2024-04-03"},{"lineNumber":360,"author":{"gitId":"hiivan"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2024-04-03"},{"lineNumber":361,"author":{"gitId":"hiivan"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-04-03"},{"lineNumber":362,"author":{"gitId":"hiivan"},"content":"    -fx-underline: true;","lastModifiedDate":"2024-04-03"},{"lineNumber":363,"author":{"gitId":"hiivan"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":364,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":365,"author":{"gitId":"hiivan"},"content":".custom-list-view {","lastModifiedDate":"2024-04-03"},{"lineNumber":366,"author":{"gitId":"hiivan"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2024-04-03"},{"lineNumber":367,"author":{"gitId":"hiivan"},"content":"    -fx-border-color: #383838;","lastModifiedDate":"2024-04-03"},{"lineNumber":368,"author":{"gitId":"hiivan"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2024-04-03"},{"lineNumber":369,"author":{"gitId":"hiivan"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2024-04-03"},{"lineNumber":370,"author":{"gitId":"hiivan"},"content":"    -fx-cell-size: 24px;","lastModifiedDate":"2024-04-03"},{"lineNumber":371,"author":{"gitId":"hiivan"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":372,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":373,"author":{"gitId":"hiivan"},"content":".custom-list-view .list-cell {","lastModifiedDate":"2024-04-03"},{"lineNumber":374,"author":{"gitId":"hiivan"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2024-04-03"},{"lineNumber":375,"author":{"gitId":"hiivan"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"hiivan":20,"g-tejas":355}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":29,"author":{"gitId":"kailashgautham"},"content":"      \u003cLabel fx:id\u003d\"classGroup\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$classGroup\" /\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"kailashgautham"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"kailashgautham"},"content":"      \u003cLabel fx:id\u003d\"telegram\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$telegram\" /\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"kailashgautham"},"content":"      \u003cLabel fx:id\u003d\"github\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$github\" /\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kailashgautham":4,"-":32}},{"path":"src/main/resources/view/SidePanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hiivan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"hiivan"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"hiivan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"hiivan"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"hiivan"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"hiivan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":7,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"hiivan"},"content":"\u003cScrollPane fitToWidth\u003d\"true\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"side-panel-scrollpane\"\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":9,"author":{"gitId":"hiivan"},"content":"    \u003cVBox alignment\u003d\"TOP_LEFT\" spacing\u003d\"10\" styleClass\u003d\"side-panel\"\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":10,"author":{"gitId":"hiivan"},"content":"        \u003cstylesheets\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"g-tejas"},"content":"            \u003cURL value\u003d\"@NordTheme.css\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"hiivan"},"content":"            \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"hiivan"},"content":"        \u003c/stylesheets\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"hiivan"},"content":"        \u003c!-- Default message label --\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"hiivan"},"content":"        \u003cLabel fx:id\u003d\"defaultMessageLabel\"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"hiivan"},"content":"               text\u003d\"Use the view or list command to display more information\"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"hiivan"},"content":"               wrapText\u003d\"true\" visible\u003d\"true\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"hiivan"},"content":"        \u003c!-- Attendance ListView for displaying attendance list --\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"hiivan"},"content":"        \u003cLabel fx:id\u003d\"attendanceHeader\" text\u003d\"Attendance\" styleClass\u003d\"cell_big_label\" visible\u003d\"false\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"hiivan"},"content":"        \u003cListView fx:id\u003d\"attendanceListView\" VBox.vgrow\u003d\"ALWAYS\" visible\u003d\"false\" styleClass\u003d\"custom-list-view\" minHeight\u003d\"400\"/\u003e","lastModifiedDate":"2024-04-09"},{"lineNumber":23,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"hiivan"},"content":"        \u003c!-- Detail labels --\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"hiivan"},"content":"        \u003cLabel fx:id\u003d\"nameLabel\" visible\u003d\"false\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"hiivan"},"content":"        \u003cLabel fx:id\u003d\"classGroupLabel\" visible\u003d\"false\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"hiivan"},"content":"        \u003cLabel fx:id\u003d\"emailLabel\" visible\u003d\"false\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"hiivan"},"content":"        \u003cLabel fx:id\u003d\"phoneLabel\" visible\u003d\"false\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"hiivan"},"content":"        \u003cLabel fx:id\u003d\"telegramLabel\" visible\u003d\"false\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"hiivan"},"content":"        \u003cLabel fx:id\u003d\"githubLabel\" visible\u003d\"false\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"g-tejas"},"content":"        \u003cLabel fx:id\u003d\"attendanceLabel\" visible\u003d\"false\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"YuSoonZ"},"content":"        \u003cLabel fx:id\u003d\"noteLabel\" visible\u003d\"false\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"hiivan"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"hiivan"},"content":"\u003c/ScrollPane\u003e","lastModifiedDate":"2024-04-09"}],"authorContributionMap":{"YuSoonZ":1,"hiivan":31,"g-tejas":2}},{"path":"src/test/java/seedu/tatoolkit/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expected \u003d AppParameters.class.getCanonicalName() + \"{configPath\u003d\" + appParameters.getConfigPath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expected, appParameters.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(new AppParameters()));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(appParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different config path -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        otherAppParameters.setConfigPath(Paths.get(\"configPath\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(otherAppParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"kailashgautham":1,"-":88}},{"path":"src/test/java/seedu/tatoolkit/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.commons.core;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        String expected \u003d Config.class.getCanonicalName() + \"{logLevel\u003d\" + config.getLogLevel()","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \", userPrefsFilePath\u003d\" + config.getUserPrefsFilePath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(expected, config.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"kailashgautham":1,"-":26}},{"path":"src/test/java/seedu/tatoolkit/commons/core/GuiSettingsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.commons.core;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class GuiSettingsTest {","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        String expected \u003d GuiSettings.class.getCanonicalName() + \"{windowWidth\u003d\" + guiSettings.getWindowWidth()","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \", windowHeight\u003d\" + guiSettings.getWindowHeight() + \", windowCoordinates\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + guiSettings.getWindowCoordinates() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertEquals(expected, guiSettings.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"kailashgautham":1,"-":15}},{"path":"src/test/java/seedu/tatoolkit/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.commons.core;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kailashgautham":2,"-":133}},{"path":"src/test/java/seedu/tatoolkit/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.commons.core.index;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromZeroBased(0);","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expected \u003d Index.class.getCanonicalName() + \"{zeroBasedIndex\u003d\" + index.getZeroBased() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expected, index.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"kailashgautham":2,"-":65}},{"path":"src/test/java/seedu/tatoolkit/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.commons.util;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"        assertNotNull(AppUtil.getImage(\"/images/ta_toolkit_32.png\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"kailashgautham":3,"-":33}},{"path":"src/test/java/seedu/tatoolkit/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.commons.util;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"kailashgautham":3,"-":105}},{"path":"src/test/java/seedu/tatoolkit/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.commons.util;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.Config;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"kailashgautham":4,"-":112}},{"path":"src/test/java/seedu/tatoolkit/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.commons.util;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kailashgautham":2,"-":21}},{"path":"src/test/java/seedu/tatoolkit/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.commons.util;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.testutil.SerializableTestClass;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.testutil.TestUtil;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kailashgautham":3,"-":42}},{"path":"src/test/java/seedu/tatoolkit/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.commons.util;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"kailashgautham":2,"-":141}},{"path":"src/test/java/seedu/tatoolkit/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.CLASS_GROUP_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.GITHUB_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalPersons.AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.AddCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.CommandResult;","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.ListCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.ModelManager;","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.ReadOnlyTaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.UserPrefs;","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.storage.JsonTaToolkitStorage;","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.storage.StorageManager;","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.testutil.PersonBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"kailashgautham"},"content":"        JsonTaToolkitStorage taToolkitStorage \u003d","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"kailashgautham"},"content":"                new JsonTaToolkitStorage(temporaryFolder.resolve(\"taToolkit.json\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"kailashgautham"},"content":"        StorageManager storage \u003d new StorageManager(taToolkitStorage, userPrefsStorage);","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"g-tejas"},"content":"        String deleteCommand \u003d \"dc 9\";","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"g-tejas"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"g-tejas"},"content":"                String.format(ListCommand.MESSAGE_LIST_ALL_SUCCESS, model.getFilteredPersonList().size());","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"g-tejas"},"content":"        assertCommandSuccess(listCommand, expectedMessage, model);","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"kailashgautham"},"content":"        Model expectedModel \u003d new ModelManager(model.getTaToolkit(), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"kailashgautham"},"content":"        // Inject LogicManager with an TaToolkitStorage that throws the IOException e when saving","lastModifiedDate":"2024-04-01"},{"lineNumber":157,"author":{"gitId":"kailashgautham"},"content":"        JsonTaToolkitStorage taToolkitStorage \u003d new JsonTaToolkitStorage(prefPath) {","lastModifiedDate":"2024-04-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"kailashgautham"},"content":"            public void saveTaToolkit(ReadOnlyTaToolkit taToolkit, Path filePath)","lastModifiedDate":"2024-04-01"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"kailashgautham"},"content":"        StorageManager storage \u003d new StorageManager(taToolkitStorage, userPrefsStorage);","lastModifiedDate":"2024-04-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"kailashgautham"},"content":"        // Triggers the saveTaToolkit method by executing an add command","lastModifiedDate":"2024-04-01"},{"lineNumber":172,"author":{"gitId":"kailashgautham"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + CLASS_GROUP_DESC_AMY","lastModifiedDate":"2024-03-11"},{"lineNumber":173,"author":{"gitId":"kailashgautham"},"content":"                + EMAIL_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-03-11"},{"lineNumber":174,"author":{"gitId":"kailashgautham"},"content":"                + TELEGRAM_DESC_AMY + GITHUB_DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":175,"author":{"gitId":"kailashgautham"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"kailashgautham":38,"g-tejas":4,"-":138}},{"path":"src/test/java/seedu/tatoolkit/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalPersons.getTypicalTaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.Messages;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.ModelManager;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.UserPrefs;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.testutil.PersonBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"kailashgautham"},"content":"        model \u003d new ModelManager(getTypicalTaToolkit(), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"kailashgautham"},"content":"        Model expectedModel \u003d new ModelManager(model.getTaToolkit(), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"kailashgautham"},"content":"        Person personInList \u003d model.getTaToolkit().getPersonList().get(0);","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"teojunda"},"content":"                AddCommand.MESSAGE_DUPLICATE_FIELD);","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"kailashgautham":13,"teojunda":1,"-":34}},{"path":"src/test/java/seedu/tatoolkit/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"teojunda"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.GuiSettings;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.Messages;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.ReadOnlyTaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.TaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.testutil.PersonBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"teojunda"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_FIELD, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"kailashgautham"},"content":"        public Path getTaToolkitFilePath() {","lastModifiedDate":"2024-04-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"kailashgautham"},"content":"        public void setTaToolkitFilePath(Path taToolkitFilePath) {","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":128,"author":{"gitId":"teojunda"},"content":"        public void addPersonKeepFilter(Person person) {","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"kailashgautham"},"content":"        public void setTaToolkit(ReadOnlyTaToolkit newData) {","lastModifiedDate":"2024-04-01"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"kailashgautham"},"content":"        public ReadOnlyTaToolkit getTaToolkit() {","lastModifiedDate":"2024-04-01"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":162,"author":{"gitId":"hiivan"},"content":"        @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":163,"author":{"gitId":"hiivan"},"content":"        public ObservableList\u003cString\u003e getFilteredPersonAttendanceList() {","lastModifiedDate":"2024-04-03"},{"lineNumber":164,"author":{"gitId":"hiivan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":165,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":166,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":167,"author":{"gitId":"hiivan"},"content":"        @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":168,"author":{"gitId":"hiivan"},"content":"        public ObservableList\u003cString\u003e getObservableAttendanceList() {","lastModifiedDate":"2024-04-03"},{"lineNumber":169,"author":{"gitId":"hiivan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":170,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":171,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":172,"author":{"gitId":"hiivan"},"content":"        @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":173,"author":{"gitId":"hiivan"},"content":"        public void updateObservableAttendanceList() {","lastModifiedDate":"2024-04-03"},{"lineNumber":174,"author":{"gitId":"hiivan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":175,"author":{"gitId":"hiivan"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":176,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":177,"author":{"gitId":"teojunda"},"content":"        @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":178,"author":{"gitId":"teojunda"},"content":"        public Optional\u003cPerson\u003e getLastViewedPerson() {","lastModifiedDate":"2024-03-22"},{"lineNumber":179,"author":{"gitId":"teojunda"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-22"},{"lineNumber":180,"author":{"gitId":"teojunda"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":181,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":182,"author":{"gitId":"teojunda"},"content":"        @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":183,"author":{"gitId":"teojunda"},"content":"        public void resetLastViewedPerson() {","lastModifiedDate":"2024-03-22"},{"lineNumber":184,"author":{"gitId":"teojunda"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-22"},{"lineNumber":185,"author":{"gitId":"teojunda"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":186,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":187,"author":{"gitId":"teojunda"},"content":"        @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":188,"author":{"gitId":"teojunda"},"content":"        public void updateLastViewedPerson(Person p) {","lastModifiedDate":"2024-03-22"},{"lineNumber":189,"author":{"gitId":"teojunda"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-22"},{"lineNumber":190,"author":{"gitId":"teojunda"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"teojunda"},"content":"            return this.person.checkDuplicateField(person);","lastModifiedDate":"2024-03-14"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"teojunda"},"content":"            return personsAdded.stream().anyMatch(person::checkDuplicateField);","lastModifiedDate":"2024-03-14"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"kailashgautham"},"content":"        public ReadOnlyTaToolkit getTaToolkit() {","lastModifiedDate":"2024-04-01"},{"lineNumber":231,"author":{"gitId":"kailashgautham"},"content":"            return new TaToolkit();","lastModifiedDate":"2024-04-01"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"kailashgautham":18,"teojunda":20,"hiivan":15,"-":182}},{"path":"src/test/java/seedu/tatoolkit/logic/commands/AddNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"YuSoonZ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"YuSoonZ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalPersons.getTypicalTaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"YuSoonZ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"YuSoonZ"},"content":"import java.util.List;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"YuSoonZ"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"YuSoonZ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.Messages;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.ModelManager;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.UserPrefs;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.ClassGroup;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Email;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Github;","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Name;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Note;","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Notes;","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Phone;","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Telegram;","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"YuSoonZ"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"YuSoonZ"},"content":" * Contains integration tests (interaction with the Model, UndoCommand and RedoCommand) and unit tests for","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"YuSoonZ"},"content":" * {@code AddNoteCommand}.","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"YuSoonZ"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"YuSoonZ"},"content":"public class AddNoteCommandTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"kailashgautham"},"content":"    private final Model model \u003d new ModelManager(getTypicalTaToolkit(), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"YuSoonZ"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"YuSoonZ"},"content":"        Person person \u003d new Person(","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"YuSoonZ"},"content":"                new Name(\"John\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"YuSoonZ"},"content":"                new ClassGroup(\"2A\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"YuSoonZ"},"content":"                new Email(\"john@gmail.com\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"YuSoonZ"},"content":"                Optional.of(new Phone(\"98989898\")),","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"YuSoonZ"},"content":"                Optional.of(new Telegram(\"@john\")),","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"YuSoonZ"},"content":"                Optional.of(new Github(\"johncena\")),","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"YuSoonZ"},"content":"                new Notes(new ArrayList\u003c\u003e(List.of(\"hardworking\")))","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"YuSoonZ"},"content":"        );","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"YuSoonZ"},"content":"        model.addPerson(person);","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"YuSoonZ"},"content":"        int index \u003d model.getFilteredPersonList().indexOf(person);","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"YuSoonZ"},"content":"        AddNoteCommand addNoteCommand \u003d new AddNoteCommand(Index.fromZeroBased(index), new Note(\"hardworking\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"YuSoonZ"},"content":"        CommandResult commandResult \u003d addNoteCommand.execute(model);","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"YuSoonZ"},"content":"        String expectedMessage \u003d String.format(AddNoteCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"YuSoonZ"},"content":"                person.getName() + \"; Class/Group: \" + person.getClassGroup() + \"; Email: \" + person.getEmail()","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"YuSoonZ"},"content":"                        + (person.getPhone().isPresent() ? \"; Phone: \" + person.getPhone().get() : \"\")","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"YuSoonZ"},"content":"                        + (person.getTelegram().isPresent() ? \"; Telegram: \" + person.getTelegram().get() : \"\")","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"YuSoonZ"},"content":"                        + (person.getGithub().isPresent() ? \"; Github: \" + person.getGithub().get() : \"\"),","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"YuSoonZ"},"content":"                \"hardworking\");","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"YuSoonZ"},"content":"        assertEquals(expectedMessage, commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"YuSoonZ"},"content":"        Person updatedPerson \u003d model.getFilteredPersonList().get(index);","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"YuSoonZ"},"content":"        assertTrue(updatedPerson.getNotes().equals(person.getNotes()));","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"YuSoonZ"},"content":"        assertTrue(updatedPerson.getNotes().getAsStrings().contains(\"hardworking\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"YuSoonZ"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"YuSoonZ"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"YuSoonZ"},"content":"        AddNoteCommand addNoteCommand \u003d new AddNoteCommand(outOfBoundIndex, new Note(\"hardworking\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"YuSoonZ"},"content":"        assertCommandFailure(addNoteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"YuSoonZ"},"content":"    public void equals() {","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"YuSoonZ"},"content":"        final AddNoteCommand standardCommand \u003d new AddNoteCommand(INDEX_FIRST_PERSON, new Note(\"hardworking\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"YuSoonZ"},"content":"        AddNoteCommand commandWithSameValues \u003d new AddNoteCommand(INDEX_FIRST_PERSON, new Note(\"hardworking\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"YuSoonZ"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"YuSoonZ"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"YuSoonZ"},"content":"        assertTrue(!standardCommand.equals(null));","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"YuSoonZ"},"content":"        assertTrue(!standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"YuSoonZ"},"content":"        assertTrue(!standardCommand.equals(new AddNoteCommand(INDEX_FIRST_PERSON, new Note(\"hardworkings\"))));","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"YuSoonZ"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"YuSoonZ":78,"kailashgautham":19}},{"path":"src/test/java/seedu/tatoolkit/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalPersons.getTypicalTaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.ModelManager;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.TaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.UserPrefs;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"public class ClearCommandTest {","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"    public void execute_emptyTaToolkit_success() {","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":"    public void execute_nonEmptyTaToolkit_success() {","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"kailashgautham"},"content":"        Model model \u003d new ModelManager(getTypicalTaToolkit(), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"kailashgautham"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalTaToolkit(), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"        expectedModel.setTaToolkit(new TaToolkit());","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"kailashgautham"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"kailashgautham"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"kailashgautham":32}},{"path":"src/test/java/seedu/tatoolkit/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                + commandResult.getFeedbackToUser() + \", showHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + \", exit\u003d\" + commandResult.isExit() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"kailashgautham":1,"-":62}},{"path":"src/test/java/seedu/tatoolkit/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_CLASS_GROUP;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.TaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"g-tejas"},"content":"    public static final String VALID_CLASS_GROUP_AMY \u003d \"A-1\";","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"g-tejas"},"content":"    public static final String VALID_CLASS_GROUP_BOB \u003d \"B-2\";","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"kailashgautham"},"content":"    public static final String VALID_TELEGRAM_AMY \u003d \"@amybee\";","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"kailashgautham"},"content":"    public static final String VALID_TELEGRAM_BOB \u003d \"@bobchoo\";","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"kailashgautham"},"content":"    public static final String VALID_GITHUB_AMY \u003d \"amybee\";","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"kailashgautham"},"content":"    public static final String VALID_GITHUB_BOB \u003d \"bobchoo\";","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"kailashgautham"},"content":"    public static final String CLASS_GROUP_DESC_AMY \u003d \" \" + PREFIX_CLASS_GROUP + VALID_CLASS_GROUP_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"kailashgautham"},"content":"    public static final String CLASS_GROUP_DESC_BOB \u003d \" \" + PREFIX_CLASS_GROUP + VALID_CLASS_GROUP_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"kailashgautham"},"content":"    public static final String TELEGRAM_DESC_AMY \u003d \" \" + PREFIX_TELEGRAM + VALID_TELEGRAM_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"kailashgautham"},"content":"    public static final String TELEGRAM_DESC_BOB \u003d \" \" + PREFIX_TELEGRAM + VALID_TELEGRAM_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"kailashgautham"},"content":"    public static final String GITHUB_DESC_AMY \u003d \" \" + PREFIX_GITHUB + VALID_GITHUB_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"kailashgautham"},"content":"    public static final String GITHUB_DESC_BOB \u003d \" \" + PREFIX_GITHUB + VALID_GITHUB_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"kailashgautham"},"content":"    public static final String INVALID_CLASS_GROUP_DESC \u003d \" \" + PREFIX_CLASS_GROUP; // empty","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"kailashgautham"},"content":"    public static final String INVALID_TELEGRAM_DESC \u003d \" \" + PREFIX_TELEGRAM + \"hi\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"kailashgautham"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"kailashgautham"},"content":"                .withClassGroup(VALID_CLASS_GROUP_AMY).withTelegram(VALID_TELEGRAM_AMY).withGithub(VALID_GITHUB_AMY)","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"kailashgautham"},"content":"                .build();","lastModifiedDate":"2024-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"kailashgautham"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"kailashgautham"},"content":"                .withClassGroup(VALID_CLASS_GROUP_BOB).withTelegram(VALID_TELEGRAM_BOB).withGithub(VALID_GITHUB_BOB)","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"kailashgautham"},"content":"                .build();","lastModifiedDate":"2024-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"kailashgautham"},"content":"     * - the TA Toolkit, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2024-04-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"kailashgautham"},"content":"        TaToolkit expectedTaToolkit \u003d new TaToolkit(actualModel.getTaToolkit());","lastModifiedDate":"2024-04-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":118,"author":{"gitId":"kailashgautham"},"content":"        assertEquals(expectedTaToolkit, actualModel.getTaToolkit());","lastModifiedDate":"2024-04-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"kailashgautham"},"content":"     * {@code model}\u0027s TA Toolkit.","lastModifiedDate":"2024-04-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"kailashgautham":37,"g-tejas":2,"-":96}},{"path":"src/test/java/seedu/tatoolkit/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalPersons.getTypicalTaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.Messages;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.ModelManager;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.UserPrefs;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"kailashgautham"},"content":"    private Model model \u003d new ModelManager(getTypicalTaToolkit(), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"kailashgautham"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getTaToolkit(), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"teojunda"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"teojunda"},"content":"    public void execute_validDeleteLastViewedPerson_success() {","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"teojunda"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"teojunda"},"content":"        model.updateLastViewedPerson(personToDelete);","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"teojunda"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":50,"author":{"gitId":"teojunda"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"teojunda"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"kailashgautham"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getTaToolkit(), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"teojunda"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"teojunda"},"content":"        expectedModel.resetLastViewedPerson();","lastModifiedDate":"2024-03-22"},{"lineNumber":56,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"kailashgautham"},"content":"        Model expectedModel \u003d new ModelManager(model.getTaToolkit(), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"kailashgautham"},"content":"        // ensures that outOfBoundIndex is still in bounds of TA Toolkit list","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"kailashgautham"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTaToolkit().getPersonList().size());","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"kailashgautham":19,"teojunda":12,"-":105}},{"path":"src/test/java/seedu/tatoolkit/logic/commands/DeleteNoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalPersons.getTypicalTaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"teojunda"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"teojunda"},"content":"import java.util.List;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"teojunda"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.Messages;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.ModelManager;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.TaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.UserPrefs;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Note;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.testutil.PersonBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"teojunda"},"content":"public class DeleteNoteCommandTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"kailashgautham"},"content":"    private Model model \u003d new ModelManager(getTypicalTaToolkit(), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"teojunda"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"teojunda"},"content":"    public void execute_deleteNoteFromUnfilteredList_success() {","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"teojunda"},"content":"        DeleteNoteCommand deleteNoteCommand \u003d new DeleteNoteCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"teojunda"},"content":"                new ArrayList\u003c\u003e(List.of(Index.fromOneBased(1), Index.fromOneBased(2))));","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"teojunda"},"content":"        Person personToDeleteNote \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"teojunda"},"content":"        String expectedMessage \u003d String.format(DeleteNoteCommand.MESSAGE_SUCCESS, Messages.format(personToDeleteNote),","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"teojunda"},"content":"                \"\\nExcited to learn Java\\nAsked a good question about general relativity\");","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"kailashgautham"},"content":"        Model expectedModel \u003d new ModelManager(new TaToolkit(model.getTaToolkit()), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"teojunda"},"content":"        expectedModel.deletePerson(model.getFilteredPersonList().get(0));","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"teojunda"},"content":"        Person expectedPerson \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"teojunda"},"content":"                .withClassGroup(\"A-1\").withEmail(\"alice@example.com\")","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"teojunda"},"content":"                .withPhone(\"94351253\")","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"teojunda"},"content":"                .withTelegram(\"@alicepauline\").withGithub(\"alicep\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"teojunda"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"teojunda"},"content":"        assertCommandSuccess(deleteNoteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"teojunda"},"content":"        // Adds the note back after the test to keep the model unchanged.","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"teojunda"},"content":"        personToDeleteNote.addNote(new Note(\"Asked a good question about general relativity\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"teojunda"},"content":"        personToDeleteNote.addNote(new Note(\"Excited to learn Java\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"teojunda"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"teojunda"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"teojunda"},"content":"    public void execute_deleteNoteFromFilteredList_success() {","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"teojunda"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"teojunda"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"teojunda"},"content":"        DeleteNoteCommand deleteNoteCommand \u003d new DeleteNoteCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"teojunda"},"content":"                new ArrayList\u003c\u003e(List.of(Index.fromOneBased(1), Index.fromOneBased(2))));","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"teojunda"},"content":"        String expectedMessage \u003d String.format(DeleteNoteCommand.MESSAGE_SUCCESS, Messages.format(personInFilteredList),","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"teojunda"},"content":"                \"\\nExcited to learn Java\\nAsked a good question about general relativity\");","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"kailashgautham"},"content":"        Model expectedModel \u003d new ModelManager(new TaToolkit(model.getTaToolkit()), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"teojunda"},"content":"        showPersonAtIndex(expectedModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"teojunda"},"content":"        expectedModel.deletePerson(model.getFilteredPersonList().get(0));","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"teojunda"},"content":"        Person expectedPerson \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"teojunda"},"content":"                .withClassGroup(\"A-1\").withEmail(\"alice@example.com\")","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"teojunda"},"content":"                .withPhone(\"94351253\")","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"teojunda"},"content":"                .withTelegram(\"@alicepauline\").withGithub(\"alicep\").build();","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"teojunda"},"content":"        expectedModel.addPersonKeepFilter(expectedPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"teojunda"},"content":"        assertCommandSuccess(deleteNoteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"teojunda"},"content":"        // Adds the note back after the test to keep the model unchanged.","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"teojunda"},"content":"        personInFilteredList.addNote(new Note(\"Asked a good question about general relativity\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"teojunda"},"content":"        personInFilteredList.addNote(new Note(\"Excited to learn Java\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"teojunda"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"teojunda"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"teojunda"},"content":"    public void execute_invalidPersonIndex_failure() {","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"teojunda"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"teojunda"},"content":"        DeleteNoteCommand deleteNoteCommand \u003d new DeleteNoteCommand(outOfBoundIndex,","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"teojunda"},"content":"                new ArrayList\u003c\u003e(List.of(Index.fromOneBased(1), Index.fromOneBased(2))));","lastModifiedDate":"2024-03-30"},{"lineNumber":85,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":86,"author":{"gitId":"teojunda"},"content":"        assertCommandFailure(deleteNoteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-30"},{"lineNumber":87,"author":{"gitId":"teojunda"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"teojunda"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"teojunda"},"content":"    public void execute_invalidNoteIndex_failure() {","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"teojunda"},"content":"        Person personToDeleteNote \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"teojunda"},"content":"        DeleteNoteCommand deleteNoteCommand \u003d new DeleteNoteCommand(Index.fromOneBased(1),","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"teojunda"},"content":"                new ArrayList\u003c\u003e(List.of(Index.fromOneBased(1),","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"teojunda"},"content":"                        Index.fromOneBased(personToDeleteNote.getNoteSize() + 1))));","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"teojunda"},"content":"        assertCommandFailure(deleteNoteCommand, model, Messages.MESSAGE_INVALID_NOTE_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"teojunda"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"teojunda"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"kailashgautham":18,"teojunda":80}},{"path":"src/test/java/seedu/tatoolkit/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalPersons.getTypicalTaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.Messages;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.ModelManager;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.TaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.UserPrefs;","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Note;","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.testutil.PersonBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"kailashgautham"},"content":"    private Model model \u003d new ModelManager(getTypicalTaToolkit(), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"kailashgautham"},"content":"        Model expectedModel \u003d new ModelManager(new TaToolkit(model.getTaToolkit()), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"teojunda"},"content":"        Person personToEdit \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"teojunda"},"content":"        expectedModel.deletePerson(personToEdit);","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"teojunda"},"content":"        editedPerson.addNote(new Note(\"Asked a good question about general relativity\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"teojunda"},"content":"        editedPerson.addNote(new Note(\"Excited to learn Java\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"teojunda"},"content":"        expectedModel.addPerson(editedPerson);","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"kailashgautham"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"kailashgautham"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"kailashgautham"},"content":"        Model expectedModel \u003d new ModelManager(new TaToolkit(model.getTaToolkit()), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"teojunda"},"content":"        expectedModel.deletePerson(lastPerson);","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"teojunda"},"content":"        expectedModel.addPerson(editedPerson);","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"teojunda"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_failure() {","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"teojunda"},"content":"        String expectedMessage \u003d EditCommand.MESSAGE_NO_CHANGE;","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"kailashgautham"},"content":"        Model expectedModel \u003d new ModelManager(new TaToolkit(model.getTaToolkit()), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"teojunda"},"content":"        assertCommandFailure(editCommand, model, expectedMessage);","lastModifiedDate":"2024-03-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"kailashgautham"},"content":"        Model expectedModel \u003d new ModelManager(new TaToolkit(model.getTaToolkit()), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"teojunda"},"content":"        showPersonAtIndex(expectedModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-22"},{"lineNumber":103,"author":{"gitId":"teojunda"},"content":"        expectedModel.deletePerson(model.getFilteredPersonList().get(0));","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"teojunda"},"content":"        expectedModel.addPersonKeepFilter(editedPerson);","lastModifiedDate":"2024-03-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"teojunda"},"content":"    @Test","lastModifiedDate":"2024-03-22"},{"lineNumber":110,"author":{"gitId":"teojunda"},"content":"    public void execute_editLastViewedPerson_success() {","lastModifiedDate":"2024-03-22"},{"lineNumber":111,"author":{"gitId":"teojunda"},"content":"        Person personToEdit \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-22"},{"lineNumber":112,"author":{"gitId":"teojunda"},"content":"        model.updateLastViewedPerson(personToEdit);","lastModifiedDate":"2024-03-22"},{"lineNumber":113,"author":{"gitId":"teojunda"},"content":"        Person editedPerson \u003d new PersonBuilder(personToEdit).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-22"},{"lineNumber":114,"author":{"gitId":"teojunda"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-22"},{"lineNumber":115,"author":{"gitId":"teojunda"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2024-03-22"},{"lineNumber":116,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":117,"author":{"gitId":"teojunda"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-22"},{"lineNumber":118,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":119,"author":{"gitId":"kailashgautham"},"content":"        Model expectedModel \u003d new ModelManager(new TaToolkit(model.getTaToolkit()), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":120,"author":{"gitId":"teojunda"},"content":"        expectedModel.updateLastViewedPerson(editedPerson);","lastModifiedDate":"2024-03-22"},{"lineNumber":121,"author":{"gitId":"teojunda"},"content":"        expectedModel.deletePerson(model.getFilteredPersonList().get(0));","lastModifiedDate":"2024-03-22"},{"lineNumber":122,"author":{"gitId":"teojunda"},"content":"        expectedModel.addPersonKeepFilter(editedPerson);","lastModifiedDate":"2024-03-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"teojunda"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_FIELD);","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"kailashgautham"},"content":"        // edit person in filtered list into a duplicate in TA Toolkit","lastModifiedDate":"2024-04-01"},{"lineNumber":141,"author":{"gitId":"kailashgautham"},"content":"        Person personInList \u003d model.getTaToolkit().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-04-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"teojunda"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_FIELD);","lastModifiedDate":"2024-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":159,"author":{"gitId":"kailashgautham"},"content":"     * but smaller than size of TA Toolkit","lastModifiedDate":"2024-04-01"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":165,"author":{"gitId":"kailashgautham"},"content":"        // ensures that outOfBoundIndex is still in bounds of TA Toolkit list","lastModifiedDate":"2024-04-01"},{"lineNumber":166,"author":{"gitId":"kailashgautham"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTaToolkit().getPersonList().size());","lastModifiedDate":"2024-04-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"kailashgautham":35,"teojunda":29,"-":145}},{"path":"src/test/java/seedu/tatoolkit/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":"        assertEquals(DESC_AMY, descriptorWithSameValues);","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"kailashgautham"},"content":"        assertEquals(DESC_AMY, DESC_AMY);","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"kailashgautham"},"content":"        assertNotEquals(null, DESC_AMY);","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"kailashgautham"},"content":"        assertNotEquals(5, DESC_AMY);","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"kailashgautham"},"content":"        assertNotEquals(DESC_AMY, DESC_BOB);","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"kailashgautham"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"kailashgautham"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"kailashgautham"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"kailashgautham"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", classGroup\u003d\"","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"kailashgautham"},"content":"                + editPersonDescriptor.getClassGroup().orElse(null) + \", email\u003d\"","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"kailashgautham"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"kailashgautham"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", telegram\u003d\"","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"kailashgautham"},"content":"                + editPersonDescriptor.getTelegram().orElse(null) + \", github\u003d\"","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"kailashgautham"},"content":"                + editPersonDescriptor.getGithub().orElse(null) + \"}\";","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"kailashgautham":23,"-":38}},{"path":"src/test/java/seedu/tatoolkit/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.ModelManager;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"kailashgautham":5,"-":15}},{"path":"src/test/java/seedu/tatoolkit/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalPersons.CARL;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalPersons.getTypicalTaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.ModelManager;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.UserPrefs;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"    private Model model \u003d new ModelManager(getTypicalTaToolkit(), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"kailashgautham"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalTaToolkit(), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kailashgautham":13,"-":78}},{"path":"src/test/java/seedu/tatoolkit/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.ModelManager;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"kailashgautham":5,"-":15}},{"path":"src/test/java/seedu/tatoolkit/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"g-tejas"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"g-tejas"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalPersons.getTypicalPersons;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalPersons.getTypicalTaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"g-tejas"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"g-tejas"},"content":"import java.util.List;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"g-tejas"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"g-tejas"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.ModelManager;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.UserPrefs;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.ClassGroup;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.ListCommandPredicate;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"g-tejas"},"content":"    private final ClassGroup classGroupA1 \u003d new ClassGroup(\"A-1\");","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"g-tejas"},"content":"    private final ClassGroup classGroupB1 \u003d new ClassGroup(\"B-1\");","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"g-tejas"},"content":"    private final ClassGroup nonExistentClassGroup \u003d new ClassGroup(\"NonExistentClassGroup\");","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"g-tejas"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"g-tejas"},"content":"    public void equals() {","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"g-tejas"},"content":"        ListCommandPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"g-tejas"},"content":"                new ListCommandPredicate(Optional.of(Collections.singletonList(classGroupA1)));","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"g-tejas"},"content":"        ListCommandPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"g-tejas"},"content":"                new ListCommandPredicate(Optional.of(Collections.singletonList(classGroupB1)));","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"g-tejas"},"content":"        ListCommand listFirstCommand \u003d new ListCommand(firstPredicate);","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"g-tejas"},"content":"        ListCommand listSecondCommand \u003d new ListCommand(secondPredicate);","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"g-tejas"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"g-tejas"},"content":"        assertEquals(listFirstCommand, listFirstCommand);","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"g-tejas"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"g-tejas"},"content":"        ListCommand listFirstCommandCopy \u003d new ListCommand(firstPredicate);","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"g-tejas"},"content":"        assertEquals(listFirstCommand, listFirstCommandCopy);","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"g-tejas"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"g-tejas"},"content":"        assertNotEquals(1, listFirstCommand);","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"g-tejas"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"g-tejas"},"content":"        assertNotEquals(null, listFirstCommand);","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"g-tejas"},"content":"        // different class group -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"g-tejas"},"content":"        assertNotEquals(listFirstCommand, listSecondCommand);","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"kailashgautham"},"content":"        model \u003d new ModelManager(getTypicalTaToolkit(), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"kailashgautham"},"content":"        expectedModel \u003d new ModelManager(model.getTaToolkit(), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"g-tejas"},"content":"        int expectedSize \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"g-tejas"},"content":"        String expectedMessage \u003d String.format(ListCommand.MESSAGE_LIST_ALL_SUCCESS, expectedSize);","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"g-tejas"},"content":"        assertCommandSuccess(new ListCommand(new ListCommandPredicate(Optional.empty())),","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"g-tejas"},"content":"                model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"g-tejas"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"g-tejas"},"content":"    public void execute_singleClassGroup_showsSingleClassGroup() {","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"g-tejas"},"content":"        List\u003cPerson\u003e expectedPersons \u003d getTypicalPersons().stream()","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"g-tejas"},"content":"                .filter(person -\u003e person.getClassGroup().equals(classGroupA1))","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"g-tejas"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"g-tejas"},"content":"        String expectedMessage \u003d String.format(ListCommand.MESSAGE_LIST_CLASS_SUCCESS,","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"g-tejas"},"content":"                expectedPersons.size(), classGroupA1);","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"g-tejas"},"content":"        ListCommandPredicate predicate \u003d new ListCommandPredicate(Optional.of(List.of(classGroupA1)));","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"g-tejas"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"g-tejas"},"content":"        assertCommandSuccess(new ListCommand(predicate), model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"g-tejas"},"content":"    public void execute_multipleClassGroup_showsMultipleClassGroups() {","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"g-tejas"},"content":"        List\u003cClassGroup\u003e classGroups \u003d List.of(classGroupA1, classGroupB1);","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"g-tejas"},"content":"        ListCommandPredicate predicate \u003d new ListCommandPredicate(Optional.of(classGroups));","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"g-tejas"},"content":"        List\u003cPerson\u003e expectedPersons \u003d getTypicalPersons().stream()","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"g-tejas"},"content":"                .filter(person -\u003e classGroups.contains(person.getClassGroup()))","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"g-tejas"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"g-tejas"},"content":"        String classGroupsString \u003d classGroups.stream()","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"g-tejas"},"content":"                .map(Object::toString)","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"g-tejas"},"content":"                .collect(Collectors.joining(\", \"));","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"g-tejas"},"content":"        String expectedMessage \u003d String.format(ListCommand.MESSAGE_LIST_CLASS_SUCCESS,","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"g-tejas"},"content":"                expectedPersons.size(), classGroupsString);","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"g-tejas"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"g-tejas"},"content":"        assertCommandSuccess(new ListCommand(predicate), model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"g-tejas"},"content":"        assertEquals(expectedPersons, model.getFilteredPersonList());","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":107,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"g-tejas"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"g-tejas"},"content":"    public void execute_nonExistentClassGroup_showsEmptyList() {","lastModifiedDate":"2024-03-16"},{"lineNumber":110,"author":{"gitId":"g-tejas"},"content":"        String expectedMessage \u003d String.format(ListCommand.MESSAGE_LIST_CLASS_SUCCESS, 0, nonExistentClassGroup);","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"g-tejas"},"content":"        ListCommandPredicate predicate \u003d new ListCommandPredicate(Optional.of(List.of(nonExistentClassGroup)));","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"g-tejas"},"content":"        ListCommand command \u003d new ListCommand(predicate);","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"g-tejas"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"g-tejas"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"g-tejas"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"g-tejas"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"g-tejas"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"g-tejas"},"content":"        ListCommandPredicate predicate \u003d new ListCommandPredicate(Optional.of(List.of(classGroupA1)));","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"g-tejas"},"content":"        ListCommand listCommand \u003d new ListCommand(predicate);","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"g-tejas"},"content":"        String expected \u003d ListCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"g-tejas"},"content":"        assertEquals(expected, listCommand.toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":124,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":125,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kailashgautham":12,"g-tejas":89,"-":25}},{"path":"src/test/java/seedu/tatoolkit/logic/commands/MarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hiivan"},"content":"package seedu.tatoolkit.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"hiivan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"hiivan"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"hiivan"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"hiivan"},"content":"import static seedu.tatoolkit.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"hiivan"},"content":"import static seedu.tatoolkit.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"hiivan"},"content":"import static seedu.tatoolkit.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"hiivan"},"content":"import static seedu.tatoolkit.testutil.TypicalPersons.getTypicalTaToolkit;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"hiivan"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"hiivan"},"content":"import java.util.List;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"hiivan"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"hiivan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"hiivan"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"hiivan"},"content":"import seedu.tatoolkit.logic.Messages;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"hiivan"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"hiivan"},"content":"import seedu.tatoolkit.model.ModelManager;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"hiivan"},"content":"import seedu.tatoolkit.model.UserPrefs;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"hiivan"},"content":"import seedu.tatoolkit.model.attendance.Week;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"hiivan"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"hiivan"},"content":" * Contains integration tests (interaction with the Model) and unit tests for {@code MarkCommand}.","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"hiivan"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"hiivan"},"content":"public class MarkCommandTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"hiivan"},"content":"    private Model model;","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"hiivan"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"hiivan"},"content":"    public void setUp() {","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"hiivan"},"content":"        model \u003d new ModelManager(getTypicalTaToolkit(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"hiivan"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"hiivan"},"content":"    public void execute_invalidIndicesUnfilteredList_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"hiivan"},"content":"        Index weekIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"hiivan"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"hiivan"},"content":"        List\u003cIndex\u003e presentIndices \u003d Arrays.asList(outOfBoundIndex);","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"hiivan"},"content":"        List\u003cIndex\u003e absentIndices \u003d Arrays.asList(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"hiivan"},"content":"        MarkCommand markCommand \u003d new MarkCommand(new Week(weekIndex), presentIndices, absentIndices);","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"hiivan"},"content":"        assertCommandFailure(markCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"hiivan"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"hiivan"},"content":"    public void equals() {","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"hiivan"},"content":"        Index weekIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"hiivan"},"content":"        List\u003cIndex\u003e presentIndices \u003d Arrays.asList(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"hiivan"},"content":"        List\u003cIndex\u003e absentIndices \u003d Arrays.asList(INDEX_SECOND_PERSON);","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"hiivan"},"content":"        MarkCommand markFirstCommand \u003d new MarkCommand(new Week(weekIndex), presentIndices, absentIndices);","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"hiivan"},"content":"        assertEquals(markFirstCommand, markFirstCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"hiivan"},"content":"        MarkCommand markFirstCommandCopy \u003d new MarkCommand(new Week(weekIndex), presentIndices, absentIndices);","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"hiivan"},"content":"        assertEquals(markFirstCommand, markFirstCommandCopy);","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"hiivan"},"content":"        assertNotEquals(markFirstCommand, new Object());","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"hiivan"},"content":"        assertNotEquals(null, markFirstCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"hiivan"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"hiivan"},"content":"        List\u003cIndex\u003e differentPresentIndices \u003d Arrays.asList(INDEX_THIRD_PERSON);","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"hiivan"},"content":"        List\u003cIndex\u003e differentAbsentIndices \u003d Arrays.asList(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"hiivan"},"content":"        MarkCommand markSecondCommand \u003d new MarkCommand(new Week(weekIndex),","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"hiivan"},"content":"                differentPresentIndices, differentAbsentIndices);","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"hiivan"},"content":"        assertNotEquals(markFirstCommand, markSecondCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"hiivan"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"hiivan"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"hiivan":70}},{"path":"src/test/java/seedu/tatoolkit/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"YuSoonZ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"YuSoonZ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"YuSoonZ"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"YuSoonZ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.ViewCommand.MESSAGE_VIEW_PERSON_SUCCESS;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalPersons.getTypicalTaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"YuSoonZ"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"YuSoonZ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.Messages;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.ModelManager;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.UserPrefs;","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"YuSoonZ"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"YuSoonZ"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"YuSoonZ"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"YuSoonZ"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"YuSoonZ"},"content":"public class ViewCommandTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"YuSoonZ"},"content":"    private Model model;","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"YuSoonZ"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"YuSoonZ"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"kailashgautham"},"content":"        model \u003d new ModelManager(getTypicalTaToolkit(), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"YuSoonZ"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"YuSoonZ"},"content":"        Person personToView \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"YuSoonZ"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"YuSoonZ"},"content":"        String expectedMessage \u003d String.format(MESSAGE_VIEW_PERSON_SUCCESS,","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"YuSoonZ"},"content":"                Messages.format(personToView));","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"kailashgautham"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getTaToolkit(), new UserPrefs());","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"YuSoonZ"},"content":"        assertCommandSuccess(viewCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"YuSoonZ"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"YuSoonZ"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"YuSoonZ"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(outOfBoundIndex);","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"YuSoonZ"},"content":"        assertCommandFailure(viewCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"YuSoonZ"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"YuSoonZ"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"YuSoonZ"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"kailashgautham"},"content":"        // ensures that outOfBoundIndex is still in bounds of TA Toolkit list","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"kailashgautham"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTaToolkit().getPersonList().size());","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"YuSoonZ"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(outOfBoundIndex);","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"YuSoonZ"},"content":"        assertCommandFailure(viewCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"YuSoonZ"},"content":"    public void equals() {","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"YuSoonZ"},"content":"        ViewCommand viewFirstCommand \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"YuSoonZ"},"content":"        ViewCommand viewSecondCommand \u003d new ViewCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"YuSoonZ"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"YuSoonZ"},"content":"        assertEquals(viewFirstCommand, viewFirstCommand);","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"YuSoonZ"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"YuSoonZ"},"content":"        ViewCommand viewFirstCommandCopy \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"YuSoonZ"},"content":"        assertEquals(viewFirstCommand, viewFirstCommandCopy);","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"YuSoonZ"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"YuSoonZ"},"content":"        assertNotEquals(1, viewFirstCommand);","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"YuSoonZ"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"YuSoonZ"},"content":"        assertNotEquals(null, viewFirstCommand);","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"YuSoonZ"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"YuSoonZ"},"content":"        assertNotEquals(viewFirstCommand, viewSecondCommand);","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"kailashgautham"},"content":"    public void execute_emptyTaToolkit_throwsCommandException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"kailashgautham"},"content":"        // Empty the TA Toolkit","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"YuSoonZ"},"content":"        model \u003d new ModelManager();","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"YuSoonZ"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(Index.fromOneBased(1));","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"YuSoonZ"},"content":"        assertCommandFailure(viewCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"YuSoonZ"},"content":"    public void equals_otherObjectNotInstanceOfViewCommand_returnsFalse() {","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"YuSoonZ"},"content":"        // Create a ViewCommand object","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"YuSoonZ"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(Index.fromOneBased(1));","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"YuSoonZ"},"content":"        // Create another object of a different class","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"YuSoonZ"},"content":"        Object otherObject \u003d new Object();","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"YuSoonZ"},"content":"        // Check if they are equal","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"YuSoonZ"},"content":"        assertFalse(viewCommand.equals(otherObject));","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"YuSoonZ"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"YuSoonZ"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"YuSoonZ"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(targetIndex);","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"YuSoonZ"},"content":"        String expected \u003d ViewCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"YuSoonZ"},"content":"        assertEquals(expected, viewCommand.toString());","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"YuSoonZ"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"YuSoonZ":102,"kailashgautham":20}},{"path":"src/test/java/seedu/tatoolkit/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.CLASS_GROUP_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.CLASS_GROUP_DESC_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.GITHUB_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.GITHUB_DESC_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.INVALID_CLASS_GROUP_DESC;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.INVALID_TELEGRAM_DESC;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.TELEGRAM_DESC_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_CLASS_GROUP;","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalPersons.AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.Messages;","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.AddCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.ClassGroup;","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Email;","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Name;","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Phone;","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Telegram;","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.testutil.PersonBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"kailashgautham"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"kailashgautham"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + CLASS_GROUP_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"kailashgautham"},"content":"                + EMAIL_DESC_BOB + PHONE_DESC_BOB + TELEGRAM_DESC_BOB + GITHUB_DESC_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":59,"author":{"gitId":"kailashgautham"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":63,"author":{"gitId":"kailashgautham"},"content":"    public void parse_repeatedValue_failure() {","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"kailashgautham"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + CLASS_GROUP_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"kailashgautham"},"content":"                + PHONE_DESC_BOB + TELEGRAM_DESC_BOB + GITHUB_DESC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"kailashgautham"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"kailashgautham"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_CLASS_GROUP,","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"kailashgautham"},"content":"                        PREFIX_EMAIL, PREFIX_PHONE, PREFIX_GITHUB, PREFIX_TELEGRAM));","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"kailashgautham"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"kailashgautham"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + CLASS_GROUP_DESC_AMY + EMAIL_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"kailashgautham"},"content":"                + TELEGRAM_DESC_AMY + GITHUB_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"kailashgautham"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"kailashgautham"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"kailashgautham"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"kailashgautham"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"kailashgautham"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + CLASS_GROUP_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":147,"author":{"gitId":"kailashgautham"},"content":"                + EMAIL_DESC_BOB + PHONE_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"kailashgautham"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + CLASS_GROUP_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":151,"author":{"gitId":"kailashgautham"},"content":"                + EMAIL_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"kailashgautham"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + CLASS_GROUP_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"kailashgautham"},"content":"                + INVALID_EMAIL_DESC + PHONE_DESC_BOB, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"kailashgautham"},"content":"        // invalid class group","lastModifiedDate":"2024-03-11"},{"lineNumber":158,"author":{"gitId":"kailashgautham"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_CLASS_GROUP_DESC","lastModifiedDate":"2024-03-11"},{"lineNumber":159,"author":{"gitId":"kailashgautham"},"content":"                + INVALID_EMAIL_DESC + PHONE_DESC_BOB, ClassGroup.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":160,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":161,"author":{"gitId":"kailashgautham"},"content":"        // invalid telegram","lastModifiedDate":"2024-03-11"},{"lineNumber":162,"author":{"gitId":"kailashgautham"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + CLASS_GROUP_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":163,"author":{"gitId":"kailashgautham"},"content":"                + EMAIL_DESC_BOB + PHONE_DESC_BOB + INVALID_TELEGRAM_DESC, Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"kailashgautham"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + INVALID_CLASS_GROUP_DESC","lastModifiedDate":"2024-03-11"},{"lineNumber":168,"author":{"gitId":"kailashgautham"},"content":"                        + EMAIL_DESC_BOB + PHONE_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":171,"author":{"gitId":"kailashgautham"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + CLASS_GROUP_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":172,"author":{"gitId":"kailashgautham"},"content":"                        + EMAIL_DESC_BOB + PHONE_DESC_BOB,","lastModifiedDate":"2024-03-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"kailashgautham":77,"-":98}},{"path":"src/test/java/seedu/tatoolkit/logic/parser/AddNoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"YuSoonZ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.AddNoteCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Note;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"YuSoonZ"},"content":"public class AddNoteCommandParserTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"YuSoonZ"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"YuSoonZ"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddNoteCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"YuSoonZ"},"content":"    private AddNoteCommandParser parser \u003d new AddNoteCommandParser();","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"teojunda"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"teojunda"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"teojunda"},"content":"        Index expectedIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"teojunda"},"content":"        Note expectedNote \u003d new Note(\"very hardworking!!!\");","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"teojunda"},"content":"        assertParseSuccess(parser, \"1 note/very hardworking!!!\", new AddNoteCommand(expectedIndex, expectedNote));","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"teojunda"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"YuSoonZ"},"content":"    public void parse_missingArgument_throwParseException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"YuSoonZ"},"content":"        assertParseFailure(parser, \"0\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"YuSoonZ"},"content":"        assertParseFailure(parser, \"hardworking\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"YuSoonZ"},"content":"    public void parse_invalidIndex_throwParseException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"teojunda"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"a note/hardworking\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"YuSoonZ"},"content":"    public void parse_emptyInput_throwParseException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"YuSoonZ"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"YuSoonZ"},"content":"    public void parse_zeroBasedIndex_throwParseException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"teojunda"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"0 note/hardworking\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"YuSoonZ"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"YuSoonZ":30,"kailashgautham":9,"teojunda":9}},{"path":"src/test/java/seedu/tatoolkit/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"kailashgautham"},"content":"        String argsString \u003d \"  some random string /t with leading and trailing spaces \";","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"kailashgautham":2,"-":148}},{"path":"src/test/java/seedu/tatoolkit/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.Command;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"kailashgautham":3,"-":36}},{"path":"src/test/java/seedu/tatoolkit/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.DeleteCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"kailashgautham":6,"-":26}},{"path":"src/test/java/seedu/tatoolkit/logic/parser/DeleteNoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.ParserUtil.MESSAGE_DUPLICATE_INDICES;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"teojunda"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"teojunda"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"teojunda"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.DeleteNoteCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"teojunda"},"content":"public class DeleteNoteCommandParserTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"teojunda"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"teojunda"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteNoteCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"teojunda"},"content":"    private DeleteNoteCommandParser parser \u003d new DeleteNoteCommandParser();","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"teojunda"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"teojunda"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"teojunda"},"content":"        Index expectedIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"teojunda"},"content":"        List\u003cIndex\u003e expectedNoteIndex \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"teojunda"},"content":"        expectedNoteIndex.add(Index.fromOneBased(1));","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"teojunda"},"content":"        expectedNoteIndex.add(Index.fromOneBased(2));","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"teojunda"},"content":"        assertParseSuccess(parser, \"1 i/1, 2\", new DeleteNoteCommand(expectedIndex, expectedNoteIndex));","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"teojunda"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"teojunda"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"teojunda"},"content":"    public void parse_duplicateIndices_failure() {","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"teojunda"},"content":"        assertParseFailure(parser, \"1 i/1, 2, 2\", MESSAGE_DUPLICATE_INDICES);","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"teojunda"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"teojunda"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"teojunda"},"content":"    public void parse_missingArgument_throwParseException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"teojunda"},"content":"        assertParseFailure(parser, \"0\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"teojunda"},"content":"        assertParseFailure(parser, \"i/i, 2\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"teojunda"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"teojunda"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"kailashgautham":7,"teojunda":35}},{"path":"src/test/java/seedu/tatoolkit/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.CLASS_GROUP_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.GITHUB_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.TELEGRAM_DESC_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.VALID_CLASS_GROUP_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.VALID_GITHUB_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.VALID_TELEGRAM_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.Messages;","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.EditCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Email;","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Name;","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Phone;","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"kailashgautham"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_PHONE_AMY,","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":92,"author":{"gitId":"kailashgautham"},"content":"        String userInput \u003d targetIndex.getOneBased() + CLASS_GROUP_DESC_AMY + EMAIL_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"kailashgautham"},"content":"                + NAME_DESC_AMY + TELEGRAM_DESC_AMY + GITHUB_DESC_AMY;","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"kailashgautham"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"kailashgautham"},"content":"                .withClassGroup(VALID_CLASS_GROUP_AMY).withTelegram(VALID_TELEGRAM_AMY)","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"kailashgautham"},"content":"                .withGithub(VALID_GITHUB_AMY).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":153,"author":{"gitId":"kailashgautham"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-11"},{"lineNumber":154,"author":{"gitId":"kailashgautham"},"content":"                + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-11"},{"lineNumber":155,"author":{"gitId":"kailashgautham"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":158,"author":{"gitId":"kailashgautham"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL));","lastModifiedDate":"2024-03-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":161,"author":{"gitId":"kailashgautham"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2024-03-11"},{"lineNumber":162,"author":{"gitId":"kailashgautham"},"content":"                + INVALID_PHONE_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":165,"author":{"gitId":"kailashgautham"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL));","lastModifiedDate":"2024-03-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"kailashgautham":49,"-":118}},{"path":"src/test/java/seedu/tatoolkit/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.FindCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"kailashgautham":6,"-":28}},{"path":"src/test/java/seedu/tatoolkit/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalIndexes.INDEX_LIST;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"teojunda"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.attendance.Week;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Email;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Name;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Phone;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"g-tejas"},"content":"    private static final String VALID_WEEK \u003d \"1\";","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"g-tejas"},"content":"    private static final String INVALID_WEEK \u003d \"100\";","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"g-tejas"},"content":"    private static final String VALID_INDICES \u003d \"1, 2, 3\";","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"g-tejas"},"content":"    private static final String INVALID_INDICES \u003d \"1, 2, @\";","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"teojunda"},"content":"        Optional\u003cPhone\u003e expectedPhone \u003d Optional.of(new Phone(VALID_PHONE));","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"teojunda"},"content":"        Optional\u003cPhone\u003e expectedPhone \u003d Optional.of(new Phone(VALID_PHONE));","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"g-tejas"},"content":"    public void parseWeek_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"g-tejas"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseWeek((String) null));","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"g-tejas"},"content":"    public void parseWeek_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"g-tejas"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseWeek(INVALID_WEEK));","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"g-tejas"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseWeek(\"not a number\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"g-tejas"},"content":"    public void parseWeek_validValueWithoutWhitespace_returnsWeek() throws Exception {","lastModifiedDate":"2024-03-25"},{"lineNumber":136,"author":{"gitId":"g-tejas"},"content":"        Index index \u003d Index.fromOneBased(Integer.parseInt(VALID_WEEK));","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"g-tejas"},"content":"        Week expectedWeek \u003d new Week(index);","lastModifiedDate":"2024-03-25"},{"lineNumber":138,"author":{"gitId":"g-tejas"},"content":"        assertEquals(expectedWeek, ParserUtil.parseWeek(VALID_WEEK));","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":142,"author":{"gitId":"g-tejas"},"content":"    public void parseWeek_validValueWithWhitespace_returnsWeek() throws Exception {","lastModifiedDate":"2024-03-25"},{"lineNumber":143,"author":{"gitId":"g-tejas"},"content":"        String weekWithWhitespace \u003d WHITESPACE + VALID_WEEK + WHITESPACE;","lastModifiedDate":"2024-03-25"},{"lineNumber":144,"author":{"gitId":"g-tejas"},"content":"        Index index \u003d Index.fromOneBased(Integer.parseInt(VALID_WEEK));","lastModifiedDate":"2024-03-25"},{"lineNumber":145,"author":{"gitId":"g-tejas"},"content":"        Week expectedWeek \u003d new Week(index);","lastModifiedDate":"2024-03-25"},{"lineNumber":146,"author":{"gitId":"g-tejas"},"content":"        assertEquals(expectedWeek, ParserUtil.parseWeek(weekWithWhitespace));","lastModifiedDate":"2024-03-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":150,"author":{"gitId":"g-tejas"},"content":"    public void parseIndices_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":151,"author":{"gitId":"g-tejas"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseIndices(null));","lastModifiedDate":"2024-03-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":155,"author":{"gitId":"g-tejas"},"content":"    public void parseIndices_invalidInput_throwsParseException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":156,"author":{"gitId":"g-tejas"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndices(\"a b\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":157,"author":{"gitId":"g-tejas"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndices(\"1, b\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":158,"author":{"gitId":"g-tejas"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndices(\"1 2 3\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":159,"author":{"gitId":"teojunda"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndices(\"   \"));","lastModifiedDate":"2024-03-27"},{"lineNumber":160,"author":{"gitId":"teojunda"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndices(\" ,,  \"));","lastModifiedDate":"2024-03-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":164,"author":{"gitId":"g-tejas"},"content":"    public void parseIndices_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":165,"author":{"gitId":"g-tejas"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2024-03-25"},{"lineNumber":166,"author":{"gitId":"g-tejas"},"content":"                -\u003e ParserUtil.parseIndices(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2024-03-25"},{"lineNumber":167,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":168,"author":{"gitId":"g-tejas"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2024-03-25"},{"lineNumber":169,"author":{"gitId":"g-tejas"},"content":"                -\u003e ParserUtil.parseIndices(\"1, \" + Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2024-03-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":173,"author":{"gitId":"g-tejas"},"content":"    public void parseIndices_validInput_success() throws Exception {","lastModifiedDate":"2024-03-25"},{"lineNumber":174,"author":{"gitId":"g-tejas"},"content":"        // No whitespaces","lastModifiedDate":"2024-03-25"},{"lineNumber":175,"author":{"gitId":"g-tejas"},"content":"        assertEquals(INDEX_LIST, ParserUtil.parseIndices(\"1,2,3\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":176,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":177,"author":{"gitId":"g-tejas"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2024-03-25"},{"lineNumber":178,"author":{"gitId":"g-tejas"},"content":"        assertEquals(INDEX_LIST, ParserUtil.parseIndices(\" 1 , 2 , 3 \"));","lastModifiedDate":"2024-03-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":180,"author":{"gitId":"g-tejas"},"content":"        // Trailing comma","lastModifiedDate":"2024-03-25"},{"lineNumber":181,"author":{"gitId":"g-tejas"},"content":"        assertEquals(INDEX_LIST, ParserUtil.parseIndices(\" 1 , 2 , 3, \"));","lastModifiedDate":"2024-03-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"kailashgautham":11,"teojunda":5,"g-tejas":38,"-":129}},{"path":"src/test/java/seedu/tatoolkit/logic/parser/TaToolkitParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.AddCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.ClearCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.DeleteCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.EditCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.ExitCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.FindCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.HelpCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.ListCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.ViewCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.testutil.PersonBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.testutil.PersonUtil;","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"kailashgautham"},"content":"public class TaToolkitParserTest {","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"kailashgautham"},"content":"    private final TaToolkitParser parser \u003d new TaToolkitParser();","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"YuSoonZ"},"content":"    public void parseCommand_view() throws Exception {","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"YuSoonZ"},"content":"        assertTrue(parser.parseCommand(ViewCommand.COMMAND_WORD + \" 3\") instanceof ViewCommand);","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"YuSoonZ":5,"kailashgautham":23,"-":79}},{"path":"src/test/java/seedu/tatoolkit/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"YuSoonZ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"YuSoonZ"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"YuSoonZ"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"YuSoonZ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.ViewCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"YuSoonZ"},"content":"public class ViewCommandParserTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"YuSoonZ"},"content":"    private ViewCommandParser parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"YuSoonZ"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"YuSoonZ"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"YuSoonZ"},"content":"        parser \u003d new ViewCommandParser();","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"YuSoonZ"},"content":"    public void parse_validInputArguments_success() throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"YuSoonZ"},"content":"        // Define valid input arguments","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"YuSoonZ"},"content":"        String validArgs \u003d \"1\";","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"YuSoonZ"},"content":"        // Parse the arguments","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"YuSoonZ"},"content":"        ViewCommand viewCommand \u003d parser.parse(validArgs);","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"YuSoonZ"},"content":"        // Verify the correctness of the parsed command","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"YuSoonZ"},"content":"        assertEquals(new ViewCommand(Index.fromOneBased(1)), viewCommand);","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"YuSoonZ"},"content":"    public void parse_invalidInputArguments_throwsParseException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"YuSoonZ"},"content":"        // Define invalid input arguments","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"YuSoonZ"},"content":"        String invalidArgs \u003d \"abc\";","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"YuSoonZ"},"content":"        // Parsing invalid arguments should throw a ParseException","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"YuSoonZ"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(invalidArgs));","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"YuSoonZ"},"content":"    public void parse_invalidIndexZero_throwsParseException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"YuSoonZ"},"content":"        // Define input arguments with invalid zero-based index","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"YuSoonZ"},"content":"        String invalidArgs \u003d \"0\";","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"YuSoonZ"},"content":"        // Parsing invalid index should throw a ParseException","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"YuSoonZ"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(invalidArgs));","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"YuSoonZ"},"content":"    public void parse_invalidIndexNegative_throwsParseException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"YuSoonZ"},"content":"        // Define input arguments with invalid negative index","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"YuSoonZ"},"content":"        String invalidArgs \u003d \"-1\";","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"YuSoonZ"},"content":"        // Parsing invalid index should throw a ParseException","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"YuSoonZ"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(invalidArgs));","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"YuSoonZ"},"content":"    public void parse_additionalArguments_throwsParseException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"YuSoonZ"},"content":"        // Define input arguments with additional arguments beyond the index","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"YuSoonZ"},"content":"        String invalidArgs \u003d \"1 additional\";","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"YuSoonZ"},"content":"        // Parsing additional arguments should throw a ParseException","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"YuSoonZ"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(invalidArgs));","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"YuSoonZ"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"YuSoonZ":66,"kailashgautham":4}},{"path":"src/test/java/seedu/tatoolkit/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.GuiSettings;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.testutil.TaToolkitBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"kailashgautham"},"content":"        assertEquals(new TaToolkit(), new TaToolkit(modelManager.getTaToolkit()));","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"kailashgautham"},"content":"        userPrefs.setTaToolkitFilePath(Paths.get(\"tatoolkit/book/file/path\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"kailashgautham"},"content":"        userPrefs.setTaToolkitFilePath(Paths.get(\"new/tatoolkit/book/file/path\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"kailashgautham"},"content":"    public void setTaToolkitFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"kailashgautham"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setTaToolkitFilePath(null));","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"kailashgautham"},"content":"    public void setTaToolkitFilePath_validPath_setsTaToolkitFilePath() {","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"kailashgautham"},"content":"        Path path \u003d Paths.get(\"tatoolkit/book/file/path\");","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"kailashgautham"},"content":"        modelManager.setTaToolkitFilePath(path);","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"kailashgautham"},"content":"        assertEquals(path, modelManager.getTaToolkitFilePath());","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"kailashgautham"},"content":"    public void hasPerson_personNotInTaToolkit_returnsFalse() {","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"kailashgautham"},"content":"    public void hasPerson_personInTaToolkit_returnsTrue() {","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"kailashgautham"},"content":"        TaToolkit taToolkit \u003d new TaToolkitBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"kailashgautham"},"content":"        TaToolkit differentTaToolkit \u003d new TaToolkit();","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"kailashgautham"},"content":"        modelManager \u003d new ModelManager(taToolkit, userPrefs);","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"kailashgautham"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(taToolkit, userPrefs);","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"kailashgautham"},"content":"        // different taToolkit -\u003e returns false","lastModifiedDate":"2024-04-01"},{"lineNumber":117,"author":{"gitId":"kailashgautham"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentTaToolkit, userPrefs)));","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"kailashgautham"},"content":"        assertFalse(modelManager.equals(new ModelManager(taToolkit, userPrefs)));","lastModifiedDate":"2024-04-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"kailashgautham"},"content":"        differentUserPrefs.setTaToolkitFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":130,"author":{"gitId":"kailashgautham"},"content":"        assertFalse(modelManager.equals(new ModelManager(taToolkit, differentUserPrefs)));","lastModifiedDate":"2024-04-01"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"kailashgautham":28,"-":104}},{"path":"src/test/java/seedu/tatoolkit/model/TaToolkitTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalPersons.getTypicalTaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import java.util.Collection;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import java.util.Collections;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import java.util.List;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.testutil.PersonBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"public class TaToolkitTest {","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"kailashgautham"},"content":"    private final TaToolkit taToolkit \u003d new TaToolkit();","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"kailashgautham"},"content":"    public void constructor() {","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"kailashgautham"},"content":"        assertEquals(Collections.emptyList(), taToolkit.getPersonList());","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"kailashgautham"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"kailashgautham"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"kailashgautham"},"content":"        assertThrows(NullPointerException.class, () -\u003e taToolkit.resetData(null));","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"kailashgautham"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"kailashgautham"},"content":"    public void resetData_withValidReadOnlyTaToolkit_replacesData() {","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"kailashgautham"},"content":"        TaToolkit newData \u003d getTypicalTaToolkit();","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"kailashgautham"},"content":"        taToolkit.resetData(newData);","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"kailashgautham"},"content":"        assertEquals(newData, taToolkit);","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"kailashgautham"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"kailashgautham"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"kailashgautham"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"kailashgautham"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"kailashgautham"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"kailashgautham"},"content":"        TaToolkitStub newData \u003d new TaToolkitStub(newPersons);","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"kailashgautham"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e taToolkit.resetData(newData));","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"kailashgautham"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"kailashgautham"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"kailashgautham"},"content":"        assertThrows(NullPointerException.class, () -\u003e taToolkit.hasPerson(null));","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"kailashgautham"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"kailashgautham"},"content":"    public void hasPerson_personNotInTaToolkit_returnsFalse() {","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"kailashgautham"},"content":"        assertFalse(taToolkit.hasPerson(ALICE));","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"kailashgautham"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"kailashgautham"},"content":"    public void hasPerson_personInTaToolkit_returnsTrue() {","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"kailashgautham"},"content":"        taToolkit.addPerson(ALICE);","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"kailashgautham"},"content":"        assertTrue(taToolkit.hasPerson(ALICE));","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"kailashgautham"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"kailashgautham"},"content":"    public void hasPerson_personWithSameIdentityFieldsInTaToolkit_returnsTrue() {","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"kailashgautham"},"content":"        taToolkit.addPerson(ALICE);","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"kailashgautham"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"kailashgautham"},"content":"        assertTrue(taToolkit.hasPerson(editedAlice));","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"kailashgautham"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"kailashgautham"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"kailashgautham"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e taToolkit.getPersonList().remove(0));","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"kailashgautham"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"kailashgautham"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"kailashgautham"},"content":"        String expected \u003d TaToolkit.class.getCanonicalName() + \"{persons\u003d\" + taToolkit.getPersonList() + \"}\";","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"kailashgautham"},"content":"        assertEquals(expected, taToolkit.toString());","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"kailashgautham"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"kailashgautham"},"content":"     * A stub ReadOnlyTaToolkit whose persons list can violate interface constraints.","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"kailashgautham"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"kailashgautham"},"content":"    private static class TaToolkitStub implements ReadOnlyTaToolkit {","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"kailashgautham"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"kailashgautham"},"content":"        TaToolkitStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"kailashgautham"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"kailashgautham"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"kailashgautham"},"content":"        @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"kailashgautham"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"kailashgautham"},"content":"            return persons;","lastModifiedDate":"2024-04-01"},{"lineNumber":101,"author":{"gitId":"kailashgautham"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"kailashgautham"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"kailashgautham":104}},{"path":"src/test/java/seedu/tatoolkit/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"    public void setTaToolkitFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setTaToolkitFilePath(null));","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"kailashgautham":4,"-":17}},{"path":"src/test/java/seedu/tatoolkit/model/attendance/AttendanceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model.attendance;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"g-tejas"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"g-tejas"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"g-tejas"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"g-tejas"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"g-tejas"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"g-tejas"},"content":"public class AttendanceTest {","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"g-tejas"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"g-tejas"},"content":"    public void isAbsentMethod() {","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"g-tejas"},"content":"        Attendance a \u003d new Attendance();","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"g-tejas"},"content":"        a.changeAttendanceStatus(new Week(Index.fromOneBased(1)), Attendance.Status.ABSENT);","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"g-tejas"},"content":"        assertTrue(a.isAbsent(new Week(Index.fromOneBased(1))));","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"g-tejas"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"g-tejas"},"content":"    public void resetAttendanceMethod() {","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"g-tejas"},"content":"        Attendance a \u003d new Attendance();","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"g-tejas"},"content":"        a.changeAttendanceStatus(new Week(Index.fromOneBased(1)), Attendance.Status.ABSENT);","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"g-tejas"},"content":"        a.resetAttendance();","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"g-tejas"},"content":"        assertFalse(a.isAbsent(new Week(Index.fromOneBased(1))));","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"g-tejas"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"g-tejas"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"g-tejas"},"content":"        Attendance a \u003d new Attendance();","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"g-tejas"},"content":"        a.changeAttendanceStatus(new Week(Index.fromOneBased(1)), Attendance.Status.ABSENT);","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"g-tejas"},"content":"        String expected \u003d \"Weeks Absent: 1\";","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"g-tejas"},"content":"        assertEquals(expected, a.toString());","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"g-tejas"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"g-tejas"},"content":"    public void equals() {","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"g-tejas"},"content":"        Attendance a1 \u003d new Attendance();","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"g-tejas"},"content":"        Attendance a2 \u003d new Attendance();","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"g-tejas"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"g-tejas"},"content":"        assertEquals(a1, a2);","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"g-tejas"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"g-tejas"},"content":"        assertEquals(a1, a1);","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"g-tejas"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"g-tejas"},"content":"        assertNotEquals(null, a1);","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"g-tejas"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"g-tejas"},"content":"        assertNotEquals(a1, 5.0f);","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"g-tejas"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"g-tejas"},"content":"        a2.changeAttendanceStatus(new Week(Index.fromOneBased(1)), Attendance.Status.ABSENT);","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"g-tejas"},"content":"        assertFalse(a1.equals(a2));","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"kailashgautham":2,"g-tejas":56}},{"path":"src/test/java/seedu/tatoolkit/model/attendance/WeekTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model.attendance;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"g-tejas"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"g-tejas"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"g-tejas"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"g-tejas"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"g-tejas"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"g-tejas"},"content":"public class WeekTest {","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"g-tejas"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"g-tejas"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"g-tejas"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Week(null));","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"g-tejas"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"g-tejas"},"content":"    public void constructor_invalidWeek_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"g-tejas"},"content":"        Index invalidWeek \u003d Index.fromOneBased(100);","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"g-tejas"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Week(invalidWeek));","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"g-tejas"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"g-tejas"},"content":"    public void isValidWeek() {","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"g-tejas"},"content":"        // null Week","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"g-tejas"},"content":"        assertThrows(NullPointerException.class, () -\u003e Week.isValidWeek(null));","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"g-tejas"},"content":"        // invalid Weeks","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"g-tejas"},"content":"        assertFalse(Week.isValidWeek(Index.fromZeroBased(100))); // out of bounds","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"g-tejas"},"content":"        assertFalse(Week.isValidWeek(Index.fromOneBased(14))); // one past","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"g-tejas"},"content":"        // valid Week","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"g-tejas"},"content":"        assertTrue(Week.isValidWeek(Index.fromOneBased(1)));","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"g-tejas"},"content":"        assertTrue(Week.isValidWeek(Index.fromOneBased(2)));","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"g-tejas"},"content":"        assertTrue(Week.isValidWeek(Index.fromOneBased(13)));","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"g-tejas"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"g-tejas"},"content":"    public void equals() {","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"g-tejas"},"content":"        Week week \u003d new Week(Index.fromOneBased(1));","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"g-tejas"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"g-tejas"},"content":"        assertEquals(week, new Week(Index.fromOneBased(1)));","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"g-tejas"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"g-tejas"},"content":"        assertEquals(week, week);","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"g-tejas"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"g-tejas"},"content":"        assertNotEquals(null, week);","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"g-tejas"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"g-tejas"},"content":"        assertNotEquals(week, 5.0f);","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"g-tejas"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"g-tejas"},"content":"        assertNotEquals(week, new Week(Index.fromOneBased(2)));","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"kailashgautham":3,"g-tejas":57}},{"path":"src/test/java/seedu/tatoolkit/model/person/ClassGroupTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model.person;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"g-tejas"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"g-tejas"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"g-tejas"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"g-tejas"},"content":"public class ClassGroupTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"g-tejas"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"g-tejas"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"g-tejas"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ClassGroup(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"g-tejas"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"g-tejas"},"content":"    public void constructor_invalidClassGroup_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"g-tejas"},"content":"        String invalidClassGroup \u003d \"\";","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"g-tejas"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ClassGroup(invalidClassGroup));","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"g-tejas"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"g-tejas"},"content":"    public void isValidClassGroup() {","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"g-tejas"},"content":"        // null ClassGroup","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"g-tejas"},"content":"        assertThrows(NullPointerException.class, () -\u003e ClassGroup.isValidClassGroup(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"g-tejas"},"content":"        // blank ClassGroup","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"g-tejas"},"content":"        assertFalse(ClassGroup.isValidClassGroup(\"\")); // empty string","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"g-tejas"},"content":"        assertFalse(ClassGroup.isValidClassGroup(\" \")); // spaces only","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"g-tejas"},"content":"        // invalid parts","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"g-tejas"},"content":"        assertFalse(ClassGroup.isValidClassGroup(\"-\")); // starts with dash","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"g-tejas"},"content":"        assertFalse(ClassGroup.isValidClassGroup(\"F14-\")); // ends with dash","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"g-tejas"},"content":"        assertFalse(ClassGroup.isValidClassGroup(\"-F14\")); // begin with dash","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"g-tejas"},"content":"        assertFalse(ClassGroup.isValidClassGroup(\"@F14\")); // non alpha-numeric characters","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"g-tejas"},"content":"        assertFalse(ClassGroup.isValidClassGroup(\" F14\")); // leading space","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"g-tejas"},"content":"        assertFalse(ClassGroup.isValidClassGroup(\"F14 \")); // trailing space","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"g-tejas"},"content":"        assertFalse(ClassGroup.isValidClassGroup(\"F143 3\")); // space in middle","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"g-tejas"},"content":"        // valid ClassGroup","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"g-tejas"},"content":"        assertTrue(ClassGroup.isValidClassGroup(\"A-1\")); // One dash","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"g-tejas"},"content":"        assertTrue(ClassGroup.isValidClassGroup(\"A\")); // no dash at all","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"g-tejas"},"content":"        assertTrue(ClassGroup.isValidClassGroup(\"CS2103-F14-3\")); // multiple dashes","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"g-tejas"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"g-tejas"},"content":"    public void equals() {","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"g-tejas"},"content":"        ClassGroup classGroup \u003d new ClassGroup(\"A-1\");","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"g-tejas"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"g-tejas"},"content":"        assertTrue(classGroup.equals(new ClassGroup(\"A-1\")));","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"g-tejas"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"g-tejas"},"content":"        assertTrue(classGroup.equals(classGroup));","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"g-tejas"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"g-tejas"},"content":"        assertFalse(classGroup.equals(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"g-tejas"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"g-tejas"},"content":"        assertFalse(classGroup.equals(5.0f));","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"g-tejas"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"g-tejas"},"content":"        assertFalse(classGroup.equals(new ClassGroup(\"B-2\")));","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"g-tejas"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"kailashgautham":2,"g-tejas":63}},{"path":"src/test/java/seedu/tatoolkit/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model.person;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"kailashgautham":2,"-":86}},{"path":"src/test/java/seedu/tatoolkit/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model.person;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.testutil.PersonBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"kailashgautham"},"content":"        // Keywords match phone, email, classgroup, and telegram, but does not match name","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"kailashgautham"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"B01\", \"@alice\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"kailashgautham"},"content":"                .withEmail(\"alice@email.com\").withClassGroup(\"B01\").withTelegram(\"@alice\")","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"kailashgautham"},"content":"                .build()));","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kailashgautham":6,"-":80}},{"path":"src/test/java/seedu/tatoolkit/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model.person;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"kailashgautham":2,"-":58}},{"path":"src/test/java/seedu/tatoolkit/model/person/NoteTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model.person;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"YuSoonZ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"YuSoonZ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"YuSoonZ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"YuSoonZ"},"content":"public class NoteTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"YuSoonZ"},"content":"    public void constructor_nullNote_throwsNullPointerException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"YuSoonZ"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Note(null));","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"YuSoonZ"},"content":"    public void constructor_invalidNote_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"YuSoonZ"},"content":"        String invalidNote \u003d \"This is an invalid note *\u0026^%\";","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"YuSoonZ"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Note(invalidNote));","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"YuSoonZ"},"content":"    public void isValidNote() {","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"YuSoonZ"},"content":"        // Valid notes","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"YuSoonZ"},"content":"        assertTrue(Note.isValidNote(\"This is a valid note.\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"YuSoonZ"},"content":"        assertTrue(Note.isValidNote(\"Another valid note, with punctuation!\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"YuSoonZ"},"content":"        assertTrue(Note.isValidNote(\"1234\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"YuSoonZ"},"content":"        // Invalid notes","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"YuSoonZ"},"content":"        assertFalse(Note.isValidNote(\"\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"YuSoonZ"},"content":"        assertFalse(Note.isValidNote(\"   \"));","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"YuSoonZ"},"content":"        assertFalse(Note.isValidNote(\"Invalid note with symbols *\u0026^%$\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"YuSoonZ"},"content":"    public void equals() {","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"YuSoonZ"},"content":"        Note note1 \u003d new Note(\"Note 1\");","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"YuSoonZ"},"content":"        Note note2 \u003d new Note(\"Note 2\");","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"YuSoonZ"},"content":"        // Same note should be equal","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"YuSoonZ"},"content":"        assertTrue(note1.equals(note1));","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"YuSoonZ"},"content":"        // Different objects with same note should be equal","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"YuSoonZ"},"content":"        assertTrue(note1.equals(new Note(\"Note 1\")));","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"YuSoonZ"},"content":"        // Different notes should not be equal","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"YuSoonZ"},"content":"        assertFalse(note1.equals(note2));","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"YuSoonZ"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"YuSoonZ":47,"kailashgautham":2}},{"path":"src/test/java/seedu/tatoolkit/model/person/NotesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model.person;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"YuSoonZ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"YuSoonZ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"YuSoonZ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"YuSoonZ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"YuSoonZ"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"YuSoonZ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"YuSoonZ"},"content":"public class NotesTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"YuSoonZ"},"content":"    public void constructor_emptyNotes_correctSizeAndEmpty() {","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"YuSoonZ"},"content":"        Notes notes \u003d new Notes();","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"teojunda"},"content":"        assertEquals(0, notes.size());","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"YuSoonZ"},"content":"        assertTrue(notes.isEmpty());","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"YuSoonZ"},"content":"    public void constructor_notesList_correctSizeAndContent() {","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"YuSoonZ"},"content":"        ArrayList\u003cString\u003e stringNotes \u003d new ArrayList\u003c\u003e(Arrays.asList(\"Note 1\", \"Note 2\", \"Note 3\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"YuSoonZ"},"content":"        Notes notes \u003d new Notes(stringNotes);","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"teojunda"},"content":"        assertEquals(3, notes.size());","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"YuSoonZ"},"content":"        assertEquals(stringNotes, notes.getAsStrings());","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"YuSoonZ"},"content":"    public void addNote_validNote_noteAdded() {","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"YuSoonZ"},"content":"        Notes notes \u003d new Notes();","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"YuSoonZ"},"content":"        Note note \u003d new Note(\"Test Note\");","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"YuSoonZ"},"content":"        notes.addNote(note);","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"teojunda"},"content":"        assertEquals(1, notes.size());","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"YuSoonZ"},"content":"        assertEquals(\"Test Note\", notes.getAsStrings().get(0));","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"YuSoonZ"},"content":"    public void deleteNote_validIndex_noteDeleted() {","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"YuSoonZ"},"content":"        ArrayList\u003cString\u003e stringNotes \u003d new ArrayList\u003c\u003e(Arrays.asList(\"Note 1\", \"Note 2\", \"Note 3\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"YuSoonZ"},"content":"        Notes notes \u003d new Notes(stringNotes);","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"YuSoonZ"},"content":"        notes.deleteNote(1);","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"teojunda"},"content":"        assertEquals(2, notes.size());","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"YuSoonZ"},"content":"        assertEquals(\"Note 1\", notes.getAsStrings().get(0));","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"YuSoonZ"},"content":"        assertEquals(\"Note 3\", notes.getAsStrings().get(1));","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"YuSoonZ"},"content":"    public void isEmpty_emptyNotes_returnsTrue() {","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"YuSoonZ"},"content":"        Notes notes \u003d new Notes();","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"YuSoonZ"},"content":"        assertTrue(notes.isEmpty());","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"YuSoonZ"},"content":"    public void isEmpty_nonEmptyNotes_returnsFalse() {","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"YuSoonZ"},"content":"        ArrayList\u003cString\u003e stringNotes \u003d new ArrayList\u003c\u003e(Arrays.asList(\"Note 1\", \"Note 2\", \"Note 3\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"YuSoonZ"},"content":"        Notes notes \u003d new Notes(stringNotes);","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"YuSoonZ"},"content":"        assertFalse(notes.isEmpty());","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"YuSoonZ"},"content":"    public void toString_validNotes_correctStringRepresentation() {","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"YuSoonZ"},"content":"        ArrayList\u003cString\u003e stringNotes \u003d new ArrayList\u003c\u003e(Arrays.asList(\"Note 1\", \"Note 2\", \"Note 3\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"YuSoonZ"},"content":"        Notes notes \u003d new Notes(stringNotes);","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"YuSoonZ"},"content":"        assertEquals(\u0027\\n\u0027 + \"1: Note 1\\n2: Note 2\\n3: Note 3\", notes.toString());","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"YuSoonZ"},"content":"    public void equals_sameNotes_returnsTrue() {","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"YuSoonZ"},"content":"        ArrayList\u003cString\u003e stringNotes \u003d new ArrayList\u003c\u003e(Arrays.asList(\"Note 1\", \"Note 2\", \"Note 3\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"YuSoonZ"},"content":"        Notes notes1 \u003d new Notes(stringNotes);","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"YuSoonZ"},"content":"        Notes notes2 \u003d new Notes(stringNotes);","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"YuSoonZ"},"content":"        assertTrue(notes1.equals(notes2));","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"YuSoonZ"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"YuSoonZ"},"content":"    public void equals_differentNotes_returnsFalse() {","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"YuSoonZ"},"content":"        ArrayList\u003cString\u003e stringNotes1 \u003d new ArrayList\u003c\u003e(Arrays.asList(\"Note 1\", \"Note 2\", \"Note 3\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"YuSoonZ"},"content":"        ArrayList\u003cString\u003e stringNotes2 \u003d new ArrayList\u003c\u003e(Arrays.asList(\"Note 1\", \"Note 2\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"YuSoonZ"},"content":"        Notes notes1 \u003d new Notes(stringNotes1);","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"YuSoonZ"},"content":"        Notes notes2 \u003d new Notes(stringNotes2);","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"YuSoonZ"},"content":"        assertFalse(notes1.equals(notes2));","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"YuSoonZ"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"YuSoonZ"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"YuSoonZ":78,"kailashgautham":1,"teojunda":4}},{"path":"src/test/java/seedu/tatoolkit/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model.person;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.VALID_CLASS_GROUP_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.VALID_GITHUB_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.attendance.Week;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.testutil.PersonBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"teojunda"},"content":"        assertTrue(ALICE.checkDuplicateField(ALICE));","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"teojunda"},"content":"        assertFalse(ALICE.checkDuplicateField(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"kailashgautham"},"content":"        // same name, all other attributes different -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":33,"author":{"gitId":"kailashgautham"},"content":"                .withClassGroup(VALID_CLASS_GROUP_BOB).withTelegram(VALID_TELEGRAM_BOB)","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"kailashgautham"},"content":"                .withGithub(VALID_GITHUB_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"teojunda"},"content":"        assertFalse(ALICE.checkDuplicateField(editedAlice));","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"g-tejas"},"content":"        // different attendance -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"g-tejas"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"g-tejas"},"content":"        editedAlice.markAbsent(new Week(Index.fromOneBased(1)));","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"g-tejas"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"g-tejas"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"g-tejas"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"g-tejas"},"content":"    public void markAbsent() {","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"g-tejas"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"g-tejas"},"content":"        aliceCopy.markAbsent(new Week(Index.fromOneBased(1)));","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"g-tejas"},"content":"        assertTrue(aliceCopy.isAbsent(new Week(Index.fromOneBased(1))));","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"kailashgautham"},"content":"        String expected \u003d Person.class.getCanonicalName()","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"kailashgautham"},"content":"                + \"{name\u003d\" + ALICE.getName() + \", classGroup\u003d\" + ALICE.getClassGroup()","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"teojunda"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", phone\u003d\"","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"teojunda"},"content":"                + (ALICE.getPhone().isPresent() ? ALICE.getPhone().get().value : \"\") + \", telegram\u003d\"","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"kailashgautham"},"content":"                + (ALICE.getTelegram().isPresent() ? ALICE.getTelegram().get().telegramId : \"\") + \", github\u003d\"","lastModifiedDate":"2024-03-11"},{"lineNumber":88,"author":{"gitId":"g-tejas"},"content":"                + (ALICE.getGithub().isPresent() ? ALICE.getGithub().get().githubId : \"\") + \", attendance\u003d\"","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"teojunda"},"content":"                + (ALICE.getAttendance().toString()) + \", notes\u003d\"","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"teojunda"},"content":"                + (ALICE.getNotes().toString()) + \"}\";","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"kailashgautham":18,"teojunda":7,"g-tejas":13,"-":55}},{"path":"src/test/java/seedu/tatoolkit/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model.person;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(new Phone(\"999\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(new Phone(\"995\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"kailashgautham":2,"-":58}},{"path":"src/test/java/seedu/tatoolkit/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.model.person;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"kailashgautham":6,"-":107}},{"path":"src/test/java/seedu/tatoolkit/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.storage;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"YuSoonZ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"YuSoonZ"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.attendance.Attendance;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Email;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Name;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Phone;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"    private static final String INVALID_CLASS_GROUP \u003d \" \";","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"    private static final String INVALID_TELEGRAM \u003d \"racheljames\";","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":"    private static final String INVALID_GITHUB \u003d \"github username\";","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"teojunda"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().get().value;","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"kailashgautham"},"content":"    private static final String VALID_CLASS_GROUP \u003d BENSON.getClassGroup().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"teojunda"},"content":"    private static final String VALID_TELEGRAM \u003d BENSON.getTelegram().get().telegramId;","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"teojunda"},"content":"    private static final String VALID_GITHUB \u003d BENSON.getGithub().get().githubId;","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"YuSoonZ"},"content":"    private static final ArrayList\u003cString\u003e VALID_NOTES \u003d BENSON.getNotes().getAsStrings();","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"kailashgautham"},"content":"    private static final Attendance.Status[] VALID_ATTENDANCE \u003d BENSON.getAttendance().getStatusAsArray();","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"kailashgautham"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE,","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"kailashgautham"},"content":"                        VALID_EMAIL, VALID_CLASS_GROUP, VALID_TELEGRAM, VALID_GITHUB, VALID_NOTES, VALID_ATTENDANCE);","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"kailashgautham"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE,","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"kailashgautham"},"content":"                VALID_EMAIL, VALID_CLASS_GROUP, VALID_TELEGRAM, VALID_GITHUB, VALID_NOTES, VALID_ATTENDANCE);","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"kailashgautham"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE,","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"kailashgautham"},"content":"                        VALID_EMAIL, VALID_CLASS_GROUP, VALID_TELEGRAM, VALID_GITHUB, VALID_NOTES, VALID_ATTENDANCE);","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"kailashgautham"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"kailashgautham"},"content":"                        INVALID_EMAIL, VALID_CLASS_GROUP, VALID_TELEGRAM, VALID_GITHUB, VALID_NOTES, VALID_ATTENDANCE);","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"kailashgautham"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME,","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"kailashgautham"},"content":"                VALID_PHONE, null, VALID_CLASS_GROUP, VALID_TELEGRAM, VALID_GITHUB, VALID_NOTES, VALID_ATTENDANCE);","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"YuSoonZ":3,"kailashgautham":24,"teojunda":3,"-":53}},{"path":"src/test/java/seedu/tatoolkit/storage/JsonSerializableTaToolkitTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.storage;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.util.JsonUtil;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.TaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.testutil.TypicalPersons;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"public class JsonSerializableTaToolkitTest {","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableTaToolkitTest\");","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsTaToolkit.json\");","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonTaToolkit.json\");","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonTaToolkit.json\");","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"kailashgautham"},"content":"        JsonSerializableTaToolkit dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"kailashgautham"},"content":"                JsonSerializableTaToolkit.class).get();","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"        TaToolkit taToolkitFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"kailashgautham"},"content":"        TaToolkit typicalPersonsTaToolkit \u003d TypicalPersons.getTypicalTaToolkit();","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"kailashgautham"},"content":"        assertEquals(taToolkitFromFile, typicalPersonsTaToolkit);","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"kailashgautham"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"kailashgautham"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"kailashgautham"},"content":"        JsonSerializableTaToolkit dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"kailashgautham"},"content":"                JsonSerializableTaToolkit.class).get();","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"kailashgautham"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"kailashgautham"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"kailashgautham"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"kailashgautham"},"content":"        JsonSerializableTaToolkit dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"kailashgautham"},"content":"                JsonSerializableTaToolkit.class).get();","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"kailashgautham"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableTaToolkit.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"kailashgautham"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"kailashgautham"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"kailashgautham":47}},{"path":"src/test/java/seedu/tatoolkit/storage/JsonTaToolkitStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.storage;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalPersons.HOON;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalPersons.IDA;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalPersons.getTypicalTaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.ReadOnlyTaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.TaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":"public class JsonTaToolkitStorageTest {","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonTaToolkitStorageTest\");","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"kailashgautham"},"content":"    @TempDir","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"kailashgautham"},"content":"    public Path testFolder;","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"kailashgautham"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"kailashgautham"},"content":"    public void readTaToolkit_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"kailashgautham"},"content":"        assertThrows(NullPointerException.class, () -\u003e readTaToolkit(null));","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"kailashgautham"},"content":"    private java.util.Optional\u003cReadOnlyTaToolkit\u003e readTaToolkit(String filePath) throws Exception {","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"kailashgautham"},"content":"        return new JsonTaToolkitStorage(Paths.get(filePath)).readTaToolkit(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"kailashgautham"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"kailashgautham"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"kailashgautham"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"kailashgautham"},"content":"                : null;","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"kailashgautham"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"kailashgautham"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"kailashgautham"},"content":"        assertFalse(readTaToolkit(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"kailashgautham"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"kailashgautham"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"kailashgautham"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readTaToolkit(\"notJsonFormatTaToolkit.json\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"kailashgautham"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"kailashgautham"},"content":"    public void readTaToolkit_invalidPersonTaToolkit_throwDataLoadingException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"kailashgautham"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readTaToolkit(\"invalidPersonTaToolkit.json\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"kailashgautham"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"kailashgautham"},"content":"    public void readTaToolkit_invalidAndValidPersonTaToolkit_throwDataLoadingException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"kailashgautham"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readTaToolkit(\"invalidAndValidPersonTaToolkit.json\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"kailashgautham"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"kailashgautham"},"content":"    public void readAndSaveTaToolkit_allInOrder_success() throws Exception {","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"kailashgautham"},"content":"        Path filePath \u003d testFolder.resolve(\"TempTaToolkit.json\");","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"kailashgautham"},"content":"        TaToolkit original \u003d getTypicalTaToolkit();","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"kailashgautham"},"content":"        JsonTaToolkitStorage jsonTaToolkitStorage \u003d new JsonTaToolkitStorage(filePath);","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"kailashgautham"},"content":"        // Save in new file and read back","lastModifiedDate":"2024-04-01"},{"lineNumber":70,"author":{"gitId":"kailashgautham"},"content":"        jsonTaToolkitStorage.saveTaToolkit(original, filePath);","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"kailashgautham"},"content":"        ReadOnlyTaToolkit readBack \u003d jsonTaToolkitStorage.readTaToolkit(filePath).get();","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"kailashgautham"},"content":"        assertEquals(original, new TaToolkit(readBack));","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"kailashgautham"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2024-04-01"},{"lineNumber":75,"author":{"gitId":"kailashgautham"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"kailashgautham"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"kailashgautham"},"content":"        jsonTaToolkitStorage.saveTaToolkit(original, filePath);","lastModifiedDate":"2024-04-01"},{"lineNumber":78,"author":{"gitId":"kailashgautham"},"content":"        readBack \u003d jsonTaToolkitStorage.readTaToolkit(filePath).get();","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"kailashgautham"},"content":"        assertEquals(original, new TaToolkit(readBack));","lastModifiedDate":"2024-04-01"},{"lineNumber":80,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"kailashgautham"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"kailashgautham"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"kailashgautham"},"content":"        jsonTaToolkitStorage.saveTaToolkit(original); // file path not specified","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"kailashgautham"},"content":"        readBack \u003d jsonTaToolkitStorage.readTaToolkit().get(); // file path not specified","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"kailashgautham"},"content":"        assertEquals(original, new TaToolkit(readBack));","lastModifiedDate":"2024-04-01"},{"lineNumber":86,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":87,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":88,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"kailashgautham"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"kailashgautham"},"content":"    public void saveTaToolkit_nullTaToolkit_throwsNullPointerException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"kailashgautham"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTaToolkit(null, \"SomeFile.json\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"kailashgautham"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"kailashgautham"},"content":"     * Saves {@code taToolkit} at the specified {@code filePath}.","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"kailashgautham"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"kailashgautham"},"content":"    private void saveTaToolkit(ReadOnlyTaToolkit taToolkit, String filePath) {","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"kailashgautham"},"content":"        try {","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"kailashgautham"},"content":"            new JsonTaToolkitStorage(Paths.get(filePath))","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"kailashgautham"},"content":"                    .saveTaToolkit(taToolkit, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2024-04-01"},{"lineNumber":101,"author":{"gitId":"kailashgautham"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"kailashgautham"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"kailashgautham"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"kailashgautham"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"kailashgautham"},"content":"    public void saveTaToolkit_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"kailashgautham"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTaToolkit(new TaToolkit(), null));","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":110,"author":{"gitId":"kailashgautham"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"kailashgautham":110}},{"path":"src/test/java/seedu/tatoolkit/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.storage;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.GuiSettings;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.UserPrefs;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"kailashgautham"},"content":"        userPrefs.setTaToolkitFilePath(Paths.get(\"tatoolkit.json\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"kailashgautham":6,"-":116}},{"path":"src/test/java/seedu/tatoolkit/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.storage;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.TypicalPersons.getTypicalTaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.GuiSettings;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.ReadOnlyTaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.TaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.UserPrefs;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"        JsonTaToolkitStorage taToolkitStorage \u003d new JsonTaToolkitStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"kailashgautham"},"content":"        storageManager \u003d new StorageManager(taToolkitStorage, userPrefsStorage);","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"kailashgautham"},"content":"    public void taToolkitReadSave() throws Exception {","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"kailashgautham"},"content":"         * {@link JsonTaToolkitStorage} class.","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"kailashgautham"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonTaToolkitStorageTest} class.","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"kailashgautham"},"content":"        TaToolkit original \u003d getTypicalTaToolkit();","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"kailashgautham"},"content":"        storageManager.saveTaToolkit(original);","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"kailashgautham"},"content":"        ReadOnlyTaToolkit retrieved \u003d storageManager.readTaToolkit().get();","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"kailashgautham"},"content":"        assertEquals(original, new TaToolkit(retrieved));","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"kailashgautham"},"content":"    public void getTaToolkitFilePath() {","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"kailashgautham"},"content":"        assertNotNull(storageManager.getTaToolkitFilePath());","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kailashgautham":17,"-":51}},{"path":"src/test/java/seedu/tatoolkit/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.testutil;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"kailashgautham":1,"-":33}},{"path":"src/test/java/seedu/tatoolkit/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.testutil;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.ClassGroup;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Email;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Github;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Name;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Phone;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Telegram;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"kailashgautham"},"content":"        descriptor.setClassGroup(person.getClassGroup());","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"kailashgautham"},"content":"        descriptor.setTelegram(person.getTelegram());","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"kailashgautham"},"content":"        descriptor.setGithub(person.getGithub());","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"teojunda"},"content":"        descriptor.setPhone(Optional.of(new Phone(phone)));","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"kailashgautham"},"content":"     * Sets the {@code ClassGroup} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"kailashgautham"},"content":"    public EditPersonDescriptorBuilder withClassGroup(String classGroup) {","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"kailashgautham"},"content":"        descriptor.setClassGroup(new ClassGroup(classGroup));","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"kailashgautham"},"content":"     * Sets the {@code Telegram} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"kailashgautham"},"content":"    public EditPersonDescriptorBuilder withTelegram(String telegram) {","lastModifiedDate":"2024-03-11"},{"lineNumber":78,"author":{"gitId":"kailashgautham"},"content":"        descriptor.setTelegram(Optional.of(new Telegram(telegram)));","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"kailashgautham"},"content":"        return this;","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"kailashgautham"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"kailashgautham"},"content":"     * Sets the {@code Github} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"kailashgautham"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"kailashgautham"},"content":"    public EditPersonDescriptorBuilder withGithub(String github) {","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"kailashgautham"},"content":"        descriptor.setGithub(Optional.of(new Github(github)));","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"kailashgautham":27,"teojunda":1,"-":65}},{"path":"src/test/java/seedu/tatoolkit/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.testutil;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"teojunda"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"teojunda"},"content":"import java.util.List;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.attendance.Attendance;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.ClassGroup;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Email;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Github;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Name;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Notes;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Phone;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Telegram;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"kailashgautham"},"content":"    public static final String DEFAULT_TELEGRAM \u003d \"@amybee\";","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"kailashgautham"},"content":"    public static final String DEFAULT_GITHUB \u003d \"amybee\";","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"    public static final String DEFAULT_CLASS_GROUP \u003d \"B01\";","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"teojunda"},"content":"    private Optional\u003cPhone\u003e phone;","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"kailashgautham"},"content":"    private ClassGroup classGroup;","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"kailashgautham"},"content":"    private Optional\u003cTelegram\u003e telegram;","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"kailashgautham"},"content":"    private Optional\u003cGithub\u003e github;","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"YuSoonZ"},"content":"    private Notes notes;","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"g-tejas"},"content":"    private Attendance attendance;","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"teojunda"},"content":"        phone \u003d Optional.of(new Phone(DEFAULT_PHONE));","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"kailashgautham"},"content":"        github \u003d Optional.of(new Github(DEFAULT_GITHUB));","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"kailashgautham"},"content":"        telegram \u003d Optional.of(new Telegram(DEFAULT_TELEGRAM));","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"kailashgautham"},"content":"        classGroup \u003d new ClassGroup(DEFAULT_CLASS_GROUP);","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"YuSoonZ"},"content":"        notes \u003d new Notes();","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"g-tejas"},"content":"        attendance \u003d new Attendance();","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"kailashgautham"},"content":"        github \u003d personToCopy.getGithub();","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"kailashgautham"},"content":"        telegram \u003d personToCopy.getTelegram();","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"kailashgautham"},"content":"        classGroup \u003d personToCopy.getClassGroup();","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"YuSoonZ"},"content":"        notes \u003d personToCopy.getNotes();","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"g-tejas"},"content":"        attendance \u003d personToCopy.getAttendance();","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"teojunda"},"content":"        this.phone \u003d Optional.of(new Phone(phone));","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":91,"author":{"gitId":"teojunda"},"content":"        return new Person(name, classGroup, email, phone, telegram, github, notes);","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"kailashgautham"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"kailashgautham"},"content":"     * Sets the {@code ClassGroup} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-11"},{"lineNumber":96,"author":{"gitId":"kailashgautham"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":97,"author":{"gitId":"kailashgautham"},"content":"    public PersonBuilder withClassGroup(String classGroup) {","lastModifiedDate":"2024-03-11"},{"lineNumber":98,"author":{"gitId":"kailashgautham"},"content":"        this.classGroup \u003d new ClassGroup(classGroup);","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"kailashgautham"},"content":"        return this;","lastModifiedDate":"2024-03-11"},{"lineNumber":100,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":101,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"kailashgautham"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":103,"author":{"gitId":"kailashgautham"},"content":"     * Sets the {@code Telegram} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"kailashgautham"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"kailashgautham"},"content":"    public PersonBuilder withTelegram(String telegram) {","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"kailashgautham"},"content":"        this.telegram \u003d Optional.of(new Telegram(telegram));","lastModifiedDate":"2024-03-13"},{"lineNumber":107,"author":{"gitId":"kailashgautham"},"content":"        return this;","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":110,"author":{"gitId":"kailashgautham"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":111,"author":{"gitId":"kailashgautham"},"content":"     * Sets the {@code Github} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"kailashgautham"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"kailashgautham"},"content":"    public PersonBuilder withGithub(String github) {","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"kailashgautham"},"content":"        this.github \u003d Optional.of(new Github(github));","lastModifiedDate":"2024-03-13"},{"lineNumber":115,"author":{"gitId":"kailashgautham"},"content":"        return this;","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"teojunda"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":118,"author":{"gitId":"teojunda"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":119,"author":{"gitId":"teojunda"},"content":"     * Sets the {@code Github} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"teojunda"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":121,"author":{"gitId":"teojunda"},"content":"    public PersonBuilder withDefaultNotes() {","lastModifiedDate":"2024-03-30"},{"lineNumber":122,"author":{"gitId":"teojunda"},"content":"        this.notes \u003d new Notes(new ArrayList\u003c\u003e(","lastModifiedDate":"2024-03-30"},{"lineNumber":123,"author":{"gitId":"teojunda"},"content":"                List.of(\"Asked a good question about general relativity\", \"Excited to learn Java\")));","lastModifiedDate":"2024-03-30"},{"lineNumber":124,"author":{"gitId":"teojunda"},"content":"        return this;","lastModifiedDate":"2024-03-30"},{"lineNumber":125,"author":{"gitId":"teojunda"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"YuSoonZ":3,"kailashgautham":47,"teojunda":15,"g-tejas":3,"-":58}},{"path":"src/test/java/seedu/tatoolkit/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.testutil;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_CLASS_GROUP;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_GITHUB;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.AddCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"kailashgautham"},"content":"        sb.append(PREFIX_CLASS_GROUP + person.getClassGroup().classGroup + \" \");","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"teojunda"},"content":"        sb.append(PREFIX_PHONE + (person.getPhone().isPresent()","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"teojunda"},"content":"                ? person.getPhone().get().value : \"\") + \" \");","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"kailashgautham"},"content":"        sb.append(PREFIX_TELEGRAM + (person.getTelegram().isPresent()","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"kailashgautham"},"content":"                ? person.getTelegram().get().telegramId : \"\") + \" \");","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"kailashgautham"},"content":"        sb.append(PREFIX_GITHUB + (person.getGithub().isPresent()","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"kailashgautham"},"content":"                ? person.getGithub().get().githubId : \"\") + \" \");","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"kailashgautham"},"content":"        descriptor.getClassGroup().ifPresent(classGroup -\u003e sb.append(PREFIX_CLASS_GROUP)","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"kailashgautham"},"content":"                .append(classGroup.classGroup).append(\" \"));","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"kailashgautham"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"kailashgautham"},"content":"        descriptor.getTelegram().ifPresent(telegram -\u003e sb.append(PREFIX_TELEGRAM)","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"kailashgautham"},"content":"                .append(telegram.telegramId).append(\" \"));","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"kailashgautham"},"content":"        descriptor.getGithub().ifPresent(github -\u003e sb.append(PREFIX_GITHUB).append(github.githubId).append(\" \"));","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"kailashgautham":21,"teojunda":2,"-":35}},{"path":"src/test/java/seedu/tatoolkit/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.testutil;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kailashgautham":1,"-":71}},{"path":"src/test/java/seedu/tatoolkit/testutil/TaToolkitBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.testutil;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.TaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":" * A utility class to help with building TaToolkit objects.","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":" *     {@code TaToolkit toolkit \u003d new TaToolkitBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"public class TaToolkitBuilder {","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"    private TaToolkit taToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"kailashgautham"},"content":"    public TaToolkitBuilder() {","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"kailashgautham"},"content":"        taToolkit \u003d new TaToolkit();","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"    public TaToolkitBuilder(TaToolkit taToolkit) {","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"        this.taToolkit \u003d taToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"kailashgautham"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"kailashgautham"},"content":"     * Adds a new {@code Person} to the {@code TaToolkit} that we are building.","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"kailashgautham"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"kailashgautham"},"content":"    public TaToolkitBuilder withPerson(Person person) {","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"kailashgautham"},"content":"        taToolkit.addPerson(person);","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"kailashgautham"},"content":"        return this;","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"kailashgautham"},"content":"    public TaToolkit build() {","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"kailashgautham"},"content":"        return taToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"kailashgautham"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"kailashgautham"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"kailashgautham":34}},{"path":"src/test/java/seedu/tatoolkit/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.testutil;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.Model;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kailashgautham":4,"-":51}},{"path":"src/test/java/seedu/tatoolkit/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.testutil;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"g-tejas"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.commons.core.index.Index;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"g-tejas"},"content":"    public static final List\u003cIndex\u003e INDEX_LIST \u003d List.of(INDEX_FIRST_PERSON, INDEX_SECOND_PERSON, INDEX_THIRD_PERSON);","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"kailashgautham":2,"g-tejas":3,"-":10}},{"path":"src/test/java/seedu/tatoolkit/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.testutil;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.VALID_CLASS_GROUP_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.VALID_CLASS_GROUP_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.VALID_GITHUB_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.VALID_TELEGRAM_AMY;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.TaToolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.model.person.Person;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"g-tejas"},"content":"            .withClassGroup(\"A-1\").withEmail(\"alice@example.com\")","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"teojunda"},"content":"            .withTelegram(\"@alicepauline\").withGithub(\"alicep\")","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"teojunda"},"content":"            .withDefaultNotes().build();","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"g-tejas"},"content":"            .withClassGroup(\"A-1\").withEmail(\"johnd@example.com\")","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"kailashgautham"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"teojunda"},"content":"            .withTelegram(\"@bensonmeier\").withGithub(\"meierbenson\")","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"teojunda"},"content":"            .withDefaultNotes().build();","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"kailashgautham"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"g-tejas"},"content":"            .withClassGroup(\"A-2\").withEmail(\"heinz@example.com\")","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"kailashgautham"},"content":"            .withPhone(\"95352563\")","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"teojunda"},"content":"            .withTelegram(\"@carlkurz\").withGithub(\"kurzcarl\")","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"teojunda"},"content":"            .withDefaultNotes().build();","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"kailashgautham"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"g-tejas"},"content":"            .withClassGroup(\"A-2\").withEmail(\"cornelia@example.com\")","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"kailashgautham"},"content":"            .withPhone(\"87652533\")","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"teojunda"},"content":"            .withTelegram(\"@danielmeier\").withGithub(\"meierdaniel\")","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"teojunda"},"content":"            .withDefaultNotes().build();","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"kailashgautham"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"g-tejas"},"content":"            .withClassGroup(\"B-1\").withEmail(\"werner@example.com\")","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"kailashgautham"},"content":"            .withPhone(\"9482224\")","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"teojunda"},"content":"            .withTelegram(\"@ellemeyer\").withGithub(\"meyerelle\")","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"teojunda"},"content":"            .withDefaultNotes().build();","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"kailashgautham"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2024-03-11"},{"lineNumber":58,"author":{"gitId":"g-tejas"},"content":"            .withClassGroup(\"B-1\").withEmail(\"lydia@example.com\")","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"kailashgautham"},"content":"            .withPhone(\"9482427\")","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"teojunda"},"content":"            .withTelegram(\"@fionakunz\").withGithub(\"kunzfiona\")","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"teojunda"},"content":"            .withDefaultNotes().build();","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"kailashgautham"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\")","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"g-tejas"},"content":"            .withClassGroup(\"B-2\").withEmail(\"anna@example.com\")","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"kailashgautham"},"content":"            .withPhone(\"9482442\")","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"teojunda"},"content":"            .withTelegram(\"@georgebest\").withGithub(\"bestgeorge\")","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"teojunda"},"content":"            .withDefaultNotes().build();","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"g-tejas"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\")","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"g-tejas"},"content":"            .withClassGroup(\"C-1\").withEmail(\"stefan@example.com\")","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"g-tejas"},"content":"            .withPhone(\"8482424\")","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"teojunda"},"content":"            .withTelegram(\"@hoonmeier\").withGithub(\"meierhoon\")","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"teojunda"},"content":"            .withDefaultNotes().build();","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"kailashgautham"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"g-tejas"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\")","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"g-tejas"},"content":"            .withClassGroup(\"C-2\").withEmail(\"hans@example.com\")","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"g-tejas"},"content":"            .withPhone(\"8482131\")","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"teojunda"},"content":"            .withTelegram(\"@idamueller\").withGithub(\"muellerida\")","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"teojunda"},"content":"            .withDefaultNotes().build();","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":83,"author":{"gitId":"g-tejas"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"g-tejas"},"content":"            .withClassGroup(VALID_CLASS_GROUP_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"g-tejas"},"content":"            .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"g-tejas"},"content":"            .withTelegram(VALID_TELEGRAM_AMY).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"g-tejas"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"g-tejas"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"g-tejas"},"content":"            .withClassGroup(VALID_CLASS_GROUP_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"g-tejas"},"content":"            .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"g-tejas"},"content":"            .withTelegram(VALID_TELEGRAM_BOB).withGithub(VALID_GITHUB_BOB).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"kailashgautham"},"content":"     * Returns a {@code TaToolkit} with all the typical persons.","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"kailashgautham"},"content":"    public static TaToolkit getTypicalTaToolkit() {","lastModifiedDate":"2024-04-01"},{"lineNumber":101,"author":{"gitId":"kailashgautham"},"content":"        TaToolkit toolkit \u003d new TaToolkit();","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"kailashgautham"},"content":"            toolkit.addPerson(person);","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":105,"author":{"gitId":"kailashgautham"},"content":"        return toolkit;","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"teojunda"},"content":"        System.out.println(ALICE);","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"kailashgautham":38,"teojunda":19,"g-tejas":22,"-":33}},{"path":"src/test/java/seedu/tatoolkit/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.ui;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!(other instanceof TestFxmlObject)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        TestFxmlObject otherTestFxmlObject \u003d (TestFxmlObject) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Objects.equals(text, otherTestFxmlObject.text);","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"kailashgautham":1,"-":44}},{"path":"src/test/java/seedu/tatoolkit/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kailashgautham"},"content":"package seedu.tatoolkit.ui;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kailashgautham"},"content":"import static seedu.tatoolkit.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"kailashgautham"},"content":"import seedu.tatoolkit.MainApp;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"kailashgautham":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"\u003c?import seedu.tatoolkit.ui.TestFxmlObject?\u003e","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"kailashgautham":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"kailashgautham"},"content":"\u003cfx:root type\u003d\"seedu.tatoolkit.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"kailashgautham":1,"-":5}}]
