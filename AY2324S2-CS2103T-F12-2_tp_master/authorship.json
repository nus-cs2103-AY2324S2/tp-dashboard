[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Murugan-Maniish"},"content":"[![Java CI](https://github.com/AY2324S2-CS2103T-F12-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S2-CS2103T-F12-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Murugan-Maniish"},"content":"An app named Press Planner for freelance journalists that can streamline their workflow by organizing sources, tracking outlets interested in their stories, and managing collaborations with peers/editors. With features like tagging and grouping contacts, it facilitates efficient research, ensuring reporters can quickly reach out and report on breaking stories. It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, the CLI can be faster than the GUI.","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"Murugan-Maniish"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"Murugan-Maniish"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"Murugan-Maniish":4,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Murugan-Maniish"},"content":"### Aung Ko Khant","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Murugan-Maniish"},"content":"\u003cimg src\u003d\"images/ko-khan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Murugan-Maniish"},"content":"[[github](https://github.com/Ko-Khan)]","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"Ko-Khan"},"content":"* Role: Developer","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"Ko-Khan"},"content":"* Responsibilities: Testing","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"Murugan-Maniish"},"content":"### Benny Loh Choon Keong","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"Murugan-Maniish"},"content":"\u003cimg src\u003d\"images/bennylck.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"Murugan-Maniish"},"content":"[[github](https://github.com/bennyLCK)]","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"Ko-Khan"},"content":"* Responsibilities: Integration","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"Murugan-Maniish"},"content":"### Hamish Stewart Dawe","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Murugan-Maniish"},"content":"\u003cimg src\u003d\"images/h4mes.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Murugan-Maniish"},"content":"[[github](https://github.com/H4mes)]","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"Ko-Khan"},"content":"* Responsibilities: Deliverables + Deadlines","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"Murugan-Maniish"},"content":"### Hyun Eunkyu","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"Murugan-Maniish"},"content":"\u003cimg src\u003d\"images/howlong11.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Murugan-Maniish"},"content":"[[github](https://github.com/Howlong11)]","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"Ko-Khan"},"content":"* Responsibilities: Scheduling + Tracking","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"Murugan-Maniish"},"content":"### Murugan Maniish","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"Murugan-Maniish"},"content":"\u003cimg src\u003d\"images/murugan-maniish.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"Murugan-Maniish"},"content":"[[github](https://github.com/Murugan-Maniish)]","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"Ko-Khan"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"Ko-Khan":6,"Murugan-Maniish":15,"-":33}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# AB-3 Developer Guide","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"Howlong11"},"content":"* freelance journalists","lastModifiedDate":"2024-03-05"},{"lineNumber":278,"author":{"gitId":"Howlong11"},"content":"* has a need to manage a significant number of contacts for different facets of business","lastModifiedDate":"2024-03-05"},{"lineNumber":279,"author":{"gitId":"Howlong11"},"content":"* prefer using text-based commands than multi-step GUI","lastModifiedDate":"2024-03-05"},{"lineNumber":280,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"Howlong11"},"content":"* value speed and efficiency","lastModifiedDate":"2024-03-05"},{"lineNumber":282,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":283,"author":{"gitId":"Howlong11"},"content":"**Value proposition**: An app for freelance journalists that can streamline their workflow by organizing sources, tracking outlets interested in their stories, and managing collaborations with peers/editors. With features like tagging and grouping contacts, it facilitates efficient research, ensuring reporters can quickly reach out and report on breaking stories.","lastModifiedDate":"2024-03-05"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                 | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"|----------|--------------------------------------------|------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2023-09-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions       | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | add a new person             |                                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | delete a person              | remove entries that I no longer need                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | find a person by name        | locate details of persons without having to go through the entire list |","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"| `* *`    | user                                       | hide private contact details | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"| `*`      | user with many persons in the address book | sort persons by name         | locate a person easily                                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"Ko-Khan"},"content":"(For all use cases below, the **System** is the `PressPlanner` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2024-03-05"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"bennyLCK"},"content":"1.  User requests to list persons.","lastModifiedDate":"2024-03-07"},{"lineNumber":311,"author":{"gitId":"bennyLCK"},"content":"1. AddressBook shows a list of persons.","lastModifiedDate":"2024-03-07"},{"lineNumber":312,"author":{"gitId":"bennyLCK"},"content":"1. User requests to delete a specific person in the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":313,"author":{"gitId":"bennyLCK"},"content":"1. AddressBook deletes the person.","lastModifiedDate":"2024-03-07"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":324,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"bennyLCK"},"content":"    ","lastModifiedDate":"2024-03-06"},{"lineNumber":331,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":332,"author":{"gitId":"Ko-Khan"},"content":"**Use case: UC01 - Add an article**","lastModifiedDate":"2024-03-05"},{"lineNumber":333,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":334,"author":{"gitId":"Ko-Khan"},"content":"**MSS**","lastModifiedDate":"2024-03-05"},{"lineNumber":335,"author":{"gitId":"bennyLCK"},"content":"1. User requests to add article.","lastModifiedDate":"2024-03-07"},{"lineNumber":336,"author":{"gitId":"bennyLCK"},"content":"1. PressPlanner adds article.","lastModifiedDate":"2024-03-07"},{"lineNumber":337,"author":{"gitId":"bennyLCK"},"content":"1. PressPlanner displays success message to User.","lastModifiedDate":"2024-03-07"},{"lineNumber":338,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":339,"author":{"gitId":"Ko-Khan"},"content":"    Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":340,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":341,"author":{"gitId":"bennyLCK"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":342,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":343,"author":{"gitId":"Ko-Khan"},"content":"* 1a. Command was invalid.","lastModifiedDate":"2024-03-06"},{"lineNumber":344,"author":{"gitId":"Ko-Khan"},"content":"  * 1a1. PressPlanner shows an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":345,"author":{"gitId":"Ko-Khan"},"content":"    ","lastModifiedDate":"2024-03-05"},{"lineNumber":346,"author":{"gitId":"bennyLCK"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":347,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":348,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":349,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":350,"author":{"gitId":"Ko-Khan"},"content":"**Use case: UC02 - List all articles**","lastModifiedDate":"2024-03-05"},{"lineNumber":351,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":352,"author":{"gitId":"Ko-Khan"},"content":"**MSS**","lastModifiedDate":"2024-03-05"},{"lineNumber":353,"author":{"gitId":"bennyLCK"},"content":"1. User requests to list articles.","lastModifiedDate":"2024-03-07"},{"lineNumber":354,"author":{"gitId":"bennyLCK"},"content":"1. PressPlanner lists out all articles.","lastModifiedDate":"2024-03-07"},{"lineNumber":355,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":356,"author":{"gitId":"Ko-Khan"},"content":"   Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":357,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":358,"author":{"gitId":"Ko-Khan"},"content":"**Extensions**","lastModifiedDate":"2024-03-05"},{"lineNumber":359,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":360,"author":{"gitId":"Ko-Khan"},"content":"* 1a. The list is empty.","lastModifiedDate":"2024-03-06"},{"lineNumber":361,"author":{"gitId":"bennyLCK"},"content":"  * 1a1. PressPlanner returns an error message.","lastModifiedDate":"2024-03-06"},{"lineNumber":362,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":363,"author":{"gitId":"bennyLCK"},"content":"    Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":364,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":365,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":366,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":367,"author":{"gitId":"bennyLCK"},"content":"**Use case: UC03 - Edit an article**","lastModifiedDate":"2024-03-06"},{"lineNumber":368,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":369,"author":{"gitId":"bennyLCK"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":370,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":371,"author":{"gitId":"bennyLCK"},"content":"1. User requests to list articles.","lastModifiedDate":"2024-03-07"},{"lineNumber":372,"author":{"gitId":"bennyLCK"},"content":"1. PressPlanner lists out all articles.","lastModifiedDate":"2024-03-07"},{"lineNumber":373,"author":{"gitId":"bennyLCK"},"content":"1. User requests to edit a specific article in the list","lastModifiedDate":"2024-03-06"},{"lineNumber":374,"author":{"gitId":"bennyLCK"},"content":"   by providing at least one change to an attribute of the article.","lastModifiedDate":"2024-03-07"},{"lineNumber":375,"author":{"gitId":"bennyLCK"},"content":"1. PressPlanner updates the article with the changes requested.","lastModifiedDate":"2024-03-07"},{"lineNumber":376,"author":{"gitId":"bennyLCK"},"content":"1. PressPlanner shows the updated article to user.","lastModifiedDate":"2024-03-07"},{"lineNumber":377,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":378,"author":{"gitId":"bennyLCK"},"content":"   Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":379,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":380,"author":{"gitId":"bennyLCK"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":381,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":382,"author":{"gitId":"bennyLCK"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2024-03-07"},{"lineNumber":383,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":384,"author":{"gitId":"bennyLCK"},"content":"    * 3a1. PressPlanner shows an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":385,"author":{"gitId":"bennyLCK"},"content":"    ","lastModifiedDate":"2024-03-06"},{"lineNumber":386,"author":{"gitId":"bennyLCK"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":387,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":388,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":389,"author":{"gitId":"bennyLCK"},"content":"* 3b. No changes to an attribute of the article is specified.","lastModifiedDate":"2024-03-07"},{"lineNumber":390,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":391,"author":{"gitId":"bennyLCK"},"content":"    * 3b1. PressPlanner shows an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":392,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":393,"author":{"gitId":"bennyLCK"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":394,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":395,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":396,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":397,"author":{"gitId":"bennyLCK"},"content":"**Use case: UC04 - Delete an article**","lastModifiedDate":"2024-03-06"},{"lineNumber":398,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":399,"author":{"gitId":"bennyLCK"},"content":"**MSS**","lastModifiedDate":"2024-03-06"},{"lineNumber":400,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":401,"author":{"gitId":"bennyLCK"},"content":"1. User requests to list articles.","lastModifiedDate":"2024-03-07"},{"lineNumber":402,"author":{"gitId":"bennyLCK"},"content":"1. PressPlanner lists out all articles.","lastModifiedDate":"2024-03-07"},{"lineNumber":403,"author":{"gitId":"bennyLCK"},"content":"1. User requests to delete a specific article in the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":404,"author":{"gitId":"bennyLCK"},"content":"1. PressPlanner deletes the article.","lastModifiedDate":"2024-03-07"},{"lineNumber":405,"author":{"gitId":"bennyLCK"},"content":"1. PressPlanner shows delete success message to user.","lastModifiedDate":"2024-03-07"},{"lineNumber":406,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":407,"author":{"gitId":"bennyLCK"},"content":"   Use case ends.","lastModifiedDate":"2024-03-06"},{"lineNumber":408,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":409,"author":{"gitId":"bennyLCK"},"content":"**Extensions**","lastModifiedDate":"2024-03-06"},{"lineNumber":410,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":411,"author":{"gitId":"bennyLCK"},"content":"* 2a. User requests to find articles with given keywords.","lastModifiedDate":"2024-03-07"},{"lineNumber":412,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":413,"author":{"gitId":"bennyLCK"},"content":"    * 2a1. PressPlanner displays a filtered list of articles found.","lastModifiedDate":"2024-03-07"},{"lineNumber":414,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":415,"author":{"gitId":"bennyLCK"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2024-03-07"},{"lineNumber":416,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":417,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":418,"author":{"gitId":"bennyLCK"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2024-03-07"},{"lineNumber":419,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":420,"author":{"gitId":"bennyLCK"},"content":"    * 3a1. PressPlanner shows an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":421,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":422,"author":{"gitId":"bennyLCK"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":423,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":424,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":425,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":426,"author":{"gitId":"bennyLCK"},"content":"**Use case: UC05 - Find articles**","lastModifiedDate":"2024-03-07"},{"lineNumber":427,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":428,"author":{"gitId":"bennyLCK"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":429,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":430,"author":{"gitId":"bennyLCK"},"content":"1. User requests to list articles.","lastModifiedDate":"2024-03-07"},{"lineNumber":431,"author":{"gitId":"bennyLCK"},"content":"1. PressPlanner lists out all articles.","lastModifiedDate":"2024-03-07"},{"lineNumber":432,"author":{"gitId":"bennyLCK"},"content":"1. User requests to find articles with given keywords.","lastModifiedDate":"2024-03-07"},{"lineNumber":433,"author":{"gitId":"bennyLCK"},"content":"1. PressPlanner displays a filtered list of articles found, ","lastModifiedDate":"2024-03-07"},{"lineNumber":434,"author":{"gitId":"bennyLCK"},"content":"each containing at least one of the given keywords.","lastModifiedDate":"2024-03-07"},{"lineNumber":435,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":436,"author":{"gitId":"bennyLCK"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":437,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":438,"author":{"gitId":"bennyLCK"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":439,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":440,"author":{"gitId":"bennyLCK"},"content":"* 3a. No keywords are specified.","lastModifiedDate":"2024-03-07"},{"lineNumber":441,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":442,"author":{"gitId":"bennyLCK"},"content":"    * 3a1. PressPlanner shows an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":443,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":444,"author":{"gitId":"bennyLCK"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-06"},{"lineNumber":445,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":446,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":447,"author":{"gitId":"bennyLCK"},"content":"* 3b. Only invalid keywords are specified.","lastModifiedDate":"2024-03-07"},{"lineNumber":448,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":449,"author":{"gitId":"bennyLCK"},"content":"    * 3b1. PressPlanner shows an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":450,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":451,"author":{"gitId":"bennyLCK"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-07"},{"lineNumber":452,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":453,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":454,"author":{"gitId":"bennyLCK"},"content":"* 3c. No articles are found with the given keywords.","lastModifiedDate":"2024-03-07"},{"lineNumber":455,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":456,"author":{"gitId":"bennyLCK"},"content":"    * 3c1. PressPlanner shows an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":457,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":458,"author":{"gitId":"bennyLCK"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-07"},{"lineNumber":459,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":460,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":462,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"bennyLCK"},"content":"1. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-03-07"},{"lineNumber":466,"author":{"gitId":"bennyLCK"},"content":"1. Should be able to hold up to 1000 articles without a noticeable sluggishness in performance for typical usage. ","lastModifiedDate":"2024-03-07"},{"lineNumber":467,"author":{"gitId":"bennyLCK"},"content":"1. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2024-03-07"},{"lineNumber":468,"author":{"gitId":"bennyLCK"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":474,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"Howlong11"},"content":"* **Story**: A story written by interviewing the person","lastModifiedDate":"2024-03-05"},{"lineNumber":476,"author":{"gitId":"Howlong11"},"content":"* **Tag**: Additional information about the person on level of how helpful the person was for a journal.","lastModifiedDate":"2024-03-05"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":486,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":487,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Ko-Khan":20,"bennyLCK":121,"Howlong11":8,"-":382}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"Murugan-Maniish"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003ePressPlanner\u003c/a\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/index.html\" class\u003d\"nav-link\"\u003eHome\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/se-edu/addressbook-level3\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"Murugan-Maniish":1,"-":66}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"Ko-Khan"},"content":"import seedu.address.storage.ArticleBookStorage;","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"Ko-Khan"},"content":"import seedu.address.storage.JsonArticleBookStorage;","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"Ko-Khan"},"content":"        ArticleBookStorage articleBookStorage \u003d new JsonArticleBookStorage(userPrefs.getArticleBookFilePath());","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"Ko-Khan"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, articleBookStorage);","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ko-Khan":4,"-":185}},{"path":"src/main/java/seedu/address/model/ArticleBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Howlong11"},"content":"package seedu.address.model;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"Howlong11"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"Howlong11"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"Howlong11"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"Howlong11"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"Howlong11"},"content":"import seedu.address.model.article.Article;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"Howlong11"},"content":"import seedu.address.model.article.UniqueArticleList;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"Howlong11"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"Howlong11"},"content":" * Wraps all data at the article-book level","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"Howlong11"},"content":" * Duplicates are not allowed (by .isSameArticle comparison)","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Howlong11"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"Howlong11"},"content":"public class ArticleBook implements ReadOnlyArticleBook {","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"Howlong11"},"content":"    private final UniqueArticleList articles;","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"Howlong11"},"content":"    {","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"Howlong11"},"content":"        articles \u003d new UniqueArticleList();","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"Howlong11"},"content":"    public ArticleBook() {}","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"Howlong11"},"content":"     * Creates an ArticleBook using the Articles in the {@code toBeCopied}","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"Howlong11"},"content":"    public ArticleBook(ReadOnlyArticleBook toBeCopied) {","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"Howlong11"},"content":"        this();","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"Howlong11"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"Howlong11"},"content":"    //// list overwrite operations","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"Howlong11"},"content":"     * Replaces the contents of the article list with {@code articless}.","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"Howlong11"},"content":"     * {@code articles} must not contain duplicate article.","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"Howlong11"},"content":"    public void setArticles(List\u003cArticle\u003e articles) {","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"Howlong11"},"content":"        this.articles.setArticles(articles);","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"Howlong11"},"content":"     * Resets the existing data of this {@code ArticleBook} with {@code newData}.","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"Howlong11"},"content":"    public void resetData(ReadOnlyArticleBook newData) {","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"Howlong11"},"content":"        requireNonNull(newData);","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"Howlong11"},"content":"        setArticles(newData.getArticleList());","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"Howlong11"},"content":"    //// article-level operations","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"Howlong11"},"content":"     * Returns true if an article with the same identity as {@code article} exists in the article book.","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"Howlong11"},"content":"    public boolean hasArticle(Article article) {","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"Howlong11"},"content":"        requireNonNull(article);","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"Howlong11"},"content":"        return articles.contains(article);","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"Howlong11"},"content":"     * Adds an article to the article book.","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"Howlong11"},"content":"     * The article must not already exist in the article book.","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"Howlong11"},"content":"    public void addArticle(Article article) {","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"Howlong11"},"content":"        articles.add(article);","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"Howlong11"},"content":"     * Replaces the given article {@code target} in the list with {@code editedArticle}.","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"Howlong11"},"content":"     * {@code target} must exist in the article book.","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"Howlong11"},"content":"     * The article identity of {@code editedArticle} must not be the same as","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"Howlong11"},"content":"     * another existing Article in the Article book.","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"Howlong11"},"content":"    public void setArticle(Article target, Article editedArticle) {","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"Howlong11"},"content":"        requireNonNull(editedArticle);","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"Howlong11"},"content":"        articles.setArticle(target, editedArticle);","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"Howlong11"},"content":"     * Removes {@code key} from this {@code ArticleBook}.","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"Howlong11"},"content":"     * {@code key} must exist in the Article book.","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"Howlong11"},"content":"    public void removeArticle(Article key) {","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"Howlong11"},"content":"        articles.remove(key);","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"Howlong11"},"content":"    //// util methods","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"Howlong11"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"Howlong11"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"Howlong11"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"Howlong11"},"content":"                .add(\"Articles\", articles)","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"Howlong11"},"content":"                .toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"Howlong11"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"Howlong11"},"content":"    public ObservableList\u003cArticle\u003e getArticleList() {","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"Howlong11"},"content":"        return articles.asUnmodifiableObservableList();","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"Howlong11"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"Howlong11"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"Howlong11"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"Howlong11"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"Howlong11"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"Howlong11"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"Howlong11"},"content":"        if (!(other instanceof ArticleBook)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"Howlong11"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"Howlong11"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"Howlong11"},"content":"        ArticleBook otherArticleBook \u003d (ArticleBook) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"Howlong11"},"content":"        return articles.equals(otherArticleBook.articles);","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"Howlong11"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"Howlong11"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"Howlong11"},"content":"        return articles.hashCode();","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"Howlong11"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"Howlong11":124}},{"path":"src/main/java/seedu/address/model/ReadOnlyArticleBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Howlong11"},"content":"package seedu.address.model;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"Howlong11"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"Howlong11"},"content":"import seedu.address.model.article.Article;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"Howlong11"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"Howlong11"},"content":" * Unmodifiable view of an article book","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"Howlong11"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"Howlong11"},"content":"public interface ReadOnlyArticleBook {","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"Howlong11"},"content":"     * Returns an unmodifiable view of the articles list.","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"Howlong11"},"content":"     * This list will not contain any duplicate articles.","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Howlong11"},"content":"    ObservableList\u003cArticle\u003e getArticleList();","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"Howlong11"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"Howlong11":16}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"Ko-Khan"},"content":"    private Path articleBookFilePath \u003d Paths.get(\"data\", \"articlebook.json\");","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"Ko-Khan"},"content":"    public Path getArticleBookFilePath() {","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"Ko-Khan"},"content":"        return articleBookFilePath;","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ko-Khan":4,"-":87}},{"path":"src/main/java/seedu/address/model/article/Article.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Howlong11"},"content":"package seedu.address.model.article;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"Howlong11"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"Howlong11"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"Howlong11"},"content":" * Represents an article in the address book.","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"Howlong11"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"Howlong11"},"content":"public class Article {","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"Howlong11"},"content":"    private final String title;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"Howlong11"},"content":"    private final String[] authors;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"Howlong11"},"content":"    private final LocalDateTime publicationDate;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"Howlong11"},"content":"    private final String[] source;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"Howlong11"},"content":"    private final String category;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"Howlong11"},"content":"     * Enumeration of Status of an article.","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"Ko-Khan"},"content":"    public enum Status {","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"Howlong11"},"content":"        DRAFT, PUBLISHED, ARCHIVED","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"Howlong11"},"content":"    private final Status status;","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"Howlong11"},"content":"     * Constructs an Article object.","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"Howlong11"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"Howlong11"},"content":"     * @param title the title of the article.","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"Howlong11"},"content":"     * @param authors the authors of the article.","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"Howlong11"},"content":"     * @param publicationDate the date of publication.","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"Howlong11"},"content":"     * @param source the people interviewed.","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"Howlong11"},"content":"     * @param category the subject of the article.","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"Howlong11"},"content":"     * @param status the current status of the article.","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"Howlong11"},"content":"    public Article(String title, String[] authors, LocalDateTime publicationDate,","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"Howlong11"},"content":"                   String[] source, String category, Status status) {","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"Howlong11"},"content":"        this.title \u003d title;","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"Howlong11"},"content":"        this.authors \u003d authors;","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"Howlong11"},"content":"        this.publicationDate \u003d publicationDate;","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"Howlong11"},"content":"        this.source \u003d source;","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"Howlong11"},"content":"        this.category \u003d category;","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"Howlong11"},"content":"        this.status \u003d status;","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"Howlong11"},"content":"    public String getTitle() {","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"Howlong11"},"content":"        return this.title;","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"Howlong11"},"content":"    public String[] getAuthors() {","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"Howlong11"},"content":"        return this.authors;","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"Howlong11"},"content":"    public LocalDateTime getPublicationDate() {","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"Howlong11"},"content":"        return this.publicationDate;","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"Howlong11"},"content":"    public String[] getSource() {","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"Howlong11"},"content":"        return this.source;","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"Howlong11"},"content":"    public String getCategory() {","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"Howlong11"},"content":"        return this.category;","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"Howlong11"},"content":"    public Status getStatus() {","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"Howlong11"},"content":"        return this.status;","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"Howlong11"},"content":"     * Returns true if all the attributes of Article class are identical to the attributes of an existing Article.","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"Howlong11"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"Howlong11"},"content":"     * @param otherArticle","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"Howlong11"},"content":"     * @return","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"Howlong11"},"content":"    public boolean isSameArticle(Article otherArticle) {","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"Howlong11"},"content":"        if (otherArticle \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"Howlong11"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"Howlong11"},"content":"        /*","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"Howlong11"},"content":"         * Same authors may have many drafts of same article. If it is not draft and has same title and authors,","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"Howlong11"},"content":"         * consider it as same article","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"Howlong11"},"content":"         */","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"Howlong11"},"content":"        } else if (otherArticle.getStatus() !\u003d Status.DRAFT \u0026\u0026 this.getStatus() !\u003d Status.DRAFT","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"Howlong11"},"content":"                \u0026\u0026 otherArticle.getTitle().equals(this.title) \u0026\u0026 otherArticle.getAuthors() \u003d\u003d this.authors) {","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"Howlong11"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"Howlong11"},"content":"        } else {","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"Howlong11"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"Howlong11"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"Howlong11"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"Ko-Khan":1,"Howlong11":88}},{"path":"src/main/java/seedu/address/model/article/UniqueArticleList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Howlong11"},"content":"package seedu.address.model.article;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"Howlong11"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"Howlong11"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"Howlong11"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"Howlong11"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"Howlong11"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"Howlong11"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"Howlong11"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"Howlong11"},"content":" * A list of articles that are unique","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"Howlong11"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Howlong11"},"content":"public class UniqueArticleList implements Iterable\u003cArticle\u003e {","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"Howlong11"},"content":"    private final ObservableList\u003cArticle\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"Howlong11"},"content":"    private final ObservableList\u003cArticle\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"Howlong11"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"Howlong11"},"content":"     * Returns true if the list contains an equivalent article as the given argument.","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"Howlong11"},"content":"    public boolean contains(Article toCheck) {","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"Howlong11"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"Howlong11"},"content":"        return internalList.stream().anyMatch(toCheck::isSameArticle);","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"Howlong11"},"content":"     * Adds an article to the list.","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"Howlong11"},"content":"     * The article must not already exist in the list.","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"Howlong11"},"content":"    public void add(Article toAdd) {","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"Howlong11"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"Howlong11"},"content":"        /*","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"Howlong11"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"Howlong11"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"Howlong11"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"Howlong11"},"content":"         */","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"Howlong11"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"Howlong11"},"content":"     * Replaces the article {@code target} in the list with {@code editedArticle}.","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"Howlong11"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"Howlong11"},"content":"    public void setArticle(Article target, Article editedArticle) {","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"Howlong11"},"content":"        requireAllNonNull(target, editedArticle);","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"Howlong11"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"Howlong11"},"content":"        /*","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"Howlong11"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"Howlong11"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"Howlong11"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"Howlong11"},"content":"        if (!target.isSameArticle(editedArticle) \u0026\u0026 contains(editedArticle)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"Howlong11"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"Howlong11"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"Howlong11"},"content":"        */","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"Howlong11"},"content":"        internalList.set(index, editedArticle);","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"Howlong11"},"content":"     * Removes the equivalent article from the list.","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"Howlong11"},"content":"    public void remove(Article toRemove) {","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"Howlong11"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"Howlong11"},"content":"        internalList.remove(toRemove);","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"Howlong11"},"content":"        /*","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"Howlong11"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"Howlong11"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"Howlong11"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"Howlong11"},"content":"        */","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"Howlong11"},"content":"    public void setArticles(UniqueArticleList replacement) {","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"Howlong11"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"Howlong11"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"Howlong11"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"Howlong11"},"content":"     * {@code persons} must not contain duplicate articles.","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"Howlong11"},"content":"    public void setArticles(List\u003cArticle\u003e articles) {","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"Howlong11"},"content":"        requireAllNonNull(articles);","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"Howlong11"},"content":"        /*","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"Howlong11"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"Howlong11"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"Howlong11"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"Howlong11"},"content":"        */","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"Howlong11"},"content":"        internalList.setAll(articles);","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"Howlong11"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"Howlong11"},"content":"    public ObservableList\u003cArticle\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"Howlong11"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"Howlong11"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"Howlong11"},"content":"    public Iterator\u003cArticle\u003e iterator() {","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"Howlong11"},"content":"        return internalList.iterator();","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"Howlong11"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"Howlong11"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"Howlong11"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"Howlong11"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"Howlong11"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"Howlong11"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"Howlong11"},"content":"        if (!(other instanceof UniqueArticleList)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"Howlong11"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"Howlong11"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"Howlong11"},"content":"        UniqueArticleList otherUniqueArticleList \u003d (UniqueArticleList) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"Howlong11"},"content":"        return internalList.equals(otherUniqueArticleList.internalList);","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"Howlong11"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"Howlong11"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"Howlong11"},"content":"        return internalList.hashCode();","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"Howlong11"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"Howlong11"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"Howlong11"},"content":"        return internalList.toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":139,"author":{"gitId":"Howlong11"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":140,"author":{"gitId":"Howlong11"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":141,"author":{"gitId":"Howlong11"},"content":"     * Returns true if {@code articles} contains only unique persons.","lastModifiedDate":"2024-03-17"},{"lineNumber":142,"author":{"gitId":"Howlong11"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":143,"author":{"gitId":"Howlong11"},"content":"    private boolean articlesAreUnique(List\u003cArticle\u003e articles) {","lastModifiedDate":"2024-03-17"},{"lineNumber":144,"author":{"gitId":"Howlong11"},"content":"        for (int i \u003d 0; i \u003c articles.size() - 1; i++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":145,"author":{"gitId":"Howlong11"},"content":"            for (int j \u003d i + 1; j \u003c articles.size(); j++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":146,"author":{"gitId":"Howlong11"},"content":"                if (articles.get(i).isSameArticle(articles.get(j))) {","lastModifiedDate":"2024-03-17"},{"lineNumber":147,"author":{"gitId":"Howlong11"},"content":"                    return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":148,"author":{"gitId":"Howlong11"},"content":"                }","lastModifiedDate":"2024-03-17"},{"lineNumber":149,"author":{"gitId":"Howlong11"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":150,"author":{"gitId":"Howlong11"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":151,"author":{"gitId":"Howlong11"},"content":"        return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":152,"author":{"gitId":"Howlong11"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":153,"author":{"gitId":"Howlong11"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"Howlong11":153}},{"path":"src/main/java/seedu/address/storage/ArticleBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ko-Khan"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"Ko-Khan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"Ko-Khan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"Ko-Khan"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"Ko-Khan"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"Ko-Khan"},"content":"import seedu.address.model.ReadOnlyArticleBook;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"Ko-Khan"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"Ko-Khan"},"content":" * Represents a storage for {@link seedu.address.model.ArticleBook}.","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"Ko-Khan"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"Ko-Khan"},"content":"public interface ArticleBookStorage {","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Ko-Khan"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"Ko-Khan"},"content":"    Path getArticleBookFilePath();","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"Ko-Khan"},"content":"     * Returns ArticleBook data as a {@link ReadOnlyArticleBook}.","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"Ko-Khan"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"Ko-Khan"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"Ko-Khan"},"content":"    Optional\u003cReadOnlyArticleBook\u003e readArticleBook() throws DataLoadingException;","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"Ko-Khan"},"content":"     * @see #getArticleBookFilePath()","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"Ko-Khan"},"content":"    Optional\u003cReadOnlyArticleBook\u003e readArticleBook(Path filePath) throws DataLoadingException;","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"Ko-Khan"},"content":"     * Saves the given {@link ReadOnlyArticleBook} to the storage.","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"Ko-Khan"},"content":"     * @param articleBook cannot be null.","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"Ko-Khan"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"Ko-Khan"},"content":"    void saveArticleBook(ReadOnlyArticleBook articleBook) throws IOException;","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"Ko-Khan"},"content":"     * @see #saveArticleBook(ReadOnlyArticleBook)","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"Ko-Khan"},"content":"    void saveArticleBook(ReadOnlyArticleBook articleBook, Path filePath) throws IOException;","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"Ko-Khan"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"Ko-Khan":43}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedArticle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ko-Khan"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"Ko-Khan"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"Ko-Khan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"Ko-Khan"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"Ko-Khan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"Ko-Khan"},"content":"import seedu.address.model.article.Article;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"Ko-Khan"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"Ko-Khan"},"content":" * Jackson-friendly version of {@link Article}.","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"Ko-Khan"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"Ko-Khan"},"content":"public class JsonAdaptedArticle {","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"Ko-Khan"},"content":"    private final String title;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"Ko-Khan"},"content":"    private final String[] authors;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"Ko-Khan"},"content":"    private final LocalDateTime publicationDate;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"Ko-Khan"},"content":"    private final String[] source;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"Ko-Khan"},"content":"    private final String category;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"Ko-Khan"},"content":"    private final Article.Status status;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"Ko-Khan"},"content":"     * Construct a {@code JsonAdaptedArticle} with the given article details.","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"Ko-Khan"},"content":"     * @param title","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"Ko-Khan"},"content":"     * @param authors","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"Ko-Khan"},"content":"     * @param publicationDate","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"Ko-Khan"},"content":"     * @param source","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"Ko-Khan"},"content":"     * @param category","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"Ko-Khan"},"content":"     * @param status","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"Ko-Khan"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"Ko-Khan"},"content":"    public JsonAdaptedArticle(@JsonProperty(\"title\") String title, @JsonProperty(\"authors\") String[] authors,","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"Ko-Khan"},"content":"                              @JsonProperty(\"publicationDate\") LocalDateTime publicationDate,","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"Ko-Khan"},"content":"                              @JsonProperty(\"source\") String[] source, @JsonProperty(\"category\") String category,","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"Ko-Khan"},"content":"                              @JsonProperty(\"status\") Article.Status status) {","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"Ko-Khan"},"content":"        this.title \u003d title;","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"Ko-Khan"},"content":"        this.authors \u003d authors;","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"Ko-Khan"},"content":"        this.publicationDate \u003d publicationDate;","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"Ko-Khan"},"content":"        this.source \u003d source;","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"Ko-Khan"},"content":"        this.category \u003d category;","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"Ko-Khan"},"content":"        this.status \u003d status;","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"Ko-Khan"},"content":"     * Construct a {@code JsonAdaptedArticle} with neccessary details","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"Ko-Khan"},"content":"     * @param sourceArticle","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"Ko-Khan"},"content":"    public JsonAdaptedArticle(Article sourceArticle) {","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"Ko-Khan"},"content":"        title \u003d sourceArticle.getTitle();","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"Ko-Khan"},"content":"        authors \u003d sourceArticle.getAuthors();","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"Ko-Khan"},"content":"        publicationDate \u003d sourceArticle.getPublicationDate();","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"Ko-Khan"},"content":"        source \u003d sourceArticle.getSource();","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"Ko-Khan"},"content":"        category \u003d sourceArticle.getCategory();","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"Ko-Khan"},"content":"        status \u003d sourceArticle.getStatus();","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"Ko-Khan"},"content":"     * Convert this object into Model\u0027s object","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"Ko-Khan"},"content":"     * @return Model\u0027s object","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"Ko-Khan"},"content":"     * @throws IllegalValueException if data constraints are violated","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"Ko-Khan"},"content":"    public Article toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"Ko-Khan"},"content":"        if (title \u003d\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"Ko-Khan"},"content":"            throw new IllegalValueException(\"The title is missing\");","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"Ko-Khan"},"content":"        if (authors \u003d\u003d null || authors.length \u003d\u003d 0) {","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"Ko-Khan"},"content":"            throw new IllegalValueException(\"The author[s] is/are invalid\");","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"Ko-Khan"},"content":"        if (publicationDate \u003d\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"Ko-Khan"},"content":"            throw new IllegalValueException(\"The publication date is invalid\");","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"Ko-Khan"},"content":"        if (source \u003d\u003d null || source.length \u003d\u003d 0) {","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"Ko-Khan"},"content":"            throw new IllegalValueException(\"The source is invalid\");","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"Ko-Khan"},"content":"        if (category \u003d\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"Ko-Khan"},"content":"            throw new IllegalValueException(\"The categories are invalid\");","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"Ko-Khan"},"content":"        return new Article(title, authors, publicationDate, source, category, status);","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"Ko-Khan"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"Ko-Khan":80}},{"path":"src/main/java/seedu/address/storage/JsonArticleBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ko-Khan"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"Ko-Khan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"Ko-Khan"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"Ko-Khan"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"Ko-Khan"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"Ko-Khan"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"Ko-Khan"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"Ko-Khan"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"Ko-Khan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"Ko-Khan"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"Ko-Khan"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"Ko-Khan"},"content":"import seedu.address.model.ReadOnlyArticleBook;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"Ko-Khan"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"Ko-Khan"},"content":" * A class to access ArticleBook data stored as a json file","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"Ko-Khan"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"Ko-Khan"},"content":"public class JsonArticleBookStorage implements ArticleBookStorage {","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"Ko-Khan"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonArticleBookStorage.class);","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"Ko-Khan"},"content":"    private Path filePath;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"Ko-Khan"},"content":"    public JsonArticleBookStorage(Path filePath) {","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"Ko-Khan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"Ko-Khan"},"content":"    public Path getArticleBookFilePath() {","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"Ko-Khan"},"content":"        return filePath;","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"Ko-Khan"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"Ko-Khan"},"content":"    public Optional\u003cReadOnlyArticleBook\u003e readArticleBook() throws DataLoadingException {","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"Ko-Khan"},"content":"        return readArticleBook(filePath);","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"Ko-Khan"},"content":"     * Similar to {@link #readArticleBook()}.","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"Ko-Khan"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"Ko-Khan"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"Ko-Khan"},"content":"    public Optional\u003cReadOnlyArticleBook\u003e readArticleBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"Ko-Khan"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"Ko-Khan"},"content":"        Optional\u003cJsonSerializableArticleBook\u003e jsonArticleBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"Ko-Khan"},"content":"                filePath, JsonSerializableArticleBook.class);","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"Ko-Khan"},"content":"        if (!jsonArticleBook.isPresent()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"Ko-Khan"},"content":"            return Optional.empty();","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"Ko-Khan"},"content":"        try {","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"Ko-Khan"},"content":"            return Optional.of(jsonArticleBook.get().toModelType());","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"Ko-Khan"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"Ko-Khan"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"Ko-Khan"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"Ko-Khan"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"Ko-Khan"},"content":"    public void saveArticleBook(ReadOnlyArticleBook articleBook) throws IOException {","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"Ko-Khan"},"content":"        saveArticleBook(articleBook, filePath);","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"Ko-Khan"},"content":"     * Similar to {@link #saveArticleBook(ReadOnlyArticleBook)}.","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"Ko-Khan"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"Ko-Khan"},"content":"    public void saveArticleBook(ReadOnlyArticleBook articleBook, Path filePath) throws IOException {","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"Ko-Khan"},"content":"        requireNonNull(articleBook);","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"Ko-Khan"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"Ko-Khan"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"Ko-Khan"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableArticleBook(articleBook), filePath);","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"Ko-Khan"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"Ko-Khan":78}},{"path":"src/main/java/seedu/address/storage/JsonSerializableArticleBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Ko-Khan"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"Ko-Khan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"Ko-Khan"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"Ko-Khan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"Ko-Khan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"Ko-Khan"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"Ko-Khan"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"Ko-Khan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"Ko-Khan"},"content":"import seedu.address.model.ArticleBook;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"Ko-Khan"},"content":"import seedu.address.model.ReadOnlyArticleBook;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"Ko-Khan"},"content":"import seedu.address.model.article.Article;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"Ko-Khan"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"Ko-Khan"},"content":" * An immutable ArticleBook that can be serialized into Json format","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"Ko-Khan"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"Ko-Khan"},"content":"@JsonRootName(value \u003d \"articlebook\")","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"Ko-Khan"},"content":"public class JsonSerializableArticleBook {","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"Ko-Khan"},"content":"    public static final String MESSAGE_DUPLICATE_ARTICLE \u003d \"Articles list contains duplicate article(s).\";","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"Ko-Khan"},"content":"    private final List\u003cJsonAdaptedArticle\u003e articles \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"Ko-Khan"},"content":"     * Constructs a {@code JsonSerializableArticleBook} with the given articles.","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"Ko-Khan"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"Ko-Khan"},"content":"    public JsonSerializableArticleBook(@JsonProperty(\"articles\") List\u003cJsonAdaptedArticle\u003e articles) {","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"Ko-Khan"},"content":"        this.articles.addAll(articles);","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"Ko-Khan"},"content":"     * Converts a given {@code ReadOnlyArticleBook} into this class for Jackson use.","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"Ko-Khan"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableArticleBook}.","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"Ko-Khan"},"content":"    public JsonSerializableArticleBook(ReadOnlyArticleBook source) {","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"Ko-Khan"},"content":"        articles.addAll(source.getArticleList().stream().map(JsonAdaptedArticle::new).collect(Collectors.toList()));","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"Ko-Khan"},"content":"     * Converts this article book into the model\u0027s {@code ArticleBook} object.","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"Ko-Khan"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"Ko-Khan"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"Ko-Khan"},"content":"    public ArticleBook toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"Ko-Khan"},"content":"        ArticleBook articleBook \u003d new ArticleBook();","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"Ko-Khan"},"content":"        for (JsonAdaptedArticle jsonAdaptedArticle : articles) {","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"Ko-Khan"},"content":"            Article article \u003d jsonAdaptedArticle.toModelType();","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"Ko-Khan"},"content":"            if (articleBook.hasArticle(article)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"Ko-Khan"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_ARTICLE);","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"Ko-Khan"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"Ko-Khan"},"content":"            articleBook.addArticle(article);","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"Ko-Khan"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"Ko-Khan"},"content":"        return articleBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"Ko-Khan"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"Ko-Khan":60}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"Ko-Khan"},"content":"import seedu.address.model.ReadOnlyArticleBook;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"Ko-Khan"},"content":"public interface Storage extends AddressBookStorage, ArticleBookStorage, UserPrefsStorage {","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"Ko-Khan"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"Ko-Khan"},"content":"    Path getArticleBookFilePath();","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"Ko-Khan"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"Ko-Khan"},"content":"    Optional\u003cReadOnlyArticleBook\u003e readArticleBook() throws DataLoadingException;","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"Ko-Khan"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"Ko-Khan"},"content":"    void saveArticleBook(ReadOnlyArticleBook articleBook) throws IOException;","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Ko-Khan":12,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"Ko-Khan"},"content":"import seedu.address.model.ReadOnlyArticleBook;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"Ko-Khan"},"content":" * Manages storage of AddressBook and ArticleBook data in local storage.","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"Ko-Khan"},"content":"    private ArticleBookStorage articleBookStorage;","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"Ko-Khan"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"Ko-Khan"},"content":"     * and {@code ArticleBookStorage}.","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"Ko-Khan"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"Ko-Khan"},"content":"                          ArticleBookStorage articleBookStorage) {","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"Ko-Khan"},"content":"        this.articleBookStorage \u003d articleBookStorage;","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"Ko-Khan"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"Ko-Khan"},"content":"    public Path getArticleBookFilePath() {","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"Ko-Khan"},"content":"        return articleBookStorage.getArticleBookFilePath();","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"Ko-Khan"},"content":"    public Optional\u003cReadOnlyArticleBook\u003e readArticleBook() throws DataLoadingException {","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"Ko-Khan"},"content":"        return readArticleBook(articleBookStorage.getArticleBookFilePath());","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"Ko-Khan"},"content":"     * @see #getArticleBookFilePath()","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"Ko-Khan"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"Ko-Khan"},"content":"    public Optional\u003cReadOnlyArticleBook\u003e readArticleBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"Ko-Khan"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"Ko-Khan"},"content":"        return articleBookStorage.readArticleBook(filePath);","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"Ko-Khan"},"content":"     * Saves the given {@link ReadOnlyArticleBook} to the storage.","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"Ko-Khan"},"content":"     * @param articleBook cannot be null.","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"Ko-Khan"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"Ko-Khan"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"Ko-Khan"},"content":"    public void saveArticleBook(ReadOnlyArticleBook articleBook) throws IOException {","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"Ko-Khan"},"content":"        saveArticleBook(articleBook, articleBookStorage.getArticleBookFilePath());","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"Ko-Khan"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"Ko-Khan"},"content":"     * @see #saveArticleBook(ReadOnlyArticleBook)","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"Ko-Khan"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"Ko-Khan"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"Ko-Khan"},"content":"    public void saveArticleBook(ReadOnlyArticleBook articleBook, Path filePath) throws IOException {","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"Ko-Khan"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"Ko-Khan"},"content":"        articleBookStorage.saveArticleBook(articleBook, filePath);","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"Ko-Khan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"Ko-Khan"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ko-Khan":46,"-":75}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"Ko-Khan"},"content":"import seedu.address.storage.JsonArticleBookStorage;","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"Ko-Khan"},"content":"        JsonArticleBookStorage articleBookStorage \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"Ko-Khan"},"content":"                new JsonArticleBookStorage(temporaryFolder.resolve(\"articleBook.json\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"Ko-Khan"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, articleBookStorage);","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"Ko-Khan"},"content":"        JsonArticleBookStorage articleBookStorage \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":167,"author":{"gitId":"Ko-Khan"},"content":"                new JsonArticleBookStorage(temporaryFolder.resolve(\"articleBook.json\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":168,"author":{"gitId":"Ko-Khan"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, articleBookStorage);","lastModifiedDate":"2024-03-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Ko-Khan":7,"-":173}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"Ko-Khan"},"content":"        JsonArticleBookStorage articleBookStorage \u003d new JsonArticleBookStorage(getTempFilePath(\"artb\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"Ko-Khan"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, articleBookStorage);","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Ko-Khan":2,"-":67}}]
