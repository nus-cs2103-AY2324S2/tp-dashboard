[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gosongying"},"content":"[![Java CI](https://github.com/AY2324S2-CS2103T-W09-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S2-CS2103T-W09-1/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"gosongying"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-W09-1/tp/graph/badge.svg?token\u003dVTN6SDBFUZ)](https://codecov.io/gh/AY2324S2-CS2103T-W09-1/tp)","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"gosongying"},"content":"# HouseKeeping Hub","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"gosongying"},"content":"## Description","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"gosongying"},"content":"HouseKeeping Hub is a desktop app ðŸ’», which aims to transform the management of client relationships within","lastModifiedDate":"2024-03-08"},{"lineNumber":9,"author":{"gitId":"gosongying"},"content":"housekeeping companies. Our system prioritises the storage and organisation of client and housekeeper contacts,","lastModifiedDate":"2024-03-08"},{"lineNumber":10,"author":{"gitId":"gosongying"},"content":"providing unmatched efficiency and convenience for customer service admin. ðŸ‘ŒðŸ‘ŒðŸ‘Œ","lastModifiedDate":"2024-03-08"},{"lineNumber":11,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"gosongying"},"content":"## Usages","lastModifiedDate":"2024-03-08"},{"lineNumber":13,"author":{"gitId":"gosongying"},"content":"* Organising and managing client and housekeeper contact details for your housekeeping company with ease.","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"gosongying"},"content":"* A starting point of a Software Engineering course project (as opposed to writing everything from scratch).","lastModifiedDate":"2024-03-08"},{"lineNumber":15,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"gosongying"},"content":"## Documentation","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"gosongying"},"content":"For comprehensive details about HouseKeeping Hub, please refer to the website","lastModifiedDate":"2024-03-08"},{"lineNumber":18,"author":{"gitId":"gosongying"},"content":"[HouseKeeping Hub](https://ay2324s2-cs2103t-w09-1.github.io/tp/).","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"gosongying"},"content":"## Acknowledgements","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"gosongying"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-08"},{"lineNumber":22,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"gosongying":19,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"mainClassName \u003d \u0027housekeeping.hub.Main\u0027","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"run {","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"LimZiJia"},"content":"run {","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"LimZiJia"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":77,"author":{"gitId":"LimZiJia"},"content":"    archiveBaseName \u003d \"HousekeepingHub\"","lastModifiedDate":"2024-04-05"},{"lineNumber":78,"author":{"gitId":"LimZiJia"},"content":"    archiveVersion \u003d \"v1.3.1\"","lastModifiedDate":"2024-04-05"},{"lineNumber":79,"author":{"gitId":"LimZiJia"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"LimZiJia":12,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"You can reach us at the email `e0960005@comp.nus.edu`","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"### Lim Zi Jia","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"\u003cimg src\u003d\"images/limzijia.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"[[github](https://github.com/limzijia)]","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"* Role: Developer","lastModifiedDate":"2024-03-08"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"* Responsibilities: Testing + logic","lastModifiedDate":"2024-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"### Gerard Jeremiah Matthew","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"\u003cimg src\u003d\"images/gerardjm018.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"[[github](https://github.com/GERARDJM018)]","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"* Role: Developer","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"* Responsibilities: Scheduling and Tracking + Model","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"gosongying"},"content":"### Go Song Ying","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":32,"author":{"gitId":"gosongying"},"content":"\u003cimg src\u003d\"images/gosongying.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":34,"author":{"gitId":"gosongying"},"content":"[[github](https://github.com/gosongying)]","lastModifiedDate":"2024-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2024-03-08"},{"lineNumber":37,"author":{"gitId":"gosongying"},"content":"* Responsibilities: Deliverables and deadlines + UI","lastModifiedDate":"2024-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":39,"author":{"gitId":"moguries"},"content":"### Huang Zhuoyan, Celeste","lastModifiedDate":"2024-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":41,"author":{"gitId":"moguries"},"content":"\u003cimg src\u003d\"images/moguries.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":43,"author":{"gitId":"moguries"},"content":"[[github](https://github.com/moguries)]","lastModifiedDate":"2024-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2024-03-08"},{"lineNumber":46,"author":{"gitId":"moguries"},"content":"* Responsibilities: Code quality and Integration + Storage","lastModifiedDate":"2024-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"LimZiJia":8,"moguries":4,"gosongying":4,"-":29,"GERARDJM018":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"* Our project is forked from [AddressBook-Level3](https://github.com/nus-cs2103-AY2324S2/tp)","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/AY2324S2-CS2103T-W09-1/tp/blob/master/src/main/java/housekeeping/hub/Main.java) and [`MainApp`](https://github.com/AY2324S2-CS2103T-W09-1/tp/blob/master/src/main/java/housekeeping/hub/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2024-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"LimZiJia"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2324S2-CS2103T-W09-1/tp/blob/master/src/main/java/housekeeping/hub/ui/Ui.java)","lastModifiedDate":"2024-04-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"LimZiJia"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2324S2-CS2103T-W09-1/tp/blob/master/src/main/java/housekeeping/hub/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2324S2-CS2103T-W09-1/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2024-04-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"LimZiJia"},"content":"**API** : [`Logic.java`](https://github.com/AY2324S2-CS2103T-W09-1/tp/blob/master/src/main/java/housekeeping/hub/logic/Logic.java)","lastModifiedDate":"2024-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"GERARDJM018"},"content":"Here are other sequence diagram to illustrate the interactions within the `Logic` component, taking `execute(\"list client\")` API call:","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"GERARDJM018"},"content":"![Interactions Inside the Logic Component for the `list client` Command](images/ListSequenceDiagram.png)","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"LimZiJia"},"content":"**API** : [`Model.java`](https://github.com/AY2324S2-CS2103T-W09-1/tp/blob/master/src/main/java/housekeeping/hub/model/Model.java)","lastModifiedDate":"2024-04-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the userâ€™s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"LimZiJia"},"content":"**API** : [`Storage.java`](https://github.com/AY2324S2-CS2103T-W09-1/tp/blob/master/src/main/java/housekeeping/hub/storage/Storage.java)","lastModifiedDate":"2024-04-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"LimZiJia"},"content":"Classes used by multiple components are in the `housekeeping.hub.commons` package.","lastModifiedDate":"2024-04-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"LimZiJia"},"content":"### \\[Completed\\] Generating leads for housekeeping services","lastModifiedDate":"2024-04-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"LimZiJia"},"content":"In an admin operator\u0027s job there is a use case where they need to sort the clients by the predicted next cleaning date.","lastModifiedDate":"2024-04-05"},{"lineNumber":167,"author":{"gitId":"LimZiJia"},"content":"This is useful for the operator to remind the clients to book their next service soon. We have stored this housekeeping information","lastModifiedDate":"2024-04-05"},{"lineNumber":168,"author":{"gitId":"LimZiJia"},"content":"in `HousekeepingDetails` which also supports some other use cases such as the client does not want to be called or would","lastModifiedDate":"2024-04-05"},{"lineNumber":169,"author":{"gitId":"LimZiJia"},"content":"prefer to be called on a later date.","lastModifiedDate":"2024-04-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"LimZiJia"},"content":"#### How it is implemented","lastModifiedDate":"2024-04-05"},{"lineNumber":172,"author":{"gitId":"LimZiJia"},"content":"We assume clients who do not have `HousekeepingDetails` do not want to be disturbed by the housekeeping company.","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"LimZiJia"},"content":"Therefore, the client list should be first filtered by `Client.hasHousekeepingDetais()` then sorted by `HousekeepingDetails`.","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"LimZiJia"},"content":"We will also not show clients who have their predicted next housekeeping date that is after the current date.","lastModifiedDate":"2024-03-31"},{"lineNumber":175,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"LimZiJia"},"content":"To do the sorting, the `Client` class now implements `Comparable\u003cClient\u003e` interface, and the `compareTo()` method is ","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"LimZiJia"},"content":"overridden to compare the `HousekeepingDetails` of two clients.","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"LimZiJia"},"content":"The `compareTo()` method calls the `HousekeepingDetails`\u0027s `compareTo()` method to if both clients have `HousekeepingDetails`.","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"LimZiJia"},"content":"The `compareTo()` method in `HousekeepingDetails` uses the `getNextHousekeepingDate()` method which is calculated by ","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"LimZiJia"},"content":"`lastHousekeepingDate.plus(preferredInterval)`.","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"LimZiJia"},"content":"`ClientComprator` is then used by `FXCollections.sort()` to sort the list of clients. `ClientComparator` compares `Client`s","lastModifiedDate":"2024-04-05"},{"lineNumber":183,"author":{"gitId":"LimZiJia"},"content":"using their `compareTo()` method.","lastModifiedDate":"2024-04-05"},{"lineNumber":184,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":185,"author":{"gitId":"LimZiJia"},"content":"We will also store `bookingDate` if the `Client` already made a booking. This is convenient for the admin to know and prevent","lastModifiedDate":"2024-03-31"},{"lineNumber":186,"author":{"gitId":"LimZiJia"},"content":"calling the client when it is not needed. Furthermore, `deferment` is also stored to know if the client wants to defer the","lastModifiedDate":"2024-03-31"},{"lineNumber":187,"author":{"gitId":"LimZiJia"},"content":"reminder to a later date.","lastModifiedDate":"2024-03-31"},{"lineNumber":188,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":189,"author":{"gitId":"LimZiJia"},"content":"Here is how `HousekeepingDetails` class looks like:\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":190,"author":{"gitId":"LimZiJia"},"content":"![HousekeepingDetailsClassDiagram](images/HousekeepingDetailsClassDiagram.png)","lastModifiedDate":"2024-03-31"},{"lineNumber":191,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":192,"author":{"gitId":"LimZiJia"},"content":"#### Why is it implemented this way","lastModifiedDate":"2024-03-31"},{"lineNumber":193,"author":{"gitId":"LimZiJia"},"content":"There are many considerations in the workflow of generating leads for housekeeping services. The proposed implementation","lastModifiedDate":"2024-03-31"},{"lineNumber":194,"author":{"gitId":"LimZiJia"},"content":"is chosen because it is able to handle a wide range of scenarios that we have considered. For example, `lastHousekeepingDate`","lastModifiedDate":"2024-03-31"},{"lineNumber":195,"author":{"gitId":"LimZiJia"},"content":"and `preferredInterval` are used to calculate the `nextHousekeepingDate`. This is for the convenience of the client as they","lastModifiedDate":"2024-03-31"},{"lineNumber":196,"author":{"gitId":"LimZiJia"},"content":"will only need to state their preference only once (when booking their first service).","lastModifiedDate":"2024-03-31"},{"lineNumber":197,"author":{"gitId":"LimZiJia"},"content":"`preferredInterval` is a natural aspect of housekeeping services and the client should know this at the top of their head","lastModifiedDate":"2024-03-31"},{"lineNumber":198,"author":{"gitId":"LimZiJia"},"content":"instead of concrete dates.","lastModifiedDate":"2024-03-31"},{"lineNumber":199,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":200,"author":{"gitId":"LimZiJia"},"content":"Having a `deferment` attribute is also important as it allows the client to defer the reminder to a later date. This is for","lastModifiedDate":"2024-03-31"},{"lineNumber":201,"author":{"gitId":"LimZiJia"},"content":"client satisfaction as it might not be a good time for housekeeping services when we call to remind them.","lastModifiedDate":"2024-03-31"},{"lineNumber":202,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":203,"author":{"gitId":"LimZiJia"},"content":"#### Alternatives considered","lastModifiedDate":"2024-03-31"},{"lineNumber":204,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":205,"author":{"gitId":"LimZiJia"},"content":"##### Alternative 1","lastModifiedDate":"2024-03-31"},{"lineNumber":206,"author":{"gitId":"LimZiJia"},"content":"Only store `nexthousekeepingDate` and only call to ask the client on the housekeeping date. `nextHousekeepingDate` is maintained by asking the client everytime they have done a housekeeping service.","lastModifiedDate":"2024-03-31"},{"lineNumber":207,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":208,"author":{"gitId":"LimZiJia"},"content":"Pros: Very simple to implement.","lastModifiedDate":"2024-03-31"},{"lineNumber":209,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":210,"author":{"gitId":"LimZiJia"},"content":"Cons: [1] It adds more work for the admin but more importantly the client. This is because an additional call is required after every service.","lastModifiedDate":"2024-03-31"},{"lineNumber":211,"author":{"gitId":"LimZiJia"},"content":"[2] The client may not know an exact date far into the future. If the client is unsure and provide a general period, then we can save the work","lastModifiedDate":"2024-03-31"},{"lineNumber":212,"author":{"gitId":"LimZiJia"},"content":"of calling everytime by using `preferredInterval` as in our proposed implementation. [3] If the admin is sick or busy on `nextHousekeepingDate`, ","lastModifiedDate":"2024-03-31"},{"lineNumber":213,"author":{"gitId":"LimZiJia"},"content":"then the call will be missed altogether.","lastModifiedDate":"2024-03-31"},{"lineNumber":214,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":215,"author":{"gitId":"LimZiJia"},"content":"##### Alternative 2","lastModifiedDate":"2024-03-31"},{"lineNumber":216,"author":{"gitId":"LimZiJia"},"content":"Same as our original implementation but without `deferment`.","lastModifiedDate":"2024-03-31"},{"lineNumber":217,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":218,"author":{"gitId":"LimZiJia"},"content":"Pros: Simpler implementation, less commands for admin to learn.","lastModifiedDate":"2024-03-31"},{"lineNumber":219,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":220,"author":{"gitId":"LimZiJia"},"content":"Cons: [1] Less flexible for the client. The client may not be ready for housekeeping services when we call to remind them.","lastModifiedDate":"2024-03-31"},{"lineNumber":221,"author":{"gitId":"LimZiJia"},"content":"[2] It is possible to deal with this as an admin, but it would be \"hacky\" as the admin would have to edit the `lastHousekeepingDate`.","lastModifiedDate":"2024-03-31"},{"lineNumber":222,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":223,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":224,"author":{"gitId":"LimZiJia"},"content":"A `ClientComparator` is made using the `compareTo()` is then used by `FXCollections.sort()` to sort the list of clients.","lastModifiedDate":"2024-04-05"},{"lineNumber":225,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":226,"author":{"gitId":"GERARDJM018"},"content":"### \\[Completed\\] Find using multiple attributes","lastModifiedDate":"2024-03-29"},{"lineNumber":227,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":228,"author":{"gitId":"GERARDJM018"},"content":"The Find feature has already been developed in AB3. However, it only searches the keywords given in the Name attribute.","lastModifiedDate":"2024-03-29"},{"lineNumber":229,"author":{"gitId":"GERARDJM018"},"content":"To increase the functionality of the feature, we plan to make it accept keywords for multiple attributes (address and","lastModifiedDate":"2024-03-29"},{"lineNumber":230,"author":{"gitId":"GERARDJM018"},"content":"area). This changes will also be used to fulfil one of our user stories (As an Operator, I can retrieve details from ","lastModifiedDate":"2024-03-29"},{"lineNumber":231,"author":{"gitId":"GERARDJM018"},"content":"specified contacts by their name or other criteria. So that I can save a lot of time to find specific clients and ","lastModifiedDate":"2024-03-29"},{"lineNumber":232,"author":{"gitId":"GERARDJM018"},"content":"housekeepers.) which is to increase the efficiency in finding specific Person. ","lastModifiedDate":"2024-03-29"},{"lineNumber":233,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":234,"author":{"gitId":"GERARDJM018"},"content":"#### How the feature is implemented","lastModifiedDate":"2024-03-29"},{"lineNumber":235,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":236,"author":{"gitId":"GERARDJM018"},"content":"The previous Find feature implementation use a predicate specifically for Name attribute ","lastModifiedDate":"2024-03-29"},{"lineNumber":237,"author":{"gitId":"GERARDJM018"},"content":"(NameContainsKeywordsPredicate). To make it able use multiple attributes, we create a new predicate that can be used for ","lastModifiedDate":"2024-03-29"},{"lineNumber":238,"author":{"gitId":"GERARDJM018"},"content":"Name, Address, and Area attributes (ContainsKeywordsPredicate). The new predicate can be used either with keywords for ","lastModifiedDate":"2024-03-29"},{"lineNumber":239,"author":{"gitId":"GERARDJM018"},"content":"one attribute or multiple attributes. It first checks, what attribute keywords are provided by the user. The attributes ","lastModifiedDate":"2024-03-29"},{"lineNumber":240,"author":{"gitId":"GERARDJM018"},"content":"that doesn\u0027t have keywords will automatically true. The attributes that have keywords will be checked using the give ","lastModifiedDate":"2024-03-29"},{"lineNumber":241,"author":{"gitId":"GERARDJM018"},"content":"keywords.","lastModifiedDate":"2024-03-29"},{"lineNumber":242,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":243,"author":{"gitId":"GERARDJM018"},"content":"Here is how the activity diagram looks like:","lastModifiedDate":"2024-03-29"},{"lineNumber":244,"author":{"gitId":"GERARDJM018"},"content":"![FindActivityDiagram](images/FindActivityDiagram.png)","lastModifiedDate":"2024-03-29"},{"lineNumber":245,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":246,"author":{"gitId":"GERARDJM018"},"content":"#### Why is it implemented this way","lastModifiedDate":"2024-03-29"},{"lineNumber":247,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":248,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":249,"author":{"gitId":"GERARDJM018"},"content":"The current implementation was chosen because it can handle multiple attributes at the same time. The other alternatives","lastModifiedDate":"2024-03-29"},{"lineNumber":250,"author":{"gitId":"GERARDJM018"},"content":"we considered can only handle one attribute at the same time or ineffective to makes it able to handle multiple","lastModifiedDate":"2024-03-29"},{"lineNumber":251,"author":{"gitId":"GERARDJM018"},"content":"attributes at the same time (needs multiple predicate and if-else statement consist of 9 conditions). Therefore, we ","lastModifiedDate":"2024-03-29"},{"lineNumber":252,"author":{"gitId":"GERARDJM018"},"content":"chose the current implementation as it more effective than the other alternatives.","lastModifiedDate":"2024-03-29"},{"lineNumber":253,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":254,"author":{"gitId":"GERARDJM018"},"content":"#### Alternatives considered","lastModifiedDate":"2024-03-29"},{"lineNumber":255,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":256,"author":{"gitId":"GERARDJM018"},"content":"##### Alternative 1","lastModifiedDate":"2024-03-29"},{"lineNumber":257,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":258,"author":{"gitId":"GERARDJM018"},"content":"Using multiple predicate for each attribute. This way, the Find feature can handle all the attributes. So, to use the","lastModifiedDate":"2024-03-29"},{"lineNumber":259,"author":{"gitId":"GERARDJM018"},"content":"Find feature, the user needs to give the attribute type of which the keywords will be checked. However, it can only ","lastModifiedDate":"2024-03-29"},{"lineNumber":260,"author":{"gitId":"GERARDJM018"},"content":"handle one attribute at the same time as each FindCommand can only use one predicate. It can be implemented to handle","lastModifiedDate":"2024-03-29"},{"lineNumber":261,"author":{"gitId":"GERARDJM018"},"content":"multiple attributes at the same time using chain test on multiple predicate. However, it is ineffective as it needs to","lastModifiedDate":"2024-03-29"},{"lineNumber":262,"author":{"gitId":"GERARDJM018"},"content":"check multiple situation (use 1 attribute, 2 attributes, or 3 attributes).","lastModifiedDate":"2024-03-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"gosongying"},"content":"### \\[Completed\\] Separate client and housekeeper list","lastModifiedDate":"2024-03-29"},{"lineNumber":265,"author":{"gitId":"gosongying"},"content":"In the previous iteration, both clients and housekeepers were consolidated into a single list, presenting them together.","lastModifiedDate":"2024-03-29"},{"lineNumber":266,"author":{"gitId":"gosongying"},"content":"However, this amalgamation didn\u0027t offer enhanced visualization or convenience for our intended users. Hence, we opted to ","lastModifiedDate":"2024-03-29"},{"lineNumber":267,"author":{"gitId":"gosongying"},"content":"segregate the client and housekeeper lists. This adjustment aims to streamline efficiency for our target users, ","lastModifiedDate":"2024-03-29"},{"lineNumber":268,"author":{"gitId":"gosongying"},"content":"specifically housekeeping company administrators, enabling easier access to clients and assignment of housekeepers.","lastModifiedDate":"2024-03-29"},{"lineNumber":269,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":270,"author":{"gitId":"gosongying"},"content":"#### How the feature is implemented","lastModifiedDate":"2024-03-29"},{"lineNumber":271,"author":{"gitId":"gosongying"},"content":"The `UniquePersonList` class has been transformed into a generic class. Within the `AddressBook` class, two distinct ","lastModifiedDate":"2024-03-29"},{"lineNumber":272,"author":{"gitId":"gosongying"},"content":"lists have been instantiated: one for clients and another for housekeepers. These lists store the respective entities, ","lastModifiedDate":"2024-03-29"},{"lineNumber":273,"author":{"gitId":"gosongying"},"content":"ensuring separation of concerns. Both the saving and loading functionalities now operate independently on these ","lastModifiedDate":"2024-03-29"},{"lineNumber":274,"author":{"gitId":"gosongying"},"content":"segregated lists.","lastModifiedDate":"2024-03-29"},{"lineNumber":275,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":276,"author":{"gitId":"gosongying"},"content":"#### Why is it implemented this way","lastModifiedDate":"2024-03-29"},{"lineNumber":277,"author":{"gitId":"gosongying"},"content":"This approach offers improvements in both efficiency and performance. By separating clients and housekeepers into ","lastModifiedDate":"2024-03-29"},{"lineNumber":278,"author":{"gitId":"gosongying"},"content":"distinct lists, interactions between these entities are minimized. This segregation enhances organization and simplifies","lastModifiedDate":"2024-03-29"},{"lineNumber":279,"author":{"gitId":"gosongying"},"content":"maintenance of the system, as each list can be managed independently without impacting the other.","lastModifiedDate":"2024-03-29"},{"lineNumber":280,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":281,"author":{"gitId":"gosongying"},"content":"#### Alternatives considered","lastModifiedDate":"2024-03-29"},{"lineNumber":282,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":283,"author":{"gitId":"gosongying"},"content":"##### Alternative 1","lastModifiedDate":"2024-03-29"},{"lineNumber":284,"author":{"gitId":"gosongying"},"content":"Store clients and housekeepers together in a single list on the hard disk, they are separated upon application startup. ","lastModifiedDate":"2024-03-29"},{"lineNumber":285,"author":{"gitId":"gosongying"},"content":"Although this method is functional, it introduces overhead by requiring filtering of the single list to achieve ","lastModifiedDate":"2024-03-29"},{"lineNumber":286,"author":{"gitId":"gosongying"},"content":"eparation, potentially impacting performance negatively. Furthermore, the code complexity increases as it must handle ","lastModifiedDate":"2024-03-29"},{"lineNumber":287,"author":{"gitId":"gosongying"},"content":"the filtering process, making maintenance more challenging.","lastModifiedDate":"2024-03-29"},{"lineNumber":288,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":289,"author":{"gitId":"gosongying"},"content":"### \\[Completed\\] Delete feature with Type","lastModifiedDate":"2024-03-29"},{"lineNumber":290,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":291,"author":{"gitId":"gosongying"},"content":"In the previous iteration, both clients and housekeepers were contained within a singular list, limiting the delete ","lastModifiedDate":"2024-03-29"},{"lineNumber":292,"author":{"gitId":"gosongying"},"content":"functionality to operate solely within this unified list. In the current iteration, we\u0027ve segregated these entities into ","lastModifiedDate":"2024-03-29"},{"lineNumber":293,"author":{"gitId":"gosongying"},"content":"distinct listsâ€”one for clients and another for housekeepers. Consequently, we\u0027ve introduced an updated Delete feature ","lastModifiedDate":"2024-03-29"},{"lineNumber":294,"author":{"gitId":"gosongying"},"content":"capable of removing entries from either of these individual lists.","lastModifiedDate":"2024-03-29"},{"lineNumber":295,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":296,"author":{"gitId":"gosongying"},"content":"#### How the feature is implemented","lastModifiedDate":"2024-03-29"},{"lineNumber":297,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":298,"author":{"gitId":"gosongying"},"content":"Two subclasses, namely `DeleteClientCommand` and `DeleteHousekeeperCommand`, have been developed as subclasses of the ","lastModifiedDate":"2024-03-29"},{"lineNumber":299,"author":{"gitId":"gosongying"},"content":"abstract class `DeleteCommand`. Each subclass is designed to operate on its respective list. During parsing, the system ","lastModifiedDate":"2024-03-29"},{"lineNumber":300,"author":{"gitId":"gosongying"},"content":"now evaluates the type specified within the Delete command entered by the user. If the type is identified as \"client\", ","lastModifiedDate":"2024-03-29"},{"lineNumber":301,"author":{"gitId":"gosongying"},"content":"the parser returns a `DeleteClientCommand`, enabling deletion of the client identified by the index within the client ","lastModifiedDate":"2024-03-29"},{"lineNumber":302,"author":{"gitId":"gosongying"},"content":"list. Conversely, if the type is recognized as \"housekeeper\", a `DeleteHousekeeperCommand` is utilized to remove the ","lastModifiedDate":"2024-03-29"},{"lineNumber":303,"author":{"gitId":"gosongying"},"content":"housekeeper at the specified index within the housekeeper list.","lastModifiedDate":"2024-03-29"},{"lineNumber":304,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":305,"author":{"gitId":"gosongying"},"content":"Here is how the activity diagram looks like: \u003cbr\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":306,"author":{"gitId":"gosongying"},"content":"![DeleteActivityDiagram](images/DeleteActivityDiagram.png)","lastModifiedDate":"2024-03-29"},{"lineNumber":307,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":308,"author":{"gitId":"gosongying"},"content":"#### Why is it implemented this way","lastModifiedDate":"2024-03-29"},{"lineNumber":309,"author":{"gitId":"gosongying"},"content":"The existing implementation now employs two distinct subclasses: `DeleteClientCommand` and `DeleteHousekeeperCommand`, ","lastModifiedDate":"2024-03-29"},{"lineNumber":310,"author":{"gitId":"gosongying"},"content":"each tailored for deleting entries from their respective lists. By segregating these functionalities into separate ","lastModifiedDate":"2024-03-29"},{"lineNumber":311,"author":{"gitId":"gosongying"},"content":"classes, the code adheres more closely to object-oriented programming (OOP) principles, enhancing clarity and ","lastModifiedDate":"2024-03-29"},{"lineNumber":312,"author":{"gitId":"gosongying"},"content":"maintainability. This approach ensures that each command operates distinctly on its designated list, promoting a more ","lastModifiedDate":"2024-03-29"},{"lineNumber":313,"author":{"gitId":"gosongying"},"content":"organized and modular codebase.","lastModifiedDate":"2024-03-29"},{"lineNumber":314,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":315,"author":{"gitId":"gosongying"},"content":"#### Alternatives considered","lastModifiedDate":"2024-03-29"},{"lineNumber":316,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":317,"author":{"gitId":"gosongying"},"content":"##### Alternative 1","lastModifiedDate":"2024-03-29"},{"lineNumber":318,"author":{"gitId":"gosongying"},"content":"Introducing a new attribute, \"Type\", within the `DeleteCommand` class may effectively accomplish the task at hand; ","lastModifiedDate":"2024-03-29"},{"lineNumber":319,"author":{"gitId":"gosongying"},"content":"however, it also brings the drawback of potentially increasing the number of conditional statements, which could degrade ","lastModifiedDate":"2024-03-29"},{"lineNumber":320,"author":{"gitId":"gosongying"},"content":"readability and maintainability. Moreover, the internal nature of the \"Type\" attribute might obscure its purpose to ","lastModifiedDate":"2024-03-29"},{"lineNumber":321,"author":{"gitId":"gosongying"},"content":"developers, leading to confusion.","lastModifiedDate":"2024-03-29"},{"lineNumber":322,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":323,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2024-04-05"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":325,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2024-04-05"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":327,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2024-04-05"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":329,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()`â€‰â€”â€‰Saves the current address book state in its history.","lastModifiedDate":"2024-04-05"},{"lineNumber":330,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()`â€‰â€”â€‰Restores the previous address book state from its history.","lastModifiedDate":"2024-04-05"},{"lineNumber":331,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()`â€‰â€”â€‰Restores a previously undone address book state from its history.","lastModifiedDate":"2024-04-05"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":333,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2024-04-05"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":335,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2024-04-05"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":337,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2024-04-05"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":339,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2024-04-05"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":341,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2024-04-05"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":343,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2024-04-05"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":345,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David â€¦â€‹` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2024-04-05"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":347,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2024-04-05"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":349,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2024-04-05"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":351,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":353,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2024-04-05"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":355,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2024-04-05"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":357,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2024-04-05"},{"lineNumber":358,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2024-04-05"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":360,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":362,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-04-05"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":364,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-04-05"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":366,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2024-04-05"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":368,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":370,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-04-05"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":372,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-04-05"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":374,"author":{"gitId":"-"},"content":"The `redo` command does the oppositeâ€‰â€”â€‰it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2024-04-05"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":376,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2024-04-05"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":378,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":380,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2024-04-05"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":382,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2024-04-05"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":384,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David â€¦â€‹` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2024-04-05"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":386,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2024-04-05"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":388,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2024-04-05"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":390,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":392,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2024-04-05"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":394,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2024-04-05"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":396,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2024-04-05"},{"lineNumber":397,"author":{"gitId":"LimZiJia"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2024-04-05"},{"lineNumber":398,"author":{"gitId":"LimZiJia"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2024-04-05"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":400,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2024-04-05"},{"lineNumber":401,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2024-04-05"},{"lineNumber":402,"author":{"gitId":"LimZiJia"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2024-04-05"},{"lineNumber":403,"author":{"gitId":"LimZiJia"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2024-04-05"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":405,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":410,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":411,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":412,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":413,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"LimZiJia"},"content":"* is a busy operator of a housekeeping company","lastModifiedDate":"2024-03-06"},{"lineNumber":424,"author":{"gitId":"LimZiJia"},"content":"* makes and receives calls to clients/housekeepers","lastModifiedDate":"2024-03-06"},{"lineNumber":425,"author":{"gitId":"LimZiJia"},"content":"* is responsible for managing a team of housekeepers","lastModifiedDate":"2024-03-06"},{"lineNumber":426,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":429,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"LimZiJia"},"content":"* works alone","lastModifiedDate":"2024-03-06"},{"lineNumber":431,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":432,"author":{"gitId":"LimZiJia"},"content":"**Value proposition**: HouseKeeping Hub is designed to revolutionise the way housekeeping companies manage their client relationships. By focusing on storing and organising client and housekeeper contacts, our system offers unparalleled efficiency and convenience for housekeeping customer service admins, leading to improved service delivery and customer satisfaction.","lastModifiedDate":"2024-03-06"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"LimZiJia"},"content":"| Priority | As a/an â€¦â€‹              | I can â€¦â€‹                                                                 | So that â€¦â€‹                                                                        |","lastModifiedDate":"2024-03-06"},{"lineNumber":441,"author":{"gitId":"LimZiJia"},"content":"|----------|-------------------------|--------------------------------------------------------------------------|-----------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-06"},{"lineNumber":442,"author":{"gitId":"LimZiJia"},"content":"| `* * *`  | operator                | view the list of contacts                                                | I can manage calling them if I have to.                                           |","lastModifiedDate":"2024-03-06"},{"lineNumber":443,"author":{"gitId":"LimZiJia"},"content":"| `* * *`  | operator                | load contacts from a saved file                                          | I can maintain my contact list.                                                   |","lastModifiedDate":"2024-03-06"},{"lineNumber":444,"author":{"gitId":"LimZiJia"},"content":"| `* * *`  | operator                | add/save the details of a new client/housekeeper                         | I can keep track of the list of the client/housekeeper.                           |","lastModifiedDate":"2024-03-06"},{"lineNumber":445,"author":{"gitId":"LimZiJia"},"content":"| `* * *`  | operator                | remove the contact of clients/housekeepers by some criteria              | I can maintain a up-to-date and organised contact list.                           |","lastModifiedDate":"2024-03-06"},{"lineNumber":446,"author":{"gitId":"LimZiJia"},"content":"| `* *`    | operator                | update a client/housekeeper\u0027s information                                | I will not get details wrong even if they change.                                 |","lastModifiedDate":"2024-03-06"},{"lineNumber":447,"author":{"gitId":"LimZiJia"},"content":"| `* *`    | operator                | remove the whole contact list with one click                             | I can remove all dummy data that I have added for trial.                          |","lastModifiedDate":"2024-03-06"},{"lineNumber":448,"author":{"gitId":"LimZiJia"},"content":"| `* *`    | operator                | retrieve details from specified contacts by their name or other criteria | I can save a lot of time to find specific clients and housekeepers.               |","lastModifiedDate":"2024-03-06"},{"lineNumber":449,"author":{"gitId":"LimZiJia"},"content":"| `* *`    | operator                | check if clients that want a cleaning                                    | I can provide timely housekeeping services and get more revenue for the business. |","lastModifiedDate":"2024-03-06"},{"lineNumber":450,"author":{"gitId":"LimZiJia"},"content":"| `* *`    | careless operator       | undo any accidental deletion or change made to the contact list          | I will not mess the contact list up.                                              |","lastModifiedDate":"2024-03-06"},{"lineNumber":451,"author":{"gitId":"LimZiJia"},"content":"| `* *`    | operator                | check the preferred housekeeper and their availability                   | I can inform the client whether the service could be operated or no.              |","lastModifiedDate":"2024-03-06"},{"lineNumber":452,"author":{"gitId":"LimZiJia"},"content":"| `* *`    | operator                | retrieve details of a scheduled service                                  | I can rectify on the ground situations.                                           |","lastModifiedDate":"2024-03-06"},{"lineNumber":453,"author":{"gitId":"LimZiJia"},"content":"| `* *`    | operator                | check if a housekeeper is available                                      | I can schedule for cleaning in emergency scenarios.                               |","lastModifiedDate":"2024-03-06"},{"lineNumber":454,"author":{"gitId":"LimZiJia"},"content":"| `* *`    | fast-typing operator    | quickly type CLI commands                                                | I can perform my task efficiently.                                                |","lastModifiedDate":"2024-03-06"},{"lineNumber":455,"author":{"gitId":"LimZiJia"},"content":"| `* *`    | novice operator         | use the easy-to-remember and well defined commands                       | I can adapt to the role of the operator quickly.                                  |","lastModifiedDate":"2024-03-06"},{"lineNumber":456,"author":{"gitId":"LimZiJia"},"content":"| `* *`    | operator                | access to the contact list from different devices or platforms           | I can manage the contact list on-the-go.                                          |","lastModifiedDate":"2024-03-06"},{"lineNumber":457,"author":{"gitId":"LimZiJia"},"content":"| `* *`    | novice operator         | query for a help list of commands and how to use them                    | I can learn the functionalities of the app quickly.                               |","lastModifiedDate":"2024-03-06"},{"lineNumber":458,"author":{"gitId":"LimZiJia"},"content":"| `* *`    | impatient operator      | the command to response quickly                                          | I can finish my job fast.                                                         |","lastModifiedDate":"2024-03-06"},{"lineNumber":459,"author":{"gitId":"LimZiJia"},"content":"| `* *`    | operator                | diffrentiate between the clients and housekeeper data                    | I will not be confused by the data.                                               |","lastModifiedDate":"2024-03-06"},{"lineNumber":460,"author":{"gitId":"LimZiJia"},"content":"| `* *`    | large company operator  | to be able to save more than 1000 client\u0027s data/contact                  | I can list all the company\u0027s client.                                              |","lastModifiedDate":"2024-03-06"},{"lineNumber":461,"author":{"gitId":"LimZiJia"},"content":"| `* *`    | operator                | the company clients\u0027 data safe                                           | the clients can feel assured to give us their data.                               |","lastModifiedDate":"2024-03-06"},{"lineNumber":462,"author":{"gitId":"LimZiJia"},"content":"| `* *`    | not tech savvy operator | the program to be easy to use                                            | I don\u0027t need extra time to study how to use the program.                          |","lastModifiedDate":"2024-03-06"},{"lineNumber":463,"author":{"gitId":"LimZiJia"},"content":"| `* *`    | operator                | search and retrieve information quickly                                  | I can relay information in real time.                                             |","lastModifiedDate":"2024-03-06"},{"lineNumber":464,"author":{"gitId":"LimZiJia"},"content":"| `* *`    | operator                | Save housekeeping session details                                        | I can prove a housekeeper has done the job.                                       |","lastModifiedDate":"2024-03-06"},{"lineNumber":465,"author":{"gitId":"LimZiJia"},"content":"| `* *`    | operator                | sort the contact list by days to next preferred cleaning date            | I can remind clients to book their next service soon.                             |","lastModifiedDate":"2024-03-06"},{"lineNumber":466,"author":{"gitId":"LimZiJia"},"content":"| `* *`    | operator                | sort the contact list by some parameters                                 | I can have a better visualisation of the data.                                    |","lastModifiedDate":"2024-03-06"},{"lineNumber":467,"author":{"gitId":"LimZiJia"},"content":"| `* *`    | operator                | filter for housekeepers from some parameters                             | it is easier for me to schedule appointments.                                     |","lastModifiedDate":"2024-03-06"},{"lineNumber":468,"author":{"gitId":"LimZiJia"},"content":"| `*`      | forgetful operator      | add tags to contacts                                                     | I can make notes on what I want to do with the contact.                           |","lastModifiedDate":"2024-03-06"},{"lineNumber":469,"author":{"gitId":"LimZiJia"},"content":"| `*`      | operator                | import a contact list from an external file                              | I can easily transform existing contact information from other sources.           |","lastModifiedDate":"2024-03-06"},{"lineNumber":470,"author":{"gitId":"LimZiJia"},"content":"| `*`      | Anxious Operator        | the program to have auto-save function                                   | I can feel assured if anything happen to my device.                               |","lastModifiedDate":"2024-03-06"},{"lineNumber":471,"author":{"gitId":"LimZiJia"},"content":"| `*`      | Expert CLI user         | Define my own command aliases                                            | I can better optimise the speed of my work.                                       |","lastModifiedDate":"2024-03-06"},{"lineNumber":472,"author":{"gitId":"LimZiJia"},"content":"| `*`      | operator                | Add multiple of each action at once                                      | I can improve my work flow.                                                       |","lastModifiedDate":"2024-03-06"},{"lineNumber":473,"author":{"gitId":"LimZiJia"},"content":"| `*`      | operator                | group clients/housekeepers by certain features (area)                    | I can organise the data better and make better client-housekeeper matches.        |","lastModifiedDate":"2024-03-06"},{"lineNumber":474,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"moguries"},"content":"(For all use cases below, the **System** is the `HouseKeeping Hub` and the **Actor** is the `operator`, unless specified otherwise)","lastModifiedDate":"2024-03-07"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"moguries"},"content":"Preconditions: Operator is logged in.","lastModifiedDate":"2024-03-07"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":483,"author":{"gitId":"moguries"},"content":"**Use case: UC01 - List clients**","lastModifiedDate":"2024-03-07"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":485,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":487,"author":{"gitId":"moguries"},"content":"1. Operator requests to list clients","lastModifiedDate":"2024-03-07"},{"lineNumber":488,"author":{"gitId":"moguries"},"content":"2. HouseKeeping Hub shows the list of clients","lastModifiedDate":"2024-03-07"},{"lineNumber":489,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":490,"author":{"gitId":"moguries"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":491,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":492,"author":{"gitId":"moguries"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":493,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":494,"author":{"gitId":"moguries"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-07"},{"lineNumber":495,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":496,"author":{"gitId":"moguries"},"content":"  * 2a1. HouseKeeping Hub shows a message that the list is empty.","lastModifiedDate":"2024-03-07"},{"lineNumber":497,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":498,"author":{"gitId":"moguries"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":499,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":500,"author":{"gitId":"moguries"},"content":"**Use case: UC02 - List housekeepers**","lastModifiedDate":"2024-03-07"},{"lineNumber":501,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":502,"author":{"gitId":"moguries"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":503,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":504,"author":{"gitId":"moguries"},"content":"1. Operator requests to list housekeepers","lastModifiedDate":"2024-03-07"},{"lineNumber":505,"author":{"gitId":"moguries"},"content":"2. HouseKeeping Hub shows the list of housekeepers","lastModifiedDate":"2024-03-07"},{"lineNumber":506,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":507,"author":{"gitId":"moguries"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":508,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":509,"author":{"gitId":"moguries"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":510,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":511,"author":{"gitId":"moguries"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-07"},{"lineNumber":512,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":513,"author":{"gitId":"moguries"},"content":"    * 2a1. HouseKeeping Hub shows a message that the list is empty.","lastModifiedDate":"2024-03-07"},{"lineNumber":514,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":515,"author":{"gitId":"moguries"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":516,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":517,"author":{"gitId":"moguries"},"content":"**Use case: UC03 - Add client**","lastModifiedDate":"2024-03-07"},{"lineNumber":518,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":519,"author":{"gitId":"moguries"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":520,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":521,"author":{"gitId":"moguries"},"content":"1. Operator requests to add a client","lastModifiedDate":"2024-03-07"},{"lineNumber":522,"author":{"gitId":"moguries"},"content":"2. HouseKeeping Hub adds the client","lastModifiedDate":"2024-03-07"},{"lineNumber":523,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":524,"author":{"gitId":"moguries"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":525,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":526,"author":{"gitId":"moguries"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":527,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":528,"author":{"gitId":"moguries"},"content":"* 1a. An [/argument] is spelled incorrectly.","lastModifiedDate":"2024-03-07"},{"lineNumber":529,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":530,"author":{"gitId":"moguries"},"content":"    * 1a1. HouseKeeping Hub shows an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":531,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":532,"author":{"gitId":"moguries"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":533,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":534,"author":{"gitId":"moguries"},"content":"* 1a. A given argument is invalid.","lastModifiedDate":"2024-03-07"},{"lineNumber":535,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":536,"author":{"gitId":"moguries"},"content":"    * 1a1. HouseKeeping Hub shows an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":537,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":538,"author":{"gitId":"moguries"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":539,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":540,"author":{"gitId":"moguries"},"content":"**Use case: UC04 - Add housekeeper**","lastModifiedDate":"2024-03-07"},{"lineNumber":541,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":542,"author":{"gitId":"moguries"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":543,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":544,"author":{"gitId":"moguries"},"content":"1. Operator requests to add a housekeeper","lastModifiedDate":"2024-03-07"},{"lineNumber":545,"author":{"gitId":"moguries"},"content":"2. HouseKeeping Hub adds the housekeeper","lastModifiedDate":"2024-03-07"},{"lineNumber":546,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":547,"author":{"gitId":"moguries"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":548,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":549,"author":{"gitId":"moguries"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":550,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":551,"author":{"gitId":"moguries"},"content":"* 1a. An [/argument] is spelled incorrectly.","lastModifiedDate":"2024-03-07"},{"lineNumber":552,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":553,"author":{"gitId":"moguries"},"content":"    * 1a1. HouseKeeping Hub shows an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":554,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":555,"author":{"gitId":"moguries"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":556,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":557,"author":{"gitId":"moguries"},"content":"* 1a. A given argument is invalid.","lastModifiedDate":"2024-03-07"},{"lineNumber":558,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":559,"author":{"gitId":"moguries"},"content":"    * 1a1. HouseKeeping Hub shows an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":560,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":561,"author":{"gitId":"moguries"},"content":"      Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":562,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":563,"author":{"gitId":"moguries"},"content":"**Use case: UC05 - Delete client**","lastModifiedDate":"2024-03-07"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"moguries"},"content":"1.  Operator requests to list clients","lastModifiedDate":"2024-03-07"},{"lineNumber":568,"author":{"gitId":"moguries"},"content":"2.  HouseKeeping Hub shows the list of clients","lastModifiedDate":"2024-03-07"},{"lineNumber":569,"author":{"gitId":"moguries"},"content":"3.  Operator requests to delete a specific client in the list","lastModifiedDate":"2024-03-07"},{"lineNumber":570,"author":{"gitId":"moguries"},"content":"4.  HouseKeeping Hub deletes the client","lastModifiedDate":"2024-03-07"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"moguries"},"content":"    * 3a1. HouseKeeping Hub shows an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"moguries"},"content":"**Use case: UC06 - Delete housekeeper**","lastModifiedDate":"2024-03-07"},{"lineNumber":587,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":588,"author":{"gitId":"moguries"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":589,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":590,"author":{"gitId":"moguries"},"content":"1.  Operator requests to list housekeepers","lastModifiedDate":"2024-03-07"},{"lineNumber":591,"author":{"gitId":"moguries"},"content":"2.  HouseKeeping Hub shows the list of housekeepers","lastModifiedDate":"2024-03-07"},{"lineNumber":592,"author":{"gitId":"moguries"},"content":"3.  Operator requests to delete a specific housekeeper in the list","lastModifiedDate":"2024-03-07"},{"lineNumber":593,"author":{"gitId":"moguries"},"content":"4.  HouseKeeping Hub deletes the housekeeper","lastModifiedDate":"2024-03-07"},{"lineNumber":594,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":595,"author":{"gitId":"moguries"},"content":"    Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":596,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":597,"author":{"gitId":"moguries"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":598,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":599,"author":{"gitId":"moguries"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-07"},{"lineNumber":600,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":601,"author":{"gitId":"moguries"},"content":"  Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":602,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":603,"author":{"gitId":"moguries"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2024-03-07"},{"lineNumber":604,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":605,"author":{"gitId":"moguries"},"content":"    * 3a1. HouseKeeping Hub shows an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":606,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":607,"author":{"gitId":"moguries"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-07"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"GERARDJM018"},"content":"2.  Should be able to hold up to 1000 contacts without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-03-07"},{"lineNumber":613,"author":{"gitId":"GERARDJM018"},"content":"3.  A user not familiar with CLI but has an above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2024-03-07"},{"lineNumber":614,"author":{"gitId":"GERARDJM018"},"content":"4.  All user operations should completed within 3 seconds.","lastModifiedDate":"2024-03-07"},{"lineNumber":615,"author":{"gitId":"GERARDJM018"},"content":"5.  Should lose no more than 2 user operations worth of work in case of system crash.","lastModifiedDate":"2024-03-07"},{"lineNumber":616,"author":{"gitId":"GERARDJM018"},"content":"6.  Should not take memory more than 200 MB while in operation.","lastModifiedDate":"2024-03-07"},{"lineNumber":617,"author":{"gitId":"GERARDJM018"},"content":"7.  Will not use a DataBase Management System e.g., MySQL, and PostgreSQL to store data. And hence, will use flat file as a storage.","lastModifiedDate":"2024-03-07"},{"lineNumber":618,"author":{"gitId":"GERARDJM018"},"content":"8.  Should be portable (able to work without requiring an installer).","lastModifiedDate":"2024-03-07"},{"lineNumber":619,"author":{"gitId":"GERARDJM018"},"content":"9.  Should not use or depend on a remote server.","lastModifiedDate":"2024-03-07"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":624,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"LimZiJia"},"content":"* **CLI**: Short for Command Line Interface. User\u0027s of our application mainly interact with our program by typing commands.","lastModifiedDate":"2024-03-06"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"LimZiJia"},"content":"1. Deleting a person while all clients/housekeepers are being shown","lastModifiedDate":"2024-04-05"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"LimZiJia"},"content":"   1. Prerequisites: List all persons using the `list client` or `list housekeeper` command. Multiple persons in the list.","lastModifiedDate":"2024-04-05"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"LimZiJia"},"content":"   1. Test case: `delete client 1` or `delete housekeeper 1`\u003cbr\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":661,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"LimZiJia"},"content":"   1. Test case: `delete client 0` or `delete housekeeper 0`\u003cbr\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":664,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"LimZiJia"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `delete housekeeper y`, `...` (where x is not a valid type and y is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":667,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"LimZiJia"},"content":"   1. To simulate this, delete the data file `addressbook.json` or make it unreadable.","lastModifiedDate":"2024-04-05"},{"lineNumber":675,"author":{"gitId":"LimZiJia"},"content":"   2. If you want to refresh the data file, you can delete `addressbook.json` and restart the app.","lastModifiedDate":"2024-04-05"},{"lineNumber":676,"author":{"gitId":"LimZiJia"},"content":"   3. If you want to recover the data, study the `addressbook.json` file format and manually edit it.","lastModifiedDate":"2024-04-05"},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"LimZiJia":125,"moguries":107,"gosongying":58,"-":338,"GERARDJM018":49}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"   1. Run the `housekeeping.hub.Main` and try a few commands.","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBookâ€™s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"LimZiJia":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"   e.g. `housekeeping.hub.commons.StringUtilTest`","lastModifiedDate":"2024-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"   e.g. `housekeeping.hub.storage.StorageManagerTest`","lastModifiedDate":"2024-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"   e.g. `housekeeping.hub.logic.LogicManagerTest`","lastModifiedDate":"2024-04-05"}],"authorContributionMap":{"LimZiJia":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"moguries"},"content":"title: Housekeeping Hub User Guide","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"Welcome to HouseKeeping Hub, the premier **desktop solution for managing client and housekeeper contacts**. ","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"Combining the **efficiency of a Command Line Interface ([CLI](#cli)) with the convenience of a Graphical User Interface ([GUI](#gui))**,","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"HouseKeeping Hub offers unparalleled speed and ease of use. Whether you\u0027re a typist or a clicker, ","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"HouseKeeping Hub ensures swift completion of all your contact management tasks. ","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"Bid farewell to the sluggishness of traditional GUI apps - with HouseKeeping Hub, managing your contacts has never been faster or simpler.","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"## Table of Contents","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"## Purpose of this guide","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"This guide has been created to help you understand and utilize the features and functionalities of our software","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":" effectively. Whether you\u0027re a new user who is not familiar with command line interface or an expert looking to enhance ","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":"your skills, this guide aims to provide you with the information you need to make the most of our product. In this guide ","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"you will find a quick start (guide to install and start using our product), a list of features and how to use them, and ","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"a glossary to help you understand some jargon. This guide is designed to provide you with clear and concise instructions ","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"and a reader-friendly format to enhance your experience in using our product.","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"[:arrow_up_small:](#table-of-contents)","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"## How to use this guide:question:","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"moguries"},"content":"Let\u0027s get started! Here\u0027s a rundown of every section in this guide:","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"moguries"},"content":"If you have yet to install Housekeeping Hub, you can refer to the [installation instructions](#installation).","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"moguries"},"content":"After installing the application, you can start off by following our [tutorial](#tutorial) to familiarise yourself","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"moguries"},"content":"with the basic features of the app.","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"moguries"},"content":"The [features](#features) section provides the detailed overview of each command, command formats and examples.","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"moguries"},"content":"If you\u0027d like a quick reference of all available commands, check out the [command summary](#command-summary).","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"moguries"},"content":"You can head over to the [Frequently Asked Questions](#faq) section to view answers to common queries regarding the app.","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"moguries"},"content":"Finally, we have the [glossary](#glossary) section to clarify any technical jargon used.","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"moguries"},"content":"Now you have successfully mastered how to use this guide! One last thing: learn how to **navigate the guide**","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"moguries"},"content":"in the section below.","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"LimZiJia"},"content":"[:arrow_up_small:](#table-of-contents)","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"LimZiJia"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"LimZiJia"},"content":"## Navigating our guide :mag:","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"moguries"},"content":"Words highlighted in blue in our guide can direct you to a specific section in our guide ([FAQ](#faq)), ","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"LimZiJia"},"content":"an external link ([download link](https://github.com/AY2324S2-CS2103T-W09-1/tp/releases)), or to an explanation of a term in the glossary ([CLI](#cli)).","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"LimZiJia"},"content":"There will be [:arrow_up_small:](#table-of-contents) links, which you can click on to return to the table of contents.","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"LimZiJia"},"content":"[:arrow_up_small:](#table-of-contents)","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"LimZiJia"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"LimZiJia"},"content":"## Installation :computer:","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"moguries"},"content":"\u003ca id\u003d\"installation\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"LimZiJia"},"content":"1. Download the latest `HousekeepingHub-v1.3.1.jar` from [here](https://github.com/AY2324S2-CS2103T-W09-1/tp/releases).","lastModifiedDate":"2024-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"gosongying"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your HouseKeeping Hub.","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"moguries"},"content":"1. Open a [command terminal](#terminal), and type in `cd` to navigate into the folder you placed the [jar](#jar) file in.","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"LimZiJia"},"content":"1. Type in `java -jar HousekeepingHub-v1.3.1.jar` to run the application.\u003cbr\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":77,"author":{"gitId":"gosongying"},"content":"   ![Ui](./images/Ui.png)","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"LimZiJia"},"content":"[:arrow_up_small:](#table-of-contents)","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"LimZiJia"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"moguries"},"content":"## Tutorial","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"moguries"},"content":"\u003ca id\u003d\"tutorial\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"LimZiJia"},"content":"   * `list client` : Lists all client contacts.","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"LimZiJia"},"content":"   * `add housekeeper n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 ar/west` : Adds a housekeeper named `John Doe`.","lastModifiedDate":"2024-04-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"LimZiJia"},"content":"   * `delete client 3` : Deletes the 3rd contact shown in the last shown list.","lastModifiedDate":"2024-04-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"LimZiJia"},"content":"[:arrow_up_small:](#table-of-contents)","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"moguries"},"content":"\u003ca id\u003d\"features\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"* Items with `â€¦`â€‹ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]â€¦â€‹` can be used as `Â ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"LimZiJia"},"content":"[:arrow_up_small:](#table-of-contents)","lastModifiedDate":"2024-04-04"},{"lineNumber":131,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":132,"author":{"gitId":"LimZiJia"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":133,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"gosongying"},"content":"![help message](./images/helpMessage.png)","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"LimZiJia"},"content":"[:arrow_up_small:](#table-of-contents)","lastModifiedDate":"2024-04-04"},{"lineNumber":143,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":144,"author":{"gitId":"LimZiJia"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"LimZiJia"},"content":"Adds a client or housekeeper to Housekeeping Hub.","lastModifiedDate":"2024-04-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"LimZiJia"},"content":"Format: `add TYPE n/NAME e/EMAIL p/PHONE_NUMBER a/ADDRESS ar/AREA [d/DETAILS] [t/TAG]â€¦â€‹`","lastModifiedDate":"2024-04-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":152,"author":{"gitId":"LimZiJia"},"content":"Notes: ","lastModifiedDate":"2024-04-04"},{"lineNumber":153,"author":{"gitId":"LimZiJia"},"content":"* `TYPE` can be either \u0027client\u0027 or \u0027housekeeper\u0027.","lastModifiedDate":"2024-04-04"},{"lineNumber":154,"author":{"gitId":"GERARDJM018"},"content":"* `AREA` can be either \u0027east\u0027, \u0027southeast\u0027, \u0027south\u0027, \u0027southwest\u0027, \u0027west\u0027, \u0027northwest\u0027, \u0027north\u0027, or \u0027northeast\u0027.","lastModifiedDate":"2024-04-04"},{"lineNumber":155,"author":{"gitId":"LimZiJia"},"content":"* `DETAILS` is optional and refers to the housekeeping details for CLIENT ONLY. It is not applicable for housekeepers.","lastModifiedDate":"2024-04-04"},{"lineNumber":156,"author":{"gitId":"LimZiJia"},"content":"The format for `DETAILS` is `d/yyyy-MM-dd NUMBER INTERVAL` where `yyyy-MM-dd` is the date of the last","lastModifiedDate":"2024-04-04"},{"lineNumber":157,"author":{"gitId":"LimZiJia"},"content":"housekeeping, `NUMBER` is the quantity of `INTERVAL`(s) which can be ***\u0027days\u0027, \u0027weeks\u0027, \u0027months\u0027 or \u0027years\u0027.***","lastModifiedDate":"2024-04-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"LimZiJia"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2024-04-04"},{"lineNumber":164,"author":{"gitId":"LimZiJia"},"content":"Housekeeping details of the client can be modified using the `booking` command. Without housekeeping details,","lastModifiedDate":"2024-04-04"},{"lineNumber":165,"author":{"gitId":"LimZiJia"},"content":"the customer is assumed to not want notifications for housekeeping. Therefore, `leads` will not include clients without housekeeping details.","lastModifiedDate":"2024-04-04"},{"lineNumber":166,"author":{"gitId":"LimZiJia"},"content":"To set or remove housekeeping details after initiation, refer to `set` and `remove` under `booking` below.","lastModifiedDate":"2024-04-04"},{"lineNumber":167,"author":{"gitId":"LimZiJia"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":168,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"GERARDJM018"},"content":"* `add client n/Elon e/elon@gmail.com p/088888888 a/Elon Street, Block 123, 101010 Singapore ar/west`","lastModifiedDate":"2024-04-04"},{"lineNumber":171,"author":{"gitId":"GERARDJM018"},"content":"* `add housekeeper n/Betsy Crowe p/441234567 e/betsycrowe@example.com a/Newgate Prison t/criminal t/famous ar/south`","lastModifiedDate":"2024-04-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"LimZiJia"},"content":"[:arrow_up_small:](#table-of-contents)","lastModifiedDate":"2024-04-04"},{"lineNumber":174,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":175,"author":{"gitId":"LimZiJia"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"GERARDJM018"},"content":"Shows a list of all persons with the given type in the address book.","lastModifiedDate":"2024-03-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"LimZiJia"},"content":"Format: `list TYPE`","lastModifiedDate":"2024-03-15"},{"lineNumber":182,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":183,"author":{"gitId":"LimZiJia"},"content":"Notes: ","lastModifiedDate":"2024-04-04"},{"lineNumber":184,"author":{"gitId":"LimZiJia"},"content":"* `TYPE` can only be either \u0027client\u0027 or \u0027housekeeper\u0027","lastModifiedDate":"2024-04-04"},{"lineNumber":185,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":186,"author":{"gitId":"GERARDJM018"},"content":"Example:","lastModifiedDate":"2024-03-15"},{"lineNumber":187,"author":{"gitId":"GERARDJM018"},"content":"* `list client`","lastModifiedDate":"2024-03-15"},{"lineNumber":188,"author":{"gitId":"GERARDJM018"},"content":"* `list housekeeper`","lastModifiedDate":"2024-03-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"LimZiJia"},"content":"[:arrow_up_small:](#table-of-contents)","lastModifiedDate":"2024-04-04"},{"lineNumber":191,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":192,"author":{"gitId":"LimZiJia"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":193,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":194,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"moguries"},"content":"Deletes the specified client or housekeeper from the address book.","lastModifiedDate":"2024-03-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"LimZiJia"},"content":"Format: `delete TYPE INDEX`","lastModifiedDate":"2024-04-04"},{"lineNumber":199,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":200,"author":{"gitId":"GERARDJM018"},"content":"Notes:","lastModifiedDate":"2024-04-04"},{"lineNumber":201,"author":{"gitId":"GERARDJM018"},"content":"* `TYPE` can be either \u0027client\u0027 or \u0027housekeeper\u0027.","lastModifiedDate":"2024-04-04"},{"lineNumber":202,"author":{"gitId":"moguries"},"content":"* Deletes the client or housekeeper at the specified `INDEX`.","lastModifiedDate":"2024-03-15"},{"lineNumber":203,"author":{"gitId":"LimZiJia"},"content":"* The index refers to the index number shown in the displayed list.","lastModifiedDate":"2024-03-20"},{"lineNumber":204,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"LimZiJia"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2024-03-20"},{"lineNumber":207,"author":{"gitId":"LimZiJia"},"content":"The index to delete will work for any displayed list. i.e. What you see is what you get.","lastModifiedDate":"2024-04-04"},{"lineNumber":208,"author":{"gitId":"LimZiJia"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":209,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"moguries"},"content":"* `list client` followed by `delete client 2` deletes the 2nd person in the client list.","lastModifiedDate":"2024-03-15"},{"lineNumber":212,"author":{"gitId":"moguries"},"content":"* `list housekeeper` followed by `delete housekeeper 1` deletes the 1st person in the housekeeper list.","lastModifiedDate":"2024-03-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"LimZiJia"},"content":"[:arrow_up_small:](#table-of-contents)","lastModifiedDate":"2024-04-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":216,"author":{"gitId":"LimZiJia"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2024-04-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2024-04-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":221,"author":{"gitId":"LimZiJia"},"content":"Format: `edit TYPE INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [ar/AREA] [t/TAG]â€¦â€‹`","lastModifiedDate":"2024-04-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":223,"author":{"gitId":"GERARDJM018"},"content":"Notes:","lastModifiedDate":"2024-04-04"},{"lineNumber":224,"author":{"gitId":"GERARDJM018"},"content":"* `TYPE` can be either \u0027client\u0027 or \u0027housekeeper\u0027.","lastModifiedDate":"2024-04-04"},{"lineNumber":225,"author":{"gitId":"GERARDJM018"},"content":"* `AREA` can be either \u0027east\u0027, \u0027southeast\u0027, \u0027south\u0027, \u0027southwest\u0027, \u0027west\u0027, \u0027northwest\u0027, \u0027north\u0027, or \u0027northeast\u0027.","lastModifiedDate":"2024-04-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2024-04-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2024-04-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2024-04-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2024-04-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* You can remove all the personâ€™s tags by typing `t/` without","lastModifiedDate":"2024-04-04"},{"lineNumber":231,"author":{"gitId":"GERARDJM018"},"content":"  specifying any tags after it.","lastModifiedDate":"2024-04-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2024-04-04"},{"lineNumber":234,"author":{"gitId":"GERARDJM018"},"content":"*  `edit client 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st client to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2024-04-04"},{"lineNumber":235,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":236,"author":{"gitId":"GERARDJM018"},"content":"[:arrow_up_small:](#table-of-contents)","lastModifiedDate":"2024-04-04"},{"lineNumber":237,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":238,"author":{"gitId":"GERARDJM018"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":240,"author":{"gitId":"GERARDJM018"},"content":"### Locating persons by keywords: `find`","lastModifiedDate":"2024-04-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":242,"author":{"gitId":"GERARDJM018"},"content":"Finds client or housekeeper whose names, address, or area contain any of the given keywords.","lastModifiedDate":"2024-04-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":244,"author":{"gitId":"GERARDJM018"},"content":"Format: `find TYPE n/KEYWORD [MORE_KEYWORDS] ar/KEYWORD [MORE_KEYWORDS] a/KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2024-04-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":246,"author":{"gitId":"GERARDJM018"},"content":"Notes:","lastModifiedDate":"2024-04-04"},{"lineNumber":247,"author":{"gitId":"GERARDJM018"},"content":"* `TYPE` can be either \u0027client\u0027 or \u0027housekeeper\u0027.","lastModifiedDate":"2024-04-04"},{"lineNumber":248,"author":{"gitId":"GERARDJM018"},"content":"* `AREA` can be either \u0027east\u0027, \u0027southeast\u0027, \u0027south\u0027, \u0027southwest\u0027, \u0027west\u0027, \u0027northwest\u0027, \u0027north\u0027, or \u0027northeast\u0027.","lastModifiedDate":"2024-04-04"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2024-04-04"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2024-04-04"},{"lineNumber":251,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2024-04-04"},{"lineNumber":252,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2024-04-04"},{"lineNumber":253,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2024-04-04"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2024-04-04"},{"lineNumber":256,"author":{"gitId":"GERARDJM018"},"content":"* `find client n/John` returns `john` and `John Doe`","lastModifiedDate":"2024-04-04"},{"lineNumber":257,"author":{"gitId":"GERARDJM018"},"content":"* `find housekeeper n/alex david ar/west` returns housekeeper which name is alex or david and cover the service of west area\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":259,"author":{"gitId":"GERARDJM018"},"content":"[:arrow_up_small:](#table-of-contents)","lastModifiedDate":"2024-04-04"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":261,"author":{"gitId":"GERARDJM018"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":264,"author":{"gitId":"LimZiJia"},"content":"### Getting client call list: `leads`","lastModifiedDate":"2024-04-04"},{"lineNumber":265,"author":{"gitId":"LimZiJia"},"content":"Generates a list of leads by sorting the clients based on the predicted next time of housekeeping. ","lastModifiedDate":"2024-04-05"},{"lineNumber":266,"author":{"gitId":"LimZiJia"},"content":"Clients with predicted next housekeeping date which is in the future will not be included.","lastModifiedDate":"2024-04-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":268,"author":{"gitId":"LimZiJia"},"content":"Format: `leads`","lastModifiedDate":"2024-04-04"},{"lineNumber":269,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":270,"author":{"gitId":"LimZiJia"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2024-04-04"},{"lineNumber":271,"author":{"gitId":"LimZiJia"},"content":"The leads are sorted with the client with the earliest predicted next housekeeping date at the top. Housekeeping details are optional so clients without housekeeping details will not be included in the leads.","lastModifiedDate":"2024-04-04"},{"lineNumber":272,"author":{"gitId":"LimZiJia"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":273,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":274,"author":{"gitId":"LimZiJia"},"content":"[:arrow_up_small:](#table-of-contents)","lastModifiedDate":"2024-04-04"},{"lineNumber":275,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":276,"author":{"gitId":"LimZiJia"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":277,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":278,"author":{"gitId":"LimZiJia"},"content":"### Booking commands: `booking`","lastModifiedDate":"2024-04-04"},{"lineNumber":279,"author":{"gitId":"LimZiJia"},"content":"We have booking functionality for both client and housekeepers. The booking command allows you to update the housekeeping details of a client and update bookings for a housekeeper.","lastModifiedDate":"2024-04-04"},{"lineNumber":280,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":281,"author":{"gitId":"LimZiJia"},"content":"General format: `booking TYPE ACTION INDEX [PARAMETERS]`","lastModifiedDate":"2024-04-04"},{"lineNumber":282,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":283,"author":{"gitId":"LimZiJia"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2024-04-04"},{"lineNumber":284,"author":{"gitId":"LimZiJia"},"content":"For the subcommands of booking below, here are some clarifications.\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":285,"author":{"gitId":"LimZiJia"},"content":"`INDEX` refers to the index of the observed client/housekeeper list.\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":286,"author":{"gitId":"LimZiJia"},"content":"`NUMBER` refers to any integer. This could represent the quantity of `INTERVAL`(s).\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":287,"author":{"gitId":"LimZiJia"},"content":"`INTERVAL` refers to a period, which can be \u0027days\u0027, \u0027weeks\u0027, \u0027months\u0027 or \u0027years\u0027.\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":288,"author":{"gitId":"LimZiJia"},"content":"`AREA` refers to the \u0027north\u0027, \u0027south\u0027, \u0027east\u0027, \u0027west\u0027, \u0027northeast\u0027, \u0027northwest\u0027, \u0027southeast\u0027, \u0027southwest\u0027.","lastModifiedDate":"2024-04-04"},{"lineNumber":289,"author":{"gitId":"LimZiJia"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":290,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":291,"author":{"gitId":"LimZiJia"},"content":"##### Updating client\u0027s housekeeping details: `booking client`","lastModifiedDate":"2024-04-04"},{"lineNumber":292,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":293,"author":{"gitId":"LimZiJia"},"content":"Client\u0027s housekeeping details are optional, and it has 4 attributes: ","lastModifiedDate":"2024-04-04"},{"lineNumber":294,"author":{"gitId":"LimZiJia"},"content":"\u003cu\u003e[1] last booking date, [2] preferred interval, [3] booking time slot, and [4] deferment.\u003c/u\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":295,"author":{"gitId":"LimZiJia"},"content":"This is a value added service for you to keep track of your client\u0027s housekeeping schedule and call clients for housekeeping at the right time.","lastModifiedDate":"2024-04-04"},{"lineNumber":296,"author":{"gitId":"LimZiJia"},"content":"If clients do not have housekeeping details, they are assumed to not want notifications for housekeeping. Therefore, `leads` will not include clients without housekeeping details.","lastModifiedDate":"2024-04-04"},{"lineNumber":297,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":298,"author":{"gitId":"LimZiJia"},"content":"*** [1] and [2] are mandatory while [3] and [4] are optional. ([4] deferment will be set to 0 by default)","lastModifiedDate":"2024-04-04"},{"lineNumber":299,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":300,"author":{"gitId":"LimZiJia"},"content":"We have 6 commands for updating client\u0027s housekeeping details. `edit`, `defer`, `add`, `delete`, `set`, and `remove`.","lastModifiedDate":"2024-04-05"},{"lineNumber":301,"author":{"gitId":"LimZiJia"},"content":"Without a housekeeping detail, `edit`, `defer`, `add`, `delete` will not work. To set housekeeping detail after initiation, use `set`.","lastModifiedDate":"2024-04-05"},{"lineNumber":302,"author":{"gitId":"LimZiJia"},"content":"`edit` has prefixes `lhd/`, `pi/`, `bd/` and `d/` to edit last housekeeping date, preferred interval, booking date and deferment respectively.","lastModifiedDate":"2024-04-05"},{"lineNumber":303,"author":{"gitId":"LimZiJia"},"content":"More than one prefix can be used in a single `edit` command.","lastModifiedDate":"2024-04-05"},{"lineNumber":304,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":305,"author":{"gitId":"LimZiJia"},"content":"Action | Format, Explainations, Examples                                                                                                                                               ","lastModifiedDate":"2024-04-04"},{"lineNumber":306,"author":{"gitId":"GERARDJM018"},"content":"--------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":307,"author":{"gitId":"GERARDJM018"},"content":"`edit lhd/` | Edit client\u0027s last housekeeping date with `edit lhd/`\u003cbr\u003eFormat: `booking client edit INDEX lhd/yyyy-MM-dd`\u003cbr\u003eExample: `booking client edit 2 lhd/2024-04-01`                                 ","lastModifiedDate":"2024-04-04"},{"lineNumber":308,"author":{"gitId":"GERARDJM018"},"content":"`edit pi/` | Edit client\u0027s preferred interval with `edit pi/`\u003cbr\u003eFormat: `booking client edit INDEX pi/NUMBER INTERVAL`\u003cbr\u003eExample: `booking client edit 2 pi/2 weeks`","lastModifiedDate":"2024-04-04"},{"lineNumber":309,"author":{"gitId":"GERARDJM018"},"content":"`edit bd/` | Edit client\u0027s booking date with `edit bd/`\u003cbr\u003eFormat: `booking client edit INDEX bd/BOOKING DATE`\u003cbr\u003eExample: `booking client edit 2 bd/2024-04-02 am`","lastModifiedDate":"2024-04-04"},{"lineNumber":310,"author":{"gitId":"LimZiJia"},"content":"`edit d/` | Edit deferment with `edit d/`\u003cbr\u003eFormat: `booking client edit INDEX d/NUMBER INTERVAL`\u003cbr\u003eExample: `booking client edit 2 d/2 months`","lastModifiedDate":"2024-04-05"},{"lineNumber":311,"author":{"gitId":"LimZiJia"},"content":"`defer` | Add period to delay calling clients with `defer`\u003cbr\u003eFormat: `booking client defer INDEX NUMBER INTERVAL`\u003cbr\u003eExample: `booking client defer 2 1 months`                        ","lastModifiedDate":"2024-04-04"},{"lineNumber":312,"author":{"gitId":"GERARDJM018"},"content":"`add` | Add client\u0027s booking date with `add`\u003cbr\u003eFormat: `booking client add INDEX yyyy-MM-dd (am|pm)`\u003cbr\u003eExample: `booking client add 2 2024-04-01 am`                                ","lastModifiedDate":"2024-04-04"},{"lineNumber":313,"author":{"gitId":"LimZiJia"},"content":"`delete` | Delete client\u0027s booking date with `delete`\u003cbr\u003eFormat: `booking client delete INDEX` \u003cbr\u003eExample: `booking client delete 2`                                                    ","lastModifiedDate":"2024-04-04"},{"lineNumber":314,"author":{"gitId":"LimZiJia"},"content":"`set` | Set client\u0027s housekeeping details with `set`. Same format as initiation, you can set last housekeeping date and preferred interval. \u003cbr\u003eFormat: `booking client set INDEX yyyy-MM-dd NUMBER INTERVAL`\u003cbr\u003eExample: `booking client set 2 2024-04-01 15 days`","lastModifiedDate":"2024-04-04"},{"lineNumber":315,"author":{"gitId":"LimZiJia"},"content":"`remove` | Remove client\u0027s housekeeping details with `remove`\u003cbr\u003eFormat: `booking client remove INDEX`\u003cbr\u003eExample: `booking client remove 2`","lastModifiedDate":"2024-04-04"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":317,"author":{"gitId":"moguries"},"content":"##### Updating housekeeper\u0027s housekeeping details: `booking housekeeper`","lastModifiedDate":"2024-04-04"},{"lineNumber":318,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":319,"author":{"gitId":"LimZiJia"},"content":"Housekeepers all have a list of bookings (that can be empty). This allows for Housekeeping Hub to suggest housekeepers for clients based on their availability. There are 4 commands `add`, `delete`, `list` and `search`.","lastModifiedDate":"2024-04-04"},{"lineNumber":320,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":321,"author":{"gitId":"LimZiJia"},"content":"Action | Format, Explainations, Examples                                                                                                                                       ","lastModifiedDate":"2024-04-04"},{"lineNumber":322,"author":{"gitId":"LimZiJia"},"content":"--------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":323,"author":{"gitId":"LimZiJia"},"content":"`add` | Add booking to a housekeeper\u0027s list with `add`\u003cbr\u003eFormat: `booking housekeeper add INDEX yyyy-MM-dd (am|pm)`\u003cbr\u003eExample: `booking housekeeper add 2 2024-04-01 am` ","lastModifiedDate":"2024-04-04"},{"lineNumber":324,"author":{"gitId":"LimZiJia"},"content":"`delete` | Delete booking from a housekeeper\u0027s list with `delete`\u003cbr\u003eFormat: `booking housekeeper delete INDEX INDEX`\u003cbr\u003eExample: `booking housekeeper delete 1 2`\u003cbr\u003e* The first INDEX refers to the housekeeper index and the second INDEX refers to the booking index (shown in `list` action).","lastModifiedDate":"2024-04-04"},{"lineNumber":325,"author":{"gitId":"LimZiJia"},"content":"`list` | List all bookings of a housekeeper with `list`\u003cbr\u003eFormat: `booking housekeeper list INDEX`\u003cbr\u003eExample: `booking housekeeper list 2`","lastModifiedDate":"2024-04-04"},{"lineNumber":326,"author":{"gitId":"LimZiJia"},"content":"`search` | Search for housekeepers available on a specific area and date date with `search`\u003cbr\u003eFormat: `booking housekeeper search AREA yyyy-MM-dd (am|pm)`\u003cbr\u003eExample: `booking housekeeper search east 2024-04-05 pm`","lastModifiedDate":"2024-04-04"},{"lineNumber":327,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":328,"author":{"gitId":"LimZiJia"},"content":"[:arrow_up_small:](#table-of-contents)","lastModifiedDate":"2024-04-04"},{"lineNumber":329,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":330,"author":{"gitId":"LimZiJia"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-04-04"},{"lineNumber":331,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"LimZiJia"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2024-04-04"},{"lineNumber":338,"author":{"gitId":"LimZiJia"},"content":"This command is irreversible. All data will be lost.","lastModifiedDate":"2024-04-04"},{"lineNumber":339,"author":{"gitId":"LimZiJia"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":340,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":341,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"gosongying"},"content":"HouseKeeping Hub data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-03-20"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":353,"author":{"gitId":"gosongying"},"content":"HouseKeeping Hub data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2024-03-20"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":355,"author":{"gitId":"LimZiJia"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2024-04-05"},{"lineNumber":356,"author":{"gitId":"LimZiJia"},"content":"If you wish to load our sample data, you must delete the existing `addressbook.json` from the stated location and restart the app.","lastModifiedDate":"2024-04-05"},{"lineNumber":357,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":359,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":360,"author":{"gitId":"gosongying"},"content":"If your changes to the data file makes its format invalid, HouseKeeping Hub will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":361,"author":{"gitId":"gosongying"},"content":"Furthermore, certain edits can cause the HouseKeeping Hub to behave in unexpected ways (e.g., if a value entered is outside of the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-03-20"},{"lineNumber":362,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":364,"author":{"gitId":"LimZiJia"},"content":"[:arrow_up_small:](#table-of-contents)","lastModifiedDate":"2024-04-04"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"moguries"},"content":"\u003ca id\u003d\"faq\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"gosongying"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous HouseKeeping Hub home folder.","lastModifiedDate":"2024-03-20"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"LimZiJia"},"content":"[:arrow_up_small:](#table-of-contents)","lastModifiedDate":"2024-04-04"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":376,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"moguries"},"content":"\u003ca id\u003d\"command-summary\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":381,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2024-03-19"},{"lineNumber":382,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2024-03-19"},{"lineNumber":383,"author":{"gitId":"GERARDJM018"},"content":"[**Add**](#adding-a-person-add) | `add TYPE n/NAME e/EMAIL p/PHONE_NUMBER a/ADDRESS [d/DETAILS] [ar/AREA] [t/TAG]â€¦â€‹` \u003cbr\u003e e.g., `add client n/Elon e/elon@gmail.com p/088888888 a/Elon Street, Block 123, 101010 Singapore ar/west`","lastModifiedDate":"2024-04-04"},{"lineNumber":384,"author":{"gitId":"LimZiJia"},"content":"[**Delete**](#deleting-a-person--delete) | `delete TYPE INDEX`\u003cbr\u003e e.g., `delete housekeeper 3`","lastModifiedDate":"2024-04-04"},{"lineNumber":385,"author":{"gitId":"LimZiJia"},"content":"[**List**](#listing-all-persons--list) | `list TYPE`\u003cbr\u003e e.g., `list client`","lastModifiedDate":"2024-04-04"},{"lineNumber":386,"author":{"gitId":"LimZiJia"},"content":"[**Edit**](#editing-a-person--edit) | `edit TYPE INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [d/DETAILS] [ar/AREA] [t/TAG]â€¦â€‹`\u003cbr\u003e e.g., `edit client 1 p/91234567 e/johndoe@example.com`","lastModifiedDate":"2024-04-05"},{"lineNumber":387,"author":{"gitId":"LimZiJia"},"content":"[**Find**](#locating-persons-by-keywords--find) | `find TYPE n/KEYWORD [MORE_KEYWORDS] ar/KEYWORD [MORE_KEYWORDS] a/KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find client n/John`","lastModifiedDate":"2024-04-05"},{"lineNumber":388,"author":{"gitId":"LimZiJia"},"content":"[**Leads**](#getting-client-call-list-leads) | `leads`","lastModifiedDate":"2024-04-04"},{"lineNumber":389,"author":{"gitId":"LimZiJia"},"content":"[**Booking**](#booking-commands-booking) | `booking TYPE ACTION INDEX [PARAMETERS]`\u003cbr\u003e e.g., `booking client last 2 2024-04-01`\u003cbr\u003e * This has many commands and it is recommended to refer to the [Booking commands](#booking-commands-booking) section for more details.","lastModifiedDate":"2024-04-04"},{"lineNumber":390,"author":{"gitId":"LimZiJia"},"content":"[**Clear**](#clearing-all-entries--clear) | `clear`","lastModifiedDate":"2024-04-04"},{"lineNumber":391,"author":{"gitId":"LimZiJia"},"content":"[**Exit**](#exiting-the-program--exit) | `exit`","lastModifiedDate":"2024-04-04"},{"lineNumber":392,"author":{"gitId":"LimZiJia"},"content":"[**Help**](#viewing-help--help) | `help`                                                                                                                                                                                                                                 |","lastModifiedDate":"2024-04-04"},{"lineNumber":393,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":394,"author":{"gitId":"LimZiJia"},"content":"[:arrow_up_small:](#table-of-contents)","lastModifiedDate":"2024-04-04"},{"lineNumber":395,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":396,"author":{"gitId":"LimZiJia"},"content":"----------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-20"},{"lineNumber":397,"author":{"gitId":"LimZiJia"},"content":"## Glossary :book:","lastModifiedDate":"2024-04-04"},{"lineNumber":398,"author":{"gitId":"moguries"},"content":"\u003ca id\u003d\"glossary\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":399,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":400,"author":{"gitId":"LimZiJia"},"content":"**JAR**","lastModifiedDate":"2024-03-20"},{"lineNumber":401,"author":{"gitId":"gosongying"},"content":"\u003ca id\u003d\"jar\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":402,"author":{"gitId":"LimZiJia"},"content":": JAR stands for Java Archive. It is based on the ZIP file format that is commonly used to store java programs.\u003cbr\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":403,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":404,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":405,"author":{"gitId":"LimZiJia"},"content":"**CLI**","lastModifiedDate":"2024-03-20"},{"lineNumber":406,"author":{"gitId":"gosongying"},"content":"\u003ca id\u003d\"cli\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":407,"author":{"gitId":"LimZiJia"},"content":": CLI stands for Command Line Interface. It refers to programs that are primarily **text-based** where users interact with the program by typing **commands**. ","lastModifiedDate":"2024-03-20"},{"lineNumber":408,"author":{"gitId":"LimZiJia"},"content":"As such, users will use their keyboards more, in contrast to a Graphical User Interface (GUI) where users will use their mouse to interact with the graphical elements.\u003cbr\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":409,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":410,"author":{"gitId":"LimZiJia"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":411,"author":{"gitId":"gosongying"},"content":"**GUI**","lastModifiedDate":"2024-03-20"},{"lineNumber":412,"author":{"gitId":"gosongying"},"content":"\u003ca id\u003d\"gui\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":413,"author":{"gitId":"LimZiJia"},"content":": GUI stands for Graphical User Interface. It refers to programs that are primarily **graphical** where users interact with the program by clicking on **buttons** and **menus**.\u003cbr\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":414,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":415,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":416,"author":{"gitId":"LimZiJia"},"content":"**Terminal**","lastModifiedDate":"2024-03-20"},{"lineNumber":417,"author":{"gitId":"gosongying"},"content":"\u003ca id\u003d\"terminal\"\u003e\u003c/a\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":418,"author":{"gitId":"LimZiJia"},"content":": A terminal is a Command Line Interface (CLI) that allows users to interact with computers by executing commands and viewing the results. ","lastModifiedDate":"2024-03-20"},{"lineNumber":419,"author":{"gitId":"LimZiJia"},"content":"Popular terminals in mainstream operating systems include command prompt (CMD) for windows and Terminal in macOS and Linux.\u003cbr\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":420,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":421,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":422,"author":{"gitId":"LimZiJia"},"content":"**CMD**\u003cbr\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":423,"author":{"gitId":"LimZiJia"},"content":"\u003cimg src\u003d\"https://www.auslogics.com/en/articles/wp-content/uploads/2023/07/Command-Prompt-PING.png\" alt\u003d\"drawing\" width\u003d\"500\"/\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":424,"author":{"gitId":"LimZiJia"},"content":"\u003cbr\u003e\u003cbr\u003e**Terminal (macOS)**\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":425,"author":{"gitId":"LimZiJia"},"content":"\u003cimg src\u003d\"https://forums.macrumors.com/attachments/screen-shot-2020-12-09-at-4-50-12-pm-png.1690397/\" alt\u003d\"drawing\" width\u003d\"500\"/\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":426,"author":{"gitId":"LimZiJia"},"content":"\u003cbr\u003e\u003cbr\u003e **Terminal (Linux)** \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":427,"author":{"gitId":"LimZiJia"},"content":"\u003cimg src\u003d\"https://static1.howtogeekimages.com/wordpress/wp-content/uploads/2013/03/linux-terminal-on-ubuntu.png\" alt\u003d\"drawing\" width\u003d\"500\"/\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":428,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":429,"author":{"gitId":"LimZiJia"},"content":"[:arrow_up_small:](#table-of-contents)","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"LimZiJia":178,"moguries":37,"gosongying":15,"-":156,"GERARDJM018":43}},{"path":"docs/diagrams/AddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"moguries"},"content":"@startuml","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"moguries"},"content":"!include style.puml","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"moguries"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"moguries"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"moguries"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"moguries"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"moguries"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"moguries"},"content":"participant \"a:AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"moguries"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"moguries"},"content":"end box","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"moguries"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"moguries"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"moguries"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"moguries"},"content":"end box","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"moguries"},"content":"[-\u003e LogicManager : execute(\"add client n/John p/90868245 e/john@gmail.com a/43 Lee Street t/friend\")","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"moguries"},"content":"activate LogicManager","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"moguries"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"add client n/John p/90868245 e/john@gmail.com a/43 Lee Street t/friend\")","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"moguries"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"moguries"},"content":"create AddCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"moguries"},"content":"AddressBookParser -\u003e AddCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"moguries"},"content":"activate AddCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"moguries"},"content":"AddCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"moguries"},"content":"deactivate AddCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"moguries"},"content":"AddressBookParser -\u003e AddCommandParser : parse(\"client n/John p/90868245 e/john@gmail.com a/43 Lee Street t/friend\")","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"moguries"},"content":"activate AddCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"moguries"},"content":"create AddCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"moguries"},"content":"AddCommandParser -\u003e AddCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"moguries"},"content":"activate AddCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"moguries"},"content":"AddCommand --\u003e AddCommandParser :","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"moguries"},"content":"deactivate AddCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"moguries"},"content":"AddCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"moguries"},"content":"deactivate AddCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"moguries"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"moguries"},"content":"AddCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"moguries"},"content":"destroy AddCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"moguries"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"moguries"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"moguries"},"content":"LogicManager -\u003e AddCommand : execute(m)","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"moguries"},"content":"activate AddCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"moguries"},"content":"AddCommand -\u003e Model : addPerson(client)","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"moguries"},"content":"activate Model","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"moguries"},"content":"Model -\u003e AddressBook : addPerson(client)","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"moguries"},"content":"activate AddressBook","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"moguries"},"content":"AddressBook --\u003e Model","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"moguries"},"content":"deactivate AddressBook","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"moguries"},"content":"Model --\u003e AddCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"moguries"},"content":"deactivate Model","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"moguries"},"content":"AddCommand -\u003e Model : updatedFilteredPersonList(predicate)","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"moguries"},"content":"activate Model","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"moguries"},"content":"Model --\u003e AddCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"moguries"},"content":"deactivate Model","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"moguries"},"content":"create CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"moguries"},"content":"AddCommand -\u003e CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"moguries"},"content":"activate CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"moguries"},"content":"CommandResult --\u003e AddCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"moguries"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"moguries"},"content":"AddCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"moguries"},"content":"deactivate AddCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"moguries"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"moguries"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"moguries"},"content":"@enduml","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"moguries":83}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"Person \u003c|-right- Housekeeper","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"Person \u003c|-right- Client","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"Client *-down-\u003e \"0..1\" HousekeepingDetails","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"Client .up.|\u003e Comparable","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"Person *--\u003e \"1\" Phone","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"Person *--\u003e \"1\" Email","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"Person *--\u003e \"1\" Address","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"Person *--\u003e \"1\" Type","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"Person *--\u003e \"1\" Area","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"HousekeepingDetails *--\u003e \"1\" LocalDate","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"HousekeepingDetails *--\u003e \"1\" Period","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"LimZiJia":14,"-":18}},{"path":"docs/diagrams/DeleteActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gosongying"},"content":"@startuml","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"gosongying"},"content":"skin rose","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"gosongying"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"gosongying"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"gosongying"},"content":"start","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"gosongying"},"content":":User executes delete command (eg. delete client 1);","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"gosongying"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"gosongying"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"gosongying"},"content":"fork","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"gosongying"},"content":"    :Check Type specified;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"gosongying"},"content":"    if () then ([client])","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"gosongying"},"content":"        :Return DeleteClientCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"gosongying"},"content":"    else ([housekeeper])","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"gosongying"},"content":"        :Return DeleteHousekeeperCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"gosongying"},"content":"    endif","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"gosongying"},"content":"end fork","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"gosongying"},"content":":Delete person from the corresponding list;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"gosongying"},"content":"stop","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"gosongying"},"content":"@enduml","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"gosongying":21}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"gosongying"},"content":"[-\u003e LogicManager : execute(\"delete client 1\")","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"gosongying"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete client 1\")","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"gosongying"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"client\"), parse(\"1\")","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser :","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute(m)","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : r","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"gosongying":3,"-":67}},{"path":"docs/diagrams/FindActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"@startuml","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"skin rose","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":"start","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":":User executes command;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":"fork","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":"    :Check Name keywords;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"    if () then ([keywords available])","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"        :Check using the keywords given;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"    else ([keywords unavailable])","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"    endif","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"fork again","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"    :Check Area keywords;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":"    if () then ([keywords available])","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":"        :Check using the keywords given;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"    else ([keywords unavailable])","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"    endif","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"fork again","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"    :Check Address keywords;","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"    if () then ([keywords available])","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"        :Check using the keywords given;","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"    else ([keywords unavailable])","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"GERARDJM018"},"content":"    endif","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"GERARDJM018"},"content":"end fork","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"GERARDJM018"},"content":":Check the results from all attributes;","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"GERARDJM018"},"content":"stop","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"@enduml","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"GERARDJM018":32}},{"path":"docs/diagrams/HousekeepingDetailsClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"@startuml","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"!include style.puml","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"package \"Details\" {","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"Class HousekeepingDetails","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"Class Period","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"Class LocalDate","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"Class Booking","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"Client *--\u003e HousekeepingDetails","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"HousekeepingDetails *---\u003e \"preferredInterval\" Period","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"HousekeepingDetails *---\u003e \"deferment\" Period","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"HousekeepingDetails *---\u003e \"lastHousekeepingDate\" LocalDate","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"HousekeepingDetails *---\u003e \"booking\" Booking","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"Period .[hidden].. HousekeepingDetails","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"LocalDate .[hidden]. HousekeepingDetails","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"Period .[hidden]. LocalDate","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"@enduml","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"LimZiJia":25}},{"path":"docs/diagrams/ListSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"GERARDJM018"},"content":"@startuml","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"!include style.puml","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":"participant \":ListCommandParser\" as ListCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":"participant \"c:ListCommand\" as ListCommand LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":"end box","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"end box","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"[-\u003e LogicManager : execute(\"list client\")","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"activate LogicManager","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"list client\")","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"create ListCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"AddressBookParser -\u003e ListCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"activate ListCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"ListCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"GERARDJM018"},"content":"deactivate ListCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"GERARDJM018"},"content":"AddressBookParser -\u003e ListCommandParser : parse(\"client\")","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"GERARDJM018"},"content":"activate ListCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"GERARDJM018"},"content":"create ListCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"GERARDJM018"},"content":"ListCommandParser -\u003e ListCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"activate ListCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"GERARDJM018"},"content":"ListCommand --\u003e ListCommandParser :","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"GERARDJM018"},"content":"deactivate ListCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"GERARDJM018"},"content":"ListCommandParser --\u003e AddressBookParser : c","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"GERARDJM018"},"content":"deactivate ListCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"GERARDJM018"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"GERARDJM018"},"content":"ListCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"GERARDJM018"},"content":"destroy ListCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"GERARDJM018"},"content":"AddressBookParser --\u003e LogicManager : c","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"GERARDJM018"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"GERARDJM018"},"content":"LogicManager -\u003e ListCommand : execute(m)","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"GERARDJM018"},"content":"activate ListCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"GERARDJM018"},"content":"ListCommand -\u003e Model : updateFilteredPersonList(typePredicate)","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"GERARDJM018"},"content":"activate Model","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"GERARDJM018"},"content":"Model --\u003e ListCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"GERARDJM018"},"content":"deactivate Model","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"GERARDJM018"},"content":"create CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"GERARDJM018"},"content":"ListCommand -\u003e CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"GERARDJM018"},"content":"activate CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"GERARDJM018"},"content":"CommandResult --\u003e ListCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"GERARDJM018"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"GERARDJM018"},"content":"ListCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"GERARDJM018"},"content":"deactivate ListCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"GERARDJM018"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"GERARDJM018"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"GERARDJM018"},"content":"@enduml","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"GERARDJM018":70}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nComparable\" as Comparable","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"gosongying"},"content":"Class Client","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"gosongying"},"content":"Class Housekeeper","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"gosongying"},"content":"Class Type","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"Class HousekeepingDetails","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"Class Area","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"gosongying"},"content":"Person *-left-\u003e Name","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"gosongying"},"content":"Person *-right-\u003e Type","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"LimZiJia"},"content":"Person *--\u003e Area","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"LimZiJia"},"content":"Client *--\u003e \"0..1\" HousekeepingDetails","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"Client .up.|\u003e Comparable","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"gosongying"},"content":"Client -up-|\u003e Person","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"gosongying"},"content":"Housekeeper -up-|\u003e Person","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"LimZiJia"},"content":"Address -[hidden]left-\u003e Housekeeper","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"LimZiJia":7,"gosongying":8,"-":50}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"title: Housekeeping Hub","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":"[![Java CI](https://github.com/AY2324S2-CS2103T-W09-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S2-CS2103T-W09-1/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-W09-1/tp/graph/badge.svg?token\u003dVTN6SDBFUZ)](https://codecov.io/gh/AY2324S2-CS2103T-W09-1/tp)","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":"**Housekeeping Hub is a desktop application for managing your contact (clients or housekeepers) details.** ","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":"It is an address book which tailored for housekeeping services. ","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"* If you are interested in using Housekeeping Hub, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"* If you are interested about developing Housekeeping Hub, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":13,"GERARDJM018":8}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new commandâ€‰â€”â€‰`remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Weâ€™ll assume that you have already set up the development environment as outlined in the Developerâ€™s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"Letâ€™s start by creating a new `RemarkCommand` class in the `src/main/java/housekeeping/address/logic/command` directory.","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, letâ€™s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Letâ€™s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/RemarkCommandClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Letâ€™s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, letâ€™s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-04-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Now letâ€™s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"LimZiJia"},"content":"Create a `RemarkCommandParser` class in the `housekeeping.hub.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2024-04-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/RemarkCommandParserClass.png)","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Letâ€™s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now letâ€™s find out what we need to do in order to obtain the Index and String that we need. Letâ€™s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the userâ€™s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":":information_source: Donâ€™t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, letâ€™s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the personâ€™s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"LimZiJia"},"content":"Create a new `Remark` in `housekeeping.hub.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2024-04-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":233,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Letâ€™s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, letâ€™s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"LimZiJia"},"content":"Simply add the following to [`housekeeping.hub.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2024-04-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, donâ€™t worryâ€‰â€”â€‰we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"Thatâ€™s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external libraryâ€‰â€”â€‰Jackson. Letâ€™s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBookâ€™s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regressionâ€‰â€”â€‰we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":347,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":357,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs donâ€™t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Letâ€™s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":376,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"Letâ€™s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"Following convention, letâ€™s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Letâ€™s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"LimZiJia":7,"-":392}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e â€”  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Letâ€™s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"The `address` field in `Person` is actually an instance of the `housekeeping.hub.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2024-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Letâ€™s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. Whatâ€™s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"LimZiJia":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. â€¦â€‹\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e â€”  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEAâ€™s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `housekeeping.hub.logic.Logic`.","lastModifiedDate":"2024-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"LimZiJia"},"content":"A quick look at the `housekeeping.hub.logic.Logic` (an extract given below) confirms that this indeed might be what weâ€™re looking for.","lastModifiedDate":"2024-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what weâ€™re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now letâ€™s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]â€¦â€‹` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so letâ€™s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Letâ€™s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Letâ€™s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Letâ€™s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Letâ€™s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/ã‚¢ãƒªã‚¹ ãƒ¦ãƒ¼`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"LimZiJia":2,"-":299}},{"path":"src/main/java/housekeeping/hub/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.LogsCenter;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.FileUtil;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Objects.equals(configPath, otherAppParameters.configPath);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .add(\"configPath\", configPath)","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"LimZiJia":4,"-":69}},{"path":"src/main/java/housekeeping/hub/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.LogsCenter;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger logger \u003d LogsCenter.getLogger(Main.class);","lastModifiedDate":"2023-07-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // As per https://github.com/openjdk/jfx/blob/master/doc-files/release-notes-16.md","lastModifiedDate":"2023-07-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // JavaFX 16 (or later) runtime logs a warning at startup if JavaFX classes are loaded from","lastModifiedDate":"2023-07-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // the classpath instead of a module.","lastModifiedDate":"2023-07-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // Our application does not use Java modules yet. Even if it did, modules are ignored when","lastModifiedDate":"2023-07-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // packed into a FAT Jar file (as we do), which means this warning will persist even then.","lastModifiedDate":"2023-07-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // The warning however, can be safely ignored. Thus, the following log informs","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // the user (if looking at the log output) that the said warning appearing in the log","lastModifiedDate":"2023-07-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // can be ignored.","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.warning(\"The warning about Unsupported JavaFX configuration below can be ignored.\");","lastModifiedDate":"2023-07-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"LimZiJia":2,"-":39}},{"path":"src/main/java/housekeeping/hub/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.Config;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.LogsCenter;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.Version;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.ConfigUtil;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.StringUtil;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.Logic;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.LogicManager;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.AddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.ModelManager;","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.UserPrefs;","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.util.SampleDataUtil;","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.storage.AddressBookStorage;","lastModifiedDate":"2024-04-05"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.storage.JsonAddressBookStorage;","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-04-05"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.storage.Storage;","lastModifiedDate":"2024-04-05"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.storage.StorageManager;","lastModifiedDate":"2024-04-05"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.storage.UserPrefsStorage;","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.ui.Ui;","lastModifiedDate":"2024-04-05"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.ui.UiManager;","lastModifiedDate":"2024-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"LimZiJia"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s hub book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":72,"author":{"gitId":"LimZiJia"},"content":"     * The data from the sample hub book will be used instead if {@code storage}\u0027s hub book is not found,","lastModifiedDate":"2024-04-05"},{"lineNumber":73,"author":{"gitId":"LimZiJia"},"content":"     * or an empty hub book will be used instead if errors occur when reading {@code storage}\u0027s hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimZiJia":27,"gosongying":3,"-":159}},{"path":"src/main/java/housekeeping/hub/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.commons.core;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Config otherConfig \u003d (Config) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, otherConfig.logLevel)","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, otherConfig.userPrefsFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .add(\"logLevel\", logLevel)","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .add(\"userPrefsFilePath\", userPrefsFilePath)","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimZiJia":2,"-":64}},{"path":"src/main/java/housekeeping/hub/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.commons.core;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings otherGuiSettings \u003d (GuiSettings) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d otherGuiSettings.windowWidth","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d otherGuiSettings.windowHeight","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, otherGuiSettings.windowCoordinates);","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"windowWidth\", windowWidth)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"windowHeight\", windowHeight)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .add(\"windowCoordinates\", windowCoordinates)","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimZiJia":2,"-":80}},{"path":"src/main/java/housekeeping/hub/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.commons.core;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-05-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-05-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger; // logger for this class","lastModifiedDate":"2023-07-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static Logger baseLogger; // to be used as the parent of all other loggers created by this class.","lastModifiedDate":"2023-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // This static block ensures essential loggers are created early","lastModifiedDate":"2023-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        setBaseLogger();","lastModifiedDate":"2023-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes loggers with the log level specified in the {@code config} object. Applies to all loggers created","lastModifiedDate":"2023-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * using {@link #getLogger(String)} and {@link #getLogger(Class)} methods except for those that are manually set.","lastModifiedDate":"2023-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.info(\"Log level will be set as: \" + currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // set the level of the baseLogger which will be inherited by other loggers","lastModifiedDate":"2023-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        baseLogger.setLevel(currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name prefixed by the {@code baseLogger}\u0027s name so that the created logger","lastModifiedDate":"2023-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * becomes a descendant of the {@code baseLogger}. Furthermore, the returned logger will have the same log handlers","lastModifiedDate":"2023-07-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * as the {@code baseLogger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Java organizes loggers into a hierarchy based on their names (using \u0027.\u0027 as a separator, similar to how Java","lastModifiedDate":"2023-07-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // packages form a hierarchy). Furthermore, loggers without a level inherit the level of their parent logger.","lastModifiedDate":"2023-07-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // By prefixing names of all loggers with baseLogger\u0027s name + \".\", we make the baseLogger the parent of all","lastModifiedDate":"2023-07-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // loggers. This allows us to change the level of all loggers simply by changing the baseLogger level.","lastModifiedDate":"2023-07-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(baseLogger.getName() + \".\" + name);","lastModifiedDate":"2023-07-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(true);","lastModifiedDate":"2023-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2023-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(clazz);","lastModifiedDate":"2023-05-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Removes all handlers from the {@code logger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Creates a logger named \u0027ab3\u0027, containing a {@code ConsoleHandler} and a {@code FileHandler}.","lastModifiedDate":"2023-07-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets it as the {@code baseLogger}, to be used as the parent logger of all other loggers.","lastModifiedDate":"2023-07-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static void setBaseLogger() {","lastModifiedDate":"2023-07-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        baseLogger \u003d Logger.getLogger(\"ab3\");","lastModifiedDate":"2023-07-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        baseLogger.setUseParentHandlers(false);","lastModifiedDate":"2023-07-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        removeHandlers(baseLogger);","lastModifiedDate":"2023-07-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Level.ALL is used as the level for the handlers because the baseLogger filters the log messages by level","lastModifiedDate":"2023-07-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // already; there is no need to control log message level of the handlers.","lastModifiedDate":"2023-07-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // add a ConsoleHandler to log to the console","lastModifiedDate":"2023-07-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-07-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        baseLogger.addHandler(consoleHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // add a FileHandler to log to a file","lastModifiedDate":"2023-07-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-07-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            baseLogger.addHandler(fileHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimZiJia":1,"-":105}},{"path":"src/main/java/housekeeping/hub/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.commons.core;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!(other instanceof Version)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Version otherVersion \u003d (Version) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return major \u003d\u003d otherVersion.major","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 minor \u003d\u003d otherVersion.minor","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 patch \u003d\u003d otherVersion.patch","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 isEarlyAccess \u003d\u003d otherVersion.isEarlyAccess;","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimZiJia":1,"-":120}},{"path":"src/main/java/housekeeping/hub/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.commons.core.index;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!(other instanceof Index)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Index otherIndex \u003d (Index) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return zeroBasedIndex \u003d\u003d otherIndex.zeroBasedIndex;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"zeroBasedIndex\", zeroBasedIndex).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"LimZiJia":2,"-":67}},{"path":"src/main/java/housekeeping/hub/commons/exceptions/DataLoadingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.commons.exceptions;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-06-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during loading of data from a file.","lastModifiedDate":"2023-06-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-06-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataLoadingException extends Exception {","lastModifiedDate":"2023-06-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataLoadingException(Exception cause) {","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2023-06-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-06-14"}],"authorContributionMap":{"LimZiJia":1,"-":10}},{"path":"src/main/java/housekeeping/hub/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.commons.exceptions;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LimZiJia":1,"-":20}},{"path":"src/main/java/housekeeping/hub/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.commons.util;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.MainApp;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"LimZiJia":2,"-":40}},{"path":"src/main/java/housekeeping/hub/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.commons.util;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LimZiJia":1,"-":34}},{"path":"src/main/java/housekeeping/hub/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.commons.util;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.Config;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"LimZiJia":3,"-":20}},{"path":"src/main/java/housekeeping/hub/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.commons.util;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimZiJia":1,"-":82}},{"path":"src/main/java/housekeeping/hub/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.commons.util;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.LogsCenter;","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the JSON object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2023-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid JSON file.","lastModifiedDate":"2023-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize JSON file has to correspond to the structure in the class given here.","lastModifiedDate":"2023-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading of the JSON file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.info(\"JSON file \" + filePath + \" found.\");","lastModifiedDate":"2023-01-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2023-06-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimZiJia":3,"-":141}},{"path":"src/main/java/housekeeping/hub/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.commons.util;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimZiJia":2,"-":66}},{"path":"src/main/java/housekeeping/hub/commons/util/ToStringBuilder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.commons.util;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Builds a string representation of an object that is suitable as the return value of {@link Object#toString()}.","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class ToStringBuilder {","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private static final String OBJECT_PREFIX \u003d \"{\";","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private static final String OBJECT_SUFFIX \u003d \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private static final String FIELD_SEPARATOR \u003d \", \";","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final String FIELD_NAME_VALUE_SEPARATOR \u003d \"\u003d\";","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private boolean hasField;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with {@code objectName}.","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public ToStringBuilder(String objectName) {","lastModifiedDate":"2019-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        stringBuilder.append(objectName).append(OBJECT_PREFIX);","lastModifiedDate":"2019-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code ToStringBuilder} whose formatted output will be prefixed with the","lastModifiedDate":"2019-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * canonical class name of {@code object}.","lastModifiedDate":"2019-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public ToStringBuilder(Object object) {","lastModifiedDate":"2019-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this(object.getClass().getCanonicalName());","lastModifiedDate":"2019-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Adds a field name/value pair to the output string.","lastModifiedDate":"2019-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param fieldName The name of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param fieldValue The value of the field.","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return A reference to this {@code ToStringBuilder} object, allowing method calls to be chained.","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ToStringBuilder add(String fieldName, Object fieldValue) {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (hasField) {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            stringBuilder.append(FIELD_SEPARATOR);","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        stringBuilder.append(fieldName).append(FIELD_NAME_VALUE_SEPARATOR).append(fieldValue);","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        hasField \u003d true;","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the built formatted string representation.","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return stringBuilder.toString() + OBJECT_SUFFIX;","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"LimZiJia":1,"-":52}},{"path":"src/main/java/housekeeping/hub/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.GuiSettings;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.CommandResult;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Housekeeper;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"     * @see housekeeping.hub.model.Model#getAddressBook()","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"gosongying"},"content":"    //ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"gosongying"},"content":"    /** Returns an unmodifiable view of the filtered list of clients */","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"gosongying"},"content":"    ObservableList\u003cClient\u003e getFilteredClientList();","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"gosongying"},"content":"    /** Returns an unmodifiable view of the filtered list of housekeepers */","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"gosongying"},"content":"    ObservableList\u003cHousekeeper\u003e getFilteredHousekeeperList();","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"     * Returns the user prefs\u0027 hub book file path.","lastModifiedDate":"2024-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"LimZiJia":10,"gosongying":7,"-":40}},{"path":"src/main/java/housekeeping/hub/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.GuiSettings;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.LogsCenter;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.Command;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.CommandResult;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.parser.AddressBookParser;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Housekeeper;","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.storage.Storage;","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"gosongying"},"content":"    public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"gosongying"},"content":"        return model.getFilteredClientList();","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"gosongying"},"content":"    public ObservableList\u003cHousekeeper\u003e getFilteredHousekeeperList() {","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"gosongying"},"content":"        return model.getFilteredHousekeeperList();","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"LimZiJia":13,"gosongying":7,"-":74}},{"path":"src/main/java/housekeeping/hub/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.parser.Prefix;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Housekeeper;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.HousekeepingDetails;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.tag.Tag;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"moguries"},"content":"    public static final String MESSAGE_AVAILABLE_HOUSEKEEPERS_LISTED_OVERVIEW \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"moguries"},"content":"            \"%1$d housekeepers available at [%2$s, %3$s] listed!\";","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"moguries"},"content":"    public static final String MESSAGE_NO_AVAILABLE_HOUSEKEEPERS_LISTED_OVERVIEW \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"moguries"},"content":"            \"No housekeepers available at [%1$s, %2$s]!\";","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"gosongying"},"content":"    public static final String MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX \u003d \"The client index provided is invalid\";","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"gosongying"},"content":"    public static final String MESSAGE_INVALID_HOUSEKEEPER_DISPLAYED_INDEX \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"gosongying"},"content":"            \"The housekeeper index provided is invalid\";","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"gosongying"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d person(s) listed!\";","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"gosongying"},"content":"    public static final String MESSAGE_CLIENTS_LISTED_OVERVIEW \u003d \"%1$d client(s) listed!\";","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"gosongying"},"content":"    public static final String MESSAGE_HOUSEKEEPERS_LISTED_OVERVIEW \u003d \"%1$d housekeeper(s) listed!\";","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"gosongying"},"content":"     * Formats the {@code client} for display to the user.","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"gosongying"},"content":"    public static String formatClient(Client client) {","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"gosongying"},"content":"        final HousekeepingDetails housekeepingDetails \u003d client.getDetails();","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"LimZiJia"},"content":"        final String details;","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"LimZiJia"},"content":"        if (housekeepingDetails \u003d\u003d null) {","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"LimZiJia"},"content":"            details \u003d HousekeepingDetails.NO_DETAILS_PROVIDED;","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"        } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"GERARDJM018"},"content":"            details \u003d HousekeepingDetails.makeStoredDetailsReadableWithDeferment(housekeepingDetails.toString());","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"gosongying"},"content":"        Set\u003cTag\u003e tags \u003d client.getTags();","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"gosongying"},"content":"        builder.append(\"\\nName: \")","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"gosongying"},"content":"                .append(client.getName())","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"gosongying"},"content":"                .append(client.getPhone())","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"gosongying"},"content":"                .append(client.getEmail())","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"gosongying"},"content":"                .append(client.getAddress())","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"GERARDJM018"},"content":"                .append(\"; Area: \")","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"gosongying"},"content":"                .append(client.getArea())","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"gosongying"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"gosongying"},"content":"            builder.append(\"No tags\");","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"gosongying"},"content":"        } else {","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"gosongying"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"gosongying"},"content":"        builder.append(\"; Details: \")","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"gosongying"},"content":"                .append(details);","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"gosongying"},"content":"     * Formats the {@code housekeeper} for display to the user.","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"gosongying"},"content":"    public static String formatHousekeeper(Housekeeper housekeeper) {","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"gosongying"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"gosongying"},"content":"        Set\u003cTag\u003e tags \u003d housekeeper.getTags();","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"gosongying"},"content":"        builder.append(\"\\nName: \")","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"gosongying"},"content":"                .append(housekeeper.getName())","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"gosongying"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"gosongying"},"content":"                .append(housekeeper.getPhone())","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"gosongying"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"gosongying"},"content":"                .append(housekeeper.getEmail())","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"gosongying"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"gosongying"},"content":"                .append(housekeeper.getAddress())","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"gosongying"},"content":"                .append(\"; Area: \")","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"gosongying"},"content":"                .append(housekeeper.getArea())","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"gosongying"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"gosongying"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"gosongying"},"content":"            builder.append(\"No tags\");","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"gosongying"},"content":"        } else {","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"gosongying"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"gosongying"},"content":"        builder.append(\"; Booking List: \")","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"gosongying"},"content":"                .append(housekeeper.getBookingList());","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"gosongying"},"content":"        return builder.toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LimZiJia":12,"moguries":4,"gosongying":51,"-":40,"GERARDJM018":2}},{"path":"src/main/java/housekeeping/hub/logic/commands/AddClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"gosongying"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.Messages;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"gosongying"},"content":"public class AddClientCommand extends AddCommand {","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"gosongying"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New client added: %1$s\";","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"This client already exists in the hub book\";","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"gosongying"},"content":"    public AddClientCommand(Client client) {","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"gosongying"},"content":"        super(client);","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"gosongying"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"gosongying"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"gosongying"},"content":"        if (model.hasClient((Client) toAdd)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"gosongying"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"gosongying"},"content":"        model.addClient((Client) toAdd);","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"gosongying"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.formatClient((Client) toAdd)));","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"gosongying"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"LimZiJia":6,"gosongying":24}},{"path":"src/main/java/housekeeping/hub/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_AREA;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_DETAILS;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Person;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":" * Adds a person to the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"gosongying"},"content":"abstract public class AddCommand extends Command {","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a client or housekeeper to the hub book.\\n\"","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"gosongying"},"content":"            + \"TYPE(client or housekeeper) \"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"gosongying"},"content":"            + PREFIX_AREA + \"AREA \"","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"gosongying"},"content":"            + \"[\" + PREFIX_DETAILS + \"DETAILS](for client only) \"","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"gosongying"},"content":"            + \"Example: \" + COMMAND_WORD + \" client \"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"gosongying"},"content":"            + PREFIX_AREA + \"west \"","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"            + PREFIX_DETAILS + \"2024-01-01 2 months\";","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"gosongying"},"content":"    protected final Person toAdd;","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LimZiJia":13,"gosongying":7,"-":52}},{"path":"src/main/java/housekeeping/hub/logic/commands/AddHousekeeperCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"gosongying"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.Messages;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Housekeeper;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"gosongying"},"content":"public class AddHousekeeperCommand extends AddCommand {","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"gosongying"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New housekeeper added: %1$s\";","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"    public static final String MESSAGE_DUPLICATE_HOUSEKEEPER \u003d \"This housekeeper already exists in the hub book\";","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"gosongying"},"content":"    public static final String MESSAGE_NO_HOUSEKEEPING_DETAILS \u003d \"Housekeeper should not have housekeeping details, \" +","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"gosongying"},"content":"            \"that is specifically for client.\";","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"gosongying"},"content":"    public AddHousekeeperCommand(Housekeeper housekeeper) {","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"gosongying"},"content":"        super(housekeeper);","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"gosongying"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"gosongying"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"gosongying"},"content":"        if (model.hasHousekeeper((Housekeeper) toAdd)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"gosongying"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_HOUSEKEEPER);","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"gosongying"},"content":"        model.addHousekeeper((Housekeeper) toAdd);","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"gosongying"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.formatHousekeeper((Housekeeper) toAdd)));","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"gosongying"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"LimZiJia":6,"gosongying":25}},{"path":"src/main/java/housekeeping/hub/logic/commands/BookingCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"moguries"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.model.Model.PREDICATE_SHOW_ALL_HOUSEKEEPERS;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"import java.time.Period;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"moguries"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"moguries"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"moguries"},"content":"import java.util.List;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.index.Index;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.Messages;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Area;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Booking;","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.BookingList;","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.BookingSearchPredicate;","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Housekeeper;","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.HousekeepingDetails;","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"moguries"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"moguries"},"content":" * Encapsulates booking actions (add, delete, list) for a housekeeper.","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"moguries"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"moguries"},"content":"public class BookingCommand extends Command {","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"moguries"},"content":"    public static final String COMMAND_WORD \u003d \"booking\";","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"moguries"},"content":"    public static final String ACTION_WORD_HOUSEKEEPER_ADD \u003d \"add\";","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"moguries"},"content":"    public static final String ACTION_WORD_HOUSEKEEPER_DELETE \u003d \"delete\";","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"moguries"},"content":"    public static final String ACTION_WORD_HOUSEKEEPER_LIST \u003d \"list\";","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"moguries"},"content":"    public static final String ACTION_WORD_HOUSEKEEPER_SEARCH \u003d \"search\";","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"    public static final String MESSAGE_DEFER_PERSON_SUCCESS \u003d \"Deferment Success: Now the deferment value is %1$s\";","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"moguries"},"content":"    public static final String MESSAGE_INVALID_ACTION \u003d \"Invalid action. Action words include {add, delete, list}.\";","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"moguries"},"content":"    public static final String MESSAGE_USAGE \u003d \"\\nCLIENT COMMANDS:\\n\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"moguries"},"content":"            +\"[edit last housekeeping date] : edits last housekeeping date for the client at the specified index.\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"moguries"},"content":"            + \"Parameters: INDEX lhd/DATE(yyyy-mm-dd)\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"moguries"},"content":"            + \"Example: booking client edit 2 lhd/2024-05-12\\n\\n[\"","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"moguries"},"content":"            + \"edit preferred interval\"","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"moguries"},"content":"            + \"] : edits preferred housekeeping interval for the client at the specified index.\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"moguries"},"content":"            + \"Parameters: INDEX pi/NUMBER INTERVAL(days|weeks|months|years)\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"moguries"},"content":"            + \"Example: booking client edit 1 pi/2 weeks\\n\\n[\"","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"moguries"},"content":"            + \"edit booking date\"","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"moguries"},"content":"            + \"] : edits booking date for the client at the specified index.\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"moguries"},"content":"            + \"Parameters: INDEX bd/DATE(yyyy-mm-dd) TIME(am|pm)\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"moguries"},"content":"            + \"Example: booking client edit 7 bd/2024-01-17 pm\\n\\n[\"","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"moguries"},"content":"            + \"edit deferment\"","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"moguries"},"content":"            + \"] : adds period to delay before sending reminder about next housekeeping,\"","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"moguries"},"content":"            + \" for the client at the specified index.\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"moguries"},"content":"            + \"Parameters: INDEX INTERVAL(number days|weeks|months|years)\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"moguries"},"content":"            + \"Example: booking client edit 10 d/1 months\\n\\n[\"","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"moguries"},"content":"            + \"add booking\"","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"moguries"},"content":"            + \"] : adds a booking date for the client at the specified index.\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"moguries"},"content":"            + \"Parameters: INDEX DATE(yyyy-mm-dd) TIME(am|pm)\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"moguries"},"content":"            + \"Example: booking client add 1 2024-01-01 am\\n\\n[\"","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"moguries"},"content":"            + \"delete booking\"","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"moguries"},"content":"            + \"] : deletes booking date for the client at the specified index.\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"moguries"},"content":"            + \"Parameters: INDEX\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"moguries"},"content":"            + \"Example: booking client delete 3\\n\\n[\"","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"moguries"},"content":"            + \"set housekeeping details\"","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"moguries"},"content":"            + \"] : sets housekeeping details for the client at the specified index.\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"moguries"},"content":"            + \"Parameters: INDEX DATE(yyyy-mm-dd) NUMBER INTERVAL(days|weeks|months|years)\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"moguries"},"content":"            + \"Example: booking client set 2 2024-01-01 15 days\\n\\n[\"","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"moguries"},"content":"            + \"remove housekeeping details\"","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"moguries"},"content":"            + \"] : removes housekeeping details for the client at the specified index.\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"moguries"},"content":"            + \"Parameters: INDEX\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"moguries"},"content":"            + \"Example: booking client remove 2\\n\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"moguries"},"content":"            + \"HOUSEKEEPER COMMANDS:\\n\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"moguries"},"content":"            + \"[add booking] : adds a booking for the housekeeper at \"","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"moguries"},"content":"            + \"the specified index.\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"moguries"},"content":"            + \"Parameters: INDEX DATE(yyyy-mm-dd) TIME(am|pm)\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"moguries"},"content":"            + \"Example: \" + COMMAND_WORD + \" housekeeper \" + ACTION_WORD_HOUSEKEEPER_ADD + \" 1 2024-05-12 am\\n\\n[\"","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"moguries"},"content":"            + \"delete booking] : deletes the specified booking for the housekeeper at the specified index.\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"moguries"},"content":"            + \"Parameters: HOUSEKEEPER_INDEX BOOKING_INDEX\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"moguries"},"content":"            + \"Example: \" + COMMAND_WORD + \" housekeeper \"+ ACTION_WORD_HOUSEKEEPER_DELETE + \" 1 1\\n\\n[\"","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"moguries"},"content":"            + \"list bookings] : lists all bookings for the housekeeper at the specified index.\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"moguries"},"content":"            + \"Parameters: INDEX\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"moguries"},"content":"            + \"Example: \" + COMMAND_WORD + \" housekeeper \" + ACTION_WORD_HOUSEKEEPER_LIST + \" 1\\n\\n[\"","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"moguries"},"content":"            + \"search bookings] : searches for housekeepers who are available at the specified area and timing.\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"moguries"},"content":"            + \"Parameters: AREA DATE(yyyy-mm-dd) TIME(am|pm)\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"moguries"},"content":"            + \"Example: \" + COMMAND_WORD + \" housekeeper \" + ACTION_WORD_HOUSEKEEPER_SEARCH + \" west 2024-01-01 am\";","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"LimZiJia"},"content":"    public static final String NO_DETAILS_MESSAGE_CONSTRAINT \u003d \"If client does not have housekeeping details, \"","lastModifiedDate":"2024-04-05"},{"lineNumber":87,"author":{"gitId":"LimZiJia"},"content":"            + \"please set housekeeping details first using \u0027set\u0027.\";","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"moguries"},"content":"    private String actionWord;","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"LimZiJia"},"content":"    private Index index;","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"moguries"},"content":"    private int bookingToDeleteIndex;","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"moguries"},"content":"    private String bookedDateAndTime;","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"LimZiJia"},"content":"    private String type;","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"LimZiJia"},"content":"    private HousekeepingDetails housekeepingDetails;","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"GERARDJM018"},"content":"    private Period defer;","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"moguries"},"content":"    private BookingSearchPredicate bookingSearchPredicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"moguries"},"content":"     * Constructs a BookingCommand for the \"add\" action.","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"moguries"},"content":"     * @param type \"housekeeper\"","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"moguries"},"content":"     * @param actionWord \"add\"","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"moguries"},"content":"     * @param index of housekeeper to add booking to","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"moguries"},"content":"     * @param bookedDateAndTime in the form of a string","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"LimZiJia"},"content":"    public BookingCommand(String type, String actionWord, Index index, String bookedDateAndTime) {","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"moguries"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"LimZiJia"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"moguries"},"content":"        this.actionWord \u003d actionWord;","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"LimZiJia"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"moguries"},"content":"        this.bookedDateAndTime \u003d bookedDateAndTime;","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"moguries"},"content":"     * Constructs a BookingCommand for the \"delete\" action.","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"moguries"},"content":"     * @param type \"housekeeper\"","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"moguries"},"content":"     * @param actionWord \"delete\"","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"moguries"},"content":"     * @param index of housekeeper to delete booking from","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"moguries"},"content":"     * @param bookingToDeleteIndex of booking to delete","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"LimZiJia"},"content":"    public BookingCommand(String type, String actionWord, Index index, int bookingToDeleteIndex) {","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"moguries"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"LimZiJia"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"moguries"},"content":"        this.actionWord \u003d actionWord;","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"LimZiJia"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"moguries"},"content":"        this.bookingToDeleteIndex \u003d bookingToDeleteIndex;","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"moguries"},"content":"     * Constructs a BookingCommand for the \"list\" action.","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"moguries"},"content":"     * @param type \"housekeeper\"","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"moguries"},"content":"     * @param actionWord \"list\"","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"moguries"},"content":"     * @param index of housekeeper whose bookings to list","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"LimZiJia"},"content":"    public BookingCommand(String type, String actionWord, Index index) {","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"moguries"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"LimZiJia"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"moguries"},"content":"        this.actionWord \u003d actionWord;","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"LimZiJia"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"moguries"},"content":"     * Constructs a BookingCommand for the \"search\" action.","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"moguries"},"content":"     * @param type \"housekeeper\"","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"moguries"},"content":"     * @param actionWord \"search\"","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"moguries"},"content":"     * @param bookingSearchPredicate for area and booked date and time","lastModifiedDate":"2024-04-03"},{"lineNumber":150,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":151,"author":{"gitId":"moguries"},"content":"    public BookingCommand(String type, String actionWord, BookingSearchPredicate bookingSearchPredicate) {","lastModifiedDate":"2024-04-03"},{"lineNumber":152,"author":{"gitId":"moguries"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-04-03"},{"lineNumber":153,"author":{"gitId":"moguries"},"content":"        this.actionWord \u003d actionWord;","lastModifiedDate":"2024-04-03"},{"lineNumber":154,"author":{"gitId":"moguries"},"content":"        this.bookingSearchPredicate \u003d bookingSearchPredicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":155,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":156,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":157,"author":{"gitId":"LimZiJia"},"content":"    public BookingCommand(String type, String actionWord, Index index, HousekeepingDetails housekeepingDetails) {","lastModifiedDate":"2024-04-02"},{"lineNumber":158,"author":{"gitId":"LimZiJia"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-04-02"},{"lineNumber":159,"author":{"gitId":"LimZiJia"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-04-02"},{"lineNumber":160,"author":{"gitId":"LimZiJia"},"content":"        this.actionWord \u003d actionWord;","lastModifiedDate":"2024-04-02"},{"lineNumber":161,"author":{"gitId":"LimZiJia"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-04-02"},{"lineNumber":162,"author":{"gitId":"LimZiJia"},"content":"        this.housekeepingDetails \u003d housekeepingDetails;","lastModifiedDate":"2024-04-02"},{"lineNumber":163,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":164,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":165,"author":{"gitId":"GERARDJM018"},"content":"    public BookingCommand(String type, String actionWord, Index index, Period defer) {","lastModifiedDate":"2024-04-03"},{"lineNumber":166,"author":{"gitId":"GERARDJM018"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-04-03"},{"lineNumber":167,"author":{"gitId":"GERARDJM018"},"content":"        requireNonNull(defer);","lastModifiedDate":"2024-04-03"},{"lineNumber":168,"author":{"gitId":"GERARDJM018"},"content":"        requireNonNull(actionWord);","lastModifiedDate":"2024-04-03"},{"lineNumber":169,"author":{"gitId":"GERARDJM018"},"content":"        requireNonNull(type);","lastModifiedDate":"2024-04-03"},{"lineNumber":170,"author":{"gitId":"GERARDJM018"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-04-03"},{"lineNumber":171,"author":{"gitId":"GERARDJM018"},"content":"        this.actionWord \u003d actionWord;","lastModifiedDate":"2024-04-03"},{"lineNumber":172,"author":{"gitId":"GERARDJM018"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-04-03"},{"lineNumber":173,"author":{"gitId":"GERARDJM018"},"content":"        this.defer \u003d defer;","lastModifiedDate":"2024-04-03"},{"lineNumber":174,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":175,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":176,"author":{"gitId":"GERARDJM018"},"content":"    public BookingCommand() {","lastModifiedDate":"2024-04-03"},{"lineNumber":177,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":178,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":179,"author":{"gitId":"moguries"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":180,"author":{"gitId":"moguries"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-02"},{"lineNumber":181,"author":{"gitId":"LimZiJia"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-02"},{"lineNumber":182,"author":{"gitId":"LimZiJia"},"content":"        if (type.equals(\"client\")) {","lastModifiedDate":"2024-04-02"},{"lineNumber":183,"author":{"gitId":"LimZiJia"},"content":"            switch (actionWord) {","lastModifiedDate":"2024-04-02"},{"lineNumber":184,"author":{"gitId":"LimZiJia"},"content":"            case \"add\":","lastModifiedDate":"2024-04-02"},{"lineNumber":185,"author":{"gitId":"LimZiJia"},"content":"                return clientAdd(model);","lastModifiedDate":"2024-04-02"},{"lineNumber":186,"author":{"gitId":"LimZiJia"},"content":"            case \"delete\":","lastModifiedDate":"2024-04-02"},{"lineNumber":187,"author":{"gitId":"LimZiJia"},"content":"                return clientDelete(model);","lastModifiedDate":"2024-04-02"},{"lineNumber":188,"author":{"gitId":"LimZiJia"},"content":"            case \"set\":","lastModifiedDate":"2024-04-02"},{"lineNumber":189,"author":{"gitId":"LimZiJia"},"content":"                return clientSet(model);","lastModifiedDate":"2024-04-02"},{"lineNumber":190,"author":{"gitId":"LimZiJia"},"content":"            case \"remove\":","lastModifiedDate":"2024-04-02"},{"lineNumber":191,"author":{"gitId":"LimZiJia"},"content":"                return clientRemove(model);","lastModifiedDate":"2024-04-02"},{"lineNumber":192,"author":{"gitId":"GERARDJM018"},"content":"            case \"defer\":","lastModifiedDate":"2024-04-03"},{"lineNumber":193,"author":{"gitId":"GERARDJM018"},"content":"                return clientDefer(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":194,"author":{"gitId":"LimZiJia"},"content":"            default:","lastModifiedDate":"2024-04-02"},{"lineNumber":195,"author":{"gitId":"LimZiJia"},"content":"                throw new CommandException(MESSAGE_INVALID_ACTION);","lastModifiedDate":"2024-04-02"},{"lineNumber":196,"author":{"gitId":"LimZiJia"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":197,"author":{"gitId":"LimZiJia"},"content":"        } else if (type.equals(\"housekeeper\")) {","lastModifiedDate":"2024-04-02"},{"lineNumber":198,"author":{"gitId":"moguries"},"content":"            switch (actionWord) {","lastModifiedDate":"2024-04-02"},{"lineNumber":199,"author":{"gitId":"moguries"},"content":"            case \"add\":","lastModifiedDate":"2024-04-02"},{"lineNumber":200,"author":{"gitId":"LimZiJia"},"content":"                return housekeeperAdd(model);","lastModifiedDate":"2024-04-02"},{"lineNumber":201,"author":{"gitId":"LimZiJia"},"content":"            case \"delete\":","lastModifiedDate":"2024-04-02"},{"lineNumber":202,"author":{"gitId":"LimZiJia"},"content":"                return housekeeperDelete(model);","lastModifiedDate":"2024-04-02"},{"lineNumber":203,"author":{"gitId":"LimZiJia"},"content":"            case \"list\":","lastModifiedDate":"2024-04-02"},{"lineNumber":204,"author":{"gitId":"LimZiJia"},"content":"                return housekeeperList(model);","lastModifiedDate":"2024-04-02"},{"lineNumber":205,"author":{"gitId":"moguries"},"content":"            case \"search\":","lastModifiedDate":"2024-04-03"},{"lineNumber":206,"author":{"gitId":"moguries"},"content":"                return housekeeperSearch(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":207,"author":{"gitId":"LimZiJia"},"content":"            default:","lastModifiedDate":"2024-04-02"},{"lineNumber":208,"author":{"gitId":"LimZiJia"},"content":"                throw new CommandException(MESSAGE_INVALID_ACTION);","lastModifiedDate":"2024-04-02"},{"lineNumber":209,"author":{"gitId":"moguries"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":210,"author":{"gitId":"LimZiJia"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":211,"author":{"gitId":"LimZiJia"},"content":"            throw new CommandException(MESSAGE_INVALID_ACTION);","lastModifiedDate":"2024-04-02"},{"lineNumber":212,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":213,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":214,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":215,"author":{"gitId":"LimZiJia"},"content":"    private CommandResult clientAdd(Model model) throws CommandException {","lastModifiedDate":"2024-04-02"},{"lineNumber":216,"author":{"gitId":"LimZiJia"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2024-04-02"},{"lineNumber":217,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":218,"author":{"gitId":"LimZiJia"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":219,"author":{"gitId":"LimZiJia"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-02"},{"lineNumber":220,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":221,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":222,"author":{"gitId":"moguries"},"content":"        Booking booking;","lastModifiedDate":"2024-04-04"},{"lineNumber":223,"author":{"gitId":"moguries"},"content":"        try {","lastModifiedDate":"2024-04-04"},{"lineNumber":224,"author":{"gitId":"moguries"},"content":"            booking \u003d new Booking(bookedDateAndTime);","lastModifiedDate":"2024-04-04"},{"lineNumber":225,"author":{"gitId":"moguries"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-04-04"},{"lineNumber":226,"author":{"gitId":"moguries"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2024-04-04"},{"lineNumber":227,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":228,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":229,"author":{"gitId":"LimZiJia"},"content":"        Client clientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-04-02"},{"lineNumber":230,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":231,"author":{"gitId":"LimZiJia"},"content":"        if (!clientToEdit.hasHousekeepingDetails()) {","lastModifiedDate":"2024-04-05"},{"lineNumber":232,"author":{"gitId":"LimZiJia"},"content":"            throw new CommandException(NO_DETAILS_MESSAGE_CONSTRAINT);","lastModifiedDate":"2024-04-05"},{"lineNumber":233,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":234,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":235,"author":{"gitId":"LimZiJia"},"content":"        HousekeepingDetails details \u003d clientToEdit.getDetails();","lastModifiedDate":"2024-04-02"},{"lineNumber":236,"author":{"gitId":"LimZiJia"},"content":"        details.setBooking(booking);","lastModifiedDate":"2024-04-02"},{"lineNumber":237,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":238,"author":{"gitId":"LimZiJia"},"content":"        EditCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2024-04-02"},{"lineNumber":239,"author":{"gitId":"LimZiJia"},"content":"        editPersonDescriptor.setDetails(details);","lastModifiedDate":"2024-04-02"},{"lineNumber":240,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":241,"author":{"gitId":"LimZiJia"},"content":"        Command editClientCommand \u003d new EditClientCommand(index, editPersonDescriptor);","lastModifiedDate":"2024-04-02"},{"lineNumber":242,"author":{"gitId":"moguries"},"content":"        model.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2024-04-04"},{"lineNumber":243,"author":{"gitId":"LimZiJia"},"content":"        return editClientCommand.execute(model);","lastModifiedDate":"2024-04-02"},{"lineNumber":244,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":245,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":246,"author":{"gitId":"LimZiJia"},"content":"    private CommandResult clientDelete(Model model) throws CommandException {","lastModifiedDate":"2024-04-02"},{"lineNumber":247,"author":{"gitId":"LimZiJia"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2024-04-02"},{"lineNumber":248,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":249,"author":{"gitId":"LimZiJia"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":250,"author":{"gitId":"LimZiJia"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-02"},{"lineNumber":251,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":252,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":253,"author":{"gitId":"LimZiJia"},"content":"        Client clientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-04-02"},{"lineNumber":254,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":255,"author":{"gitId":"LimZiJia"},"content":"        if (!clientToEdit.hasHousekeepingDetails()) {","lastModifiedDate":"2024-04-05"},{"lineNumber":256,"author":{"gitId":"LimZiJia"},"content":"            throw new CommandException(NO_DETAILS_MESSAGE_CONSTRAINT);","lastModifiedDate":"2024-04-05"},{"lineNumber":257,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":258,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":259,"author":{"gitId":"LimZiJia"},"content":"        HousekeepingDetails details \u003d clientToEdit.getDetails();","lastModifiedDate":"2024-04-02"},{"lineNumber":260,"author":{"gitId":"LimZiJia"},"content":"        details.deleteBooking();","lastModifiedDate":"2024-04-02"},{"lineNumber":261,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":262,"author":{"gitId":"LimZiJia"},"content":"        EditCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2024-04-02"},{"lineNumber":263,"author":{"gitId":"LimZiJia"},"content":"        editPersonDescriptor.setDetails(details);","lastModifiedDate":"2024-04-02"},{"lineNumber":264,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":265,"author":{"gitId":"LimZiJia"},"content":"        Command editClientCommand \u003d new EditClientCommand(index, editPersonDescriptor);","lastModifiedDate":"2024-04-02"},{"lineNumber":266,"author":{"gitId":"LimZiJia"},"content":"        return editClientCommand.execute(model);","lastModifiedDate":"2024-04-02"},{"lineNumber":267,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":268,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":269,"author":{"gitId":"LimZiJia"},"content":"    private CommandResult clientSet(Model model) throws CommandException {","lastModifiedDate":"2024-04-02"},{"lineNumber":270,"author":{"gitId":"LimZiJia"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2024-04-02"},{"lineNumber":271,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":272,"author":{"gitId":"LimZiJia"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":273,"author":{"gitId":"LimZiJia"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-02"},{"lineNumber":274,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":275,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":276,"author":{"gitId":"LimZiJia"},"content":"        EditCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2024-04-02"},{"lineNumber":277,"author":{"gitId":"LimZiJia"},"content":"        editPersonDescriptor.setDetails(housekeepingDetails);","lastModifiedDate":"2024-04-02"},{"lineNumber":278,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":279,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":280,"author":{"gitId":"LimZiJia"},"content":"        Command editClientCommand \u003d new EditClientCommand(index, editPersonDescriptor);","lastModifiedDate":"2024-04-02"},{"lineNumber":281,"author":{"gitId":"LimZiJia"},"content":"        return editClientCommand.execute(model);","lastModifiedDate":"2024-04-02"},{"lineNumber":282,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":283,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":284,"author":{"gitId":"GERARDJM018"},"content":"    private CommandResult clientDefer(Model model) throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":285,"author":{"gitId":"GERARDJM018"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2024-04-03"},{"lineNumber":286,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":287,"author":{"gitId":"GERARDJM018"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":288,"author":{"gitId":"GERARDJM018"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-03"},{"lineNumber":289,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":290,"author":{"gitId":"LimZiJia"},"content":"        Client clientToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-04-05"},{"lineNumber":291,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":292,"author":{"gitId":"LimZiJia"},"content":"        if (!clientToEdit.hasHousekeepingDetails()) {","lastModifiedDate":"2024-04-05"},{"lineNumber":293,"author":{"gitId":"LimZiJia"},"content":"            throw new CommandException(NO_DETAILS_MESSAGE_CONSTRAINT);","lastModifiedDate":"2024-04-05"},{"lineNumber":294,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":295,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":296,"author":{"gitId":"LimZiJia"},"content":"        HousekeepingDetails detailsToEdit \u003d clientToEdit.getDetails();","lastModifiedDate":"2024-04-05"},{"lineNumber":297,"author":{"gitId":"GERARDJM018"},"content":"        detailsToEdit.addDeferment(defer);","lastModifiedDate":"2024-04-03"},{"lineNumber":298,"author":{"gitId":"GERARDJM018"},"content":"        return new CommandResult(String.format(MESSAGE_DEFER_PERSON_SUCCESS, detailsToEdit.getDefermentToString()));","lastModifiedDate":"2024-04-03"},{"lineNumber":299,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":300,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":301,"author":{"gitId":"LimZiJia"},"content":"    private CommandResult clientRemove(Model model) throws CommandException {","lastModifiedDate":"2024-04-02"},{"lineNumber":302,"author":{"gitId":"LimZiJia"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2024-04-02"},{"lineNumber":303,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":304,"author":{"gitId":"LimZiJia"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":305,"author":{"gitId":"LimZiJia"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-02"},{"lineNumber":306,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":307,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":308,"author":{"gitId":"LimZiJia"},"content":"        EditCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2024-04-02"},{"lineNumber":309,"author":{"gitId":"LimZiJia"},"content":"        editPersonDescriptor.setDetails(HousekeepingDetails.empty);","lastModifiedDate":"2024-04-02"},{"lineNumber":310,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":311,"author":{"gitId":"LimZiJia"},"content":"        Command editClientCommand \u003d new EditClientCommand(index, editPersonDescriptor);","lastModifiedDate":"2024-04-02"},{"lineNumber":312,"author":{"gitId":"LimZiJia"},"content":"        return editClientCommand.execute(model);","lastModifiedDate":"2024-04-02"},{"lineNumber":313,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":314,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":315,"author":{"gitId":"LimZiJia"},"content":"    private CommandResult housekeeperList(Model model) throws CommandException {","lastModifiedDate":"2024-04-02"},{"lineNumber":316,"author":{"gitId":"LimZiJia"},"content":"        List\u003cHousekeeper\u003e lastShownListList \u003d model.getFilteredHousekeeperList();","lastModifiedDate":"2024-04-02"},{"lineNumber":317,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":318,"author":{"gitId":"LimZiJia"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownListList.size()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":319,"author":{"gitId":"LimZiJia"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-02"},{"lineNumber":320,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":321,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":322,"author":{"gitId":"LimZiJia"},"content":"        Housekeeper housekeeperToListBooking \u003d lastShownListList.get(index.getZeroBased());","lastModifiedDate":"2024-04-02"},{"lineNumber":323,"author":{"gitId":"LimZiJia"},"content":"        String listResult \u003d housekeeperToListBooking.listBooking();","lastModifiedDate":"2024-04-02"},{"lineNumber":324,"author":{"gitId":"LimZiJia"},"content":"        return new CommandResult(listResult);","lastModifiedDate":"2024-04-02"},{"lineNumber":325,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":326,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":327,"author":{"gitId":"LimZiJia"},"content":"    private CommandResult housekeeperDelete(Model model) throws CommandException {","lastModifiedDate":"2024-04-02"},{"lineNumber":328,"author":{"gitId":"moguries"},"content":"        List\u003cHousekeeper\u003e lastShownListDelete \u003d model.getFilteredHousekeeperList();","lastModifiedDate":"2024-04-02"},{"lineNumber":329,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":330,"author":{"gitId":"LimZiJia"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownListDelete.size()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":331,"author":{"gitId":"moguries"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-02"},{"lineNumber":332,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":333,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":334,"author":{"gitId":"LimZiJia"},"content":"        Housekeeper housekeeperToDeleteBooking \u003d lastShownListDelete.get(index.getZeroBased());","lastModifiedDate":"2024-04-02"},{"lineNumber":335,"author":{"gitId":"moguries"},"content":"        if (!housekeeperToDeleteBooking.isValidDeleteIndex(bookingToDeleteIndex)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":336,"author":{"gitId":"moguries"},"content":"            throw new CommandException((BookingList.MESSAGE_INVALID_DELETE));","lastModifiedDate":"2024-04-02"},{"lineNumber":337,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":338,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":339,"author":{"gitId":"moguries"},"content":"        if (bookingToDeleteIndex \u003d\u003d 0) {","lastModifiedDate":"2024-04-02"},{"lineNumber":340,"author":{"gitId":"moguries"},"content":"            throw new CommandException(BookingList.MESSAGE_INVALID_DELETE);","lastModifiedDate":"2024-04-02"},{"lineNumber":341,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":342,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":343,"author":{"gitId":"moguries"},"content":"        String deleteResult \u003d housekeeperToDeleteBooking.deleteBooking(bookingToDeleteIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":344,"author":{"gitId":"moguries"},"content":"        return new CommandResult(deleteResult);","lastModifiedDate":"2024-04-02"},{"lineNumber":345,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":346,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":347,"author":{"gitId":"LimZiJia"},"content":"    private CommandResult housekeeperAdd(Model model) throws CommandException {","lastModifiedDate":"2024-04-02"},{"lineNumber":348,"author":{"gitId":"LimZiJia"},"content":"        List\u003cHousekeeper\u003e lastShownListAdd \u003d model.getFilteredHousekeeperList();","lastModifiedDate":"2024-04-02"},{"lineNumber":349,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":350,"author":{"gitId":"LimZiJia"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownListAdd.size()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":351,"author":{"gitId":"moguries"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-02"},{"lineNumber":352,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":353,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":354,"author":{"gitId":"LimZiJia"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":355,"author":{"gitId":"LimZiJia"},"content":"            Housekeeper housekeeperToAddBooking \u003d lastShownListAdd.get(index.getZeroBased());","lastModifiedDate":"2024-04-02"},{"lineNumber":356,"author":{"gitId":"LimZiJia"},"content":"            if (housekeeperToAddBooking.hasDuplicateBooking(bookedDateAndTime)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":357,"author":{"gitId":"LimZiJia"},"content":"                throw new CommandException(housekeeperToAddBooking.getName() + \" \" + BookingList.MESSAGE_DUPLICATE);","lastModifiedDate":"2024-04-02"},{"lineNumber":358,"author":{"gitId":"LimZiJia"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":359,"author":{"gitId":"LimZiJia"},"content":"            String addResult \u003d housekeeperToAddBooking.addBooking(bookedDateAndTime);","lastModifiedDate":"2024-04-02"},{"lineNumber":360,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":361,"author":{"gitId":"LimZiJia"},"content":"            // edit housekeeper with updated booking list","lastModifiedDate":"2024-04-02"},{"lineNumber":362,"author":{"gitId":"LimZiJia"},"content":"            EditCommand.EditPersonDescriptor editHousekeeperDescriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2024-04-02"},{"lineNumber":363,"author":{"gitId":"LimZiJia"},"content":"            editHousekeeperDescriptor.setBookingList(housekeeperToAddBooking.getBookingList());","lastModifiedDate":"2024-04-02"},{"lineNumber":364,"author":{"gitId":"LimZiJia"},"content":"            EditHousekeeperCommand command \u003d new EditHousekeeperCommand(index, editHousekeeperDescriptor);","lastModifiedDate":"2024-04-02"},{"lineNumber":365,"author":{"gitId":"LimZiJia"},"content":"            Housekeeper editedHousekeeper \u003d command.createEditedPerson(housekeeperToAddBooking, editHousekeeperDescriptor);","lastModifiedDate":"2024-04-02"},{"lineNumber":366,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":367,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":368,"author":{"gitId":"gosongying"},"content":"            model.setHousekeeper(housekeeperToAddBooking, editedHousekeeper);","lastModifiedDate":"2024-04-03"},{"lineNumber":369,"author":{"gitId":"LimZiJia"},"content":"            model.updateFilteredHousekeeperList(PREDICATE_SHOW_ALL_HOUSEKEEPERS);","lastModifiedDate":"2024-04-02"},{"lineNumber":370,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":371,"author":{"gitId":"gosongying"},"content":"            return new CommandResult(String.format(addResult, Messages.formatHousekeeper(housekeeperToAddBooking)));","lastModifiedDate":"2024-04-03"},{"lineNumber":372,"author":{"gitId":"LimZiJia"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":373,"author":{"gitId":"LimZiJia"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2024-04-02"},{"lineNumber":374,"author":{"gitId":"LimZiJia"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":375,"author":{"gitId":"LimZiJia"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2024-04-02"},{"lineNumber":376,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":377,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":378,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":379,"author":{"gitId":"moguries"},"content":"    private CommandResult housekeeperSearch(Model model) throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":380,"author":{"gitId":"moguries"},"content":"        // check if area is valid","lastModifiedDate":"2024-04-03"},{"lineNumber":381,"author":{"gitId":"moguries"},"content":"        if (!Area.isValidArea(bookingSearchPredicate.getArea())) {","lastModifiedDate":"2024-04-03"},{"lineNumber":382,"author":{"gitId":"moguries"},"content":"            throw new CommandException(Area.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":383,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":384,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":385,"author":{"gitId":"moguries"},"content":"        // check if booked date and time is valid","lastModifiedDate":"2024-04-03"},{"lineNumber":386,"author":{"gitId":"moguries"},"content":"        if (!Booking.isValidBookedDateAndTime(bookingSearchPredicate.getBookingToSearch())) {","lastModifiedDate":"2024-04-03"},{"lineNumber":387,"author":{"gitId":"moguries"},"content":"            throw new CommandException(Booking.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":388,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":389,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":390,"author":{"gitId":"moguries"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":391,"author":{"gitId":"moguries"},"content":"            String[] bookedDateAndTime \u003d bookingSearchPredicate.getBookingToSearch().split(\" \");","lastModifiedDate":"2024-04-03"},{"lineNumber":392,"author":{"gitId":"moguries"},"content":"            LocalDate.parse(bookedDateAndTime[0]);","lastModifiedDate":"2024-04-03"},{"lineNumber":393,"author":{"gitId":"moguries"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":394,"author":{"gitId":"moguries"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2024-04-03"},{"lineNumber":395,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":396,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":397,"author":{"gitId":"LimZiJia"},"content":"        model.updateFilteredHousekeeperList(bookingSearchPredicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":398,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":399,"author":{"gitId":"moguries"},"content":"        if (model.getFilteredHousekeeperList().size() \u003d\u003d 0) {","lastModifiedDate":"2024-04-03"},{"lineNumber":400,"author":{"gitId":"moguries"},"content":"            return new CommandResult(String.format(Messages.MESSAGE_NO_AVAILABLE_HOUSEKEEPERS_LISTED_OVERVIEW,","lastModifiedDate":"2024-04-03"},{"lineNumber":401,"author":{"gitId":"moguries"},"content":"                    bookingSearchPredicate.getArea(), bookingSearchPredicate.getBookingToSearch()));","lastModifiedDate":"2024-04-03"},{"lineNumber":402,"author":{"gitId":"moguries"},"content":"        } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":403,"author":{"gitId":"moguries"},"content":"            return new CommandResult(","lastModifiedDate":"2024-04-03"},{"lineNumber":404,"author":{"gitId":"moguries"},"content":"                    String.format(Messages.MESSAGE_AVAILABLE_HOUSEKEEPERS_LISTED_OVERVIEW,","lastModifiedDate":"2024-04-03"},{"lineNumber":405,"author":{"gitId":"moguries"},"content":"                            model.getFilteredHousekeeperList().size(), bookingSearchPredicate.getArea(),","lastModifiedDate":"2024-04-03"},{"lineNumber":406,"author":{"gitId":"moguries"},"content":"                            bookingSearchPredicate.getBookingToSearch()));","lastModifiedDate":"2024-04-03"},{"lineNumber":407,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":408,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":409,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":410,"author":{"gitId":"moguries"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":411,"author":{"gitId":"moguries"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-02"},{"lineNumber":412,"author":{"gitId":"moguries"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-02"},{"lineNumber":413,"author":{"gitId":"moguries"},"content":"            return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":414,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":415,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":416,"author":{"gitId":"moguries"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-02"},{"lineNumber":417,"author":{"gitId":"moguries"},"content":"        if (!(other instanceof BookingCommand)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":418,"author":{"gitId":"moguries"},"content":"            return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":419,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":420,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":421,"author":{"gitId":"moguries"},"content":"        BookingCommand otherBookingCommand \u003d (BookingCommand) other;","lastModifiedDate":"2024-04-02"},{"lineNumber":422,"author":{"gitId":"moguries"},"content":"        return actionWord.equals(otherBookingCommand.actionWord)","lastModifiedDate":"2024-04-02"},{"lineNumber":423,"author":{"gitId":"LimZiJia"},"content":"                \u0026\u0026 index.equals(otherBookingCommand.index)","lastModifiedDate":"2024-04-02"},{"lineNumber":424,"author":{"gitId":"moguries"},"content":"                \u0026\u0026 (bookingToDeleteIndex \u003d\u003d otherBookingCommand.bookingToDeleteIndex)","lastModifiedDate":"2024-04-02"},{"lineNumber":425,"author":{"gitId":"moguries"},"content":"                \u0026\u0026 bookedDateAndTime.equals(otherBookingCommand.bookedDateAndTime);","lastModifiedDate":"2024-04-02"},{"lineNumber":426,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":427,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":428,"author":{"gitId":"moguries"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":429,"author":{"gitId":"moguries"},"content":"    public String toString() {","lastModifiedDate":"2024-04-02"},{"lineNumber":430,"author":{"gitId":"moguries"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-04-02"},{"lineNumber":431,"author":{"gitId":"moguries"},"content":"                .add(\"actionWord\", actionWord)","lastModifiedDate":"2024-04-02"},{"lineNumber":432,"author":{"gitId":"LimZiJia"},"content":"                .add(\"housekeeperIndex\", index)","lastModifiedDate":"2024-04-02"},{"lineNumber":433,"author":{"gitId":"moguries"},"content":"                .add(\"bookingToDeleteIndex\", bookingToDeleteIndex)","lastModifiedDate":"2024-04-02"},{"lineNumber":434,"author":{"gitId":"moguries"},"content":"                .add(\"bookedDateAndTime\", bookedDateAndTime)","lastModifiedDate":"2024-04-02"},{"lineNumber":435,"author":{"gitId":"moguries"},"content":"                .toString();","lastModifiedDate":"2024-04-02"},{"lineNumber":436,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":437,"author":{"gitId":"moguries"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"LimZiJia":182,"moguries":222,"gosongying":2,"GERARDJM018":31}},{"path":"src/main/java/housekeeping/hub/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.AddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":" * Clears the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LimZiJia":4,"-":19}},{"path":"src/main/java/housekeeping/hub/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LimZiJia":3,"-":17}},{"path":"src/main/java/housekeeping/hub/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LimZiJia":2,"-":80}},{"path":"src/main/java/housekeeping/hub/logic/commands/DeleteClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"gosongying"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"gosongying"},"content":"import java.util.List;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.index.Index;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.Messages;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"gosongying"},"content":"public class DeleteClientCommand extends DeleteCommand {","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"gosongying"},"content":"    public static final String MESSAGE_DELETE_CLIENT_SUCCESS \u003d \"Deleted Client: %1$s\";","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"gosongying"},"content":"    public DeleteClientCommand(Index targetIndex) {","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"gosongying"},"content":"        super(targetIndex);","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"gosongying"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"gosongying"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"gosongying"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"gosongying"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"gosongying"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"gosongying"},"content":"        Client clientToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"gosongying"},"content":"        model.deleteClient(clientToDelete);","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"gosongying"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_CLIENT_SUCCESS, Messages.formatClient(clientToDelete)));","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"gosongying"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"LimZiJia":6,"gosongying":27}},{"path":"src/main/java/housekeeping/hub/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.index.Index;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":" * Deletes a person identified using it\u0027s displayed index from the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"gosongying"},"content":"abstract public class DeleteCommand extends Command {","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"gosongying"},"content":"            + \": Deletes the client or housekeeper identified by the index number used in the displayed client or \"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"gosongying"},"content":"            + \"housekeeper list.\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"gosongying"},"content":"            + \"Parameters: TYPE(client or housekeeper) INDEX(must be a positive integer)\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"gosongying"},"content":"            + \"Example: \" + COMMAND_WORD + \" client 1\";","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"gosongying"},"content":"    protected final Index targetIndex;","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LimZiJia":4,"gosongying":6,"-":38}},{"path":"src/main/java/housekeeping/hub/logic/commands/DeleteHousekeeperCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"gosongying"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"gosongying"},"content":"import java.util.List;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.index.Index;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.Messages;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Housekeeper;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"gosongying"},"content":"public class DeleteHousekeeperCommand extends DeleteCommand {","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"gosongying"},"content":"    public static final String MESSAGE_DELETE_HOUSEKEEPER_SUCCESS \u003d \"Deleted Housekeeper: %1$s\";","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"gosongying"},"content":"    public DeleteHousekeeperCommand(Index targetIndex) {","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"gosongying"},"content":"        super(targetIndex);","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"gosongying"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"gosongying"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"gosongying"},"content":"        List\u003cHousekeeper\u003e lastShownList \u003d model.getFilteredHousekeeperList();","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"gosongying"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"gosongying"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_HOUSEKEEPER_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"gosongying"},"content":"        Housekeeper housekeeperToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"gosongying"},"content":"        model.deleteHousekeeper(housekeeperToDelete);","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"gosongying"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_HOUSEKEEPER_SUCCESS,","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"gosongying"},"content":"                Messages.formatHousekeeper(housekeeperToDelete)));","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"gosongying"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"LimZiJia":6,"gosongying":28}},{"path":"src/main/java/housekeeping/hub/logic/commands/EditClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"gosongying"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"gosongying"},"content":"import java.util.List;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"gosongying"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.index.Index;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.Messages;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Address;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Area;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Email;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.HousekeepingDetails;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Name;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Person;","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Phone;","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.tag.Tag;","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"gosongying"},"content":"public class EditClientCommand extends EditCommand {","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"gosongying"},"content":"    public static final String MESSAGE_EDIT_CLIENT_SUCCESS \u003d \"Edited Client: %1$s\";","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"This client already exists in the hub book.\";","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"gosongying"},"content":"    public EditClientCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"gosongying"},"content":"        super(index, editPersonDescriptor);","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"gosongying"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"gosongying"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"gosongying"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"gosongying"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"gosongying"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"gosongying"},"content":"        Client personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"gosongying"},"content":"        Client editedClient \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"gosongying"},"content":"        if (!personToEdit.isSamePerson(editedClient) \u0026\u0026 model.hasClient(editedClient)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"gosongying"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"gosongying"},"content":"        model.setClient(personToEdit, editedClient);","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"gosongying"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_CLIENT_SUCCESS, Messages.formatClient(editedClient)));","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"gosongying"},"content":"     * Creates and returns a {@code Client} with the details of {@code personToEdit}","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"gosongying"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"gosongying"},"content":"    protected Client createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"gosongying"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"gosongying"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"gosongying"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"gosongying"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"gosongying"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"gosongying"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"GERARDJM018"},"content":"        Area updatedArea \u003d editPersonDescriptor.getArea().orElse(personToEdit.getArea());","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"LimZiJia"},"content":"        HousekeepingDetails updatedDetails \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"LimZiJia"},"content":"                editPersonDescriptor.getDetails().orElse(personToEdit.getDetails());","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"gosongying"},"content":"        return new Client(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, updatedDetails,","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"gosongying"},"content":"                updatedArea);","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"gosongying"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"LimZiJia":18,"gosongying":52,"GERARDJM018":1}},{"path":"src/main/java/housekeeping/hub/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.index.Index;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.CollectionUtil;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Address;","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.BookingList;","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Area;","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Email;","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.HousekeepingDetails;","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Name;","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Person;","lastModifiedDate":"2024-04-05"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Phone;","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.tag.Tag;","lastModifiedDate":"2024-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":" * Edits the details of an existing person in the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"gosongying"},"content":"abstract public class EditCommand extends Command {","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"gosongying"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the client or housekeeper \"","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"gosongying"},"content":"            + \"identified by the index number used in the displayed person list. \"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"gosongying"},"content":"            + \"TYPE(client or housekeeper) \"","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"gosongying"},"content":"            + \"Example: \" + COMMAND_WORD + \" client 1 \"","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"gosongying"},"content":"    protected final Index index;","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"gosongying"},"content":"    protected final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"gosongying"},"content":"    abstract protected Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor);","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":107,"author":{"gitId":"moguries"},"content":"        private BookingList bookingList;","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"LimZiJia"},"content":"        private HousekeepingDetails details;","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"GERARDJM018"},"content":"        private Area area;","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":123,"author":{"gitId":"moguries"},"content":"            setBookingList(toCopy.bookingList);","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"LimZiJia"},"content":"            setDetails(toCopy.details);","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"GERARDJM018"},"content":"            setArea(toCopy.area);","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"gosongying"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags, area, bookingList);","lastModifiedDate":"2024-04-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":184,"author":{"gitId":"moguries"},"content":"        public void setBookingList(BookingList bookingList) {","lastModifiedDate":"2024-04-02"},{"lineNumber":185,"author":{"gitId":"moguries"},"content":"            this.bookingList \u003d bookingList;","lastModifiedDate":"2024-04-02"},{"lineNumber":186,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":187,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":188,"author":{"gitId":"moguries"},"content":"        public Optional\u003cBookingList\u003e getBookingList() {","lastModifiedDate":"2024-04-02"},{"lineNumber":189,"author":{"gitId":"moguries"},"content":"            return Optional.ofNullable(bookingList);","lastModifiedDate":"2024-04-02"},{"lineNumber":190,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":191,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":192,"author":{"gitId":"LimZiJia"},"content":"        public void setDetails(HousekeepingDetails details) {","lastModifiedDate":"2024-03-28"},{"lineNumber":193,"author":{"gitId":"LimZiJia"},"content":"            this.details \u003d details;","lastModifiedDate":"2024-03-28"},{"lineNumber":194,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":195,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":196,"author":{"gitId":"LimZiJia"},"content":"        public Optional\u003cHousekeepingDetails\u003e getDetails() {","lastModifiedDate":"2024-04-02"},{"lineNumber":197,"author":{"gitId":"LimZiJia"},"content":"            return Optional.ofNullable(details);","lastModifiedDate":"2024-03-28"},{"lineNumber":198,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":199,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":200,"author":{"gitId":"GERARDJM018"},"content":"        public void setArea(Area area) {","lastModifiedDate":"2024-03-28"},{"lineNumber":201,"author":{"gitId":"GERARDJM018"},"content":"            this.area \u003d area;","lastModifiedDate":"2024-03-28"},{"lineNumber":202,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":203,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":204,"author":{"gitId":"GERARDJM018"},"content":"        public Optional\u003cArea\u003e getArea() {","lastModifiedDate":"2024-03-28"},{"lineNumber":205,"author":{"gitId":"GERARDJM018"},"content":"            return Optional.ofNullable(area);","lastModifiedDate":"2024-03-28"},{"lineNumber":206,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":207,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":224,"author":{"gitId":"GERARDJM018"},"content":"                    \u0026\u0026 Objects.equals(area, otherEditPersonDescriptor.area)","lastModifiedDate":"2024-03-28"},{"lineNumber":225,"author":{"gitId":"LimZiJia"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags)","lastModifiedDate":"2024-03-19"},{"lineNumber":226,"author":{"gitId":"moguries"},"content":"                    \u0026\u0026 Objects.equals(bookingList, otherEditPersonDescriptor.bookingList);","lastModifiedDate":"2024-04-02"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":235,"author":{"gitId":"LimZiJia"},"content":"                    .add(\"hub\", address)","lastModifiedDate":"2024-04-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":237,"author":{"gitId":"GERARDJM018"},"content":"                    .add(\"area\", area)","lastModifiedDate":"2024-03-28"},{"lineNumber":238,"author":{"gitId":"moguries"},"content":"                    .add(\"booking list\", bookingList)","lastModifiedDate":"2024-04-02"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"LimZiJia":32,"moguries":13,"gosongying":10,"-":178,"GERARDJM018":9}},{"path":"src/main/java/housekeeping/hub/logic/commands/EditHousekeeperCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"gosongying"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.model.Model.PREDICATE_SHOW_ALL_HOUSEKEEPERS;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"gosongying"},"content":"import java.util.List;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"gosongying"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.index.Index;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.Messages;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Address;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Area;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Email;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Housekeeper;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Name;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Person;","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Phone;","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.BookingList;","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.tag.Tag;","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"gosongying"},"content":"public class EditHousekeeperCommand extends EditCommand {","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"gosongying"},"content":"    public static final String MESSAGE_EDIT_HOUSEKEEPER_SUCCESS \u003d \"Edited Housekeeper: %1$s\";","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"    public static final String MESSAGE_DUPLICATE_HOUSEKEEPER \u003d \"This housekeeper already exists in the hub book.\";","lastModifiedDate":"2024-04-05"},{"lineNumber":26,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"gosongying"},"content":"    public EditHousekeeperCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"gosongying"},"content":"        super(index, editPersonDescriptor);","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"gosongying"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"gosongying"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"gosongying"},"content":"        List\u003cHousekeeper\u003e lastShownList \u003d model.getFilteredHousekeeperList();","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"gosongying"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"gosongying"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_HOUSEKEEPER_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"gosongying"},"content":"        Housekeeper personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"gosongying"},"content":"        Housekeeper editedHousekeeper \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"gosongying"},"content":"        if (!personToEdit.isSamePerson(editedHousekeeper) \u0026\u0026 model.hasHousekeeper(editedHousekeeper)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"gosongying"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_HOUSEKEEPER);","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"gosongying"},"content":"        model.setHousekeeper(personToEdit, editedHousekeeper);","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"gosongying"},"content":"        model.updateFilteredHousekeeperList(PREDICATE_SHOW_ALL_HOUSEKEEPERS);","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"gosongying"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_HOUSEKEEPER_SUCCESS,","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"gosongying"},"content":"                Messages.formatHousekeeper(editedHousekeeper)));","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"gosongying"},"content":"     * Creates and returns a {@code Housekeeper} with the details of {@code personToEdit}","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"gosongying"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"gosongying"},"content":"    protected Housekeeper createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"gosongying"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"moguries"},"content":"        Housekeeper housekeeperToEdit \u003d (Housekeeper) personToEdit; // to use getBookingList()","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"gosongying"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"gosongying"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"gosongying"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"gosongying"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"gosongying"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"GERARDJM018"},"content":"        Area updatedArea \u003d editPersonDescriptor.getArea().orElse(personToEdit.getArea());","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"moguries"},"content":"        BookingList updatedBookingList \u003d editPersonDescriptor.getBookingList()","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"moguries"},"content":"                .orElse(housekeeperToEdit.getBookingList());","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"moguries"},"content":"        return new Housekeeper(","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"gosongying"},"content":"                updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, updatedArea, updatedBookingList);","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"gosongying"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"LimZiJia":16,"moguries":4,"gosongying":53,"GERARDJM018":1}},{"path":"src/main/java/housekeeping/hub/logic/commands/EditHousekeepingDetailsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_LHD;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_PI;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":"import java.time.Period;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":"import java.util.*;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.index.Index;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.CollectionUtil;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.Messages;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Address;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Area;","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Booking;","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Email;","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.HousekeepingDetails;","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Name;","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Person;","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Phone;","lastModifiedDate":"2024-04-05"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.tag.Tag;","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"GERARDJM018"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":" * Edits the details of an existing person in the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":30,"author":{"gitId":"GERARDJM018"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"GERARDJM018"},"content":"public class EditHousekeepingDetailsCommand extends BookingCommand {","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"GERARDJM018"},"content":"    public static final String COMMAND_WORD \u003d \"booking client edit\";","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the booking details of the person identified \"","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"GERARDJM018"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"GERARDJM018"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"GERARDJM018"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"GERARDJM018"},"content":"            + \"[\" + PREFIX_PI + \"PREFERRED INTERVAL] \"","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"GERARDJM018"},"content":"            + \"[\" + PREFIX_LHD + \"LAST HOUSEKEEPING DATE] \"","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"GERARDJM018"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"GERARDJM018"},"content":"            + PREFIX_PI + \"1 months \"","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"GERARDJM018"},"content":"            + PREFIX_LHD + \"2024-01-02\";","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"GERARDJM018"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"GERARDJM018"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"LimZiJia"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the hub book.\";","lastModifiedDate":"2024-04-05"},{"lineNumber":48,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"GERARDJM018"},"content":"    protected final Index index;","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"GERARDJM018"},"content":"    protected final EditHousekeepingDetailsDescriptor editPersonDescriptor;","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"GERARDJM018"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"GERARDJM018"},"content":"     * @param editHousekeepingDetailsDescriptor details to edit the person with","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"GERARDJM018"},"content":"    public EditHousekeepingDetailsCommand(Index index,","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"GERARDJM018"},"content":"                                          EditHousekeepingDetailsDescriptor editHousekeepingDetailsDescriptor) {","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"GERARDJM018"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"GERARDJM018"},"content":"        requireNonNull(editHousekeepingDetailsDescriptor);","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"GERARDJM018"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"GERARDJM018"},"content":"        this.editPersonDescriptor \u003d new EditHousekeepingDetailsDescriptor(editHousekeepingDetailsDescriptor);","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"GERARDJM018"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"GERARDJM018"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"GERARDJM018"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"GERARDJM018"},"content":"        List\u003cClient\u003e lastShownList \u003d model.getFilteredClientList();","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"GERARDJM018"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"GERARDJM018"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"GERARDJM018"},"content":"        Client personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"LimZiJia"},"content":"        if (!personToEdit.hasHousekeepingDetails()) {","lastModifiedDate":"2024-04-05"},{"lineNumber":76,"author":{"gitId":"LimZiJia"},"content":"            throw new CommandException(NO_DETAILS_MESSAGE_CONSTRAINT);","lastModifiedDate":"2024-04-05"},{"lineNumber":77,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":78,"author":{"gitId":"GERARDJM018"},"content":"        Client editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"GERARDJM018"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasClient(editedPerson)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"GERARDJM018"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"GERARDJM018"},"content":"        model.setClient(personToEdit, editedPerson);","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"GERARDJM018"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.formatClient(editedPerson)));","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"GERARDJM018"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"GERARDJM018"},"content":"     * edited with {@code editHousekeepingDetailsDescriptor}.","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"GERARDJM018"},"content":"    protected Client createEditedPerson","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"GERARDJM018"},"content":"    (Person personToEdit,","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"GERARDJM018"},"content":"     EditHousekeepingDetailsCommand.EditHousekeepingDetailsDescriptor editHousekeepingDetailsDescriptor) {","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"GERARDJM018"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"GERARDJM018"},"content":"        Name updatedName \u003d personToEdit.getName();","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"GERARDJM018"},"content":"        Phone updatedPhone \u003d personToEdit.getPhone();","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"GERARDJM018"},"content":"        Email updatedEmail \u003d personToEdit.getEmail();","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"GERARDJM018"},"content":"        Address updatedAddress \u003d personToEdit.getAddress();","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"GERARDJM018"},"content":"        Set\u003cTag\u003e updatedTags \u003d personToEdit.getTags();","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"GERARDJM018"},"content":"        Area updatedArea \u003d personToEdit.getArea();","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"GERARDJM018"},"content":"        LocalDate updatedLastHousekeepingDate \u003d editHousekeepingDetailsDescriptor.getLastHousekeepingDate()","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"GERARDJM018"},"content":"                .orElse(personToEdit.getDetails().getLastHousekeepingDate());","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"GERARDJM018"},"content":"        Period updatedPreferredInterval \u003d editHousekeepingDetailsDescriptor.getPreferredInterval()","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"GERARDJM018"},"content":"                .orElse(personToEdit.getDetails().getPreferredInterval());","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"GERARDJM018"},"content":"        Period updatedDeferment \u003d editHousekeepingDetailsDescriptor.getDeferment()","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"GERARDJM018"},"content":"                .orElse(personToEdit.getDetails().getDeferment());","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"GERARDJM018"},"content":"        Booking updatedBooking \u003d editHousekeepingDetailsDescriptor.getBooking()","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"GERARDJM018"},"content":"                .orElse(personToEdit.getDetails().getBooking());","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"GERARDJM018"},"content":"        HousekeepingDetails updatedDetails \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"GERARDJM018"},"content":"                new HousekeepingDetails(updatedLastHousekeepingDate, updatedPreferredInterval);","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"GERARDJM018"},"content":"        updatedDetails.addDeferment(updatedDeferment);","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"GERARDJM018"},"content":"        updatedDetails.setBooking(updatedBooking);","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"gosongying"},"content":"        return new Client(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags,","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"GERARDJM018"},"content":"                updatedDetails, updatedArea);","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"GERARDJM018"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"GERARDJM018"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"GERARDJM018"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"GERARDJM018"},"content":"            return true;","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"GERARDJM018"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"GERARDJM018"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"GERARDJM018"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"GERARDJM018"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"GERARDJM018"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"GERARDJM018"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":136,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"GERARDJM018"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"GERARDJM018"},"content":"    public String toString() {","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"GERARDJM018"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"GERARDJM018"},"content":"                .add(\"index\", index)","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"GERARDJM018"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"GERARDJM018"},"content":"                .toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"GERARDJM018"},"content":"     * Stores the booking details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"GERARDJM018"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"GERARDJM018"},"content":"    public static class EditHousekeepingDetailsDescriptor {","lastModifiedDate":"2024-04-03"},{"lineNumber":150,"author":{"gitId":"GERARDJM018"},"content":"        private LocalDate lastHousekeepingDate;","lastModifiedDate":"2024-04-03"},{"lineNumber":151,"author":{"gitId":"GERARDJM018"},"content":"        private Period preferredInterval;","lastModifiedDate":"2024-04-03"},{"lineNumber":152,"author":{"gitId":"GERARDJM018"},"content":"        private Period deferment;","lastModifiedDate":"2024-04-04"},{"lineNumber":153,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":154,"author":{"gitId":"GERARDJM018"},"content":"        private Booking booking;","lastModifiedDate":"2024-04-04"},{"lineNumber":155,"author":{"gitId":"GERARDJM018"},"content":"        public EditHousekeepingDetailsDescriptor() {}","lastModifiedDate":"2024-04-03"},{"lineNumber":156,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":157,"author":{"gitId":"GERARDJM018"},"content":"        /**","lastModifiedDate":"2024-04-03"},{"lineNumber":158,"author":{"gitId":"GERARDJM018"},"content":"         * Copy constructor.","lastModifiedDate":"2024-04-03"},{"lineNumber":159,"author":{"gitId":"GERARDJM018"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-04-03"},{"lineNumber":160,"author":{"gitId":"GERARDJM018"},"content":"         */","lastModifiedDate":"2024-04-03"},{"lineNumber":161,"author":{"gitId":"GERARDJM018"},"content":"        public EditHousekeepingDetailsDescriptor(EditHousekeepingDetailsDescriptor toCopy) {","lastModifiedDate":"2024-04-03"},{"lineNumber":162,"author":{"gitId":"GERARDJM018"},"content":"            setLastHousekeepingDate(toCopy.lastHousekeepingDate);","lastModifiedDate":"2024-04-03"},{"lineNumber":163,"author":{"gitId":"GERARDJM018"},"content":"            setPreferredInterval(toCopy.preferredInterval);","lastModifiedDate":"2024-04-03"},{"lineNumber":164,"author":{"gitId":"GERARDJM018"},"content":"            setDeferment(toCopy.deferment);","lastModifiedDate":"2024-04-04"},{"lineNumber":165,"author":{"gitId":"GERARDJM018"},"content":"            setBooking(toCopy.booking);","lastModifiedDate":"2024-04-04"},{"lineNumber":166,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":167,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":168,"author":{"gitId":"GERARDJM018"},"content":"        /**","lastModifiedDate":"2024-04-03"},{"lineNumber":169,"author":{"gitId":"GERARDJM018"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2024-04-03"},{"lineNumber":170,"author":{"gitId":"GERARDJM018"},"content":"         */","lastModifiedDate":"2024-04-03"},{"lineNumber":171,"author":{"gitId":"GERARDJM018"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2024-04-03"},{"lineNumber":172,"author":{"gitId":"GERARDJM018"},"content":"            return CollectionUtil.isAnyNonNull(lastHousekeepingDate, preferredInterval, booking, deferment);","lastModifiedDate":"2024-04-04"},{"lineNumber":173,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":174,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":175,"author":{"gitId":"GERARDJM018"},"content":"        public void setLastHousekeepingDate(LocalDate lHD) {","lastModifiedDate":"2024-04-03"},{"lineNumber":176,"author":{"gitId":"GERARDJM018"},"content":"            lastHousekeepingDate \u003d lHD;","lastModifiedDate":"2024-04-03"},{"lineNumber":177,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":178,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":179,"author":{"gitId":"GERARDJM018"},"content":"        public Optional\u003cLocalDate\u003e getLastHousekeepingDate() {","lastModifiedDate":"2024-04-03"},{"lineNumber":180,"author":{"gitId":"GERARDJM018"},"content":"            return Optional.ofNullable(lastHousekeepingDate);","lastModifiedDate":"2024-04-03"},{"lineNumber":181,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":182,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":183,"author":{"gitId":"GERARDJM018"},"content":"        public void setPreferredInterval(Period preferredInterval) {","lastModifiedDate":"2024-04-03"},{"lineNumber":184,"author":{"gitId":"GERARDJM018"},"content":"            this.preferredInterval \u003d preferredInterval;","lastModifiedDate":"2024-04-03"},{"lineNumber":185,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":186,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":187,"author":{"gitId":"GERARDJM018"},"content":"        public Optional\u003cPeriod\u003e getPreferredInterval() {","lastModifiedDate":"2024-04-03"},{"lineNumber":188,"author":{"gitId":"GERARDJM018"},"content":"            return Optional.ofNullable(preferredInterval);","lastModifiedDate":"2024-04-03"},{"lineNumber":189,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":190,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":191,"author":{"gitId":"GERARDJM018"},"content":"        public void setDeferment(Period deferment) {","lastModifiedDate":"2024-04-04"},{"lineNumber":192,"author":{"gitId":"GERARDJM018"},"content":"            this.deferment \u003d deferment;","lastModifiedDate":"2024-04-04"},{"lineNumber":193,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":194,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":195,"author":{"gitId":"GERARDJM018"},"content":"        public Optional\u003cPeriod\u003e getDeferment() {","lastModifiedDate":"2024-04-04"},{"lineNumber":196,"author":{"gitId":"GERARDJM018"},"content":"            return Optional.ofNullable(deferment);","lastModifiedDate":"2024-04-04"},{"lineNumber":197,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":198,"author":{"gitId":"GERARDJM018"},"content":"        public void setBooking(Booking booking) {","lastModifiedDate":"2024-04-04"},{"lineNumber":199,"author":{"gitId":"GERARDJM018"},"content":"            this.booking \u003d booking;","lastModifiedDate":"2024-04-04"},{"lineNumber":200,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":201,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":202,"author":{"gitId":"GERARDJM018"},"content":"        public Optional\u003cBooking\u003e getBooking() {","lastModifiedDate":"2024-04-04"},{"lineNumber":203,"author":{"gitId":"GERARDJM018"},"content":"            return Optional.ofNullable(booking);","lastModifiedDate":"2024-04-04"},{"lineNumber":204,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":205,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":206,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":207,"author":{"gitId":"GERARDJM018"},"content":"        @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":208,"author":{"gitId":"GERARDJM018"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":209,"author":{"gitId":"GERARDJM018"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-03"},{"lineNumber":210,"author":{"gitId":"GERARDJM018"},"content":"                return true;","lastModifiedDate":"2024-04-03"},{"lineNumber":211,"author":{"gitId":"GERARDJM018"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":212,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":213,"author":{"gitId":"GERARDJM018"},"content":"            // instanceof handles nulls","lastModifiedDate":"2024-04-03"},{"lineNumber":214,"author":{"gitId":"GERARDJM018"},"content":"            if (!(other instanceof EditHousekeepingDetailsDescriptor)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":215,"author":{"gitId":"GERARDJM018"},"content":"                return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":216,"author":{"gitId":"GERARDJM018"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":217,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":218,"author":{"gitId":"GERARDJM018"},"content":"            EditHousekeepingDetailsDescriptor otherEditPersonDescriptor \u003d (EditHousekeepingDetailsDescriptor) other;","lastModifiedDate":"2024-04-03"},{"lineNumber":219,"author":{"gitId":"GERARDJM018"},"content":"            return Objects.equals(lastHousekeepingDate, otherEditPersonDescriptor.lastHousekeepingDate)","lastModifiedDate":"2024-04-03"},{"lineNumber":220,"author":{"gitId":"GERARDJM018"},"content":"                    \u0026\u0026 Objects.equals(deferment, otherEditPersonDescriptor.deferment)","lastModifiedDate":"2024-04-04"},{"lineNumber":221,"author":{"gitId":"GERARDJM018"},"content":"                    \u0026\u0026 Objects.equals(booking, otherEditPersonDescriptor.booking)","lastModifiedDate":"2024-04-04"},{"lineNumber":222,"author":{"gitId":"GERARDJM018"},"content":"                    \u0026\u0026 Objects.equals(preferredInterval, otherEditPersonDescriptor.preferredInterval);","lastModifiedDate":"2024-04-03"},{"lineNumber":223,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":224,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":225,"author":{"gitId":"GERARDJM018"},"content":"        @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":226,"author":{"gitId":"GERARDJM018"},"content":"        public String toString() {","lastModifiedDate":"2024-04-03"},{"lineNumber":227,"author":{"gitId":"GERARDJM018"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2024-04-03"},{"lineNumber":228,"author":{"gitId":"GERARDJM018"},"content":"                    .add(\"last housekeeping date\", lastHousekeepingDate)","lastModifiedDate":"2024-04-03"},{"lineNumber":229,"author":{"gitId":"GERARDJM018"},"content":"                    .add(\"preferred interval\", preferredInterval)","lastModifiedDate":"2024-04-03"},{"lineNumber":230,"author":{"gitId":"GERARDJM018"},"content":"                    .add(\"booking date\", booking)","lastModifiedDate":"2024-04-04"},{"lineNumber":231,"author":{"gitId":"GERARDJM018"},"content":"                    .add(\"deferment\", deferment)","lastModifiedDate":"2024-04-04"},{"lineNumber":232,"author":{"gitId":"GERARDJM018"},"content":"                    .toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":233,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":234,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":235,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"LimZiJia":24,"gosongying":1,"GERARDJM018":210}},{"path":"src/main/java/housekeeping/hub/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"LimZiJia":2,"-":17}},{"path":"src/main/java/housekeeping/hub/logic/commands/FindClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"gosongying"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.Messages;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.ContainsKeywordsPredicate;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"gosongying"},"content":"public class FindClientCommand extends FindCommand {","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"gosongying"},"content":"    public FindClientCommand(ContainsKeywordsPredicate predicate) {","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"gosongying"},"content":"        super(predicate);","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"gosongying"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"gosongying"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"gosongying"},"content":"        model.updateFilteredClientList(predicate);","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"gosongying"},"content":"        return new CommandResult(","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"gosongying"},"content":"                String.format(Messages.MESSAGE_CLIENTS_LISTED_OVERVIEW, model.getFilteredClientList().size()));","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"gosongying"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"LimZiJia":4,"gosongying":17}},{"path":"src/main/java/housekeeping/hub/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.ContainsKeywordsPredicate;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":" * Finds and lists all persons in hub book whose name contains any of the argument keywords.","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"gosongying"},"content":"abstract public class FindCommand extends Command {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"moguries"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all clients or housekeepers filtered by \"","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"            + \"the specified attribute(s). Valid attributes: {name, phone, hub, area}\\n\"","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"moguries"},"content":"            + \"Parameters: TYPE(client or housekeeper) PREFIX/KEYWORD [PREFIX/KEYWORDS...] (optional)\\n\"","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"moguries"},"content":"            + \"Example: \" + COMMAND_WORD + \" client n/alice p/90274629\";","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"gosongying"},"content":"    public static final String MESSAGE_NOT_FOUND \u003d \"At least one field to find must be provided.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"gosongying"},"content":"    protected final ContainsKeywordsPredicate predicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"gosongying"},"content":"    public FindCommand(ContainsKeywordsPredicate predicate) {","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"LimZiJia":5,"moguries":3,"gosongying":5,"-":36,"GERARDJM018":2}},{"path":"src/main/java/housekeeping/hub/logic/commands/FindHousekeeperCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"gosongying"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.Messages;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.ContainsKeywordsPredicate;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"gosongying"},"content":"public class FindHousekeeperCommand extends FindCommand {","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"gosongying"},"content":"    public FindHousekeeperCommand(ContainsKeywordsPredicate predicate) {","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"gosongying"},"content":"        super(predicate);","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"gosongying"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"gosongying"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"gosongying"},"content":"        model.updateFilteredHousekeeperList(predicate);","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"gosongying"},"content":"        return new CommandResult(","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"gosongying"},"content":"                String.format(Messages.MESSAGE_HOUSEKEEPERS_LISTED_OVERVIEW, model.getFilteredHousekeeperList().size()));","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"gosongying"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"LimZiJia":4,"gosongying":17}},{"path":"src/main/java/housekeeping/hub/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LimZiJia":2,"-":19}},{"path":"src/main/java/housekeeping/hub/logic/commands/LeadsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.Messages;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.ClientComparator;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.LeadsFilterPredicate;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":" * Generates a list of leads based on the client\u0027s predicted next housekeeping date.","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"public class LeadsCommand extends Command {","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"    public static final String COMMAND_WORD \u003d \"leads\";","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Generates a list of leads based on the client\u0027s \"","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"            + \"predicted next housekeeping date.\\n\"","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"    private final LeadsFilterPredicate predicate \u003d new LeadsFilterPredicate();","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"    private final Comparator\u003cClient\u003e comparator \u003d new ClientComparator();","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"    public LeadsCommand() {}","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"        model.updateAndSortFilteredClientList(predicate, comparator);","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"        return new CommandResult(","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredClientList().size()));","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"            return true;","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"LimZiJia"},"content":"        if (!(other instanceof LeadsCommand)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"LimZiJia"},"content":"            return false;","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"LimZiJia"},"content":"        return true;","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"LimZiJia"},"content":"    public String toString() {","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"LimZiJia"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"LimZiJia"},"content":"                .toString();","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"LimZiJia":58}},{"path":"src/main/java/housekeeping/hub/logic/commands/ListClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"gosongying"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.TypePredicate;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"gosongying"},"content":"public class ListClientCommand extends ListCommand {","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"gosongying"},"content":"    public ListClientCommand() {","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"gosongying"},"content":"        super(new TypePredicate(\"client\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"gosongying"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"gosongying"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"gosongying"},"content":"        model.updateFilteredClientList(predicate);","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"gosongying"},"content":"        return new CommandResult(MESSAGE_SUCCESS + \"all \" + predicate.getType() + \"s\");","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"gosongying"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"LimZiJia":3,"gosongying":16}},{"path":"src/main/java/housekeeping/hub/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.TypePredicate;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":" * Lists all persons in the hub book to the user.","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"gosongying"},"content":"abstract public class ListCommand extends Command {","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"gosongying"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed \";","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Show list of the contacts with the given type.\\n\"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"            + \"Parameters: TYPE\\n\"","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"            + \"Example: \" + COMMAND_WORD + \" housekeeper\";","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"gosongying"},"content":"    protected final TypePredicate predicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"    public ListCommand(TypePredicate predicate) {","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"gosongying"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"gosongying"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"gosongying"},"content":"            return true;","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"gosongying"},"content":"        if (!(other instanceof ListCommand)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"gosongying"},"content":"            return false;","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"gosongying"},"content":"        ListCommand otherListCommand \u003d (ListCommand) other;","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"gosongying"},"content":"        return predicate.equals(otherListCommand.predicate);","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LimZiJia":3,"gosongying":17,"-":12,"GERARDJM018":6}},{"path":"src/main/java/housekeeping/hub/logic/commands/ListHousekeeperCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"gosongying"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.TypePredicate;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"gosongying"},"content":"public class ListHousekeeperCommand extends ListCommand {","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"gosongying"},"content":"    public ListHousekeeperCommand() {","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"gosongying"},"content":"        super(new TypePredicate(\"housekeeper\"));","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"gosongying"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"gosongying"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"gosongying"},"content":"        model.updateFilteredHousekeeperList(predicate);","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"gosongying"},"content":"        return new CommandResult(MESSAGE_SUCCESS + \"all \" + predicate.getType() + \"s\");","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"gosongying"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"LimZiJia":3,"gosongying":16}},{"path":"src/main/java/housekeeping/hub/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands.exceptions;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"LimZiJia":1,"-":16}},{"path":"src/main/java/housekeeping/hub/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.parser;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_DETAILS;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_AREA;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.model.person.Type.preambleIsAllowed;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.AddClientCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.AddCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.AddHousekeeperCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Address;","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.BookingList;","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Area;","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Email;","lastModifiedDate":"2024-04-05"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.HousekeepingDetails;","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Housekeeper;","lastModifiedDate":"2024-04-05"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Name;","lastModifiedDate":"2024-04-05"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Phone;","lastModifiedDate":"2024-04-05"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.tag.Tag;","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"gosongying"},"content":"                        PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG, PREFIX_DETAILS, PREFIX_AREA);               ","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"GERARDJM018"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_AREA)","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"LimZiJia"},"content":"                || !preambleIsAllowed(argMultimap.getPreamble())) {","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"GERARDJM018"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_AREA);","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"gosongying"},"content":"        String type \u003d ParserUtil.parseType(argMultimap.getPreamble());","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"GERARDJM018"},"content":"        Area area \u003d ParserUtil.parseArea(argMultimap.getValue(PREFIX_AREA).get());","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"moguries"},"content":"        HousekeepingDetails details;","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"moguries"},"content":"        BookingList bookingList \u003d new BookingList();","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"moguries"},"content":"        try {","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"moguries"},"content":"            details \u003d ParserUtil.parseHousekeepingDetails(argMultimap.getValue(PREFIX_DETAILS));","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"moguries"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"moguries"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"gosongying"},"content":"        System.out.println(details);","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"gosongying"},"content":"        switch (type) {","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"LimZiJia"},"content":"        case \"client\":","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"gosongying"},"content":"            Client client \u003d new Client(name, phone, email, address, tagList, details, area);","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"gosongying"},"content":"            return new AddClientCommand(client);","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"LimZiJia"},"content":"        case \"housekeeper\":","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"gosongying"},"content":"            if (!details.isEmpty()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"gosongying"},"content":"                System.out.println(details);","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"gosongying"},"content":"                throw new ParseException(AddHousekeeperCommand.MESSAGE_NO_HOUSEKEEPING_DETAILS);","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"gosongying"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"gosongying"},"content":"            Housekeeper housekeeper \u003d new Housekeeper(name, phone, email, address, tagList, area, bookingList);","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"gosongying"},"content":"            return new AddHousekeeperCommand(housekeeper);","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"LimZiJia"},"content":"        default:","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"LimZiJia"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"LimZiJia":31,"moguries":8,"gosongying":13,"-":38,"GERARDJM018":3}},{"path":"src/main/java/housekeeping/hub/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.parser;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.LogsCenter;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.*;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"GERARDJM018"},"content":"            return new ListCommandParser().parse(arguments);","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"LimZiJia"},"content":"        case LeadsCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-01"},{"lineNumber":67,"author":{"gitId":"LimZiJia"},"content":"            return new LeadsCommand();","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":75,"author":{"gitId":"moguries"},"content":"        case BookingCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"moguries"},"content":"            return new BookingCommandParser().parse(arguments);","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LimZiJia":8,"moguries":3,"-":72,"GERARDJM018":1}},{"path":"src/main/java/housekeeping/hub/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.parser;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.Messages;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"LimZiJia":3,"-":75}},{"path":"src/main/java/housekeeping/hub/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.parser;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"LimZiJia":1,"-":147}},{"path":"src/main/java/housekeeping/hub/logic/parser/BookingCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.parser;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"moguries"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":"import java.time.Period;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"moguries"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"moguries"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.index.Index;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.BookingCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.BookingSearchPredicate;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.HousekeepingDetails;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"moguries"},"content":"public class BookingCommandParser implements Parser\u003cBookingCommand\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"    private static final Pattern PATTERN_TYPE \u003d Pattern.compile(\"^(client|housekeeper).*\");","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"moguries"},"content":"    private static final Pattern PATTERN_ADD \u003d Pattern.compile(","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"            \".*add\\\\s+(\\\\d+)\\\\s+(\\\\d{4}-\\\\d{2}-\\\\d{2}\\\\s+(am|pm))\");","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"    private static final Pattern PATTERN_DELETE_HOUSEKEEPER \u003d Pattern.compile(\".*delete\\\\s+(\\\\d+)\\\\s+(\\\\d+)\");","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"    private static final Pattern PATTERN_DELETE_CLIENT \u003d Pattern.compile(\".*delete\\\\s+(\\\\d+)\");","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"    private static final Pattern PATTERN_LIST \u003d Pattern.compile(\".*list\\\\s+(\\\\d+)\");","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"moguries"},"content":"    private static final Pattern PATTERN_SEARCH \u003d Pattern.compile(","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"moguries"},"content":"            \".*search\\\\s+(\\\\w+)\\\\s+(\\\\d{4}-\\\\d{2}-\\\\d{2})\\\\s+(\\\\w{2})\");","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"    private static final Pattern PATTERN_SET \u003d Pattern.compile(","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"            \".*set\\\\s+(\\\\d+)\\\\s+(\\\\d{4}-\\\\d{2}-\\\\d{2}\\\\s+\\\\d+\\\\s+(days|weeks|months|years))\");","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"    private static final Pattern PATTERN_REMOVE \u003d Pattern.compile(\".*remove\\\\s+(\\\\d+)\");","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"GERARDJM018"},"content":"    private static final Pattern PATTERN_EDIT \u003d Pattern.compile(\".*edit\\\\s+(.*)\");","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"GERARDJM018"},"content":"    private static final Pattern PATTERN_DEFERMENT \u003d Pattern.compile(","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"            \".*defer\\\\s+(\\\\d+)\\\\s+(\\\\d+\\\\s+(days|weeks|months|years))\");","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"    private static final String CLIENT \u003d \"client\";","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"    private static final String HOUSEKEEPER \u003d \"housekeeper\";","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"    private static final String ADD_COMMAND \u003d \"add\";","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"    private static final String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"    private static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"GERARDJM018"},"content":"    private static final String DEFERMENT_COMMAND \u003d \"defer\";","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"moguries"},"content":"    private static final String SEARCH_COMMAND \u003d \"search\";","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"    private static final String EDIT_LAST_HOUSEKEEPING_DATE_COMMAND \u003d \"last\";","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"    private static final String EDIT_PREFERRED_INTERVAL_COMMAND \u003d \"interval\";","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"    private static final String SET_HOUSEKEEPING_DETAILS_COMMAND \u003d \"set\";","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"    private static final String REMOVE_HOUSEKEEPING_DETAILS_COMMAND \u003d \"remove\";","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"moguries"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"moguries"},"content":"    public BookingCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"moguries"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"moguries"},"content":"        Matcher addMatcher \u003d PATTERN_ADD.matcher(args.trim());","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"LimZiJia"},"content":"        Matcher deleteHousekeeperMatcher \u003d PATTERN_DELETE_HOUSEKEEPER.matcher(args.trim());","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"LimZiJia"},"content":"        Matcher deleteClientMatcher \u003d PATTERN_DELETE_CLIENT.matcher(args.trim());","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"moguries"},"content":"        Matcher listMatcher \u003d PATTERN_LIST.matcher(args.trim());","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"moguries"},"content":"        Matcher searchMatcher \u003d PATTERN_SEARCH.matcher(args.trim());","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"LimZiJia"},"content":"        Matcher typeMatcher \u003d PATTERN_TYPE.matcher(args.trim());","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"LimZiJia"},"content":"        Matcher setMatcher \u003d PATTERN_SET.matcher(args.trim());","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"        Matcher removeMatcher \u003d PATTERN_REMOVE.matcher(args.trim());","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"GERARDJM018"},"content":"        Matcher editMatcher \u003d PATTERN_EDIT.matcher(args.trim());","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"GERARDJM018"},"content":"        Matcher deferMatcher \u003d PATTERN_DEFERMENT.matcher(args.trim());","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"LimZiJia"},"content":"        if (!typeMatcher.matches()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"LimZiJia"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, BookingCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"LimZiJia"},"content":"        } else if (typeMatcher.group(1).equals(\"client\")) {","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"GERARDJM018"},"content":"            return clientBookingCommandParser(addMatcher, deleteClientMatcher, listMatcher, setMatcher, removeMatcher,","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"GERARDJM018"},"content":"                    editMatcher, deferMatcher, args);","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"LimZiJia"},"content":"        } else if (typeMatcher.group(1).equals(\"housekeeper\")) {","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"moguries"},"content":"            return housekeeperBookingCommandParser(addMatcher, deleteHousekeeperMatcher, listMatcher, searchMatcher);","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"LimZiJia"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"LimZiJia"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, BookingCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"LimZiJia"},"content":"    private static BookingCommand clientBookingCommandParser","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"LimZiJia"},"content":"            (Matcher addMatcher, Matcher deleteMatcher, Matcher listMatcher,","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"GERARDJM018"},"content":"             Matcher setMatcher, Matcher removeMatcher, Matcher editMatcher,","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"GERARDJM018"},"content":"             Matcher deferMatcher, String args) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"LimZiJia"},"content":"        if (setMatcher.matches()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"LimZiJia"},"content":"            Index clientIndex \u003d ParserUtil.parseIndex(setMatcher.group(1));","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"LimZiJia"},"content":"            // Date and period is not really optional since it is guaranteed by the regex.","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"LimZiJia"},"content":"            HousekeepingDetails housekeepingDetails \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"LimZiJia"},"content":"                    ParserUtil.parseHousekeepingDetails(Optional.of(setMatcher.group(2)));","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"LimZiJia"},"content":"            return new BookingCommand(CLIENT, SET_HOUSEKEEPING_DETAILS_COMMAND, clientIndex, housekeepingDetails);","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"LimZiJia"},"content":"        } else if (removeMatcher.matches()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"LimZiJia"},"content":"            Index clientIndex \u003d ParserUtil.parseIndex(removeMatcher.group(1));","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"LimZiJia"},"content":"            return new BookingCommand(CLIENT, REMOVE_HOUSEKEEPING_DETAILS_COMMAND, clientIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"GERARDJM018"},"content":"        } else if (editMatcher.matches()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"GERARDJM018"},"content":"            return new EditHousekeepingDetailsParser().parse(args);","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"GERARDJM018"},"content":"        } else if (deferMatcher.matches()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"GERARDJM018"},"content":"            Period deferment \u003d ParserUtil.parsePreferredInterval(deferMatcher.group(2));","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"GERARDJM018"},"content":"            Index clientIndex \u003d ParserUtil.parseIndex(deferMatcher.group(1));","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"GERARDJM018"},"content":"            return new BookingCommand(CLIENT, DEFERMENT_COMMAND, clientIndex, deferment);","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"LimZiJia"},"content":"        } else if (addMatcher.matches()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"LimZiJia"},"content":"            Index clientIndex \u003d ParserUtil.parseIndex(addMatcher.group(1));","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"LimZiJia"},"content":"            String bookedDateAndTime \u003d addMatcher.group(2);","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"LimZiJia"},"content":"            return new BookingCommand(CLIENT, ADD_COMMAND, clientIndex, bookedDateAndTime);","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"LimZiJia"},"content":"        } else if (deleteMatcher.matches()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"LimZiJia"},"content":"            Index clientIndex \u003d ParserUtil.parseIndex(deleteMatcher.group(1));","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"LimZiJia"},"content":"            return new BookingCommand(CLIENT, DELETE_COMMAND, clientIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"LimZiJia"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"LimZiJia"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, BookingCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"LimZiJia"},"content":"    private static BookingCommand housekeeperBookingCommandParser","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"moguries"},"content":"            (Matcher addMatcher, Matcher deleteMatcher, Matcher listMatcher,","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"moguries"},"content":"             Matcher searchMatcher) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"moguries"},"content":"        if (addMatcher.matches()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"moguries"},"content":"            Index housekeeperIndex \u003d ParserUtil.parseIndex(addMatcher.group(1));","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"LimZiJia"},"content":"            String bookedDateAndTime \u003d addMatcher.group(2);","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"LimZiJia"},"content":"            return new BookingCommand(HOUSEKEEPER, ADD_COMMAND, housekeeperIndex, bookedDateAndTime);","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"moguries"},"content":"        } else if (deleteMatcher.matches()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"moguries"},"content":"            Index housekeeperIndex \u003d ParserUtil.parseIndex(deleteMatcher.group(1));","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"moguries"},"content":"            int bookingToDeleteIndex \u003d Integer.parseInt(deleteMatcher.group(2));","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"LimZiJia"},"content":"            return new BookingCommand(HOUSEKEEPER, DELETE_COMMAND, housekeeperIndex, bookingToDeleteIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"moguries"},"content":"        } else if (listMatcher.matches()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"moguries"},"content":"            Index housekeeperIndex \u003d ParserUtil.parseIndex(listMatcher.group(1));","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"LimZiJia"},"content":"            return new BookingCommand(HOUSEKEEPER, LIST_COMMAND, housekeeperIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"moguries"},"content":"        } else if (searchMatcher.matches()){","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"moguries"},"content":"            String area \u003d searchMatcher.group(1);","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"moguries"},"content":"            String bookedDateAndTime \u003d searchMatcher.group(2) + \" \" + searchMatcher.group(3);","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"moguries"},"content":"            BookingSearchPredicate bookingSearchPredicate \u003d new BookingSearchPredicate(area, bookedDateAndTime);","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"moguries"},"content":"            return new BookingCommand(HOUSEKEEPER, SEARCH_COMMAND, bookingSearchPredicate);","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"moguries"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"moguries"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, BookingCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"moguries"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"LimZiJia":68,"moguries":38,"GERARDJM018":17}},{"path":"src/main/java/housekeeping/hub/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.parser;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"    public static final Prefix PREFIX_AREA \u003d new Prefix(\"ar/\");","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"    public static final Prefix PREFIX_DETAILS \u003d new Prefix(\"d/\");","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"    public static final Prefix PREFIX_LHD \u003d new Prefix(\"lhd/\");","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"    public static final Prefix PREFIX_PI \u003d new Prefix(\"pi/\");","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":"    public static final Prefix PREFIX_BD \u003d new Prefix(\"bd/\");","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":"    public static final Prefix PREFIX_DEFERMENT \u003d new Prefix(\"d/\");","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"    public static final String[] ALLOWED_PREAMBLES \u003d new String[] {\"client\", \"housekeeper\"};","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"    public static final String[] ALLOWED_PREAMBLES_TYPE \u003d new String[] {\"client\", \"housekeeper\"};","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"    public static final String[] ALLOWED_PREAMBLES_AREA \u003d new String[] {\"north\", \"northeast\", \"east\", \"southeast\"","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"            , \"south\", \"southwest\", \"west\", \"northwest\"};","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"LimZiJia":4,"-":13,"GERARDJM018":8}},{"path":"src/main/java/housekeeping/hub/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.parser;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.index.Index;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.DeleteClientCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.DeleteCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.DeleteHousekeeperCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"gosongying"},"content":"            String[] splitArgs \u003d args.trim().split(\" \");","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"moguries"},"content":"            // check that input is valid","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"moguries"},"content":"            if (splitArgs.length \u003c 2 || splitArgs.length \u003e 2) {","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"moguries"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"moguries"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"moguries"},"content":"            try {","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"moguries"},"content":"                if (Integer.parseInt(splitArgs[1]) \u003c 0) {","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"moguries"},"content":"                    throw new ParseException(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"moguries"},"content":"                }","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"moguries"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"moguries"},"content":"                throw new ParseException(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"moguries"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"gosongying"},"content":"            String type \u003d ParserUtil.parseType(splitArgs[0]);","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"gosongying"},"content":"            Index index \u003d ParserUtil.parseIndex(splitArgs[1]);","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"gosongying"},"content":"            if (type.equals(\"client\")) {","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"gosongying"},"content":"                return new DeleteClientCommand(index);","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"gosongying"},"content":"            } else if (type.equals(\"housekeeper\")) {","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"gosongying"},"content":"                return new DeleteHousekeeperCommand(index);","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"gosongying"},"content":"            } else {","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"gosongying"},"content":"                throw new ParseException(","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"gosongying"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"gosongying"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"       } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"moguries"},"content":"            throw new ParseException(pe.getMessage());","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"LimZiJia":8,"moguries":15,"gosongying":11,"-":20}},{"path":"src/main/java/housekeeping/hub/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.parser;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.*;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.index.Index;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.EditClientCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.EditCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.EditHousekeeperCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.tag.Tag;","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"GERARDJM018"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"                        PREFIX_AREA);","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"gosongying"},"content":"        String type;","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"moguries"},"content":"        // check that input is valid","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"gosongying"},"content":"        String[] splitArgs \u003d argMultimap.getPreamble().trim().split(\" \");","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"moguries"},"content":"        if (splitArgs.length \u003c 2 || splitArgs.length \u003e 2) {","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"moguries"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"moguries"},"content":"            if (Integer.parseInt(splitArgs[1]) \u003c\u003d 0) {","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"moguries"},"content":"                throw new ParseException(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"moguries"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"moguries"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"moguries"},"content":"            throw new ParseException(MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"moguries"},"content":"        try {","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"gosongying"},"content":"            type \u003d ParserUtil.parseType(splitArgs[0]);","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"gosongying"},"content":"            index \u003d ParserUtil.parseIndex(splitArgs[1]);","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"gosongying"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"gosongying"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"GERARDJM018"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_AREA);","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"GERARDJM018"},"content":"        if (argMultimap.getValue(PREFIX_AREA).isPresent()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"GERARDJM018"},"content":"            editPersonDescriptor.setArea(ParserUtil.parseArea(argMultimap.getValue(PREFIX_AREA).get()));","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"gosongying"},"content":"        if (type.equals(\"client\")) {","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"gosongying"},"content":"            return new EditClientCommand(index, editPersonDescriptor);","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"gosongying"},"content":"        } else if (type.equals(\"housekeeper\")) {","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"gosongying"},"content":"            return new EditHousekeeperCommand(index, editPersonDescriptor);","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"gosongying"},"content":"        } else {","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"gosongying"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"LimZiJia":11,"moguries":13,"gosongying":13,"-":69,"GERARDJM018":6}},{"path":"src/main/java/housekeeping/hub/logic/parser/EditHousekeepingDetailsParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.parser;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_BD;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_DEFERMENT;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_LHD;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_PI;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.index.Index;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.EditHousekeepingDetailsCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.EditHousekeepingDetailsCommand.EditHousekeepingDetailsDescriptor;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"public class EditHousekeepingDetailsParser implements Parser\u003cEditHousekeepingDetailsCommand\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"     * Parses the given {@code String} of arguments in the context of the EditHousekeepingDetailsCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"    public EditHousekeepingDetailsCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_LHD, PREFIX_PI, PREFIX_BD,","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"GERARDJM018"},"content":"                PREFIX_DEFERMENT);","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"GERARDJM018"},"content":"        Index index;","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"GERARDJM018"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"GERARDJM018"},"content":"            String[] splitArgs \u003d argMultimap.getPreamble().trim().split(\"edit \");","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"            index \u003d ParserUtil.parseIndex(splitArgs[1]);","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"GERARDJM018"},"content":"        } catch (Exception pe) {","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"GERARDJM018"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"                    EditHousekeepingDetailsCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"GERARDJM018"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_LHD, PREFIX_PI, PREFIX_BD, PREFIX_DEFERMENT);","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"GERARDJM018"},"content":"        EditHousekeepingDetailsDescriptor editPersonDescriptor \u003d new EditHousekeepingDetailsDescriptor();","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"GERARDJM018"},"content":"        if (argMultimap.getValue(PREFIX_LHD).isPresent()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"GERARDJM018"},"content":"            editPersonDescriptor.setLastHousekeepingDate(ParserUtil","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"GERARDJM018"},"content":"                    .parseLastHousekeepingDate(argMultimap.getValue(PREFIX_LHD).get()));","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"GERARDJM018"},"content":"        if (argMultimap.getValue(PREFIX_PI).isPresent()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"GERARDJM018"},"content":"            editPersonDescriptor.setPreferredInterval(ParserUtil","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"GERARDJM018"},"content":"                    .parsePreferredInterval(argMultimap.getValue(PREFIX_PI).get()));","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"GERARDJM018"},"content":"        if (argMultimap.getValue(PREFIX_BD).isPresent()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"GERARDJM018"},"content":"            editPersonDescriptor.setBooking(ParserUtil","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"GERARDJM018"},"content":"                    .parseBooking(argMultimap.getValue(PREFIX_BD).get()));","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"GERARDJM018"},"content":"        if (argMultimap.getValue(PREFIX_DEFERMENT).isPresent()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"GERARDJM018"},"content":"            editPersonDescriptor.setDeferment(ParserUtil","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"GERARDJM018"},"content":"                    .parsePreferredInterval(argMultimap.getValue(PREFIX_DEFERMENT).get()));","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"GERARDJM018"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"GERARDJM018"},"content":"            throw new ParseException(EditHousekeepingDetailsCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"GERARDJM018"},"content":"        return new EditHousekeepingDetailsCommand(index, editPersonDescriptor);","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"LimZiJia":10,"GERARDJM018":56}},{"path":"src/main/java/housekeeping/hub/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.parser;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.*;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_AREA;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.FindClientCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.FindCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.FindHousekeeperCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Area;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.ContainsKeywordsPredicate;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"    private String name \u003d \"\";","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"    private String address \u003d \"\";","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"    private String area \u003d \"\";","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"        String[] subArgs \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"GERARDJM018"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"GERARDJM018"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_AREA);","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"        if (subArgs.length \u003c 2) {","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"gosongying"},"content":"        String type \u003d ParserUtil.parseType(subArgs[0]);","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"GERARDJM018"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_AREA);","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"GERARDJM018"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"GERARDJM018"},"content":"            name \u003d argMultimap.getValue(PREFIX_NAME).get();","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"GERARDJM018"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"GERARDJM018"},"content":"            address \u003d argMultimap.getValue(PREFIX_ADDRESS).get();","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"GERARDJM018"},"content":"        if (argMultimap.getValue(PREFIX_AREA).isPresent()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"GERARDJM018"},"content":"            area \u003d argMultimap.getValue(PREFIX_AREA).get();","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"GERARDJM018"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"GERARDJM018"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"GERARDJM018"},"content":"        String trimmedArea \u003d area.trim();","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"GERARDJM018"},"content":"        String[] nameKeywords \u003d trimmedName.split(\"\\\\s+\");","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"GERARDJM018"},"content":"        String[] addressKeywords \u003d trimmedAddress.split(\"\\\\s+\");","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"GERARDJM018"},"content":"        String[] areaKeywords \u003d trimmedArea.split(\"\\\\s+\");","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"GERARDJM018"},"content":"        for (int i \u003d 0; i \u003c areaKeywords.length ; i++) {","lastModifiedDate":"2024-04-05"},{"lineNumber":62,"author":{"gitId":"GERARDJM018"},"content":"            if (!Area.isValidArea(areaKeywords[i])) {","lastModifiedDate":"2024-04-05"},{"lineNumber":63,"author":{"gitId":"GERARDJM018"},"content":"                throw new ParseException(","lastModifiedDate":"2024-04-05"},{"lineNumber":64,"author":{"gitId":"GERARDJM018"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, Area.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2024-04-05"},{"lineNumber":65,"author":{"gitId":"GERARDJM018"},"content":"            }","lastModifiedDate":"2024-04-05"},{"lineNumber":66,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":67,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":68,"author":{"gitId":"gosongying"},"content":"        if (nameKeywords[0].isEmpty() \u0026\u0026 addressKeywords[0].isEmpty() \u0026\u0026 areaKeywords[0].isEmpty()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"gosongying"},"content":"            throw new ParseException(FindCommand.MESSAGE_NOT_FOUND);","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"gosongying"},"content":"        if (type.equals(\"client\")) {","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"gosongying"},"content":"            return new FindClientCommand(new ContainsKeywordsPredicate(Arrays.asList(nameKeywords),","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"gosongying"},"content":"                    Arrays.asList(addressKeywords), Arrays.asList(areaKeywords)));","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"gosongying"},"content":"        } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"gosongying"},"content":"            // As type is ensured to be either client or housekeeper before, it is safe to assume that the type is","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"gosongying"},"content":"            // housekeeper, so we can directly return a FindHousekeeperCommand object.","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"gosongying"},"content":"            return new FindHousekeeperCommand(new ContainsKeywordsPredicate(Arrays.asList(nameKeywords),","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"GERARDJM018"},"content":"                    Arrays.asList(addressKeywords), Arrays.asList(areaKeywords)));","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"LimZiJia":10,"gosongying":16,"-":24,"GERARDJM018":33}},{"path":"src/main/java/housekeeping/hub/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.parser;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.ListClientCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.ListCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.ListHousekeeperCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"public class ListCommandParser implements Parser\u003cListCommand\u003e {","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"    public ListCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"GERARDJM018"},"content":"        String[] type \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"GERARDJM018"},"content":"        if (type.length !\u003d 1) {","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"GERARDJM018"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"gosongying"},"content":"        if (!trimmedArgs.equals(\"client\") \u0026\u0026 !trimmedArgs.equals(\"housekeeper\")) {","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"gosongying"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"gosongying"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"gosongying"},"content":"        if (trimmedArgs.equals(\"client\")) {","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"gosongying"},"content":"            return new ListClientCommand();","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"gosongying"},"content":"        } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"gosongying"},"content":"            // As the type is either \"client\" or \"housekeeper\", we can safely assume that the type is \"housekeeper\"","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"gosongying"},"content":"            return new ListHousekeeperCommand();","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"LimZiJia":6,"gosongying":10,"GERARDJM018":32}},{"path":"src/main/java/housekeeping/hub/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.parser;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.Command;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"LimZiJia":3,"-":13}},{"path":"src/main/java/housekeeping/hub/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.parser;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.ALLOWED_PREAMBLES_TYPE;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import java.time.Period;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"moguries"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.index.Index;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.StringUtil;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.*;","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.tag.Tag;","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"    private static final Pattern PATTERN_BOOKING \u003d Pattern.compile(","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"            \"(\\\\d{4}-\\\\d{2}-\\\\d{2}\\\\s+(am|pm))\");","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"gosongying"},"content":"    public static final String TYPE_VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"LimZiJia"},"content":"     * Parses a {@code String hub} into an {@code Address}.","lastModifiedDate":"2024-04-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"LimZiJia"},"content":"     * @throws ParseException if the given {@code hub} is invalid.","lastModifiedDate":"2024-04-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"GERARDJM018"},"content":"     * Parses a {@code String type} into a {@code type}.","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"GERARDJM018"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"GERARDJM018"},"content":"     * @throws ParseException if the given {@code type} is invalid.","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"gosongying"},"content":"    public static String parseType(String type) throws ParseException {","lastModifiedDate":"2024-04-04"},{"lineNumber":128,"author":{"gitId":"GERARDJM018"},"content":"        requireNonNull(type);","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"GERARDJM018"},"content":"        String trimmedType \u003d type.trim();","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"gosongying"},"content":"        if (!(trimmedType.matches(TYPE_VALIDATION_REGEX) \u0026\u0026 preambleIsAllowed(trimmedType))) {","lastModifiedDate":"2024-04-04"},{"lineNumber":131,"author":{"gitId":"LimZiJia"},"content":"            throw new ParseException(Type.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"gosongying"},"content":"        return trimmedType;","lastModifiedDate":"2024-04-04"},{"lineNumber":134,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":135,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":136,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":137,"author":{"gitId":"gosongying"},"content":"     * Checks if a given command uses a preamble that is allowed. (we define preamble as TYPE)","lastModifiedDate":"2024-04-04"},{"lineNumber":138,"author":{"gitId":"gosongying"},"content":"     * @param preamble","lastModifiedDate":"2024-04-04"},{"lineNumber":139,"author":{"gitId":"gosongying"},"content":"     * @return true if the preamble is allowed and no if it is not.","lastModifiedDate":"2024-04-04"},{"lineNumber":140,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":141,"author":{"gitId":"gosongying"},"content":"    public static boolean preambleIsAllowed(String preamble) {","lastModifiedDate":"2024-04-04"},{"lineNumber":142,"author":{"gitId":"gosongying"},"content":"        for (String s : ALLOWED_PREAMBLES_TYPE) {","lastModifiedDate":"2024-04-04"},{"lineNumber":143,"author":{"gitId":"gosongying"},"content":"            if (s.equals(preamble)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":144,"author":{"gitId":"gosongying"},"content":"                return true;","lastModifiedDate":"2024-04-04"},{"lineNumber":145,"author":{"gitId":"gosongying"},"content":"            }","lastModifiedDate":"2024-04-04"},{"lineNumber":146,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":147,"author":{"gitId":"gosongying"},"content":"        return false;","lastModifiedDate":"2024-04-04"},{"lineNumber":148,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":149,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":150,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":151,"author":{"gitId":"GERARDJM018"},"content":"     * Parses a {@code String area} into an {@code Area}.","lastModifiedDate":"2024-03-28"},{"lineNumber":152,"author":{"gitId":"GERARDJM018"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-28"},{"lineNumber":153,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":154,"author":{"gitId":"GERARDJM018"},"content":"     * @throws ParseException if the given {@code area} is invalid.","lastModifiedDate":"2024-03-28"},{"lineNumber":155,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":156,"author":{"gitId":"GERARDJM018"},"content":"    public static Area parseArea(String area) throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":157,"author":{"gitId":"GERARDJM018"},"content":"        requireNonNull(area);","lastModifiedDate":"2024-03-28"},{"lineNumber":158,"author":{"gitId":"GERARDJM018"},"content":"        String trimmedArea \u003d area.trim();","lastModifiedDate":"2024-03-28"},{"lineNumber":159,"author":{"gitId":"GERARDJM018"},"content":"        if (!Area.isValidArea(trimmedArea)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":160,"author":{"gitId":"GERARDJM018"},"content":"            throw new ParseException(Area.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":161,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":162,"author":{"gitId":"GERARDJM018"},"content":"        return new Area(trimmedArea);","lastModifiedDate":"2024-03-28"},{"lineNumber":163,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":164,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":176,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":177,"author":{"gitId":"GERARDJM018"},"content":"    public static LocalDate parseLastHousekeepingDate(String lHD) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":178,"author":{"gitId":"GERARDJM018"},"content":"        requireNonNull(lHD);","lastModifiedDate":"2024-04-03"},{"lineNumber":179,"author":{"gitId":"GERARDJM018"},"content":"        try {","lastModifiedDate":"2024-04-04"},{"lineNumber":180,"author":{"gitId":"GERARDJM018"},"content":"            LocalDate parsedLHD \u003d LocalDate.parse(lHD);","lastModifiedDate":"2024-04-04"},{"lineNumber":181,"author":{"gitId":"GERARDJM018"},"content":"            return parsedLHD;","lastModifiedDate":"2024-04-04"},{"lineNumber":182,"author":{"gitId":"GERARDJM018"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-04-04"},{"lineNumber":183,"author":{"gitId":"GERARDJM018"},"content":"            throw new ParseException(HousekeepingDetails.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-04"},{"lineNumber":184,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":185,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":186,"author":{"gitId":"GERARDJM018"},"content":"    public static Booking parseBooking(String booking) throws ParseException {","lastModifiedDate":"2024-04-04"},{"lineNumber":187,"author":{"gitId":"GERARDJM018"},"content":"        requireNonNull(booking);","lastModifiedDate":"2024-04-04"},{"lineNumber":188,"author":{"gitId":"GERARDJM018"},"content":"        if (PATTERN_BOOKING.matcher(booking.trim()).matches()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":189,"author":{"gitId":"GERARDJM018"},"content":"            Booking parsedBooking \u003d new Booking(booking);","lastModifiedDate":"2024-04-04"},{"lineNumber":190,"author":{"gitId":"GERARDJM018"},"content":"            return parsedBooking;","lastModifiedDate":"2024-04-04"},{"lineNumber":191,"author":{"gitId":"GERARDJM018"},"content":"        } else {","lastModifiedDate":"2024-04-04"},{"lineNumber":192,"author":{"gitId":"GERARDJM018"},"content":"            throw new ParseException(HousekeepingDetails.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-04"},{"lineNumber":193,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":194,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":195,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":196,"author":{"gitId":"GERARDJM018"},"content":"    public static Period parsePreferredInterval(String pI) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":197,"author":{"gitId":"GERARDJM018"},"content":"        requireNonNull(pI);","lastModifiedDate":"2024-04-03"},{"lineNumber":198,"author":{"gitId":"GERARDJM018"},"content":"        String trimmedPI \u003d pI.trim();","lastModifiedDate":"2024-04-03"},{"lineNumber":199,"author":{"gitId":"GERARDJM018"},"content":"        String[] splitPI \u003d trimmedPI.split(\"\\\\s+\");","lastModifiedDate":"2024-04-03"},{"lineNumber":200,"author":{"gitId":"GERARDJM018"},"content":"        Period period;","lastModifiedDate":"2024-04-03"},{"lineNumber":201,"author":{"gitId":"GERARDJM018"},"content":"        int quantity \u003d Integer.parseInt(splitPI[0]);","lastModifiedDate":"2024-04-03"},{"lineNumber":202,"author":{"gitId":"GERARDJM018"},"content":"        switch (splitPI[1]) {","lastModifiedDate":"2024-04-03"},{"lineNumber":203,"author":{"gitId":"GERARDJM018"},"content":"            case \"days\":","lastModifiedDate":"2024-04-03"},{"lineNumber":204,"author":{"gitId":"GERARDJM018"},"content":"                period \u003d Period.ofDays(quantity);","lastModifiedDate":"2024-04-03"},{"lineNumber":205,"author":{"gitId":"GERARDJM018"},"content":"                break;","lastModifiedDate":"2024-04-03"},{"lineNumber":206,"author":{"gitId":"GERARDJM018"},"content":"            case \"weeks\":","lastModifiedDate":"2024-04-03"},{"lineNumber":207,"author":{"gitId":"GERARDJM018"},"content":"                period \u003d Period.ofWeeks(quantity);","lastModifiedDate":"2024-04-03"},{"lineNumber":208,"author":{"gitId":"GERARDJM018"},"content":"                break;","lastModifiedDate":"2024-04-03"},{"lineNumber":209,"author":{"gitId":"GERARDJM018"},"content":"            case \"months\":","lastModifiedDate":"2024-04-03"},{"lineNumber":210,"author":{"gitId":"GERARDJM018"},"content":"                period \u003d Period.ofMonths(quantity);","lastModifiedDate":"2024-04-03"},{"lineNumber":211,"author":{"gitId":"GERARDJM018"},"content":"                break;","lastModifiedDate":"2024-04-03"},{"lineNumber":212,"author":{"gitId":"GERARDJM018"},"content":"            case \"years\":","lastModifiedDate":"2024-04-03"},{"lineNumber":213,"author":{"gitId":"GERARDJM018"},"content":"                period \u003d Period.ofYears(quantity);","lastModifiedDate":"2024-04-03"},{"lineNumber":214,"author":{"gitId":"GERARDJM018"},"content":"                break;","lastModifiedDate":"2024-04-03"},{"lineNumber":215,"author":{"gitId":"GERARDJM018"},"content":"            default:","lastModifiedDate":"2024-04-03"},{"lineNumber":216,"author":{"gitId":"GERARDJM018"},"content":"                throw new ParseException(HousekeepingDetails.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":217,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":218,"author":{"gitId":"GERARDJM018"},"content":"        return period;","lastModifiedDate":"2024-04-03"},{"lineNumber":219,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":220,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":221,"author":{"gitId":"LimZiJia"},"content":"    public static HousekeepingDetails parseHousekeepingDetails(Optional\u003cString\u003e details) throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":222,"author":{"gitId":"LimZiJia"},"content":"        if (details.isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":223,"author":{"gitId":"LimZiJia"},"content":"            return HousekeepingDetails.empty;","lastModifiedDate":"2024-03-31"},{"lineNumber":224,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":225,"author":{"gitId":"LimZiJia"},"content":"        String trimmedDetails \u003d details.get().trim();","lastModifiedDate":"2024-03-28"},{"lineNumber":226,"author":{"gitId":"LimZiJia"},"content":"        if (!HousekeepingDetails.isValidHousekeepingDetailsUser(trimmedDetails)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":227,"author":{"gitId":"LimZiJia"},"content":"            throw new ParseException(HousekeepingDetails.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-28"},{"lineNumber":228,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":229,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":230,"author":{"gitId":"moguries"},"content":"        String[] s;","lastModifiedDate":"2024-04-04"},{"lineNumber":231,"author":{"gitId":"moguries"},"content":"        LocalDate date;","lastModifiedDate":"2024-04-04"},{"lineNumber":232,"author":{"gitId":"LimZiJia"},"content":"        Period period;","lastModifiedDate":"2024-03-28"},{"lineNumber":233,"author":{"gitId":"moguries"},"content":"        int quantity;","lastModifiedDate":"2024-04-04"},{"lineNumber":234,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":235,"author":{"gitId":"moguries"},"content":"        try {","lastModifiedDate":"2024-04-04"},{"lineNumber":236,"author":{"gitId":"moguries"},"content":"            s \u003d trimmedDetails.split(\" \");","lastModifiedDate":"2024-04-04"},{"lineNumber":237,"author":{"gitId":"moguries"},"content":"            date \u003d LocalDate.parse(s[0]);","lastModifiedDate":"2024-04-04"},{"lineNumber":238,"author":{"gitId":"moguries"},"content":"            quantity \u003d Integer.parseInt(s[1]);","lastModifiedDate":"2024-04-04"},{"lineNumber":239,"author":{"gitId":"moguries"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-04-04"},{"lineNumber":240,"author":{"gitId":"moguries"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2024-04-04"},{"lineNumber":241,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":242,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":243,"author":{"gitId":"LimZiJia"},"content":"        switch (s[2]) {","lastModifiedDate":"2024-03-28"},{"lineNumber":244,"author":{"gitId":"LimZiJia"},"content":"        case \"days\":","lastModifiedDate":"2024-03-28"},{"lineNumber":245,"author":{"gitId":"LimZiJia"},"content":"            period \u003d Period.ofDays(quantity);","lastModifiedDate":"2024-03-28"},{"lineNumber":246,"author":{"gitId":"LimZiJia"},"content":"            break;","lastModifiedDate":"2024-03-28"},{"lineNumber":247,"author":{"gitId":"LimZiJia"},"content":"        case \"weeks\":","lastModifiedDate":"2024-03-28"},{"lineNumber":248,"author":{"gitId":"LimZiJia"},"content":"            period \u003d Period.ofWeeks(quantity);","lastModifiedDate":"2024-03-28"},{"lineNumber":249,"author":{"gitId":"LimZiJia"},"content":"            break;","lastModifiedDate":"2024-03-28"},{"lineNumber":250,"author":{"gitId":"LimZiJia"},"content":"        case \"months\":","lastModifiedDate":"2024-03-28"},{"lineNumber":251,"author":{"gitId":"LimZiJia"},"content":"            period \u003d Period.ofMonths(quantity);","lastModifiedDate":"2024-03-28"},{"lineNumber":252,"author":{"gitId":"LimZiJia"},"content":"            break;","lastModifiedDate":"2024-03-28"},{"lineNumber":253,"author":{"gitId":"LimZiJia"},"content":"        case \"years\":","lastModifiedDate":"2024-03-28"},{"lineNumber":254,"author":{"gitId":"LimZiJia"},"content":"            period \u003d Period.ofYears(quantity);","lastModifiedDate":"2024-03-28"},{"lineNumber":255,"author":{"gitId":"LimZiJia"},"content":"            break;","lastModifiedDate":"2024-03-28"},{"lineNumber":256,"author":{"gitId":"LimZiJia"},"content":"        default:","lastModifiedDate":"2024-03-28"},{"lineNumber":257,"author":{"gitId":"LimZiJia"},"content":"            throw new ParseException(HousekeepingDetails.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-28"},{"lineNumber":258,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":259,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":260,"author":{"gitId":"LimZiJia"},"content":"        return new HousekeepingDetails(date, period);","lastModifiedDate":"2024-03-28"},{"lineNumber":261,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"LimZiJia":47,"moguries":12,"gosongying":19,"-":113,"GERARDJM018":71}},{"path":"src/main/java/housekeeping/hub/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.parser;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!(other instanceof Prefix)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return prefix.equals(otherPrefix.prefix);","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"LimZiJia":1,"-":41}},{"path":"src/main/java/housekeeping/hub/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.parser.exceptions;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"LimZiJia":2,"-":15}},{"path":"src/main/java/housekeeping/hub/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Housekeeper;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.UniquePersonList;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":" * Wraps all data at the hub-book level","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"gosongying"},"content":"    private final UniquePersonList\u003cClient\u003e clients;","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"gosongying"},"content":"    private final UniquePersonList\u003cHousekeeper\u003e housekeepers;","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"gosongying"},"content":"        clients \u003d new UniquePersonList\u003cClient\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"gosongying"},"content":"        housekeepers \u003d new UniquePersonList\u003cHousekeeper\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"gosongying"},"content":"     * Replaces the contents of the client list with {@code clients}.","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"gosongying"},"content":"     * {@code clients} must not contain duplicate clients.","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"gosongying"},"content":"    public void setClients(List\u003cClient\u003e clients) {","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"gosongying"},"content":"        this.clients.setPersons(clients);","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"gosongying"},"content":"     * Replaces the contents of the housekeeper list with {@code housekeepers}.","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"gosongying"},"content":"     * {@code housekeepers} must not contain duplicate housekeepers.","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"gosongying"},"content":"    public void setHousekeepers(List\u003cHousekeeper\u003e housekeepers) {","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"gosongying"},"content":"        this.housekeepers.setPersons(housekeepers);","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"LimZiJia"},"content":"    public void sortClients(Comparator\u003c? super Client\u003e comparator) {","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"LimZiJia"},"content":"        clients.sort(comparator);","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"gosongying"},"content":"        setClients(newData.getClientList());","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"gosongying"},"content":"        setHousekeepers(newData.getHousekeeperList());","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"LimZiJia"},"content":"     * Returns true if a client with the same identity as {@code client} exists in the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"gosongying"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"gosongying"},"content":"        requireNonNull(client);","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"gosongying"},"content":"        return clients.contains(client);","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"LimZiJia"},"content":"     * Returns true if a housekeeper with the same identity as {@code housekeeper} exists in the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":89,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"gosongying"},"content":"    public boolean hasHousekeeper(Housekeeper housekeeper) {","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"gosongying"},"content":"        requireNonNull(housekeeper);","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"gosongying"},"content":"        return housekeepers.contains(housekeeper);","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"LimZiJia"},"content":"     * Adds a client to the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":97,"author":{"gitId":"LimZiJia"},"content":"     * The client must not already exist in the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"gosongying"},"content":"    public void addClient(Client client) {","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"gosongying"},"content":"        clients.add(client);","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"LimZiJia"},"content":"     * Adds a housekeeper to the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":105,"author":{"gitId":"LimZiJia"},"content":"     * The housekeeper must not already exist in the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":106,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"gosongying"},"content":"    public void addHousekeeper(Housekeeper housekeeper) {","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"gosongying"},"content":"        housekeepers.add(housekeeper);","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"gosongying"},"content":"     * Replaces the given client {@code target} in the list with {@code editedClient}.","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"LimZiJia"},"content":"     * {@code target} must exist in the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":114,"author":{"gitId":"LimZiJia"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"gosongying"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"gosongying"},"content":"        requireNonNull(editedClient);","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"gosongying"},"content":"        clients.setPerson(target, editedClient);","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":121,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"gosongying"},"content":"     * Replaces the given housekeeper {@code target} in the list with {@code editedHousekeeper}.","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"LimZiJia"},"content":"     * {@code target} must exist in the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":125,"author":{"gitId":"LimZiJia"},"content":"     * The housekeeper identity of {@code editedHousekeeper} must not be the same as another existing housekeeper in the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":126,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"gosongying"},"content":"    public void setHousekeeper(Housekeeper target, Housekeeper editedHousekeeper) {","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"gosongying"},"content":"        requireNonNull(editedHousekeeper);","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"gosongying"},"content":"        housekeepers.setPerson(target, editedHousekeeper);","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"gosongying"},"content":"     * Removes {@code client} from this {@code AddressBook}.","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"LimZiJia"},"content":"     * {@code client} must exist in the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":136,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"gosongying"},"content":"    public void removeClient(Client client) {","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"gosongying"},"content":"        clients.remove(client);","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"gosongying"},"content":"     * Removes {@code housekeeper} from this {@code AddressBook}.","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"LimZiJia"},"content":"     * {@code housekeeper} must exist in the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":144,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"gosongying"},"content":"    public void removeHousekeeper(Housekeeper housekeeper) {","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"gosongying"},"content":"        housekeepers.remove(housekeeper);","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":154,"author":{"gitId":"gosongying"},"content":"                .add(\"clients\", clients)","lastModifiedDate":"2024-03-26"},{"lineNumber":155,"author":{"gitId":"gosongying"},"content":"                .add(\"housekeepers\", housekeepers)","lastModifiedDate":"2024-03-26"},{"lineNumber":156,"author":{"gitId":"gosongying"},"content":"                //.add(\"persons\", persons)","lastModifiedDate":"2024-03-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":161,"author":{"gitId":"gosongying"},"content":"    public ObservableList\u003cClient\u003e getClientList() {","lastModifiedDate":"2024-03-26"},{"lineNumber":162,"author":{"gitId":"gosongying"},"content":"        return clients.asUnmodifiableObservableList();","lastModifiedDate":"2024-03-26"},{"lineNumber":163,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":164,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":165,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":166,"author":{"gitId":"gosongying"},"content":"    public ObservableList\u003cHousekeeper\u003e getHousekeeperList() {","lastModifiedDate":"2024-03-26"},{"lineNumber":167,"author":{"gitId":"gosongying"},"content":"        return housekeepers.asUnmodifiableObservableList();","lastModifiedDate":"2024-03-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":182,"author":{"gitId":"gosongying"},"content":"        return clients.equals(otherAddressBook.clients)","lastModifiedDate":"2024-03-26"},{"lineNumber":183,"author":{"gitId":"gosongying"},"content":"                \u0026\u0026 housekeepers.equals(otherAddressBook.housekeepers);","lastModifiedDate":"2024-03-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":188,"author":{"gitId":"gosongying"},"content":"        int result \u003d 17;","lastModifiedDate":"2024-03-26"},{"lineNumber":189,"author":{"gitId":"gosongying"},"content":"        result \u003d 31 * result + clients.hashCode();","lastModifiedDate":"2024-03-26"},{"lineNumber":190,"author":{"gitId":"gosongying"},"content":"        result \u003d 31 * result + housekeepers.hashCode();","lastModifiedDate":"2024-03-26"},{"lineNumber":191,"author":{"gitId":"gosongying"},"content":"        return result;","lastModifiedDate":"2024-03-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimZiJia":23,"gosongying":82,"-":88}},{"path":"src/main/java/housekeeping/hub/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"gosongying"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.GuiSettings;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Housekeeper;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Person;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"gosongying"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_CLIENTS \u003d unused -\u003e true;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_HOUSEKEEPERS \u003d unused -\u003e true;","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"LimZiJia"},"content":"     * Returns the user prefs\u0027 hub book file path.","lastModifiedDate":"2024-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"LimZiJia"},"content":"     * Sets the user prefs\u0027 hub book file path.","lastModifiedDate":"2024-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"LimZiJia"},"content":"     * Replaces hub book data with the data in {@code addressBook}.","lastModifiedDate":"2024-04-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"gosongying"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"LimZiJia"},"content":"     * Returns true if a client with the same identity as {@code client} exists in the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"gosongying"},"content":"    boolean hasClient(Client client);","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"LimZiJia"},"content":"     * Returns true if a housekeeper with the same identity as {@code housekeeper} exists in the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":69,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"gosongying"},"content":"    boolean hasHousekeeper(Housekeeper housekeeper);","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"gosongying"},"content":"     * Deletes the given client.","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"LimZiJia"},"content":"     * The client must exist in the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":75,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"gosongying"},"content":"    void deleteClient(Client target);","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"gosongying"},"content":"     * Deletes the given housekeeper.","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"LimZiJia"},"content":"     * The housekeeper must exist in the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":81,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"gosongying"},"content":"    void deleteHousekeeper(Housekeeper target);","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"gosongying"},"content":"     * Adds the given client.","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"LimZiJia"},"content":"     * {@code client} must not already exist in the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"gosongying"},"content":"    void addClient(Client client);","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"gosongying"},"content":"     * Adds the given housekeeper.","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"LimZiJia"},"content":"     * {@code housekeeper} must not already exist in the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"gosongying"},"content":"    void addHousekeeper(Housekeeper housekeeper);","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":97,"author":{"gitId":"gosongying"},"content":"     * Replaces the given client {@code target} with {@code editedClient}.","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"LimZiJia"},"content":"     * {@code target} must exist in the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":99,"author":{"gitId":"LimZiJia"},"content":"     * The client identity of {@code editedClient} must not be the same as another existing client in the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":101,"author":{"gitId":"gosongying"},"content":"    void setClient(Client target, Client editedClient);","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":104,"author":{"gitId":"gosongying"},"content":"     * Replaces the given housekeeper {@code target} with {@code editedHousekeeper}.","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"LimZiJia"},"content":"     * {@code target} must exist in the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":106,"author":{"gitId":"LimZiJia"},"content":"     * The housekeeper identity of {@code editedHousekeeper} must not be the same as another existing housekeeper in the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"gosongying"},"content":"    void setHousekeeper(Housekeeper target, Housekeeper editedHousekeeper);","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":110,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"gosongying"},"content":"     * Returns an unmodifiable view of the filtered client list","lastModifiedDate":"2024-03-26"},{"lineNumber":112,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":113,"author":{"gitId":"gosongying"},"content":"    ObservableList\u003cClient\u003e getFilteredClientList();","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":115,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":116,"author":{"gitId":"gosongying"},"content":"     * Returns an unmodifiable view of the filtered housekeeper list","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":118,"author":{"gitId":"gosongying"},"content":"    ObservableList\u003cHousekeeper\u003e getFilteredHousekeeperList();","lastModifiedDate":"2024-03-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":120,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":121,"author":{"gitId":"gosongying"},"content":"     * Updates the filter of the filtered client list to filter by the given {@code predicate}.","lastModifiedDate":"2024-03-26"},{"lineNumber":122,"author":{"gitId":"gosongying"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2024-03-26"},{"lineNumber":123,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":124,"author":{"gitId":"gosongying"},"content":"    void updateFilteredClientList(Predicate\u003c? extends Person\u003e predicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":125,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":126,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":127,"author":{"gitId":"LimZiJia"},"content":"     * Updates and sorts the filter of the filtered client list to filter by the given {@code predicate}.","lastModifiedDate":"2024-04-01"},{"lineNumber":128,"author":{"gitId":"LimZiJia"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2024-04-01"},{"lineNumber":129,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":130,"author":{"gitId":"LimZiJia"},"content":"    void updateAndSortFilteredClientList(Predicate\u003cClient\u003e predicate, Comparator\u003cClient\u003e comparator);","lastModifiedDate":"2024-04-04"},{"lineNumber":131,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":132,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":133,"author":{"gitId":"gosongying"},"content":"     * Updates the filter of the filtered housekeeper list to filter by the given {@code predicate}.","lastModifiedDate":"2024-04-04"},{"lineNumber":134,"author":{"gitId":"gosongying"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2024-03-26"},{"lineNumber":135,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":136,"author":{"gitId":"gosongying"},"content":"    void updateFilteredHousekeeperList(Predicate\u003c? extends Person\u003e predicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":137,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"gosongying"},"content":"     * Updates the filter of the filtered housekeeper list to filter by the given {@code housekeeperPredicate}.","lastModifiedDate":"2024-04-04"},{"lineNumber":140,"author":{"gitId":"gosongying"},"content":"     * @throws NullPointerException if {@code housekeeperPredicate} is null.","lastModifiedDate":"2024-04-04"},{"lineNumber":141,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"gosongying"},"content":"    void updateFilteredHousekeeperListWithHousekeeperPredicate(Predicate\u003cHousekeeper\u003e housekeeperPredicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"LimZiJia":26,"moguries":3,"gosongying":51,"-":61,"GERARDJM018":2}},{"path":"src/main/java/housekeeping/hub/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.GuiSettings;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.LogsCenter;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Housekeeper;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Person;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":" * Represents the in-memory model of the hub book data.","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"gosongying"},"content":"    private final FilteredList\u003cClient\u003e filteredClients;","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"gosongying"},"content":"    private final FilteredList\u003cHousekeeper\u003e filteredHousekeepers;","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"        logger.fine(\"Initializing with hub book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2024-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"gosongying"},"content":"        filteredClients \u003d new FilteredList\u003c\u003e(this.addressBook.getClientList());","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"gosongying"},"content":"        filteredHousekeepers \u003d new FilteredList\u003c\u003e(this.addressBook.getHousekeeperList());","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"gosongying"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"gosongying"},"content":"        requireNonNull(client);","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"gosongying"},"content":"        return addressBook.hasClient(client);","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"gosongying"},"content":"    public boolean hasHousekeeper(Housekeeper housekeeper) {","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"gosongying"},"content":"        requireNonNull(housekeeper);","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"gosongying"},"content":"        return addressBook.hasHousekeeper(housekeeper);","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"gosongying"},"content":"    public void deleteClient(Client target) {","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"gosongying"},"content":"        addressBook.removeClient(target);","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"gosongying"},"content":"    public void deleteHousekeeper(Housekeeper target) {","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"gosongying"},"content":"        addressBook.removeHousekeeper(target);","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"gosongying"},"content":"    public void addClient(Client client) {","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"gosongying"},"content":"        addressBook.addClient(client);","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"gosongying"},"content":"        updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":121,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"gosongying"},"content":"    public void addHousekeeper(Housekeeper housekeeper) {","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"gosongying"},"content":"        addressBook.addHousekeeper(housekeeper);","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"gosongying"},"content":"        updateFilteredHousekeeperList(PREDICATE_SHOW_ALL_HOUSEKEEPERS);","lastModifiedDate":"2024-03-26"},{"lineNumber":127,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":128,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"gosongying"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"gosongying"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"gosongying"},"content":"        addressBook.setClient(target, editedClient);","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":137,"author":{"gitId":"gosongying"},"content":"    public void setHousekeeper(Housekeeper target, Housekeeper editedHousekeeper) {","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"gosongying"},"content":"        requireAllNonNull(target, editedHousekeeper);","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":140,"author":{"gitId":"gosongying"},"content":"        addressBook.setHousekeeper(target, editedHousekeeper);","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":150,"author":{"gitId":"gosongying"},"content":"    public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2024-03-26"},{"lineNumber":151,"author":{"gitId":"gosongying"},"content":"        return filteredClients;","lastModifiedDate":"2024-03-26"},{"lineNumber":152,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":153,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":154,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":155,"author":{"gitId":"gosongying"},"content":"    public ObservableList\u003cHousekeeper\u003e getFilteredHousekeeperList() {","lastModifiedDate":"2024-03-26"},{"lineNumber":156,"author":{"gitId":"gosongying"},"content":"        return filteredHousekeepers;","lastModifiedDate":"2024-03-26"},{"lineNumber":157,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":158,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":159,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":160,"author":{"gitId":"gosongying"},"content":"    public void updateFilteredClientList(Predicate\u003c? extends Person\u003e predicate) {","lastModifiedDate":"2024-04-02"},{"lineNumber":161,"author":{"gitId":"gosongying"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2024-03-26"},{"lineNumber":162,"author":{"gitId":"gosongying"},"content":"        filteredClients.setPredicate((Predicate\u003c? super Client\u003e) predicate);","lastModifiedDate":"2024-04-02"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":165,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":166,"author":{"gitId":"LimZiJia"},"content":"    public void updateAndSortFilteredClientList(Predicate\u003cClient\u003e predicate, Comparator\u003cClient\u003e comparator) {","lastModifiedDate":"2024-04-04"},{"lineNumber":167,"author":{"gitId":"LimZiJia"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2024-04-01"},{"lineNumber":168,"author":{"gitId":"LimZiJia"},"content":"        addressBook.sortClients(comparator);","lastModifiedDate":"2024-04-04"},{"lineNumber":169,"author":{"gitId":"LimZiJia"},"content":"        filteredClients.setPredicate(predicate);","lastModifiedDate":"2024-04-01"},{"lineNumber":170,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":171,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":173,"author":{"gitId":"gosongying"},"content":"    public void updateFilteredHousekeeperList(Predicate\u003c? extends Person\u003e predicate) {","lastModifiedDate":"2024-04-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":175,"author":{"gitId":"gosongying"},"content":"        filteredHousekeepers.setPredicate((Predicate\u003c? super Housekeeper\u003e) predicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":178,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":179,"author":{"gitId":"LimZiJia"},"content":"    public void updateFilteredHousekeeperListWithHousekeeperPredicate(Predicate\u003cHousekeeper\u003e housekeeperPredicate) {","lastModifiedDate":"2024-04-04"},{"lineNumber":180,"author":{"gitId":"LimZiJia"},"content":"        requireNonNull(housekeeperPredicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":181,"author":{"gitId":"LimZiJia"},"content":"        filteredHousekeepers.setPredicate(housekeeperPredicate);","lastModifiedDate":"2024-04-04"},{"lineNumber":182,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":183,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":198,"author":{"gitId":"gosongying"},"content":"                \u0026\u0026 filteredClients.equals(otherModelManager.filteredClients)","lastModifiedDate":"2024-03-26"},{"lineNumber":199,"author":{"gitId":"gosongying"},"content":"                \u0026\u0026 filteredHousekeepers.equals(otherModelManager.filteredHousekeepers);","lastModifiedDate":"2024-03-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimZiJia":23,"gosongying":56,"-":122}},{"path":"src/main/java/housekeeping/hub/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Housekeeper;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":" * Unmodifiable view of an hub book","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"gosongying"},"content":"    //ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"gosongying"},"content":"     * Returns an unmodifiable view of the clients list.","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"gosongying"},"content":"     * This list will not contain any duplicate clients.","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"gosongying"},"content":"    ObservableList\u003cClient\u003e getClientList();","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"gosongying"},"content":"     * Returns an unmodifiable view of the housekeepers list.","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"gosongying"},"content":"     * This list will not contain any duplicate housekeepers.","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"gosongying"},"content":"    ObservableList\u003cHousekeeper\u003e getHousekeeperList();","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimZiJia":4,"gosongying":13,"-":13}},{"path":"src/main/java/housekeeping/hub/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.GuiSettings;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"LimZiJia":2,"-":13}},{"path":"src/main/java/housekeeping/hub/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.GuiSettings;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2024-04-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimZiJia":2,"gosongying":1,"-":86}},{"path":"src/main/java/housekeeping/hub/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model.person;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":" * Represents a Person\u0027s hub in the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"     * The first character of the hub must not be a whitespace,","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"     * @param address A valid hub.","lastModifiedDate":"2024-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LimZiJia":5,"-":60}},{"path":"src/main/java/housekeeping/hub/model/person/Area.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model.person;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.ALLOWED_PREAMBLES_AREA;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":" * Represents a Person\u0027s area in the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidArea(String)}","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":"public class Area {","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Area can only take [north, northeast, east, southeast, south,\"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"            + \" southwest, west, northwest] and it should not be blank\";","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"    public final String value;","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"     * Constructs an {@code area}.","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"     * @param area A valid area.","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"    public Area(String area) {","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"        requireNonNull(area);","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"        checkArgument(isValidArea(area), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"GERARDJM018"},"content":"        value \u003d area;","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"moguries"},"content":"     * Returns true if a given string is a valid area.","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"GERARDJM018"},"content":"    public static boolean isValidArea(String test) {","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 preambleIsAllowed(test);","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"GERARDJM018"},"content":"     * Checks if a given command uses a preamble that is allowed. (we define preamble as AREA)","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"GERARDJM018"},"content":"     * @param preamble","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"GERARDJM018"},"content":"     * @return true if the preamble is allowed and no if it is not.","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"GERARDJM018"},"content":"    public static boolean preambleIsAllowed(String preamble) {","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"GERARDJM018"},"content":"        for (String s : ALLOWED_PREAMBLES_AREA) {","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"GERARDJM018"},"content":"            if (s.equals(preamble)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"GERARDJM018"},"content":"                return true;","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"GERARDJM018"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"GERARDJM018"},"content":"        return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"GERARDJM018"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"GERARDJM018"},"content":"    public String toString() {","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"GERARDJM018"},"content":"        return value;","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"GERARDJM018"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"GERARDJM018"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"GERARDJM018"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"GERARDJM018"},"content":"            return true;","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"GERARDJM018"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"GERARDJM018"},"content":"        if (!(other instanceof Area)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"GERARDJM018"},"content":"            return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"GERARDJM018"},"content":"        Area otherArea \u003d (Area) other;","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"GERARDJM018"},"content":"        return value.equals(otherArea.value);","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"GERARDJM018"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"GERARDJM018"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"GERARDJM018"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"LimZiJia":4,"moguries":1,"GERARDJM018":72}},{"path":"src/main/java/housekeeping/hub/model/person/Booking.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model.person;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"moguries"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"moguries"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"moguries"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"moguries"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"moguries"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"moguries"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"moguries"},"content":" * Represents a booking for a housekeeper.","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"moguries"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"moguries"},"content":"public class Booking implements Comparable\u003cBooking\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"moguries"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Booked date and time should be in the format: yyyy-mm-dd (am|pm).\"","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"moguries"},"content":"            + \"Both date and time fields must be filled. Time field can only take values {am, pm}.\";","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"moguries"},"content":"    private static final Pattern PATTERN_BOOKED_DATE_AND_TIME \u003d Pattern.compile(\"(\\\\d{4}-\\\\d{2}-\\\\d{2})\\\\s+(am|pm)\");","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"moguries"},"content":"    private static final DateTimeFormatter FORMATTER_BOOKED_DATE \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"moguries"},"content":"    private final LocalDate bookedDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"moguries"},"content":"    private final String bookedTime;","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"moguries"},"content":"     * Creates a Booking object.","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"moguries"},"content":"     * @param bookedDate The booked date.","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"moguries"},"content":"     * @param bookedTime The booked time, either \"am\" or \"pm\".","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"moguries"},"content":"    public Booking(LocalDate bookedDate, String bookedTime) {","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"moguries"},"content":"        this.bookedDate \u003d bookedDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"moguries"},"content":"        this.bookedTime \u003d bookedTime;","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"moguries"},"content":"     * Creates a Booking object using a string representation of the booked date and time.","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"moguries"},"content":"     * @param bookedDateAndTime String representation of the booked date and time.","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"moguries"},"content":"    public Booking(String bookedDateAndTime) {","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"moguries"},"content":"        requireNonNull(bookedDateAndTime);","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"moguries"},"content":"        checkArgument(isValidBookedDateAndTime(bookedDateAndTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"moguries"},"content":"        bookedDate \u003d retrieveDate(bookedDateAndTime);","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"moguries"},"content":"        bookedTime \u003d retrieveTime(bookedDateAndTime);","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"moguries"},"content":"     * Checks if specified string representation of booked date and time is in a valid format.","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"moguries"},"content":"     * @param bookedDateAndTime String representation of the booked date and time.","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"moguries"},"content":"     * @return True if valid, false otherwise.","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"moguries"},"content":"    public static boolean isValidBookedDateAndTime(String bookedDateAndTime) {","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"moguries"},"content":"        Matcher matcher \u003d PATTERN_BOOKED_DATE_AND_TIME.matcher(bookedDateAndTime);","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"moguries"},"content":"        return matcher.matches();","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"moguries"},"content":"     * Retrieve LocalDate object of booked date from a string representation of booked date and time.","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"moguries"},"content":"     * @param bookedDateAndTime String representation of the booked date and time.","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"moguries"},"content":"     * @return LocalDate object","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"moguries"},"content":"    public static LocalDate retrieveDate(String bookedDateAndTime) {","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"moguries"},"content":"        Matcher matcher \u003d PATTERN_BOOKED_DATE_AND_TIME.matcher(bookedDateAndTime);","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"moguries"},"content":"        LocalDate parsedDate \u003d LocalDate.ofEpochDay(2024-01-02);","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"moguries"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"moguries"},"content":"            String dateString \u003d matcher.group(1);","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"moguries"},"content":"            parsedDate \u003d LocalDate.parse(dateString, FORMATTER_BOOKED_DATE);","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"moguries"},"content":"            return parsedDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"moguries"},"content":"        return parsedDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"moguries"},"content":"     * Retrieve String object of booked time from a string representation of booked date and time.","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"moguries"},"content":"     * @param bookedDateAndTime String representation of booked date and time.","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"moguries"},"content":"     * @return String object","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"moguries"},"content":"    public static String retrieveTime(String bookedDateAndTime) {","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"moguries"},"content":"        Matcher matcher \u003d PATTERN_BOOKED_DATE_AND_TIME.matcher(bookedDateAndTime);","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"moguries"},"content":"        String timeString \u003d \"\";","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"moguries"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"moguries"},"content":"            timeString \u003d matcher.group(2);","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"moguries"},"content":"        return timeString;","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"moguries"},"content":"    public LocalDate getBookedDate() {","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"moguries"},"content":"        return this.bookedDate;","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"moguries"},"content":"    public String getBookedTime() {","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"moguries"},"content":"        return this.bookedTime;","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"moguries"},"content":"     * Formats booked date and time in this format: yyyy-MM-dd (am|pm)","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"moguries"},"content":"     * @return Formatted string of booked date and time","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"moguries"},"content":"    public String formatBookedCleaning() {","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"moguries"},"content":"        String formattedDateString \u003d bookedDate.format(FORMATTER_BOOKED_DATE);","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"moguries"},"content":"        return formattedDateString + \" \" + bookedTime;","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"moguries"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"moguries"},"content":"    public int compareTo(Booking other) {","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"moguries"},"content":"        LocalDate thisDate \u003d this.getBookedDate();","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"moguries"},"content":"        LocalDate otherDate \u003d other.getBookedDate();","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"moguries"},"content":"        String thisTime \u003d this.getBookedTime();","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"moguries"},"content":"        String otherTime \u003d other.getBookedTime();","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"moguries"},"content":"        int dateComparison \u003d thisDate.compareTo(otherDate);","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"moguries"},"content":"        if (dateComparison !\u003d 0) {","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"moguries"},"content":"            return dateComparison;","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"moguries"},"content":"        return thisTime.compareTo(otherTime);","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"moguries"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"moguries"},"content":"    public String toString() {","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"moguries"},"content":"        return formatBookedCleaning();","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"moguries"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"moguries"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"moguries"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"moguries"},"content":"            return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"moguries"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"moguries"},"content":"        if (!(other instanceof Booking)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"moguries"},"content":"            return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"moguries"},"content":"        Booking otherBooking \u003d (Booking) other;","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"moguries"},"content":"        return bookedDate.equals(otherBooking.getBookedDate()) \u0026\u0026 bookedTime.equals(otherBooking.getBookedTime());","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"moguries"},"content":"}","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"LimZiJia":2,"moguries":140}},{"path":"src/main/java/housekeeping/hub/model/person/BookingList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model.person;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"moguries"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"moguries"},"content":"import java.util.Collections;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"moguries"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"moguries"},"content":" * Encapsulates the behaviour of a list of Bookings.","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"moguries"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"moguries"},"content":"public class BookingList {","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"moguries"},"content":"    public static final String MESSAGE_DUPLICATE \u003d \"is unavailable at the specified date and time.\"","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"moguries"},"content":"            + \" Please input a different date and time.\";","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"moguries"},"content":"    public static final String MESSAGE_INVALID_DELETE \u003d \"The booking index provided is invalid.\";","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"moguries"},"content":"    private static final String MESSAGE_SUCCESS_ADD \u003d \"This booking has successfully been added: %1$s.\";","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"moguries"},"content":"    private static final String MESSAGE_SUCCESS_DELETE \u003d \"This booking has successfully been deleted: %1$s.\";","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"moguries"},"content":"    private static final String MESSAGE_SUCCESS_LIST \u003d \"Bookings:%1$s\";","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"moguries"},"content":"    private ArrayList\u003cBooking\u003e bookings;","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"moguries"},"content":"     * Constructs an BookingList object with an empty list of bookings.","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"moguries"},"content":"    public BookingList() {","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"moguries"},"content":"        bookings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"moguries"},"content":"     * Constructs a BookingList object with another Bookinglist.","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"moguries"},"content":"     * @param bookingList other BookingList whose list to copy","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"moguries"},"content":"    public BookingList(BookingList bookingList) {","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"moguries"},"content":"        this.bookings \u003d bookingList.getBookings();","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"moguries"},"content":"     * Constructs a BookingList object with an ArrayList\u003cBooking\u003e.","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"moguries"},"content":"     * @param bookingList ArrayList\u003cBooking\u003e containing list of bookings","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"moguries"},"content":"    public BookingList(ArrayList\u003cBooking\u003e bookingList) {","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"moguries"},"content":"        this.bookings \u003d bookingList;","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"moguries"},"content":"     * Creates a new booking with the specified booked date and time.","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"moguries"},"content":"     * @param bookedDateAndTime of the booking to be created","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"moguries"},"content":"     * @return Booking object","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"moguries"},"content":"    public Booking createBooking(String bookedDateAndTime) {","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"moguries"},"content":"        Booking booking \u003d new Booking(bookedDateAndTime);","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"moguries"},"content":"        return booking;","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"moguries"},"content":"     * Checks if a booking with the specified booked date and time already exists in the booking list.","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"moguries"},"content":"     * @param bookedDateAndTime of booking to be checked","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"moguries"},"content":"     * @return True if there is a duplicate, false otherwise","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"moguries"},"content":"    public boolean hasDuplicate(String bookedDateAndTime) {","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"moguries"},"content":"        Booking bookingToCheck \u003d new Booking(bookedDateAndTime);","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"moguries"},"content":"        for (Booking booking : bookings) {","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"moguries"},"content":"            if (booking.equals(bookingToCheck)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"moguries"},"content":"                return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"moguries"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"moguries"},"content":"        return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"moguries"},"content":"     * Adds a new booking with the specified date and time to the booking list.","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"moguries"},"content":"     * @param bookedDateAndTime of new booking to be added","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"moguries"},"content":"     * @return String containing message for successfully adding a booking","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"moguries"},"content":"    public String addBooking(String bookedDateAndTime) {","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"moguries"},"content":"        Booking booking \u003d createBooking(bookedDateAndTime);","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"moguries"},"content":"        bookings.add(booking);","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"moguries"},"content":"        return String.format(MESSAGE_SUCCESS_ADD, booking.toString());","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":83,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"moguries"},"content":"     * Checks if provided index is valid.","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"moguries"},"content":"     * @param index to be checked","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"moguries"},"content":"     * @return True if valid, false otherwise","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"moguries"},"content":"    public boolean isValidDeleteIndex(int index) {","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"moguries"},"content":"        if (index \u003c\u003d bookings.size()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"moguries"},"content":"            return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":92,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"moguries"},"content":"        return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"moguries"},"content":"     * Deletes the booking at the specified index from the booking list.","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"moguries"},"content":"     * @param index of booking to be deleted","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"moguries"},"content":"     * @return String containing message for successfully deleting the booking","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"moguries"},"content":"    public String deleteBooking(int index) {","lastModifiedDate":"2024-04-02"},{"lineNumber":103,"author":{"gitId":"moguries"},"content":"        int targetIndex \u003d index - 1;","lastModifiedDate":"2024-04-02"},{"lineNumber":104,"author":{"gitId":"moguries"},"content":"        Booking targetBooking \u003d bookings.get(targetIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":105,"author":{"gitId":"moguries"},"content":"        bookings.remove(targetIndex);","lastModifiedDate":"2024-04-02"},{"lineNumber":106,"author":{"gitId":"moguries"},"content":"        return String.format(MESSAGE_SUCCESS_DELETE, targetBooking.toString());","lastModifiedDate":"2024-04-02"},{"lineNumber":107,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":108,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":109,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":110,"author":{"gitId":"moguries"},"content":"     * Lists all bookings in the booking list.","lastModifiedDate":"2024-04-02"},{"lineNumber":111,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":112,"author":{"gitId":"moguries"},"content":"     * @return String containing message of the list of bookings","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":114,"author":{"gitId":"moguries"},"content":"    public String listBooking() {","lastModifiedDate":"2024-04-02"},{"lineNumber":115,"author":{"gitId":"moguries"},"content":"        Collections.sort(bookings);","lastModifiedDate":"2024-04-02"},{"lineNumber":116,"author":{"gitId":"moguries"},"content":"        String listMessage \u003d \"\";","lastModifiedDate":"2024-04-02"},{"lineNumber":117,"author":{"gitId":"moguries"},"content":"        for (int i \u003d 0; i \u003c bookings.size(); i++) {","lastModifiedDate":"2024-04-02"},{"lineNumber":118,"author":{"gitId":"moguries"},"content":"            String bookingString \u003d (i + 1) + \". \" + bookings.get(i).toString();","lastModifiedDate":"2024-04-02"},{"lineNumber":119,"author":{"gitId":"moguries"},"content":"            listMessage +\u003d \"\\n\" + bookingString;","lastModifiedDate":"2024-04-02"},{"lineNumber":120,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":121,"author":{"gitId":"moguries"},"content":"        return String.format(MESSAGE_SUCCESS_LIST, listMessage);","lastModifiedDate":"2024-04-02"},{"lineNumber":122,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":123,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":124,"author":{"gitId":"moguries"},"content":"    public ArrayList\u003cBooking\u003e getBookings() {","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"moguries"},"content":"        if (bookings \u003d\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"moguries"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"moguries"},"content":"        return bookings;","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"gosongying"},"content":"    public String toString() {","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"gosongying"},"content":"        if (bookings.isEmpty()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"gosongying"},"content":"            return \"No bookings available\";","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":136,"author":{"gitId":"gosongying"},"content":"        return bookings.toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"moguries"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"LimZiJia":1,"moguries":129,"gosongying":8}},{"path":"src/main/java/housekeeping/hub/model/person/BookingSearchPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model.person;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"moguries"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.StringUtil;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"moguries"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"moguries"},"content":" * Tests that a {@code Housekeeper}\u0027s {@code Area} matches the specified area and that they do not have a booking","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"moguries"},"content":" * at the specified date and time.","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"moguries"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"moguries"},"content":"public class BookingSearchPredicate implements Predicate\u003cHousekeeper\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"moguries"},"content":"    private final String area;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"moguries"},"content":"    private final String bookingToSearch;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"moguries"},"content":"     * Constructs a BookingSearchPredicate with the given area and booked date and time.","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"moguries"},"content":"     * @param area area to test","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"moguries"},"content":"     * @param bookingToSearch booked date and time to test","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"moguries"},"content":"    public BookingSearchPredicate(String area, String bookingToSearch) {","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"moguries"},"content":"        this.area \u003d area;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"moguries"},"content":"        this.bookingToSearch \u003d bookingToSearch;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"moguries"},"content":"    public String getArea() {","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"moguries"},"content":"        return area;","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"moguries"},"content":"    public String getBookingToSearch() {","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"moguries"},"content":"        return bookingToSearch;","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"moguries"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"moguries"},"content":"    public boolean test(Housekeeper housekeeper) {","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"moguries"},"content":"        boolean hasArea \u003d StringUtil.containsWordIgnoreCase(housekeeper.getArea().toString(), area);","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"moguries"},"content":"        return !housekeeper.hasDuplicateBooking(bookingToSearch) \u0026\u0026 hasArea;","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"moguries"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"moguries"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"moguries"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"moguries"},"content":"            return true;","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"moguries"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"moguries"},"content":"        if (!(other instanceof BookingSearchPredicate)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"moguries"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"moguries"},"content":"        BookingSearchPredicate otherBookingSearchPredicate \u003d (BookingSearchPredicate) other;","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"moguries"},"content":"        boolean isSameBooking \u003d  bookingToSearch.equals(otherBookingSearchPredicate.bookingToSearch);","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"moguries"},"content":"        return isSameBooking;","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"moguries"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"moguries"},"content":"    public String toString() {","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"moguries"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"moguries"},"content":"                .add(\"booking to search\", bookingToSearch).toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"moguries"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"LimZiJia":3,"moguries":59}},{"path":"src/main/java/housekeeping/hub/model/person/Client.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model.person;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.tag.Tag;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":" * Represents a Person in the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"public class Client extends Person implements Comparable\u003cClient\u003e {","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"    /** The housekeeping details of the client. Used to generate call list by predicting next session date */","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"    private HousekeepingDetails housekeepingDetails;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"     * @param name","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"     * @param phone","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"     * @param email","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"     * @param address","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"     * @param tags","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"    public Client(Name name, Phone phone, Email email, Address address,","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"gosongying"},"content":"                  Set\u003cTag\u003e tags, HousekeepingDetails housekeepingDetails, Area area) {","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"gosongying"},"content":"        super(name, phone, email, address, tags, area);","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"        this.housekeepingDetails \u003d housekeepingDetails;","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"     * Returns true if a client has housekeeping details.","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"    public boolean hasHousekeepingDetails() {","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"        return !housekeepingDetails.isEmpty();","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"    public void setHousekeepingDetails(HousekeepingDetails housekeepingDetails) {","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"        this.housekeepingDetails \u003d housekeepingDetails;","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"    public LocalDate getNextHousekeepingDate() {","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"LimZiJia"},"content":"        return this.housekeepingDetails.getNextHousekeepingDate();","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"LimZiJia"},"content":"    public boolean hasBooking() {","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"LimZiJia"},"content":"        return this.housekeepingDetails.hasBooking();","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"LimZiJia"},"content":"     * Returns the housekeeping details of the client.","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"LimZiJia"},"content":"    public HousekeepingDetails getDetails() {","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"LimZiJia"},"content":"        return this.housekeepingDetails;","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"gosongying"},"content":"     * Returns true if both clients have the same identity and data fields.","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"gosongying"},"content":"     * This defines a stronger notion of equality between two clients.","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"gosongying"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"gosongying"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"gosongying"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"gosongying"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"gosongying"},"content":"        if (!(other instanceof Client)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"gosongying"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"gosongying"},"content":"        Client otherPerson \u003d (Client) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"gosongying"},"content":"        return this.getName().equals(otherPerson.getName())","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"gosongying"},"content":"                \u0026\u0026 this.getPhone().equals(otherPerson.getPhone())","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"gosongying"},"content":"                \u0026\u0026 this.getEmail().equals(otherPerson.getEmail())","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"gosongying"},"content":"                \u0026\u0026 this.getAddress().equals(otherPerson.getAddress())","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"LimZiJia"},"content":"                \u0026\u0026 this.getTags().equals(otherPerson.getTags())","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"gosongying"},"content":"                \u0026\u0026 this.getArea().equals(otherPerson.getArea());","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"gosongying"},"content":"    public boolean isClient() {","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"gosongying"},"content":"        return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"LimZiJia"},"content":"    public int compareTo(Client other) {","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"LimZiJia"},"content":"        if (this.hasHousekeepingDetails() \u0026\u0026 other.hasHousekeepingDetails()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"LimZiJia"},"content":"            return this.housekeepingDetails.compareTo(other.housekeepingDetails);","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"LimZiJia"},"content":"        } else if (this.hasHousekeepingDetails()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"LimZiJia"},"content":"            return -1; // this client has housekeeping details but the other does not, so this client is less.","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"LimZiJia"},"content":"        } else if (other.hasHousekeepingDetails()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"LimZiJia"},"content":"            return 1; // the other client has housekeeping details but this client does not, so this client is greater.","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"LimZiJia"},"content":"        } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"LimZiJia"},"content":"            return 0; // neither client has housekeeping details, so they are considered equal","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"LimZiJia"},"content":"    public String toString() {","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"LimZiJia"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"LimZiJia"},"content":"                .add(\"name\", this.getName())","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"LimZiJia"},"content":"                .add(\"phone\", this.getPhone())","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"LimZiJia"},"content":"                .add(\"email\", this.getEmail())","lastModifiedDate":"2024-03-28"},{"lineNumber":108,"author":{"gitId":"LimZiJia"},"content":"                .add(\"hub\", this.getAddress())","lastModifiedDate":"2024-04-05"},{"lineNumber":109,"author":{"gitId":"LimZiJia"},"content":"                .add(\"tags\", this.getTags())","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"LimZiJia"},"content":"                .add(\"housekeepingDetails\", this.housekeepingDetails)","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"LimZiJia"},"content":"                .toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"LimZiJia":83,"gosongying":30}},{"path":"src/main/java/housekeeping/hub/model/person/ClientComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model.person;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":" * Compares two clients based predicted next housekeeping date.","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"public class ClientComparator implements Comparator\u003cClient\u003e {","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"    public int compare(Client c1, Client c2) {","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"        return c1.compareTo(c2);","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"LimZiJia":13}},{"path":"src/main/java/housekeeping/hub/model/person/ContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model.person;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.StringUtil;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":"public class ContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"    private final List\u003cString\u003e keywordsN;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"    private final List\u003cString\u003e keywordsAd;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"    private final List\u003cString\u003e keywordsAr;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"GERARDJM018"},"content":"    public ContainsKeywordsPredicate(List\u003cString\u003e keywordsN, List\u003cString\u003e keywordsAd, List\u003cString\u003e keywordsAr) {","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"        this.keywordsN \u003d keywordsN;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"GERARDJM018"},"content":"        this.keywordsAd \u003d keywordsAd;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"GERARDJM018"},"content":"        this.keywordsAr \u003d keywordsAr;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"GERARDJM018"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"GERARDJM018"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"        boolean hasNameKeyword \u003d true;","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"        boolean hasAddressKeyword \u003d true;","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"        boolean hasAreaKeyword \u003d true;","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"GERARDJM018"},"content":"        if (keywordsN.get(0) !\u003d \"\") {","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"GERARDJM018"},"content":"            hasNameKeyword \u003d keywordsN.stream()","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"GERARDJM018"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"        if (keywordsAd.get(0) !\u003d \"\") {","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"GERARDJM018"},"content":"            hasAddressKeyword \u003d keywordsAd.stream()","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"GERARDJM018"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getAddress().toString(), keyword));","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"GERARDJM018"},"content":"        if (keywordsAr.get(0) !\u003d \"\") {","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"GERARDJM018"},"content":"            hasAreaKeyword \u003d keywordsAr.stream()","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"GERARDJM018"},"content":"                    .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getArea().toString(), keyword));","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"GERARDJM018"},"content":"        return hasNameKeyword \u0026\u0026 hasAddressKeyword \u0026\u0026 hasAreaKeyword;","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"GERARDJM018"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"GERARDJM018"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"GERARDJM018"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"GERARDJM018"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"GERARDJM018"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"GERARDJM018"},"content":"        if (!(other instanceof ContainsKeywordsPredicate)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"GERARDJM018"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"GERARDJM018"},"content":"        ContainsKeywordsPredicate otherContainsKeywordsPredicate \u003d (ContainsKeywordsPredicate) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"GERARDJM018"},"content":"        boolean isSameName \u003d  keywordsN.equals(otherContainsKeywordsPredicate.keywordsN);","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"GERARDJM018"},"content":"        boolean isSameAddress \u003d  keywordsAd.equals(otherContainsKeywordsPredicate.keywordsAd);","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"GERARDJM018"},"content":"        boolean isSameArea \u003d  keywordsAr.equals(otherContainsKeywordsPredicate.keywordsAr);","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"GERARDJM018"},"content":"        return isSameName \u0026\u0026 isSameAddress \u0026\u0026 isSameArea;","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"GERARDJM018"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"GERARDJM018"},"content":"    public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"GERARDJM018"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywordsN).toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"LimZiJia":3,"GERARDJM018":63}},{"path":"src/main/java/housekeeping/hub/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model.person;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":" * Represents a Person\u0027s email in the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"     * @param email A valid email hub.","lastModifiedDate":"2024-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LimZiJia":4,"-":75}},{"path":"src/main/java/housekeeping/hub/model/person/Housekeeper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model.person;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.tag.Tag;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":" * Represents a Housekeeper in the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"public class Housekeeper extends Person {","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"moguries"},"content":"    private BookingList bookingList;","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"     * @param name","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"     * @param phone","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"     * @param email","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"     * @param address","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"     * @param tags","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"moguries"},"content":"    public Housekeeper(","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"gosongying"},"content":"            Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Area area, BookingList bookingList) {","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"gosongying"},"content":"        super(name, phone, email, address, tags, area);","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"moguries"},"content":"        this.bookingList \u003d bookingList !\u003d null ? bookingList : new BookingList();","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"moguries"},"content":"    public boolean hasDuplicateBooking(String bookedDateAndTime) {","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"moguries"},"content":"        return bookingList.hasDuplicate(bookedDateAndTime);","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"moguries"},"content":"    public String addBooking(String bookedDateAndTime) {","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"moguries"},"content":"        return \"Housekeeper: [ \" + this.getName() + \" ]\\n\\n\" + bookingList.addBooking(bookedDateAndTime);","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"moguries"},"content":"    public boolean isValidDeleteIndex(int index) {","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"moguries"},"content":"        return bookingList.isValidDeleteIndex(index);","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"moguries"},"content":"    public String deleteBooking(int index) {","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"moguries"},"content":"        return \"Housekeeper: [ \" + this.getName() + \" ]\\n\\n\" + bookingList.deleteBooking(index);","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"moguries"},"content":"    public String listBooking() {","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"moguries"},"content":"        return \"Housekeeper: [ \" + this.getName() + \" ]\\n\\n\" + bookingList.listBooking();","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"moguries"},"content":"    public BookingList getBookingList() {","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"moguries"},"content":"        return this.bookingList;","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"gosongying"},"content":"     * Returns true if both housekeepers have the same identity and data fields.","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"gosongying"},"content":"     * This defines a stronger notion of equality between two housekeepers.","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"gosongying"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"gosongying"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"gosongying"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"gosongying"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"gosongying"},"content":"        if (!(other instanceof Housekeeper)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"gosongying"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"gosongying"},"content":"        Housekeeper otherPerson \u003d (Housekeeper) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"gosongying"},"content":"        return this.getName().equals(otherPerson.getName())","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"gosongying"},"content":"                \u0026\u0026 this.getPhone().equals(otherPerson.getPhone())","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"gosongying"},"content":"                \u0026\u0026 this.getEmail().equals(otherPerson.getEmail())","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"gosongying"},"content":"                \u0026\u0026 this.getAddress().equals(otherPerson.getAddress())","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"LimZiJia"},"content":"                \u0026\u0026 this.getTags().equals(otherPerson.getTags())","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"gosongying"},"content":"                \u0026\u0026 this.getArea().equals(otherPerson.getArea());","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"gosongying"},"content":"    public boolean isClient() {","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"gosongying"},"content":"        return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"LimZiJia"},"content":"    public HousekeepingDetails getDetails() {","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"LimZiJia"},"content":"        return null;","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"LimZiJia":29,"moguries":30,"gosongying":30}},{"path":"src/main/java/housekeeping/hub/model/person/HousekeepingDetails.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model.person;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import java.time.Period;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":" * Represents the housekeeping details of a client.","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"public class HousekeepingDetails implements Comparable\u003cHousekeepingDetails\u003e {","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"    private static final Pattern USER_FORMAT \u003d Pattern.compile(\"\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d+ (days|weeks|months|years)\");","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"    private static final Pattern STORAGE_FORMAT \u003d","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"            Pattern.compile(\"(null|(\\\\d{4}-\\\\d{2}-\\\\d{2})\\\\s\" // Last housekeeping date","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"            + \"(P(?!$)(\\\\d+Y)?(\\\\d+M)?(\\\\d+W)?(\\\\d+D)?)\\\\s\" // Preferred interval","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"            + \"(null|\\\\d{4}-\\\\d{2}-\\\\d{2}\\\\s+(am|pm))\\\\s\" // Booking date (can be null)","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"            + \"(P(?!$)(\\\\d+Y)?(\\\\d+M)?(\\\\d+W)?(\\\\d+D)?))\"); // Deferment","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"            \"Housekeeping details should be in the format: yyyy-mm-dd n (days|weeks|months|years) \"","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"                    + \"where n is an integer quantity of days, weeks, months or years.\";","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"    public static final String MESSAGE_CONSTRAINTS_STORAGE \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"            \"Housekeeping details should be in the format: \u0027yyyy-mm-dd P?Y?M?W?D? yyyy-mm-dd P?Y?M?W?D?\u0027 or \u0027null\u0027\"","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"                    + \"where P is the period designator, Y is years, M is months, W is weeks D is days. \"","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"                    + \"YMWD must be in that order. All fields are optional.\"","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"                    + \"The second date is the booking date and it can be null\";","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"    public static final String NO_DETAILS_PROVIDED \u003d \"No housekeeping details provided\";","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"    public static final HousekeepingDetails empty \u003d new HousekeepingDetails();","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"    /** The last date the housekeeping was done. */","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"    private LocalDate lastHousekeepingDate;","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"    /** Client\u0027s preferred time between housekeeping services. */","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"    private Period preferredInterval;","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"    /** The date the housekeeping is booked or null if there is no booking */","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"    private Booking booking;","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"    /** The period to delay calling the client */","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"    private Period deferment;","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"    /** User must add as \"yyyy-mm-dd n (days|weeks|months|years)\" */","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"    public static boolean isValidHousekeepingDetailsUser(String test) {","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"        Matcher userInputMatcher \u003d USER_FORMAT.matcher(test);","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"        return userInputMatcher.matches();","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"LimZiJia"},"content":"    /** String can be stored as \"null\" or \"yyyy-mm-dd P?Y?M?W?D? (null|yyyy-mm-dd (am|pm)) P?Y?M?W?D?\" */","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"LimZiJia"},"content":"    public static boolean isValidHousekeepingDetailsStorage(String test) {","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"LimZiJia"},"content":"        Matcher storageMatcher \u003d STORAGE_FORMAT.matcher(test);","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"LimZiJia"},"content":"        return storageMatcher.matches();","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"LimZiJia"},"content":"     *  Converts the stored string representation of the housekeeping details to a readable format.","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"gosongying"},"content":"     * @param details The stored string representation of the housekeeping details.","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"gosongying"},"content":"     * @return        Readable string representation of the housekeeping details.","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"LimZiJia"},"content":"    public static String makeStoredDetailsReadable(String details) {","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"gosongying"},"content":"        if (details.equals(\"null\")) {","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"gosongying"},"content":"            return NO_DETAILS_PROVIDED;","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"gosongying"},"content":"        else if (!isValidHousekeepingDetailsStorage(details)) {","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"gosongying"},"content":"            return \"Invalid housekeeping details format\";","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"gosongying"},"content":"        // Converting Period of preferred interval to a readable format","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"LimZiJia"},"content":"        String[] s \u003d details.split(\" \"); // If valid s[0] \u003d lastHousekeepingDate, s[1] \u003d preferredInterval,","lastModifiedDate":"2024-04-01"},{"lineNumber":68,"author":{"gitId":"LimZiJia"},"content":"                                               // s[2] \u003d booking, s[3] \u003d deferment","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"gosongying"},"content":"        String num \u003d s[1].substring(1, s[1].length() - 1);","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"gosongying"},"content":"        String unit \u003d s[1].substring(s[1].length() - 1);","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"gosongying"},"content":"        String unitString;","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"gosongying"},"content":"        switch (unit) {","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"gosongying"},"content":"        case \"Y\":","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"gosongying"},"content":"            unitString \u003d \"years\";","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"gosongying"},"content":"            break;","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"gosongying"},"content":"        case \"M\":","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"gosongying"},"content":"            unitString \u003d \"months\";","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"gosongying"},"content":"            break;","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"gosongying"},"content":"        case \"W\":","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"gosongying"},"content":"            unitString \u003d \"weeks\";","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"gosongying"},"content":"            break;","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"gosongying"},"content":"        case \"D\":","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"gosongying"},"content":"            unitString \u003d \"days\";","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"gosongying"},"content":"            break;","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"gosongying"},"content":"        default:","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"gosongying"},"content":"            unitString \u003d \"Invalid unit\";","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"gosongying"},"content":"        // Makes null booking readable","lastModifiedDate":"2024-04-04"},{"lineNumber":90,"author":{"gitId":"gosongying"},"content":"        String booking \u003d s[2].equals(\"null\") ? \"No booking\" : s[2];","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"gosongying"},"content":"        return String.format(\"Last housekeeping: %s\\nPreferred interval: %s %s\\nBooking date: %s\",","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"gosongying"},"content":"                s[0], num, unitString, booking);","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":96,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"GERARDJM018"},"content":"     *  Converts the stored string representation of the housekeeping details with deferment to a readable format.","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"LimZiJia"},"content":"     * @param details The stored string representation of the housekeeping details.","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"LimZiJia"},"content":"     * @return        Readable string representation of the housekeeping details.","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"GERARDJM018"},"content":"    public static String makeStoredDetailsReadableWithDeferment(String details) {","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"LimZiJia"},"content":"        if (details.equals(\"null\")) {","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"LimZiJia"},"content":"            return NO_DETAILS_PROVIDED;","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"LimZiJia"},"content":"        else if (!isValidHousekeepingDetailsStorage(details)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"LimZiJia"},"content":"            return \"Invalid housekeeping details format\";","lastModifiedDate":"2024-03-28"},{"lineNumber":108,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":110,"author":{"gitId":"LimZiJia"},"content":"        // Converting Period of preferred interval to a readable format","lastModifiedDate":"2024-03-31"},{"lineNumber":111,"author":{"gitId":"LimZiJia"},"content":"        String[] s \u003d details.split(\" \"); // If valid s[0] \u003d lastHousekeepingDate, s[1] \u003d preferredInterval,","lastModifiedDate":"2024-04-01"},{"lineNumber":112,"author":{"gitId":"LimZiJia"},"content":"        // s[2] \u003d booking, s[3] \u003d deferment","lastModifiedDate":"2024-04-02"},{"lineNumber":113,"author":{"gitId":"GERARDJM018"},"content":"        String numPI \u003d s[1].substring(1, s[1].length() - 1);","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"GERARDJM018"},"content":"        String unitPI \u003d s[1].substring(s[1].length() - 1);","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"GERARDJM018"},"content":"        String unitStringPI;","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"GERARDJM018"},"content":"        switch (unitPI) {","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"LimZiJia"},"content":"            case \"Y\":","lastModifiedDate":"2024-03-28"},{"lineNumber":118,"author":{"gitId":"GERARDJM018"},"content":"                unitStringPI \u003d \"years\";","lastModifiedDate":"2024-04-04"},{"lineNumber":119,"author":{"gitId":"LimZiJia"},"content":"                break;","lastModifiedDate":"2024-03-28"},{"lineNumber":120,"author":{"gitId":"LimZiJia"},"content":"            case \"M\":","lastModifiedDate":"2024-03-28"},{"lineNumber":121,"author":{"gitId":"GERARDJM018"},"content":"                unitStringPI \u003d \"months\";","lastModifiedDate":"2024-04-04"},{"lineNumber":122,"author":{"gitId":"LimZiJia"},"content":"                break;","lastModifiedDate":"2024-03-28"},{"lineNumber":123,"author":{"gitId":"LimZiJia"},"content":"            case \"W\":","lastModifiedDate":"2024-03-28"},{"lineNumber":124,"author":{"gitId":"GERARDJM018"},"content":"                unitStringPI \u003d \"weeks\";","lastModifiedDate":"2024-04-04"},{"lineNumber":125,"author":{"gitId":"LimZiJia"},"content":"                break;","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"LimZiJia"},"content":"            case \"D\":","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"GERARDJM018"},"content":"                unitStringPI \u003d \"days\";","lastModifiedDate":"2024-04-04"},{"lineNumber":128,"author":{"gitId":"LimZiJia"},"content":"                break;","lastModifiedDate":"2024-03-28"},{"lineNumber":129,"author":{"gitId":"LimZiJia"},"content":"            default:","lastModifiedDate":"2024-03-28"},{"lineNumber":130,"author":{"gitId":"GERARDJM018"},"content":"                unitStringPI \u003d \"Invalid unit\";","lastModifiedDate":"2024-04-04"},{"lineNumber":131,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":132,"author":{"gitId":"GERARDJM018"},"content":"        String numD \u003d s[s.length-1].substring(1, s[s.length-1].length() - 1);","lastModifiedDate":"2024-04-04"},{"lineNumber":133,"author":{"gitId":"GERARDJM018"},"content":"        String unitD\u003d s[s.length-1].substring(s[s.length-1].length() - 1);","lastModifiedDate":"2024-04-04"},{"lineNumber":134,"author":{"gitId":"GERARDJM018"},"content":"        String unitStringD;","lastModifiedDate":"2024-04-04"},{"lineNumber":135,"author":{"gitId":"GERARDJM018"},"content":"        switch (unitD) {","lastModifiedDate":"2024-04-04"},{"lineNumber":136,"author":{"gitId":"GERARDJM018"},"content":"            case \"Y\":","lastModifiedDate":"2024-04-04"},{"lineNumber":137,"author":{"gitId":"GERARDJM018"},"content":"                unitStringD \u003d \"years\";","lastModifiedDate":"2024-04-04"},{"lineNumber":138,"author":{"gitId":"GERARDJM018"},"content":"                break;","lastModifiedDate":"2024-04-04"},{"lineNumber":139,"author":{"gitId":"GERARDJM018"},"content":"            case \"M\":","lastModifiedDate":"2024-04-04"},{"lineNumber":140,"author":{"gitId":"GERARDJM018"},"content":"                unitStringD \u003d \"months\";","lastModifiedDate":"2024-04-04"},{"lineNumber":141,"author":{"gitId":"GERARDJM018"},"content":"                break;","lastModifiedDate":"2024-04-04"},{"lineNumber":142,"author":{"gitId":"GERARDJM018"},"content":"            case \"W\":","lastModifiedDate":"2024-04-04"},{"lineNumber":143,"author":{"gitId":"GERARDJM018"},"content":"                unitStringD \u003d \"weeks\";","lastModifiedDate":"2024-04-04"},{"lineNumber":144,"author":{"gitId":"GERARDJM018"},"content":"                break;","lastModifiedDate":"2024-04-04"},{"lineNumber":145,"author":{"gitId":"GERARDJM018"},"content":"            case \"D\":","lastModifiedDate":"2024-04-04"},{"lineNumber":146,"author":{"gitId":"GERARDJM018"},"content":"                unitStringD \u003d \"days\";","lastModifiedDate":"2024-04-04"},{"lineNumber":147,"author":{"gitId":"GERARDJM018"},"content":"                break;","lastModifiedDate":"2024-04-04"},{"lineNumber":148,"author":{"gitId":"GERARDJM018"},"content":"            default:","lastModifiedDate":"2024-04-04"},{"lineNumber":149,"author":{"gitId":"GERARDJM018"},"content":"                unitStringD \u003d \"Invalid unit\";","lastModifiedDate":"2024-04-04"},{"lineNumber":150,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":151,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":152,"author":{"gitId":"LimZiJia"},"content":"        // Makes null booking readable","lastModifiedDate":"2024-03-31"},{"lineNumber":153,"author":{"gitId":"LimZiJia"},"content":"        String booking \u003d s[2].equals(\"null\") ? \"No booking\" : s[2];","lastModifiedDate":"2024-03-31"},{"lineNumber":154,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":155,"author":{"gitId":"GERARDJM018"},"content":"        return String.format(\"Last housekeeping: %s, Preferred interval: %s %s, Booking date: %s, Deferment: %s %s\",","lastModifiedDate":"2024-04-04"},{"lineNumber":156,"author":{"gitId":"GERARDJM018"},"content":"                s[0], numPI, unitStringPI, booking, numD, unitStringD);","lastModifiedDate":"2024-04-04"},{"lineNumber":157,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":158,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":159,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":160,"author":{"gitId":"LimZiJia"},"content":"     * Creates a HousekeepingDetails object with no details provided.","lastModifiedDate":"2024-03-31"},{"lineNumber":161,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":162,"author":{"gitId":"LimZiJia"},"content":"    public HousekeepingDetails() {","lastModifiedDate":"2024-03-31"},{"lineNumber":163,"author":{"gitId":"LimZiJia"},"content":"        this.lastHousekeepingDate \u003d null;","lastModifiedDate":"2024-03-31"},{"lineNumber":164,"author":{"gitId":"LimZiJia"},"content":"        this.preferredInterval \u003d null;","lastModifiedDate":"2024-03-31"},{"lineNumber":165,"author":{"gitId":"LimZiJia"},"content":"        this.booking \u003d null;","lastModifiedDate":"2024-04-02"},{"lineNumber":166,"author":{"gitId":"LimZiJia"},"content":"        this.deferment \u003d null;","lastModifiedDate":"2024-03-31"},{"lineNumber":167,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":168,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":169,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":170,"author":{"gitId":"LimZiJia"},"content":"     * Creates a HousekeepingDetails object.","lastModifiedDate":"2024-03-31"},{"lineNumber":171,"author":{"gitId":"LimZiJia"},"content":"     * @param lastHousekeepingDate","lastModifiedDate":"2024-03-31"},{"lineNumber":172,"author":{"gitId":"LimZiJia"},"content":"     * @param preferredInterval","lastModifiedDate":"2024-03-31"},{"lineNumber":173,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":174,"author":{"gitId":"LimZiJia"},"content":"    public HousekeepingDetails(LocalDate lastHousekeepingDate, Period preferredInterval) {","lastModifiedDate":"2024-03-31"},{"lineNumber":175,"author":{"gitId":"LimZiJia"},"content":"        this.lastHousekeepingDate \u003d lastHousekeepingDate;","lastModifiedDate":"2024-03-31"},{"lineNumber":176,"author":{"gitId":"LimZiJia"},"content":"        this.preferredInterval \u003d preferredInterval;","lastModifiedDate":"2024-03-31"},{"lineNumber":177,"author":{"gitId":"LimZiJia"},"content":"        this.booking \u003d null;","lastModifiedDate":"2024-04-02"},{"lineNumber":178,"author":{"gitId":"LimZiJia"},"content":"        this.deferment \u003d Period.ZERO;","lastModifiedDate":"2024-03-31"},{"lineNumber":179,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":180,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":181,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":182,"author":{"gitId":"LimZiJia"},"content":"     * Creates a HousekeepingDetails object using a string representation of the housekeeping details used for storage.","lastModifiedDate":"2024-03-31"},{"lineNumber":183,"author":{"gitId":"LimZiJia"},"content":"     * @param details A string representation of the housekeeping details in the format: \"null\" or","lastModifiedDate":"2024-03-31"},{"lineNumber":184,"author":{"gitId":"LimZiJia"},"content":"     *                yyyy-mm-dd P?Y?M?W?D? yyyy-mm-dd P?Y?M?W?D?","lastModifiedDate":"2024-03-31"},{"lineNumber":185,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":186,"author":{"gitId":"LimZiJia"},"content":"    public HousekeepingDetails(String details) {","lastModifiedDate":"2024-03-31"},{"lineNumber":187,"author":{"gitId":"LimZiJia"},"content":"        if (details.equals(\"null\")) {","lastModifiedDate":"2024-03-31"},{"lineNumber":188,"author":{"gitId":"LimZiJia"},"content":"            this.lastHousekeepingDate \u003d null;","lastModifiedDate":"2024-03-31"},{"lineNumber":189,"author":{"gitId":"LimZiJia"},"content":"            this.preferredInterval \u003d null;","lastModifiedDate":"2024-03-31"},{"lineNumber":190,"author":{"gitId":"LimZiJia"},"content":"            this.booking \u003d null;","lastModifiedDate":"2024-04-02"},{"lineNumber":191,"author":{"gitId":"LimZiJia"},"content":"            this.deferment \u003d null;","lastModifiedDate":"2024-03-31"},{"lineNumber":192,"author":{"gitId":"LimZiJia"},"content":"        } else {","lastModifiedDate":"2024-03-31"},{"lineNumber":193,"author":{"gitId":"LimZiJia"},"content":"            // Using groups to extract details","lastModifiedDate":"2024-04-02"},{"lineNumber":194,"author":{"gitId":"LimZiJia"},"content":"            Matcher storageMatcher \u003d STORAGE_FORMAT.matcher(details);","lastModifiedDate":"2024-04-02"},{"lineNumber":195,"author":{"gitId":"LimZiJia"},"content":"            storageMatcher.matches();","lastModifiedDate":"2024-04-02"},{"lineNumber":196,"author":{"gitId":"LimZiJia"},"content":"            this.lastHousekeepingDate \u003d LocalDate.parse(storageMatcher.group(2));","lastModifiedDate":"2024-04-02"},{"lineNumber":197,"author":{"gitId":"LimZiJia"},"content":"            this.preferredInterval \u003d Period.parse(storageMatcher.group(3));","lastModifiedDate":"2024-04-02"},{"lineNumber":198,"author":{"gitId":"LimZiJia"},"content":"            this.booking \u003d storageMatcher.group(8).equals(\"null\") ? null : new Booking(storageMatcher.group(8));","lastModifiedDate":"2024-04-02"},{"lineNumber":199,"author":{"gitId":"LimZiJia"},"content":"            this.deferment \u003d Period.parse(storageMatcher.group(10));","lastModifiedDate":"2024-04-02"},{"lineNumber":200,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":201,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":202,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":203,"author":{"gitId":"LimZiJia"},"content":"    /** Checks if the housekeeping details is empty */","lastModifiedDate":"2024-03-31"},{"lineNumber":204,"author":{"gitId":"LimZiJia"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-03-31"},{"lineNumber":205,"author":{"gitId":"LimZiJia"},"content":"        return this.equals(empty);","lastModifiedDate":"2024-03-31"},{"lineNumber":206,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":207,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":208,"author":{"gitId":"LimZiJia"},"content":"    public boolean hasBooking() {","lastModifiedDate":"2024-03-31"},{"lineNumber":209,"author":{"gitId":"LimZiJia"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2024-04-04"},{"lineNumber":210,"author":{"gitId":"LimZiJia"},"content":"        return booking !\u003d null \u0026\u0026 booking.getBookedDate().isAfter(currentDate);","lastModifiedDate":"2024-04-04"},{"lineNumber":211,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":212,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":213,"author":{"gitId":"LimZiJia"},"content":"    public void setBooking(Booking booking) {","lastModifiedDate":"2024-04-02"},{"lineNumber":214,"author":{"gitId":"LimZiJia"},"content":"        this.booking \u003d booking;","lastModifiedDate":"2024-04-02"},{"lineNumber":215,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":216,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":217,"author":{"gitId":"LimZiJia"},"content":"    public void deleteBooking() {","lastModifiedDate":"2024-04-02"},{"lineNumber":218,"author":{"gitId":"LimZiJia"},"content":"        this.booking \u003d null;","lastModifiedDate":"2024-04-02"},{"lineNumber":219,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":220,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":221,"author":{"gitId":"LimZiJia"},"content":"    public void addDeferment(Period deferment) {","lastModifiedDate":"2024-03-31"},{"lineNumber":222,"author":{"gitId":"LimZiJia"},"content":"        this.deferment \u003d this.deferment.plus(deferment);","lastModifiedDate":"2024-03-31"},{"lineNumber":223,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":224,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":225,"author":{"gitId":"LimZiJia"},"content":"    public LocalDate getNextHousekeepingDate() {","lastModifiedDate":"2024-03-31"},{"lineNumber":226,"author":{"gitId":"LimZiJia"},"content":"        if (lastHousekeepingDate \u003d\u003d null || preferredInterval \u003d\u003d null || deferment \u003d\u003d null) {","lastModifiedDate":"2024-04-01"},{"lineNumber":227,"author":{"gitId":"LimZiJia"},"content":"            return LocalDate.MAX; // If not enough details available, the client will not be called","lastModifiedDate":"2024-04-01"},{"lineNumber":228,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":229,"author":{"gitId":"LimZiJia"},"content":"        return lastHousekeepingDate.plus(preferredInterval).plus(deferment);","lastModifiedDate":"2024-03-31"},{"lineNumber":230,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":231,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":232,"author":{"gitId":"GERARDJM018"},"content":"    public LocalDate getLastHousekeepingDate() {","lastModifiedDate":"2024-04-03"},{"lineNumber":233,"author":{"gitId":"GERARDJM018"},"content":"        return lastHousekeepingDate;","lastModifiedDate":"2024-04-03"},{"lineNumber":234,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":235,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":236,"author":{"gitId":"GERARDJM018"},"content":"    public Period getDeferment() {","lastModifiedDate":"2024-04-03"},{"lineNumber":237,"author":{"gitId":"GERARDJM018"},"content":"        return deferment;","lastModifiedDate":"2024-04-03"},{"lineNumber":238,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":239,"author":{"gitId":"GERARDJM018"},"content":"    public Booking getBooking() {","lastModifiedDate":"2024-04-04"},{"lineNumber":240,"author":{"gitId":"GERARDJM018"},"content":"        return booking;","lastModifiedDate":"2024-04-04"},{"lineNumber":241,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":242,"author":{"gitId":"GERARDJM018"},"content":"    public String getDefermentToString() {","lastModifiedDate":"2024-04-03"},{"lineNumber":243,"author":{"gitId":"GERARDJM018"},"content":"        String details \u003d this.toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":244,"author":{"gitId":"GERARDJM018"},"content":"        String[] s \u003d details.split(\" \"); // If valid s[0] \u003d lastHousekeepingDate, s[1] \u003d preferredInterval,","lastModifiedDate":"2024-04-03"},{"lineNumber":245,"author":{"gitId":"GERARDJM018"},"content":"        // s[2] \u003d bookingDate, s[4] \u003d deferment","lastModifiedDate":"2024-04-04"},{"lineNumber":246,"author":{"gitId":"GERARDJM018"},"content":"        String num \u003d s[s.length-1].substring(1, s[3].length() - 1);","lastModifiedDate":"2024-04-04"},{"lineNumber":247,"author":{"gitId":"GERARDJM018"},"content":"        String unit \u003d s[s.length-1].substring(s[s.length-1].length() - 1);","lastModifiedDate":"2024-04-04"},{"lineNumber":248,"author":{"gitId":"GERARDJM018"},"content":"        String unitString;","lastModifiedDate":"2024-04-03"},{"lineNumber":249,"author":{"gitId":"GERARDJM018"},"content":"        switch (unit) {","lastModifiedDate":"2024-04-03"},{"lineNumber":250,"author":{"gitId":"GERARDJM018"},"content":"            case \"Y\":","lastModifiedDate":"2024-04-03"},{"lineNumber":251,"author":{"gitId":"GERARDJM018"},"content":"                unitString \u003d \"years\";","lastModifiedDate":"2024-04-03"},{"lineNumber":252,"author":{"gitId":"GERARDJM018"},"content":"                break;","lastModifiedDate":"2024-04-03"},{"lineNumber":253,"author":{"gitId":"GERARDJM018"},"content":"            case \"M\":","lastModifiedDate":"2024-04-03"},{"lineNumber":254,"author":{"gitId":"GERARDJM018"},"content":"                unitString \u003d \"months\";","lastModifiedDate":"2024-04-03"},{"lineNumber":255,"author":{"gitId":"GERARDJM018"},"content":"                break;","lastModifiedDate":"2024-04-03"},{"lineNumber":256,"author":{"gitId":"GERARDJM018"},"content":"            case \"W\":","lastModifiedDate":"2024-04-03"},{"lineNumber":257,"author":{"gitId":"GERARDJM018"},"content":"                unitString \u003d \"weeks\";","lastModifiedDate":"2024-04-03"},{"lineNumber":258,"author":{"gitId":"GERARDJM018"},"content":"                break;","lastModifiedDate":"2024-04-03"},{"lineNumber":259,"author":{"gitId":"GERARDJM018"},"content":"            case \"D\":","lastModifiedDate":"2024-04-03"},{"lineNumber":260,"author":{"gitId":"GERARDJM018"},"content":"                unitString \u003d \"days\";","lastModifiedDate":"2024-04-03"},{"lineNumber":261,"author":{"gitId":"GERARDJM018"},"content":"                break;","lastModifiedDate":"2024-04-03"},{"lineNumber":262,"author":{"gitId":"GERARDJM018"},"content":"            default:","lastModifiedDate":"2024-04-03"},{"lineNumber":263,"author":{"gitId":"GERARDJM018"},"content":"                unitString \u003d \"Invalid unit\";","lastModifiedDate":"2024-04-03"},{"lineNumber":264,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":265,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":266,"author":{"gitId":"GERARDJM018"},"content":"        return num + \" \" + unitString;","lastModifiedDate":"2024-04-03"},{"lineNumber":267,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":268,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":269,"author":{"gitId":"GERARDJM018"},"content":"    public Period getPreferredInterval() {","lastModifiedDate":"2024-04-03"},{"lineNumber":270,"author":{"gitId":"GERARDJM018"},"content":"        return preferredInterval;","lastModifiedDate":"2024-04-03"},{"lineNumber":271,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":272,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":273,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":274,"author":{"gitId":"LimZiJia"},"content":"    public int compareTo(HousekeepingDetails other) {","lastModifiedDate":"2024-03-28"},{"lineNumber":275,"author":{"gitId":"LimZiJia"},"content":"        return this.getNextHousekeepingDate().compareTo(other.getNextHousekeepingDate());","lastModifiedDate":"2024-03-28"},{"lineNumber":276,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":277,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":278,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":279,"author":{"gitId":"LimZiJia"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-31"},{"lineNumber":280,"author":{"gitId":"LimZiJia"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-31"},{"lineNumber":281,"author":{"gitId":"LimZiJia"},"content":"            return true;","lastModifiedDate":"2024-03-31"},{"lineNumber":282,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":283,"author":{"gitId":"LimZiJia"},"content":"        if (!(other instanceof HousekeepingDetails)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":284,"author":{"gitId":"LimZiJia"},"content":"            return false;","lastModifiedDate":"2024-03-31"},{"lineNumber":285,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":286,"author":{"gitId":"LimZiJia"},"content":"        HousekeepingDetails otherDetails \u003d (HousekeepingDetails) other;","lastModifiedDate":"2024-03-31"},{"lineNumber":287,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":288,"author":{"gitId":"LimZiJia"},"content":"        // First predicate of each \u0026\u0026 is for null values, second predicate is for non-null values","lastModifiedDate":"2024-04-01"},{"lineNumber":289,"author":{"gitId":"LimZiJia"},"content":"        return ((lastHousekeepingDate \u003d\u003d otherDetails.lastHousekeepingDate","lastModifiedDate":"2024-04-01"},{"lineNumber":290,"author":{"gitId":"LimZiJia"},"content":"                || lastHousekeepingDate.equals(otherDetails.lastHousekeepingDate))","lastModifiedDate":"2024-04-01"},{"lineNumber":291,"author":{"gitId":"LimZiJia"},"content":"                \u0026\u0026 (preferredInterval \u003d\u003d otherDetails.preferredInterval","lastModifiedDate":"2024-04-01"},{"lineNumber":292,"author":{"gitId":"LimZiJia"},"content":"                ||preferredInterval.equals(otherDetails.preferredInterval))","lastModifiedDate":"2024-04-01"},{"lineNumber":293,"author":{"gitId":"LimZiJia"},"content":"                \u0026\u0026 (booking \u003d\u003d otherDetails.booking","lastModifiedDate":"2024-04-02"},{"lineNumber":294,"author":{"gitId":"LimZiJia"},"content":"                || booking.equals(otherDetails.booking))","lastModifiedDate":"2024-04-02"},{"lineNumber":295,"author":{"gitId":"LimZiJia"},"content":"                \u0026\u0026 (deferment \u003d\u003d otherDetails.deferment","lastModifiedDate":"2024-04-01"},{"lineNumber":296,"author":{"gitId":"LimZiJia"},"content":"                || deferment.equals(otherDetails.deferment)));","lastModifiedDate":"2024-04-01"},{"lineNumber":297,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":298,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":299,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":300,"author":{"gitId":"LimZiJia"},"content":"    public String toString() {","lastModifiedDate":"2024-03-28"},{"lineNumber":301,"author":{"gitId":"LimZiJia"},"content":"        if (this.equals(empty)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":302,"author":{"gitId":"LimZiJia"},"content":"            return \"null\";","lastModifiedDate":"2024-04-01"},{"lineNumber":303,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":304,"author":{"gitId":"LimZiJia"},"content":"        return lastHousekeepingDate + \" \" + preferredInterval + \" \" + booking + \" \" + deferment;","lastModifiedDate":"2024-04-02"},{"lineNumber":305,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":306,"author":{"gitId":"LimZiJia"},"content":" }","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"LimZiJia":193,"gosongying":39,"GERARDJM018":74}},{"path":"src/main/java/housekeeping/hub/model/person/LeadsFilterPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model.person;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"public class LeadsFilterPredicate implements Predicate\u003cClient\u003e {","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"    public LeadsFilterPredicate() {}","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"     * Tests that a {@code Client}\u0027s predicted next housekeeping date is \u003c\u003d current date,","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"     * and they do not have a booking yet. Also, clients without housekeeping details should be tested false.","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"    public boolean test(Client client) {","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"        return !client.hasBooking()","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"                \u0026\u0026 client.getNextHousekeepingDate().isBefore(currentDate)","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"                || client.getNextHousekeepingDate().isEqual(currentDate);","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"            return true;","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"        if (!(other instanceof LeadsFilterPredicate)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"            return false;","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"        return true;","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"    public String toString() {","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"        return new ToStringBuilder(this).toString();","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"LimZiJia":45}},{"path":"src/main/java/housekeeping/hub/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model.person;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":" * Represents a Person\u0027s name in the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"     * The first character of the hub must not be a whitespace,","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LimZiJia":4,"-":63}},{"path":"src/main/java/housekeeping/hub/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model.person;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.StringUtil;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"LimZiJia":3,"-":41}},{"path":"src/main/java/housekeeping/hub/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model.person;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.tag.Tag;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":" * Represents a Person in the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"gosongying"},"content":"public abstract class Person {","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"    private final Area area;","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"gosongying"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Area area) {","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"GERARDJM018"},"content":"        this.area \u003d area;","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"GERARDJM018"},"content":"    public Area getArea() {","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"GERARDJM018"},"content":"        return area;","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"gosongying"},"content":"        return Objects.hash(name, phone, email, address, tags, area);","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"gosongying"},"content":"     * Returns true if it is a Client, false if it is a Housekeeper.","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"gosongying"},"content":"    public abstract boolean isClient();","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"LimZiJia"},"content":"    public abstract HousekeepingDetails getDetails();","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LimZiJia":6,"gosongying":7,"-":76,"GERARDJM018":5}},{"path":"src/main/java/housekeeping/hub/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model.person;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":" * Represents a Person\u0027s phone number in the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LimZiJia":3,"-":58}},{"path":"src/main/java/housekeeping/hub/model/person/Type.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model.person;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.ALLOWED_PREAMBLES_TYPE;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":" * Represents a Person\u0027s Type in the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidType(String)}","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"public class Type {","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Type can either be \\\"client\\\" or \\\"housekeeper\\\"\";","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"    /*","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"     * The first character of the type must not be a whitespace,","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"    public final String value;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"     * Constructs an {@code Type}.","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"     * @param type A valid type.","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"    public Type(String type) {","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"        requireNonNull(type);","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"        checkArgument(isValidType(type), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"        value \u003d type;","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"     * Returns true if a given string is a valid type.","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"    public static boolean isValidType(String test) {","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 preambleIsAllowed(test);","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"     * Checks if a given command uses a preamble that is allowed. (we define preamble as TYPE)","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"     * @param preamble","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"     * @return true if the preamble is allowed and no if it is not.","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"LimZiJia"},"content":"    public static boolean preambleIsAllowed(String preamble) {","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"GERARDJM018"},"content":"        for (String s : ALLOWED_PREAMBLES_TYPE) {","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"LimZiJia"},"content":"            if (s.equals(preamble)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"LimZiJia"},"content":"                return true;","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"LimZiJia"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"LimZiJia"},"content":"        return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"LimZiJia"},"content":"    public String toString() {","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"LimZiJia"},"content":"        return value;","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"LimZiJia"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"LimZiJia"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"LimZiJia"},"content":"            return true;","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"LimZiJia"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"LimZiJia"},"content":"        if (!(other instanceof Type)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"LimZiJia"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"LimZiJia"},"content":"        Type otherType \u003d (Type) other;","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"LimZiJia"},"content":"        return value.equals(otherType.value);","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"LimZiJia"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"LimZiJia"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"LimZiJia"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"LimZiJia":80,"GERARDJM018":1}},{"path":"src/main/java/housekeeping/hub/model/person/TypePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model.person;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"GERARDJM018"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"GERARDJM018"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"GERARDJM018"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"GERARDJM018"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"GERARDJM018"},"content":"public class TypePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"GERARDJM018"},"content":"    private final String type;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"GERARDJM018"},"content":"    public TypePredicate(String type) {","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"GERARDJM018"},"content":"        this.type \u003d type;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"gosongying"},"content":"     * Returns the type of the predicate.","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"gosongying"},"content":"    public String getType() {","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"gosongying"},"content":"        return type;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"GERARDJM018"},"content":"        if (type.equals(\"housekeeper\")) {","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"GERARDJM018"},"content":"            return !person.isClient();","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"GERARDJM018"},"content":"        } else if (type.equals(\"client\")) {","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"GERARDJM018"},"content":"            return person.isClient();","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"GERARDJM018"},"content":"        } else {","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"GERARDJM018"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"GERARDJM018"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"GERARDJM018"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"GERARDJM018"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"GERARDJM018"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"moguries"},"content":"        if (!(other instanceof TypePredicate)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"GERARDJM018"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"moguries"},"content":"        TypePredicate otherTypePredicate \u003d (TypePredicate) other;","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"moguries"},"content":"        return type.equals(otherTypePredicate.type);","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"GERARDJM018"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"GERARDJM018"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"GERARDJM018"},"content":"        return new ToStringBuilder(this).add(\"type\", type).toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"GERARDJM018"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"LimZiJia":2,"moguries":3,"gosongying":8,"GERARDJM018":42}},{"path":"src/main/java/housekeeping/hub/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model.person;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"gosongying"},"content":"public class UniquePersonList\u003cT extends Person\u003e implements Iterable\u003cT\u003e {","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"gosongying"},"content":"    private final ObservableList\u003cT\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"gosongying"},"content":"    private final ObservableList\u003cT\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"gosongying"},"content":"    public boolean contains(T toCheck) {","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"gosongying"},"content":"    public void add(T toAdd) {","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"LimZiJia"},"content":"     * Sorts the persons in the list using the provided comparator.","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"LimZiJia"},"content":"    public void sort(Comparator\u003c? super T\u003e comparator) {","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"LimZiJia"},"content":"        FXCollections.sort(internalList, comparator);","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":64,"author":{"gitId":"gosongying"},"content":"    public void setPerson(T target, T editedPerson) {","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"gosongying"},"content":"    public void remove(T toRemove) {","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"gosongying"},"content":"    public void setPersons(UniquePersonList\u003cT\u003e replacement) {","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"gosongying"},"content":"    public void setPersons(List\u003cT\u003e persons) {","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"gosongying"},"content":"    public ObservableList\u003cT\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2024-03-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"gosongying"},"content":"    public Iterator\u003cT\u003e iterator() {","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"gosongying"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-03-26"},{"lineNumber":132,"author":{"gitId":"gosongying"},"content":"        UniquePersonList\u003cT\u003e otherUniquePersonList \u003d (UniquePersonList\u003cT\u003e) other;","lastModifiedDate":"2024-03-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"gosongying"},"content":"    private boolean personsAreUnique(List\u003cT\u003e persons) {","lastModifiedDate":"2024-03-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LimZiJia":12,"gosongying":14,"-":133}},{"path":"src/main/java/housekeeping/hub/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model.person.exceptions;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"LimZiJia":1,"-":10}},{"path":"src/main/java/housekeeping/hub/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model.person.exceptions;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"LimZiJia":1,"-":5}},{"path":"src/main/java/housekeeping/hub/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model.tag;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":" * Represents a Tag in the hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"            \"Tags names should be alphanumeric and can contain spaces, hyphens and underscores.\";","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum} -_]+\";","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"LimZiJia":6,"-":57}},{"path":"src/main/java/housekeeping/hub/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model.util;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.parser.ParserUtil;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.AddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Address;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.BookingList;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Area;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Email;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.HousekeepingDetails;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Housekeeper;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Name;","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Phone;","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.tag.Tag;","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"gosongying"},"content":"    public static Client[] getSampleClients() {","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"gosongying"},"content":"        return new Client[] {","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"gosongying"},"content":"                new Client(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"                        new Address(\"Blk 30 Geylang Street 29, #06-40\"), getTagSet(\"friends\"),","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"gosongying"},"content":"                        getHousekeepingDetails(Optional.of(\"2024-01-30 2 months\")), new Area(\"east\")),","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"gosongying"},"content":"                new Client(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"                        new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"gosongying"},"content":"                        getTagSet(\"colleagues\", \"friends\"),","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"gosongying"},"content":"                        getHousekeepingDetails(Optional.of(\"2024-02-28 2 weeks\")), new Area(\"east\")),","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"gosongying"},"content":"                new Client(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"                        new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), getTagSet(\"neighbours\"),","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"gosongying"},"content":"                        getHousekeepingDetails(Optional.of(\"2024-03-03 1 years\")), new Area(\"east\")),","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"gosongying"},"content":"                new Client(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"                        new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), getTagSet(\"family\"),","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"gosongying"},"content":"                        getHousekeepingDetails(Optional.of(\"2024-03-11 39 days\")), new Area(\"east\")),","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"gosongying"},"content":"                new Client(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"                        new Address(\"Blk 47 Tampines Street 20, #17-35\"), getTagSet(\"classmates\"),","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"gosongying"},"content":"                        getHousekeepingDetails(Optional.of(\"2024-04-01 6 months\")), new Area(\"east\")),","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"gosongying"},"content":"                new Client(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"LimZiJia"},"content":"                        new Address(\"Blk 45 Aljunied Street 85, #11-31\"), getTagSet(\"colleagues\"),","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"gosongying"},"content":"                        getHousekeepingDetails(Optional.empty()), new Area(\"east\"))","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"gosongying"},"content":"    public static Housekeeper[] getSampleHousekeepers() {","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"gosongying"},"content":"        return new Housekeeper[] {","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"gosongying"},"content":"                new Housekeeper(new Name(\"John Doe\"), new Phone(\"12345678\"), new Email(\"johndoe@example.com\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"gosongying"},"content":"                        new Address(\"Blk 123 Woodlands Street 45, #05-12\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"gosongying"},"content":"                        getTagSet(\"cleaning\"), new Area(\"east\"), new BookingList()),","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"gosongying"},"content":"                new Housekeeper(new Name(\"Jane Smith\"), new Phone(\"98765432\"), new Email(\"janesmith@example.com\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"gosongying"},"content":"                        new Address(\"Blk 456 Jurong East Avenue 89, #08-15\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"gosongying"},"content":"                        getTagSet(\"part-time\"), new Area(\"east\"), new BookingList()),","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"gosongying"},"content":"                new Housekeeper(new Name(\"Michael Tan\"), new Phone(\"87654321\"), new Email(\"michaeltan@example.com\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"gosongying"},"content":"                        new Address(\"Blk 789 Bukit Timah Road, #02-34\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"gosongying"},"content":"                        getTagSet(\"full-time\"), new Area(\"east\"), new BookingList()),","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"gosongying"},"content":"                new Housekeeper(new Name(\"Emily Lee\"), new Phone(\"98761234\"), new Email(\"emilylee@example.com\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"gosongying"},"content":"                        new Address(\"Blk 234 Sengkang Street 12, #07-23\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"gosongying"},"content":"                        getTagSet(\"pet-friendly\"), new Area(\"east\"), new BookingList()),","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"gosongying"},"content":"                new Housekeeper(new Name(\"Daniel Lim\"), new Phone(\"87651234\"), new Email(\"daniellim@example.com\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"gosongying"},"content":"                        new Address(\"Blk 345 Yishun Avenue 67, #10-45\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"gosongying"},"content":"                        getTagSet(\"experienced\"), new Area(\"east\"), new BookingList()),","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"gosongying"},"content":"                new Housekeeper(new Name(\"Samantha Tan\"), new Phone(\"76543210\"), new Email(\"samanthatan@example.com\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"gosongying"},"content":"                        new Address(\"Blk 678 Clementi Road, #03-21\"),","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"gosongying"},"content":"                        getTagSet(\"trustworthy\"), new Area(\"east\"), new BookingList())","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"gosongying"},"content":"        };","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":75,"author":{"gitId":"gosongying"},"content":"        for (Client sampleClient : getSampleClients()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"gosongying"},"content":"            sampleAb.addClient(sampleClient);","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"gosongying"},"content":"        for (Housekeeper sampleHousekeeper : getSampleHousekeepers()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"gosongying"},"content":"            sampleAb.addHousekeeper(sampleHousekeeper);","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":93,"author":{"gitId":"LimZiJia"},"content":"    public static HousekeepingDetails getHousekeepingDetails(Optional\u003cString\u003e details) {","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"LimZiJia"},"content":"        try {","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"LimZiJia"},"content":"            return ParserUtil.parseHousekeepingDetails(details);","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"LimZiJia"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"LimZiJia"},"content":"            return null;","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"LimZiJia":29,"gosongying":43,"-":29}},{"path":"src/main/java/housekeeping/hub/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.storage;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":" * Represents a storage for {@link housekeeping.hub.model.AddressBook}.","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"LimZiJia":4,"-":40}},{"path":"src/main/java/housekeeping/hub/storage/JsonAdaptedBooking.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.storage;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"moguries"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"moguries"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Booking;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"moguries"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"moguries"},"content":" * Jackson-friendly version of {@link Booking}.","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"moguries"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"moguries"},"content":"public class JsonAdaptedBooking {","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"moguries"},"content":"    private final String booking;","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"moguries"},"content":"     * Constructs a {@code JsonAdaptedBooking} with the given {@code booking}.","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"moguries"},"content":"    @JsonCreator","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"moguries"},"content":"    public JsonAdaptedBooking(String booking) {","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"moguries"},"content":"        this.booking \u003d booking;","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"moguries"},"content":"     * Converts a given {@code Booking} into this class for Jackson use.","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"moguries"},"content":"    @JsonCreator","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"moguries"},"content":"    public JsonAdaptedBooking(Booking source) {","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"moguries"},"content":"        booking \u003d source.toString();","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"moguries"},"content":"    @JsonValue","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"moguries"},"content":"    public String getBooking() {","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"moguries"},"content":"        return booking;","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"moguries"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"moguries"},"content":"     * Converts this Jackson-friendly adapted booking object into the model\u0027s {@code Booking} object.","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"moguries"},"content":"     *","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"moguries"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted booking.","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"moguries"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"moguries"},"content":"   public Booking toModelType() throws IllegalValueException {","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"moguries"},"content":"       if (!Booking.isValidBookedDateAndTime(booking)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"moguries"},"content":"           throw new IllegalValueException(Booking.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"moguries"},"content":"       }","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"moguries"},"content":"       return new Booking(booking);","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"moguries"},"content":"   }","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"moguries"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"LimZiJia":3,"moguries":44}},{"path":"src/main/java/housekeeping/hub/storage/JsonAdaptedClient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.storage;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"gosongying"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"gosongying"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"gosongying"},"content":"import java.util.List;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"gosongying"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"gosongying"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"gosongying"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Address;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Area;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Email;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.HousekeepingDetails;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Name;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Phone;","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.tag.Tag;","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"gosongying"},"content":"public class JsonAdaptedClient extends JsonAdaptedPerson {","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"    protected final JsonAdaptedDetails details;","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"gosongying"},"content":"     * Constructs a {@code JsonAdaptedClient} with the given client details.","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"gosongying"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"gosongying"},"content":"    public JsonAdaptedClient(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"hub\") String address,","lastModifiedDate":"2024-04-05"},{"lineNumber":30,"author":{"gitId":"gosongying"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"gosongying"},"content":"                             @JsonProperty(\"details\") JsonAdaptedDetails details, @JsonProperty(\"area\") String area) {","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"gosongying"},"content":"        super(name, phone, email, address, tags, area);","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"        this.details \u003d details;","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"gosongying"},"content":"     * Converts a given {@code Client} into this class for Jackson use.","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"gosongying"},"content":"    public JsonAdaptedClient(Client source) {","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"gosongying"},"content":"        super(source);","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"        details \u003d new JsonAdaptedDetails(source.getDetails());","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"gosongying"},"content":"    public Client toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"gosongying"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"gosongying"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"gosongying"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"gosongying"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"gosongying"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"gosongying"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"gosongying"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"gosongying"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"gosongying"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"gosongying"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"gosongying"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"gosongying"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"gosongying"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"gosongying"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"gosongying"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"gosongying"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"gosongying"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"gosongying"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"gosongying"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"gosongying"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"gosongying"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"gosongying"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"gosongying"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"gosongying"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"LimZiJia"},"content":"        if (details \u003d\u003d null) {","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"LimZiJia"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"LimZiJia"},"content":"                    HousekeepingDetails.class.getSimpleName()));","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"LimZiJia"},"content":"        final HousekeepingDetails modelDetail \u003d details.toModelType();","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"GERARDJM018"},"content":"        final Area modelArea \u003d new Area(area);","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"gosongying"},"content":"      ","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"gosongying"},"content":"        return new Client(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelDetail, modelArea);","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"gosongying"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"LimZiJia":19,"gosongying":74,"GERARDJM018":1}},{"path":"src/main/java/housekeeping/hub/storage/JsonAdaptedDetails.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.storage;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.HousekeepingDetails;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":" * Jackson-friendly version of {@link HousekeepingDetails}.","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"public class JsonAdaptedDetails {","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"    private final String details;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"     * Constructs a {@code JsonAdaptedDetails} with the given {@code details}.","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"    public JsonAdaptedDetails(String details) {","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"        this.details \u003d details;","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"     * Converts a given {@code HousekeepingDetails} into this class for Jackson use.","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"    public JsonAdaptedDetails(HousekeepingDetails source) {","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"        this.details \u003d source.toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"    @JsonValue","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"    public String getDetails() {","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"        return details;","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"    public HousekeepingDetails toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"        if (!HousekeepingDetails.isValidHousekeepingDetailsStorage(details)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"            throw new IllegalValueException(HousekeepingDetails.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"        return new HousekeepingDetails(details);","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"LimZiJia":42}},{"path":"src/main/java/housekeeping/hub/storage/JsonAdaptedHousekeeper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.storage;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"gosongying"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"gosongying"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"gosongying"},"content":"import java.util.List;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"gosongying"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"gosongying"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"gosongying"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Address;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Booking;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.BookingList;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Area;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Email;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Housekeeper;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Name;","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Phone;","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.tag.Tag;","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"gosongying"},"content":"public class JsonAdaptedHousekeeper extends JsonAdaptedPerson {","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"moguries"},"content":"    protected final ArrayList\u003cJsonAdaptedBooking\u003e bookingList;","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"gosongying"},"content":"     * Constructs a {@code JsonAdaptedHousekeeper} with the given housekeeper details.","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"gosongying"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"gosongying"},"content":"    public JsonAdaptedHousekeeper(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"hub\") String address,","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"gosongying"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags, @JsonProperty(\"area\") String area,","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"moguries"},"content":"                             @JsonProperty(\"booking list\") ArrayList\u003cJsonAdaptedBooking\u003e bookingList) {","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"gosongying"},"content":"        super(name, phone, email, address, tags, area);","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"moguries"},"content":"        this.bookingList \u003d bookingList;","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"gosongying"},"content":"     * Converts a given {@code Housekeeper} into this class for Jackson use.","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"gosongying"},"content":"    public JsonAdaptedHousekeeper(Housekeeper source) {","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"gosongying"},"content":"        super(source);","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"moguries"},"content":"        ArrayList\u003cJsonAdaptedBooking\u003e bookingList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"moguries"},"content":"        for (Booking booking : source.getBookingList().getBookings()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"moguries"},"content":"            JsonAdaptedBooking jsonAdaptedBooking \u003d new JsonAdaptedBooking(booking);","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"moguries"},"content":"            bookingList.add(jsonAdaptedBooking);","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"moguries"},"content":"        this.bookingList \u003d bookingList;","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"gosongying"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"gosongying"},"content":"    public Housekeeper toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"gosongying"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"gosongying"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"gosongying"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"gosongying"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"gosongying"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"gosongying"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"gosongying"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"gosongying"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"gosongying"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"gosongying"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"gosongying"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"gosongying"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"gosongying"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"gosongying"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"gosongying"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"gosongying"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"gosongying"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"gosongying"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"gosongying"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"gosongying"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"gosongying"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"gosongying"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"gosongying"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"gosongying"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"GERARDJM018"},"content":"        final Area modelArea \u003d new Area(area);","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"moguries"},"content":"        final ArrayList\u003cBooking\u003e personBookings \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-02"},{"lineNumber":96,"author":{"gitId":"moguries"},"content":"        for (JsonAdaptedBooking booking : bookingList) {","lastModifiedDate":"2024-04-02"},{"lineNumber":97,"author":{"gitId":"moguries"},"content":"            personBookings.add(booking.toModelType());","lastModifiedDate":"2024-04-02"},{"lineNumber":98,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":99,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":100,"author":{"gitId":"moguries"},"content":"        final BookingList modelBookingList \u003d new BookingList(personBookings);","lastModifiedDate":"2024-04-02"},{"lineNumber":101,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":102,"author":{"gitId":"gosongying"},"content":"        return new Housekeeper(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelArea, modelBookingList);","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"gosongying"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"LimZiJia":12,"moguries":19,"gosongying":72,"GERARDJM018":1}},{"path":"src/main/java/housekeeping/hub/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.storage;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Person;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"gosongying"},"content":"abstract class JsonAdaptedPerson {","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"gosongying"},"content":"    protected static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"gosongying"},"content":"    protected final String name;","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"gosongying"},"content":"    protected final String phone;","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"gosongying"},"content":"    protected final String email;","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"gosongying"},"content":"    protected final String address;","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"gosongying"},"content":"    protected final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"GERARDJM018"},"content":"    protected final String area;","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"hub\") String address,","lastModifiedDate":"2024-04-05"},{"lineNumber":33,"author":{"gitId":"gosongying"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags, @JsonProperty(\"area\") String area) {","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"GERARDJM018"},"content":"        this.area \u003d area;","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"GERARDJM018"},"content":"        area \u003d source.getArea().value;","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"gosongying"},"content":"    abstract public Person toModelType() throws IllegalValueException;","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"LimZiJia":4,"gosongying":9,"-":48,"GERARDJM018":3}},{"path":"src/main/java/housekeeping/hub/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.storage;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.tag.Tag;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"LimZiJia":3,"-":45}},{"path":"src/main/java/housekeeping/hub/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.storage;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.LogsCenter;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.FileUtil;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.JsonUtil;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"LimZiJia":7,"-":73}},{"path":"src/main/java/housekeeping/hub/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.storage;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.AddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Housekeeper;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"gosongying"},"content":"    private final List\u003cJsonAdaptedClient\u003e clients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"gosongying"},"content":"    private final List\u003cJsonAdaptedHousekeeper\u003e housekeepers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"gosongying"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"clients\") List\u003cJsonAdaptedClient\u003e clients,","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"gosongying"},"content":"                                       @JsonProperty(\"housekeepers\") List\u003cJsonAdaptedHousekeeper\u003e housekeepers) {","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"gosongying"},"content":"        this.clients.addAll(clients);","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"gosongying"},"content":"        this.housekeepers.addAll(housekeepers);","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"gosongying"},"content":"        clients.addAll(source.getClientList().stream()","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"gosongying"},"content":"                .map(JsonAdaptedClient::new)","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"gosongying"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"gosongying"},"content":"        housekeepers.addAll(source.getHousekeeperList().stream()","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"gosongying"},"content":"                .map(JsonAdaptedHousekeeper::new).collect(Collectors.toList()));","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"LimZiJia"},"content":"     * Converts this hub book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2024-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"gosongying"},"content":"        for (JsonAdaptedClient jsonAdaptedClient: clients) {","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"gosongying"},"content":"            Client client \u003d jsonAdaptedClient.toModelType();","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"gosongying"},"content":"            if (addressBook.hasClient(client)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"gosongying"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"gosongying"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"gosongying"},"content":"            addressBook.addClient(client);","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"gosongying"},"content":"        for (JsonAdaptedHousekeeper jsonAdaptedHousekeeper: housekeepers) {","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"gosongying"},"content":"            Housekeeper housekeeper \u003d jsonAdaptedHousekeeper.toModelType();","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"gosongying"},"content":"            if (addressBook.hasHousekeeper(housekeeper)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"gosongying"},"content":"            addressBook.addHousekeeper(housekeeper);","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"LimZiJia":7,"gosongying":22,"-":45}},{"path":"src/main/java/housekeeping/hub/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.storage;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.JsonUtil;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.UserPrefs;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the file format is not as expected.","lastModifiedDate":"2023-06-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"LimZiJia":5,"-":42}},{"path":"src/main/java/housekeeping/hub/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.storage;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.UserPrefs;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"LimZiJia":5,"-":27}},{"path":"src/main/java/housekeeping/hub/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.storage;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.LogsCenter;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.UserPrefs;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimZiJia":6,"-":71}},{"path":"src/main/java/housekeeping/hub/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.storage;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.UserPrefs;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":" * Represents a storage for {@link housekeeping.hub.model.UserPrefs}.","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if the loading of data from preference file failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"     * Saves the given {@link housekeeping.hub.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"LimZiJia":6,"-":30}},{"path":"src/main/java/housekeeping/hub/ui/ClientCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.ui;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"gosongying"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"gosongying"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.HousekeepingDetails;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"gosongying"},"content":"public class ClientCard extends PersonCard {","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"gosongying"},"content":"    private static final String FXML \u003d \"ClientListCard.fxml\";","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"gosongying"},"content":"    @FXML","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"gosongying"},"content":"    private Label details;","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"gosongying"},"content":"    public ClientCard(Client client, int displayedIndex) {","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"gosongying"},"content":"        super(client, displayedIndex, FXML);","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"gosongying"},"content":"        HousekeepingDetails housekeepingDetails \u003d client.getDetails();","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"gosongying"},"content":"        if (housekeepingDetails \u003d\u003d null) {","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"gosongying"},"content":"            details.setText(HousekeepingDetails.NO_DETAILS_PROVIDED);","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"gosongying"},"content":"        } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"gosongying"},"content":"            details.setText(HousekeepingDetails.makeStoredDetailsReadable(housekeepingDetails.toString()));","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"gosongying"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"LimZiJia":3,"gosongying":20}},{"path":"src/main/java/housekeeping/hub/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.ui;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.CommandResult;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"LimZiJia"},"content":"         * @see housekeeping.hub.logic.Logic#execute(String)","lastModifiedDate":"2024-04-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"LimZiJia":5,"-":80}},{"path":"src/main/java/housekeeping/hub/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.ui;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.LogsCenter;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"gosongying"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s2-cs2103t-w09-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"LimZiJia":2,"gosongying":1,"-":99}},{"path":"src/main/java/housekeeping/hub/ui/HousekeeperCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.ui;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Housekeeper;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"gosongying"},"content":"public class HousekeeperCard extends PersonCard {","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"gosongying"},"content":"    private static final String FXML \u003d \"HousekeeperListCard.fxml\";","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"gosongying"},"content":"    public HousekeeperCard(Housekeeper housekeeper, int displayedIndex) {","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"gosongying"},"content":"        super(housekeeper, displayedIndex, FXML);","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"gosongying"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"LimZiJia":2,"gosongying":8}},{"path":"src/main/java/housekeeping/hub/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.ui;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.GuiSettings;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.LogsCenter;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.Logic;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.CommandResult;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Housekeeper;","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"gosongying"},"content":"    private PersonListPanel\u003cClient\u003e clientListPanel;","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"gosongying"},"content":"    private PersonListPanel\u003cHousekeeper\u003e housekeeperListPanel;","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"gosongying"},"content":"    private StackPane clientListPanelPlaceholder;","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"gosongying"},"content":"    @FXML","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"gosongying"},"content":"    private StackPane housekeeperListPanelPlaceholder;","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"gosongying"},"content":"    //@FXML","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"gosongying"},"content":"    //private HBox clientAndHousekeeperLists;","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"gosongying"},"content":"        clientListPanel \u003d new PersonListPanel\u003c\u003e(logic.getFilteredClientList());","lastModifiedDate":"2024-03-26"},{"lineNumber":123,"author":{"gitId":"gosongying"},"content":"        housekeeperListPanel \u003d new PersonListPanel\u003c\u003e(logic.getFilteredHousekeeperList());","lastModifiedDate":"2024-03-26"},{"lineNumber":124,"author":{"gitId":"gosongying"},"content":"        clientListPanelPlaceholder.getChildren().add(clientListPanel.getRoot());","lastModifiedDate":"2024-03-26"},{"lineNumber":125,"author":{"gitId":"gosongying"},"content":"        housekeeperListPanelPlaceholder.getChildren().add(housekeeperListPanel.getRoot());","lastModifiedDate":"2024-03-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":177,"author":{"gitId":"gosongying"},"content":"    public PersonListPanel\u003cClient\u003e getClientListPanel() {","lastModifiedDate":"2024-03-26"},{"lineNumber":178,"author":{"gitId":"gosongying"},"content":"        return clientListPanel;","lastModifiedDate":"2024-03-26"},{"lineNumber":179,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":180,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":181,"author":{"gitId":"gosongying"},"content":"    public PersonListPanel\u003cHousekeeper\u003e getHousekeeperListPanel() {","lastModifiedDate":"2024-03-26"},{"lineNumber":182,"author":{"gitId":"gosongying"},"content":"        return housekeeperListPanel;","lastModifiedDate":"2024-03-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"LimZiJia"},"content":"     * @see housekeeping.hub.logic.Logic#execute(String)","lastModifiedDate":"2024-04-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"LimZiJia":10,"gosongying":19,"-":182}},{"path":"src/main/java/housekeeping/hub/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.ui;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Person;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"gosongying"},"content":"abstract public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"gosongying"},"content":"    //private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"GERARDJM018"},"content":"    private Label area;","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"GERARDJM018"},"content":"    @FXML","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"gosongying"},"content":"    public PersonCard(Person person, int displayedIndex, String FXML) {","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"GERARDJM018"},"content":"        area.setText(person.getArea().value);","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"LimZiJia":2,"gosongying":3,"-":54,"GERARDJM018":3}},{"path":"src/main/java/housekeeping/hub/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.ui;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.LogsCenter;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Housekeeper;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Person;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"gosongying"},"content":"public class PersonListPanel\u003cT extends Person\u003e extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"gosongying"},"content":"    private ListView\u003cT\u003e personListView;","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"gosongying"},"content":"    public PersonListPanel(ObservableList\u003cT\u003e personList) {","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"gosongying"},"content":"    class PersonListViewCell extends ListCell\u003cT\u003e {","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"gosongying"},"content":"        protected void updateItem(T person, boolean empty) {","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"gosongying"},"content":"                if (person.isClient()) {","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"gosongying"},"content":"                    setGraphic(new ClientCard((Client) person, getIndex() + 1).getRoot());","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"gosongying"},"content":"                } else {","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"gosongying"},"content":"                    setGraphic(new HousekeeperCard((Housekeeper) person, getIndex() + 1).getRoot());","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"gosongying"},"content":"                }","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"LimZiJia":5,"gosongying":10,"-":40}},{"path":"src/main/java/housekeeping/hub/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.ui;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"LimZiJia":1,"-":27}},{"path":"src/main/java/housekeeping/hub/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.ui;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimZiJia":1,"-":27}},{"path":"src/main/java/housekeeping/hub/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.ui;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"LimZiJia":1,"-":12}},{"path":"src/main/java/housekeeping/hub/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.ui;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.MainApp;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.LogsCenter;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.StringUtil;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.Logic;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"gosongying"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/housekeepinghub.png\";","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"LimZiJia":5,"gosongying":1,"-":82}},{"path":"src/main/java/housekeeping/hub/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.ui;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.MainApp;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"LimZiJia":2,"-":86}},{"path":"src/main/resources/view/ClientListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gosongying"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"gosongying"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"gosongying"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"gosongying"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"gosongying"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"gosongying"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"gosongying"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"gosongying"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"gosongying"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"gosongying"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"gosongying"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\" prefWidth\u003d\"150\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"gosongying"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"gosongying"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"120\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"gosongying"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"gosongying"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"gosongying"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"gosongying"},"content":"                \u003cInsets top\u003d\"5\" bottom\u003d\"5\" right\u003d\"2\" left\u003d\"15\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"gosongying"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"gosongying"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"gosongying"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" style\u003d\"-fx-text-fill: black\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"gosongying"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"gosongying"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"gosongying"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"gosongying"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"gosongying"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"gosongying"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" style\u003d\"-fx-text-fill: black\"","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"gosongying"},"content":"                       wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"gosongying"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"gosongying"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"gosongying"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" style\u003d\"-fx-text-fill: black\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"gosongying"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" style\u003d\"-fx-text-fill: black\"","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"gosongying"},"content":"                   wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"gosongying"},"content":"            \u003cLabel fx:id\u003d\"area\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" style\u003d\"-fx-text-fill: black\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"gosongying"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" style\u003d\"-fx-text-fill: black\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"gosongying"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"gosongying"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"gosongying"},"content":"    \u003cRegion prefWidth\u003d\"50\" prefHeight\u003d\"100\" style\u003d\"-fx-background-color: #8A8A8A; -fx-max-width: 1; -fx-max-height: 90\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"gosongying"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"gosongying"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"gosongying"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"gosongying"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"gosongying"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"gosongying"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"gosongying"},"content":"                \u003cInsets top\u003d\"5\" bottom\u003d\"5\" left\u003d\"10\" right\u003d\"5\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"gosongying"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"gosongying"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"gosongying"},"content":"                \u003cLabel styleClass\u003d\"cell_big_label\" style\u003d\"-fx-text-fill: black\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"gosongying"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"gosongying"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"gosongying"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"gosongying"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"gosongying"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"gosongying"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"gosongying"},"content":"            \u003cLabel fx:id\u003d\"details\" styleClass\u003d\"cell_small_label\" style\u003d\"-fx-text-fill: black\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"gosongying"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"gosongying"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"gosongying"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"gosongying":59}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"gosongying"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"gosongying"},"content":"           style\u003d\"-fx-background-color: #ECE9E9; -fx-border-width: 0\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"gosongying"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"gosongying"},"content":"             style\u003d\"-fx-border-color: #BFBFBF; -fx-border-radius: 10; -fx-text-fill: black\"/\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"gosongying":4,"-":7}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"gosongying"},"content":"    -fx-background-color: #ECE9E9;","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"gosongying"},"content":"    -fx-padding: 0 0 20 0;","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"gosongying"},"content":"    -fx-background-color: #ECE9E9;","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"gosongying"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"gosongying"},"content":"    -fx-background-color: #ECE9E9;","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"gosongying"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"gosongying"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"gosongying"},"content":"    -fx-border-color: black;","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"gosongying"},"content":"    -fx-border-width: 3;","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"gosongying"},"content":"    -fx-background-color: #BFBFBF;","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"gosongying"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":154,"author":{"gitId":"gosongying"},"content":"    -fx-background-color: #ECE9E9;","lastModifiedDate":"2024-03-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":157,"author":{"gitId":"gosongying"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-20"},{"lineNumber":158,"author":{"gitId":"gosongying"},"content":"    -fx-border-width: 5;","lastModifiedDate":"2024-03-20"},{"lineNumber":159,"author":{"gitId":"gosongying"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2024-03-20"},{"lineNumber":160,"author":{"gitId":"gosongying"},"content":"    -fx-border-color: #BFBFBF;","lastModifiedDate":"2024-03-20"},{"lineNumber":161,"author":{"gitId":"gosongying"},"content":"    -fx-padding: 5;","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"gosongying"},"content":"    -fx-min-width: 500;","lastModifiedDate":"2024-03-20"},{"lineNumber":163,"author":{"gitId":"gosongying"},"content":"    -fx-pref-width: 500;","lastModifiedDate":"2024-03-20"},{"lineNumber":164,"author":{"gitId":"gosongying"},"content":"    -fx-max-width: 1000;","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"gosongying"},"content":"    -fx-max-height: 200;","lastModifiedDate":"2024-03-20"},{"lineNumber":166,"author":{"gitId":"gosongying"},"content":"    -fx-min-height: 100;","lastModifiedDate":"2024-03-20"},{"lineNumber":167,"author":{"gitId":"gosongying"},"content":"    -fx-pref-height: 100;","lastModifiedDate":"2024-03-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":216,"author":{"gitId":"gosongying"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-20"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":299,"author":{"gitId":"gosongying"},"content":"    -fx-background-color: #ECE9E9;","lastModifiedDate":"2024-03-20"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":320,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":322,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":324,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"gosongying"},"content":"    -fx-background-color: #ECE9E9;","lastModifiedDate":"2024-03-20"},{"lineNumber":326,"author":{"gitId":"gosongying"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2024-03-20"},{"lineNumber":327,"author":{"gitId":"gosongying"},"content":"    -fx-border-color: #BFBFBF;","lastModifiedDate":"2024-03-20"},{"lineNumber":328,"author":{"gitId":"gosongying"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2024-03-20"},{"lineNumber":329,"author":{"gitId":"gosongying"},"content":"    -fx-alignment: center;","lastModifiedDate":"2024-04-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"gosongying"},"content":"#filterField, #clientListPanel, #housekeeperListPanel, #personWebpage {","lastModifiedDate":"2024-03-26"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"gosongying"},"content":"    -fx-background-color: #ECE9E9;","lastModifiedDate":"2024-03-20"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"gosongying"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2024-03-20"},{"lineNumber":356,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":358,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":370,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"gosongying":33,"-":337}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-background: #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":9,"author":{"gitId":"gosongying"},"content":"    -fx-background-color: #ECE9E9","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"gosongying":1,"-":20}},{"path":"src/main/resources/view/HousekeeperListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gosongying"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"gosongying"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"gosongying"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"gosongying"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"gosongying"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":7,"author":{"gitId":"gosongying"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"gosongying"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"gosongying"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"gosongying"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"gosongying"},"content":"\u003c?import javafx.scene.control.Separator?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"gosongying"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"gosongying"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"gosongying"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"gosongying"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"gosongying"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"gosongying"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"gosongying"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"gosongying"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"gosongying"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"gosongying"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"gosongying"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" style\u003d\"-fx-text-fill: black\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"gosongying"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"gosongying"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"gosongying"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"gosongying"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"gosongying"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"gosongying"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" style\u003d\"-fx-text-fill: black\"","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"gosongying"},"content":"                       wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"gosongying"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"gosongying"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"gosongying"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" style\u003d\"-fx-text-fill: black\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"gosongying"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" style\u003d\"-fx-text-fill: black\"","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"gosongying"},"content":"                   wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"gosongying"},"content":"            \u003cLabel fx:id\u003d\"area\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" style\u003d\"-fx-text-fill: black\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"gosongying"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" style\u003d\"-fx-text-fill: black\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"gosongying"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"gosongying"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"gosongying"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"gosongying":40}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"gosongying"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"gosongying"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":17,"author":{"gitId":"gosongying"},"content":"         title\u003d\"Housekeeping Hub\" minWidth\u003d\"500\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"gosongying"},"content":"    \u003cImage url\u003d\"@/images/housekeepinghub.png\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"gosongying"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\" style\u003d\"-fx-background-color: #ECE9E9\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"gosongying"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"stack-pane\"","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"gosongying"},"content":"                   style\u003d\"-fx-background-color: #ECE9E9; -fx-border-width: 3 0 0 0; -fx-border-color: #BFBFBF\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"gosongying"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"gosongying"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"stack-pane\"","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"gosongying"},"content":"                   style\u003d\"-fx-background-color: #ECE9E9; -fx-border-width: 0 0 3 0; -fx-border-color: #BFBFBF\"","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"gosongying"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"220\" maxHeight\u003d\"220\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"gosongying"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":53,"author":{"gitId":"gosongying"},"content":"          \u003cHBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"gosongying"},"content":"            \u003cVBox fx:id\u003d\"clientList\" styleClass\u003d\"stack-pane\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"LimZiJia"},"content":"                  style\u003d\"-fx-background-color: #ECE9E9\" alignment\u003d\"TOP_LEFT\" spacing\u003d\"10\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"gosongying"},"content":"              \u003cLabel styleClass\u003d\"column-header\" text\u003d\"Client :\"","lastModifiedDate":"2024-04-02"},{"lineNumber":60,"author":{"gitId":"gosongying"},"content":"                     style\u003d\"-fx-text-fill: black; -fx-background-radius: 10; -fx-border-color: #BFBFBF; -fx-border-radius: 10;","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"LimZiJia"},"content":"                     -fx-padding: 0 2 0 8; -fx-alignment: CENTER_LEFT; -fx-font-weight: bold; -fx-font-size: 14px;","lastModifiedDate":"2024-04-05"},{"lineNumber":62,"author":{"gitId":"LimZiJia"},"content":"                     -fx-background-color: #0095FF\" prefWidth\u003d\"70\"","lastModifiedDate":"2024-04-05"},{"lineNumber":63,"author":{"gitId":"gosongying"},"content":"              /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"gosongying"},"content":"              \u003cStackPane fx:id\u003d\"clientListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" prefWidth\u003d\"320\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":67,"author":{"gitId":"gosongying"},"content":"            \u003cVBox fx:id\u003d\"housekeeperList\" styleClass\u003d\"stack-pane\" VBox.vgrow\u003d\"ALWAYS\" HBox.hgrow\u003d\"ALWAYS\"","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"LimZiJia"},"content":"                  style\u003d\"-fx-background-color: #ECE9E9\" alignment\u003d\"TOP_LEFT\" spacing\u003d\"10\"\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"gosongying"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"gosongying"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"gosongying"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"gosongying"},"content":"              \u003cLabel styleClass\u003d\"column-header\" text\u003d\"Housekeeper :\"","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"gosongying"},"content":"                     style\u003d\"-fx-text-fill: black; -fx-background-radius: 10; -fx-border-color: #BFBFBF;","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"LimZiJia"},"content":"                     -fx-border-radius: 10; -fx-padding: 0 2 0 8; -fx-alignment: CENTER_LEFT; -fx-font-weight: bold;","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"LimZiJia"},"content":"                     -fx-font-size: 14px; -fx-background-color: #FF6A00\" prefWidth\u003d\"127\"","lastModifiedDate":"2024-04-05"},{"lineNumber":76,"author":{"gitId":"gosongying"},"content":"              /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"gosongying"},"content":"              \u003cStackPane fx:id\u003d\"housekeeperListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" prefWidth\u003d\"180\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"gosongying"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"gosongying"},"content":"          \u003c/HBox\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"LimZiJia":6,"gosongying":29,"-":51}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"gosongying"},"content":"\u003c?import javafx.scene.control.Separator?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"gosongying"},"content":"\u003c?import javafx.scene.layout.Pane?\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"gosongying"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" style\u003d\"-fx-text-fill: black\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"gosongying"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" style\u003d\"-fx-text-fill: black\"/\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":33,"author":{"gitId":"gosongying"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" style\u003d\"-fx-text-fill: black\"/\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"gosongying"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" style\u003d\"-fx-text-fill: black\"/\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"      \u003cLabel fx:id\u003d\"area\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" style\u003d\"-fx-text-fill: black\"/\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"gosongying"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" style\u003d\"-fx-text-fill: black\"/\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"gosongying"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"gosongying"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"gosongying"},"content":"  \u003cRegion prefWidth\u003d\"50\" prefHeight\u003d\"100\" style\u003d\"-fx-background-color: #8A8A8A; -fx-max-width: 1; -fx-max-height: 90\"/\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"gosongying"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"gosongying"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"gosongying"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"gosongying"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"gosongying"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"gosongying"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"gosongying"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"gosongying"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"gosongying"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"gosongying"},"content":"        \u003cLabel styleClass\u003d\"cell_big_label\" style\u003d\"-fx-text-fill: black\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"gosongying"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"gosongying"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"gosongying"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"gosongying"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"gosongying"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"gosongying"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"LimZiJia"},"content":"      \u003cLabel fx:id\u003d\"details\" styleClass\u003d\"cell_small_label\" style\u003d\"-fx-text-fill: black\"/\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimZiJia":1,"gosongying":26,"-":31,"GERARDJM018":1}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"gosongying"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"gosongying"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\" style\u003d\"-fx-background-color: transparent; -fx-border-width: 0\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"gosongying"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"gosongying":3,"-":6}},{"path":"src/test/java/housekeeping/hub/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expected \u003d AppParameters.class.getCanonicalName() + \"{configPath\u003d\" + appParameters.getConfigPath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expected, appParameters.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(new AppParameters()));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(appParameters.equals(appParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different config path -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d new AppParameters();","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        otherAppParameters.setConfigPath(Paths.get(\"configPath\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(appParameters.equals(otherAppParameters));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"LimZiJia":1,"-":88}},{"path":"src/test/java/housekeeping/hub/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.commons.core;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        String expected \u003d Config.class.getCanonicalName() + \"{logLevel\u003d\" + config.getLogLevel()","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \", userPrefsFilePath\u003d\" + config.getUserPrefsFilePath() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(expected, config.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"LimZiJia":1,"-":26}},{"path":"src/test/java/housekeeping/hub/commons/core/GuiSettingsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.commons.core;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class GuiSettingsTest {","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        String expected \u003d GuiSettings.class.getCanonicalName() + \"{windowWidth\u003d\" + guiSettings.getWindowWidth()","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \", windowHeight\u003d\" + guiSettings.getWindowHeight() + \", windowCoordinates\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + guiSettings.getWindowCoordinates() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertEquals(expected, guiSettings.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-23"}],"authorContributionMap":{"LimZiJia":1,"-":15}},{"path":"src/test/java/housekeeping/hub/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.commons.core;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimZiJia":2,"-":133}},{"path":"src/test/java/housekeeping/hub/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.commons.core.index;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromZeroBased(0);","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expected \u003d Index.class.getCanonicalName() + \"{zeroBasedIndex\u003d\" + index.getZeroBased() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expected, index.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"LimZiJia":2,"-":65}},{"path":"src/test/java/housekeeping/hub/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.commons.util;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"LimZiJia":2,"-":34}},{"path":"src/test/java/housekeeping/hub/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.commons.util;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"LimZiJia":3,"-":105}},{"path":"src/test/java/housekeeping/hub/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.commons.util;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.Config;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"LimZiJia":4,"-":112}},{"path":"src/test/java/housekeeping/hub/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.commons.util;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimZiJia":2,"-":21}},{"path":"src/test/java/housekeeping/hub/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.commons.util;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.testutil.SerializableTestClass;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.testutil.TestUtil;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimZiJia":3,"-":42}},{"path":"src/test/java/housekeeping/hub/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.commons.util;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"LimZiJia":2,"-":141}},{"path":"src/test/java/housekeeping/hub/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalPersons.AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.AddCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.CommandResult;","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.ListCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-05"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.ModelManager;","lastModifiedDate":"2024-04-05"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.UserPrefs;","lastModifiedDate":"2024-04-05"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.storage.JsonAddressBookStorage;","lastModifiedDate":"2024-04-05"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-04-05"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.storage.StorageManager;","lastModifiedDate":"2024-04-05"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.testutil.ClientBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"GERARDJM018"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD + \" housekeeper\";","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"gosongying"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS + \"all housekeepers\", model);","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"gosongying"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredClientList().remove(0));","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-04-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"gosongying"},"content":"        Client expectedClient \u003d new ClientBuilder(AMY).withTags().build();","lastModifiedDate":"2024-04-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"gosongying"},"content":"        expectedModel.addClient(expectedClient);","lastModifiedDate":"2024-04-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"LimZiJia":23,"gosongying":4,"-":147,"GERARDJM018":1}},{"path":"src/test/java/housekeeping/hub/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.Messages;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.ModelManager;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.UserPrefs;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Housekeeper;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.testutil.ClientBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.testutil.HousekeeperBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"gosongying"},"content":"    public void execute_newClient_success() {","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"gosongying"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"gosongying"},"content":"        expectedModel.addClient(validClient);","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"gosongying"},"content":"        assertCommandSuccess(new AddClientCommand(validClient), model,","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"gosongying"},"content":"                String.format(AddClientCommand.MESSAGE_SUCCESS, Messages.formatClient(validClient)),","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"gosongying"},"content":"    public void execute_newHousekeeper_success() {","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"gosongying"},"content":"        Housekeeper validHousekeeper \u003d new HousekeeperBuilder().build();","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"gosongying"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"gosongying"},"content":"        expectedModel.addHousekeeper(validHousekeeper);","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"gosongying"},"content":"        assertCommandSuccess(new AddHousekeeperCommand(validHousekeeper), model,","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"gosongying"},"content":"                String.format(AddHousekeeperCommand.MESSAGE_SUCCESS, validHousekeeper),","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"gosongying"},"content":"                expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"gosongying"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"gosongying"},"content":"    public void execute_duplicateClient_throwsCommandException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"gosongying"},"content":"        Client clientInList \u003d model.getAddressBook().getClientList().get(0);","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"gosongying"},"content":"        assertCommandFailure(new AddClientCommand(clientInList), model,","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"gosongying"},"content":"                AddClientCommand.MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"gosongying"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"gosongying"},"content":"    public void execute_duplicateHousekeeper_throwsCommandException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"gosongying"},"content":"        Housekeeper housekeeperInList \u003d model.getAddressBook().getHousekeeperList().get(0);","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"gosongying"},"content":"        assertCommandFailure(new AddHousekeeperCommand(housekeeperInList), model,","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"gosongying"},"content":"                AddHousekeeperCommand.MESSAGE_DUPLICATE_HOUSEKEEPER);","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"LimZiJia":12,"gosongying":28,"-":29}},{"path":"src/test/java/housekeeping/hub/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"gosongying"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.GuiSettings;","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.Messages;","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.AddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Housekeeper;","lastModifiedDate":"2024-04-05"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Person;","lastModifiedDate":"2024-04-05"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.testutil.ClientBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.testutil.HousekeeperBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"gosongying"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddClientCommand(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"gosongying"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddHousekeeperCommand(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"gosongying"},"content":"    public void execute_clientAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"gosongying"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"gosongying"},"content":"        CommandResult commandResult \u003d new AddClientCommand(validClient).execute(modelStub);","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"gosongying"},"content":"        assertEquals(String.format(AddClientCommand.MESSAGE_SUCCESS, Messages.formatClient(validClient)),","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"gosongying"},"content":"        assertEquals(Arrays.asList(validClient), modelStub.clientsAdded);","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"gosongying"},"content":"    public void execute_housekeeperAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"gosongying"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"gosongying"},"content":"        Housekeeper validHousekeeper \u003d new HousekeeperBuilder().build();","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"gosongying"},"content":"        CommandResult commandResult \u003d new AddHousekeeperCommand(validHousekeeper).execute(modelStub);","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"gosongying"},"content":"        assertEquals(String.format(AddHousekeeperCommand.MESSAGE_SUCCESS, Messages.formatHousekeeper(validHousekeeper)),","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"gosongying"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"gosongying"},"content":"        assertEquals(Arrays.asList(validHousekeeper), modelStub.housekeepersAdded);","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"gosongying"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"gosongying"},"content":"    public void execute_duplicateClient_throwsCommandException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"gosongying"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"gosongying"},"content":"        Housekeeper validHousekeeper \u003d new HousekeeperBuilder().build();","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"gosongying"},"content":"        AddClientCommand addClientCommand \u003d new AddClientCommand(validClient);","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"gosongying"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validClient, validHousekeeper);","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"gosongying"},"content":"        assertThrows(CommandException.class, AddClientCommand.MESSAGE_DUPLICATE_CLIENT,","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"gosongying"},"content":"                () -\u003e addClientCommand.execute(modelStub));","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"gosongying"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"gosongying"},"content":"    public void execute_duplicateHousekeeper_throwsCommandException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"gosongying"},"content":"        Client validClient \u003d new ClientBuilder().build();","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"gosongying"},"content":"        Housekeeper validHousekeeper \u003d new HousekeeperBuilder().build();","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"gosongying"},"content":"        AddHousekeeperCommand addHousekeeperCommand \u003d new AddHousekeeperCommand(validHousekeeper);","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"gosongying"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validClient, validHousekeeper);","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"gosongying"},"content":"        assertThrows(CommandException.class, AddHousekeeperCommand.MESSAGE_DUPLICATE_HOUSEKEEPER,","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"gosongying"},"content":"                () -\u003e addHousekeeperCommand.execute(modelStub));","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"gosongying"},"content":"        Client alice \u003d new ClientBuilder().withName(\"Alice\").build();","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"gosongying"},"content":"        Housekeeper bob \u003d new HousekeeperBuilder().withName(\"Bob\").build();","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"gosongying"},"content":"        AddClientCommand addAliceCommand \u003d new AddClientCommand(alice);","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"gosongying"},"content":"        AddHousekeeperCommand addBobCommand \u003d new AddHousekeeperCommand(bob);","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":99,"author":{"gitId":"gosongying"},"content":"        AddClientCommand addAliceCommandCopy \u003d new AddClientCommand(alice);","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":108,"author":{"gitId":"gosongying"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"gosongying"},"content":"        assertTrue(addBobCommand.equals(addBobCommand));","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"gosongying"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"gosongying"},"content":"        AddHousekeeperCommand addBobCommandCopy \u003d new AddHousekeeperCommand(bob);","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"gosongying"},"content":"        assertTrue(addBobCommand.equals(addBobCommandCopy));","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"gosongying"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"gosongying"},"content":"        assertFalse(addBobCommand.equals(1));","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"gosongying"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":119,"author":{"gitId":"gosongying"},"content":"        assertFalse(addBobCommand.equals(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"gosongying"},"content":"        AddClientCommand addClientCommand \u003d new AddClientCommand(ALICE);","lastModifiedDate":"2024-04-04"},{"lineNumber":128,"author":{"gitId":"gosongying"},"content":"        String expectedOne \u003d AddClientCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2024-04-04"},{"lineNumber":129,"author":{"gitId":"gosongying"},"content":"        assertEquals(expectedOne, addClientCommand.toString());","lastModifiedDate":"2024-04-04"},{"lineNumber":130,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":131,"author":{"gitId":"gosongying"},"content":"        AddHousekeeperCommand addHousekeeperCommand \u003d new AddHousekeeperCommand(BOB);","lastModifiedDate":"2024-04-04"},{"lineNumber":132,"author":{"gitId":"gosongying"},"content":"        String expectedTwo \u003d AddHousekeeperCommand.class.getCanonicalName() + \"{toAdd\u003d\" + BOB + \"}\";","lastModifiedDate":"2024-04-04"},{"lineNumber":133,"author":{"gitId":"gosongying"},"content":"        assertEquals(expectedTwo, addHousekeeperCommand.toString());","lastModifiedDate":"2024-04-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"gosongying"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2024-04-04"},{"lineNumber":172,"author":{"gitId":"gosongying"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":173,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":174,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":175,"author":{"gitId":"gosongying"},"content":"        @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":176,"author":{"gitId":"gosongying"},"content":"        public void addHousekeeper(Housekeeper housekeeper) {","lastModifiedDate":"2024-04-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":191,"author":{"gitId":"gosongying"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2024-04-04"},{"lineNumber":192,"author":{"gitId":"gosongying"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":193,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":194,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":195,"author":{"gitId":"gosongying"},"content":"        @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":196,"author":{"gitId":"gosongying"},"content":"        public boolean hasHousekeeper(Housekeeper housekeeper) {","lastModifiedDate":"2024-04-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"gosongying"},"content":"        public void deleteClient(Client client) {","lastModifiedDate":"2024-04-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"gosongying"},"content":"        public void deleteHousekeeper(Housekeeper housekeeper) {","lastModifiedDate":"2024-04-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"gosongying"},"content":"        public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2024-04-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"gosongying"},"content":"        public void setHousekeeper(Housekeeper target, Housekeeper editedHousekeeper) {","lastModifiedDate":"2024-04-04"},{"lineNumber":217,"author":{"gitId":"gosongying"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":218,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":219,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":220,"author":{"gitId":"gosongying"},"content":"        @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":221,"author":{"gitId":"gosongying"},"content":"        public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2024-04-04"},{"lineNumber":222,"author":{"gitId":"gosongying"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":223,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":224,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":225,"author":{"gitId":"gosongying"},"content":"        @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":226,"author":{"gitId":"gosongying"},"content":"        public ObservableList\u003cHousekeeper\u003e getFilteredHousekeeperList() {","lastModifiedDate":"2024-04-04"},{"lineNumber":227,"author":{"gitId":"gosongying"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":228,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":229,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":230,"author":{"gitId":"gosongying"},"content":"        @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":231,"author":{"gitId":"gosongying"},"content":"        public void updateFilteredClientList(Predicate\u003c? extends Person\u003e predicate) {","lastModifiedDate":"2024-04-04"},{"lineNumber":232,"author":{"gitId":"gosongying"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-04"},{"lineNumber":233,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":234,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":235,"author":{"gitId":"gosongying"},"content":"        @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":236,"author":{"gitId":"gosongying"},"content":"        public void updateFilteredHousekeeperList(Predicate\u003c? extends Person\u003e predicate) {","lastModifiedDate":"2024-04-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":240,"author":{"gitId":"gosongying"},"content":"        @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":241,"author":{"gitId":"gosongying"},"content":"        public void updateAndSortFilteredClientList(Predicate\u003cClient\u003e predicate, Comparator\u003cClient\u003e comparator) {","lastModifiedDate":"2024-04-05"},{"lineNumber":242,"author":{"gitId":"gosongying"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-05"},{"lineNumber":243,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":244,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":245,"author":{"gitId":"gosongying"},"content":"        @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":246,"author":{"gitId":"gosongying"},"content":"        public void updateFilteredHousekeeperListWithHousekeeperPredicate(Predicate\u003cHousekeeper\u003e predicate) {","lastModifiedDate":"2024-04-04"},{"lineNumber":247,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":251,"author":{"gitId":"gosongying"},"content":"     * A Model stub that contains a single client and housekeeper.","lastModifiedDate":"2024-04-04"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":254,"author":{"gitId":"gosongying"},"content":"        private final Client client;","lastModifiedDate":"2024-04-04"},{"lineNumber":255,"author":{"gitId":"gosongying"},"content":"        private final Housekeeper housekeeper;","lastModifiedDate":"2024-04-04"},{"lineNumber":256,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":257,"author":{"gitId":"gosongying"},"content":"        ModelStubWithPerson(Client client, Housekeeper housekeeper) {","lastModifiedDate":"2024-04-04"},{"lineNumber":258,"author":{"gitId":"gosongying"},"content":"            requireNonNull(client);","lastModifiedDate":"2024-04-04"},{"lineNumber":259,"author":{"gitId":"gosongying"},"content":"            requireNonNull(housekeeper);","lastModifiedDate":"2024-04-04"},{"lineNumber":260,"author":{"gitId":"gosongying"},"content":"            this.client \u003d client;","lastModifiedDate":"2024-04-04"},{"lineNumber":261,"author":{"gitId":"gosongying"},"content":"            this.housekeeper \u003d housekeeper;","lastModifiedDate":"2024-04-04"},{"lineNumber":262,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":264,"author":{"gitId":"gosongying"},"content":"        @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":265,"author":{"gitId":"gosongying"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2024-04-04"},{"lineNumber":266,"author":{"gitId":"gosongying"},"content":"            requireNonNull(client);","lastModifiedDate":"2024-04-04"},{"lineNumber":267,"author":{"gitId":"gosongying"},"content":"            return this.client.isSamePerson(client);","lastModifiedDate":"2024-04-04"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":271,"author":{"gitId":"gosongying"},"content":"        public boolean hasHousekeeper(Housekeeper housekeeper) {","lastModifiedDate":"2024-04-04"},{"lineNumber":272,"author":{"gitId":"gosongying"},"content":"            requireNonNull(housekeeper);","lastModifiedDate":"2024-04-04"},{"lineNumber":273,"author":{"gitId":"gosongying"},"content":"            return this.housekeeper.isSamePerson(housekeeper);","lastModifiedDate":"2024-04-04"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":278,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":279,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":281,"author":{"gitId":"gosongying"},"content":"        final ArrayList\u003cClient\u003e clientsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-04"},{"lineNumber":282,"author":{"gitId":"gosongying"},"content":"        final ArrayList\u003cHousekeeper\u003e housekeepersAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-04"},{"lineNumber":283,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":284,"author":{"gitId":"gosongying"},"content":"        @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":285,"author":{"gitId":"gosongying"},"content":"        public boolean hasClient(Client client) {","lastModifiedDate":"2024-04-04"},{"lineNumber":286,"author":{"gitId":"gosongying"},"content":"            requireNonNull(client);","lastModifiedDate":"2024-04-04"},{"lineNumber":287,"author":{"gitId":"gosongying"},"content":"            return clientsAdded.stream().anyMatch(client::isSamePerson);","lastModifiedDate":"2024-04-04"},{"lineNumber":288,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":289,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":290,"author":{"gitId":"gosongying"},"content":"        @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":291,"author":{"gitId":"gosongying"},"content":"        public boolean hasHousekeeper(Housekeeper housekeeper) {","lastModifiedDate":"2024-04-04"},{"lineNumber":292,"author":{"gitId":"gosongying"},"content":"            requireNonNull(housekeeper);","lastModifiedDate":"2024-04-04"},{"lineNumber":293,"author":{"gitId":"gosongying"},"content":"            return housekeepersAdded.stream().anyMatch(housekeeper::isSamePerson);","lastModifiedDate":"2024-04-04"},{"lineNumber":294,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":297,"author":{"gitId":"gosongying"},"content":"        public void addClient(Client client) {","lastModifiedDate":"2024-04-04"},{"lineNumber":298,"author":{"gitId":"gosongying"},"content":"            requireNonNull(client);","lastModifiedDate":"2024-04-04"},{"lineNumber":299,"author":{"gitId":"gosongying"},"content":"            clientsAdded.add(client);","lastModifiedDate":"2024-04-04"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":303,"author":{"gitId":"gosongying"},"content":"        public void addHousekeeper(Housekeeper housekeeper) {","lastModifiedDate":"2024-04-04"},{"lineNumber":304,"author":{"gitId":"gosongying"},"content":"            requireNonNull(housekeeper);","lastModifiedDate":"2024-04-04"},{"lineNumber":305,"author":{"gitId":"gosongying"},"content":"            housekeepersAdded.add(housekeeper);","lastModifiedDate":"2024-04-04"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":310,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"LimZiJia":16,"gosongying":146,"-":152}},{"path":"src/test/java/housekeeping/hub/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.AddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.ModelManager;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.UserPrefs;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"LimZiJia":7,"-":25}},{"path":"src/test/java/housekeeping/hub/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                + commandResult.getFeedbackToUser() + \", showHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + \", exit\u003d\" + commandResult.isExit() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"LimZiJia":1,"-":62}},{"path":"src/test/java/housekeeping/hub/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_AREA;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.index.Index;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.AddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.BookingList;","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Housekeeper;","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"GERARDJM018"},"content":"    public static final String VALID_AREA_AMY \u003d \"north\";","lastModifiedDate":"2024-04-05"},{"lineNumber":43,"author":{"gitId":"GERARDJM018"},"content":"    public static final String VALID_AREA_BOB \u003d \"south\";","lastModifiedDate":"2024-04-05"},{"lineNumber":44,"author":{"gitId":"GERARDJM018"},"content":"    public static final BookingList VALID_BOOKING_LIST_BOB \u003d new BookingList();","lastModifiedDate":"2024-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"GERARDJM018"},"content":"    public static final String AREA_DESC_AMY \u003d \" \" + PREFIX_AREA + VALID_AREA_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":58,"author":{"gitId":"GERARDJM018"},"content":"    public static final String AREA_DESC_BOB \u003d \" \" + PREFIX_AREA + VALID_AREA_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"GERARDJM018"},"content":"    public static final String INVALID_AREA_DESC \u003d \" \" + PREFIX_AREA + \"central\"; // \u0027northwest\u0027 not allowed in area","lastModifiedDate":"2024-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"LimZiJia"},"content":"     * - the hub book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2024-04-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"GERARDJM018"},"content":"        List\u003cClient\u003e expectedFilteredClientList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredClientList());","lastModifiedDate":"2024-04-05"},{"lineNumber":119,"author":{"gitId":"GERARDJM018"},"content":"        List\u003cHousekeeper\u003e expectedFilteredHousekeeperList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredHousekeeperList());","lastModifiedDate":"2024-04-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"GERARDJM018"},"content":"        assertEquals(expectedFilteredClientList, actualModel.getFilteredClientList());","lastModifiedDate":"2024-04-05"},{"lineNumber":124,"author":{"gitId":"GERARDJM018"},"content":"        assertEquals(expectedFilteredHousekeeperList, actualModel.getFilteredHousekeeperList());","lastModifiedDate":"2024-04-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"GERARDJM018"},"content":"     * Updates {@code model}\u0027s filtered client list to show only the client at the given {@code targetIndex} in the","lastModifiedDate":"2024-04-05"},{"lineNumber":129,"author":{"gitId":"LimZiJia"},"content":"     * {@code model}\u0027s hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"GERARDJM018"},"content":"    public static void showClientAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2024-04-05"},{"lineNumber":132,"author":{"gitId":"GERARDJM018"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredClientList().size());","lastModifiedDate":"2024-04-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":134,"author":{"gitId":"GERARDJM018"},"content":"        Client client \u003d model.getFilteredClientList().get(targetIndex.getZeroBased());","lastModifiedDate":"2024-04-05"},{"lineNumber":135,"author":{"gitId":"GERARDJM018"},"content":"        final String[] splitName \u003d client.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2024-04-05"},{"lineNumber":136,"author":{"gitId":"GERARDJM018"},"content":"        model.updateFilteredClientList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2024-04-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":138,"author":{"gitId":"GERARDJM018"},"content":"        assertEquals(1, model.getFilteredClientList().size());","lastModifiedDate":"2024-04-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-04-05"},{"lineNumber":142,"author":{"gitId":"GERARDJM018"},"content":"     * Updates {@code model}\u0027s filtered housekeeper list to show only the housekeeper at the given {@code targetIndex}","lastModifiedDate":"2024-04-05"},{"lineNumber":143,"author":{"gitId":"LimZiJia"},"content":"     * in the {@code model}\u0027s hub book.","lastModifiedDate":"2024-04-05"},{"lineNumber":144,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-04-05"},{"lineNumber":145,"author":{"gitId":"GERARDJM018"},"content":"    public static void showHousekeeperAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2024-04-05"},{"lineNumber":146,"author":{"gitId":"GERARDJM018"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredHousekeeperList().size());","lastModifiedDate":"2024-04-05"},{"lineNumber":147,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":148,"author":{"gitId":"GERARDJM018"},"content":"        Housekeeper housekeeper \u003d model.getFilteredHousekeeperList().get(targetIndex.getZeroBased());","lastModifiedDate":"2024-04-05"},{"lineNumber":149,"author":{"gitId":"GERARDJM018"},"content":"        final String[] splitName \u003d housekeeper.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2024-04-05"},{"lineNumber":150,"author":{"gitId":"GERARDJM018"},"content":"        model.updateFilteredHousekeeperList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2024-04-05"},{"lineNumber":151,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":152,"author":{"gitId":"GERARDJM018"},"content":"        assertEquals(1, model.getFilteredHousekeeperList().size());","lastModifiedDate":"2024-04-05"},{"lineNumber":153,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"LimZiJia":20,"-":104,"GERARDJM018":30}},{"path":"src/test/java/housekeeping/hub/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.showClientAtIndex;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.showHousekeeperAtIndex;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.index.Index;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.Messages;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.ModelManager;","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.UserPrefs;","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Housekeeper;","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":34,"author":{"gitId":"gosongying"},"content":"        // Test for deleting client","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"gosongying"},"content":"        Client clientToDelete \u003d model.getFilteredClientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"gosongying"},"content":"        DeleteClientCommand deleteClientCommand \u003d new DeleteClientCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"gosongying"},"content":"        String expectedMessageClient \u003d String.format(DeleteClientCommand.MESSAGE_DELETE_CLIENT_SUCCESS,","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"gosongying"},"content":"                Messages.formatClient(clientToDelete));","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"gosongying"},"content":"        expectedModel.deleteClient(clientToDelete);","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"gosongying"},"content":"        assertCommandSuccess(deleteClientCommand, model, expectedMessageClient, expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"gosongying"},"content":"        // Test for deleting housekeeper","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"gosongying"},"content":"        Housekeeper housekeeperToDelete \u003d model.getFilteredHousekeeperList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"gosongying"},"content":"        DeleteHousekeeperCommand deleteHousekeeperCommand \u003d new DeleteHousekeeperCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"gosongying"},"content":"        String expectedMessage \u003d String.format(DeleteHousekeeperCommand.MESSAGE_DELETE_HOUSEKEEPER_SUCCESS,","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"gosongying"},"content":"                Messages.formatHousekeeper(housekeeperToDelete));","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"gosongying"},"content":"        ModelManager expectedModelHousekeeper \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"gosongying"},"content":"        expectedModelHousekeeper.deleteHousekeeper(housekeeperToDelete);","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"gosongying"},"content":"        assertCommandSuccess(deleteHousekeeperCommand, model, expectedMessage, expectedModelHousekeeper);","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"gosongying"},"content":"        // Test for deleting client","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"gosongying"},"content":"        Index outOfBoundIndexClient \u003d Index.fromOneBased(model.getFilteredClientList().size() + 1);","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"gosongying"},"content":"        DeleteClientCommand deleteClientCommand \u003d new DeleteClientCommand(outOfBoundIndexClient);","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"gosongying"},"content":"        assertCommandFailure(deleteClientCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"gosongying"},"content":"        // Test for deleting housekeeper","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"gosongying"},"content":"        Index outOfBoundIndexHousekeeper \u003d Index.fromOneBased(model.getFilteredHousekeeperList().size() + 1);","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"gosongying"},"content":"        DeleteHousekeeperCommand deleteHousekeeperCommand \u003d new DeleteHousekeeperCommand(outOfBoundIndexHousekeeper);","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"gosongying"},"content":"        assertCommandFailure(deleteHousekeeperCommand, model, Messages.MESSAGE_INVALID_HOUSEKEEPER_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"gosongying"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"gosongying"},"content":"        // Test for deleting housekeeper","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"gosongying"},"content":"        showClientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"gosongying"},"content":"        Client clientToDelete \u003d model.getFilteredClientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"gosongying"},"content":"        DeleteClientCommand deleteClientCommand \u003d new DeleteClientCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"gosongying"},"content":"        String expectedClientMessage \u003d String.format(DeleteClientCommand.MESSAGE_DELETE_CLIENT_SUCCESS,","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"gosongying"},"content":"                Messages.formatClient(clientToDelete));","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"gosongying"},"content":"        expectedModel.deleteClient(clientToDelete);","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"gosongying"},"content":"        showNoClient(expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":90,"author":{"gitId":"gosongying"},"content":"        assertCommandSuccess(deleteClientCommand, model, expectedClientMessage, expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"gosongying"},"content":"        // Test for deleting housekeeper","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"gosongying"},"content":"        showHousekeeperAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"gosongying"},"content":"        Housekeeper housekeeperToDelete \u003d model.getFilteredHousekeeperList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":96,"author":{"gitId":"gosongying"},"content":"        DeleteHousekeeperCommand deleteHousekeeperCommand \u003d new DeleteHousekeeperCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"gosongying"},"content":"        String expectedHousekeeperMessage \u003d String.format(DeleteHousekeeperCommand.MESSAGE_DELETE_HOUSEKEEPER_SUCCESS,","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"gosongying"},"content":"                Messages.formatHousekeeper(housekeeperToDelete));","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"gosongying"},"content":"        expectedModel.deleteHousekeeper(housekeeperToDelete);","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"gosongying"},"content":"        showNoHousekeeper(expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"gosongying"},"content":"        assertCommandSuccess(deleteHousekeeperCommand, model, expectedHousekeeperMessage, expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"gosongying"},"content":"        // Test for deleting client","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"gosongying"},"content":"        showClientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"gosongying"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getClientList().size());","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"gosongying"},"content":"        DeleteClientCommand deleteCommand \u003d new DeleteClientCommand(outOfBoundIndex);","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"gosongying"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-04"},{"lineNumber":119,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"gosongying"},"content":"        // Test for deleting housekeeper","lastModifiedDate":"2024-04-04"},{"lineNumber":121,"author":{"gitId":"gosongying"},"content":"        showHousekeeperAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"gosongying"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getHousekeeperList().size());","lastModifiedDate":"2024-04-04"},{"lineNumber":124,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":125,"author":{"gitId":"gosongying"},"content":"        DeleteHousekeeperCommand deleteHousekeeperCommand \u003d new DeleteHousekeeperCommand(outOfBoundIndex);","lastModifiedDate":"2024-04-04"},{"lineNumber":126,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":127,"author":{"gitId":"gosongying"},"content":"        assertCommandFailure(deleteHousekeeperCommand, model, Messages.MESSAGE_INVALID_HOUSEKEEPER_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"gosongying"},"content":"        // Test for deleting client","lastModifiedDate":"2024-04-04"},{"lineNumber":133,"author":{"gitId":"gosongying"},"content":"        DeleteClientCommand deleteFirstClientCommand \u003d new DeleteClientCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":134,"author":{"gitId":"gosongying"},"content":"        DeleteCommand deleteSecondClientCommand \u003d new DeleteClientCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":135,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":136,"author":{"gitId":"gosongying"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-04"},{"lineNumber":137,"author":{"gitId":"gosongying"},"content":"        assertTrue(deleteFirstClientCommand.equals(deleteFirstClientCommand));","lastModifiedDate":"2024-04-04"},{"lineNumber":138,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":139,"author":{"gitId":"gosongying"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-04"},{"lineNumber":140,"author":{"gitId":"gosongying"},"content":"        DeleteClientCommand deleteFirstClientCommandCopy \u003d new DeleteClientCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":141,"author":{"gitId":"gosongying"},"content":"        assertTrue(deleteFirstClientCommand.equals(deleteFirstClientCommandCopy));","lastModifiedDate":"2024-04-04"},{"lineNumber":142,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":143,"author":{"gitId":"gosongying"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":144,"author":{"gitId":"gosongying"},"content":"        assertFalse(deleteFirstClientCommand.equals(1));","lastModifiedDate":"2024-04-04"},{"lineNumber":145,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":146,"author":{"gitId":"gosongying"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":147,"author":{"gitId":"gosongying"},"content":"        assertFalse(deleteFirstClientCommand.equals(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":148,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":149,"author":{"gitId":"gosongying"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-04-04"},{"lineNumber":150,"author":{"gitId":"gosongying"},"content":"        assertFalse(deleteFirstClientCommand.equals(deleteSecondClientCommand));","lastModifiedDate":"2024-04-04"},{"lineNumber":151,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":152,"author":{"gitId":"gosongying"},"content":"        // Test for deleting housekeeper","lastModifiedDate":"2024-04-04"},{"lineNumber":153,"author":{"gitId":"gosongying"},"content":"        DeleteHousekeeperCommand deleteFirstHousekeeperCommand \u003d new DeleteHousekeeperCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":154,"author":{"gitId":"gosongying"},"content":"        DeleteCommand deleteSecondHousekeeperCommand \u003d new DeleteHousekeeperCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":157,"author":{"gitId":"gosongying"},"content":"        assertTrue(deleteFirstHousekeeperCommand.equals(deleteFirstHousekeeperCommand));","lastModifiedDate":"2024-04-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":160,"author":{"gitId":"gosongying"},"content":"        DeleteHousekeeperCommand deleteFirstHousekeeperCommandCopy \u003d new DeleteHousekeeperCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-04"},{"lineNumber":161,"author":{"gitId":"gosongying"},"content":"        assertTrue(deleteFirstHousekeeperCommand.equals(deleteFirstHousekeeperCommandCopy));","lastModifiedDate":"2024-04-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":164,"author":{"gitId":"gosongying"},"content":"        assertFalse(deleteFirstHousekeeperCommand.equals(1));","lastModifiedDate":"2024-04-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":167,"author":{"gitId":"gosongying"},"content":"        assertFalse(deleteFirstHousekeeperCommand.equals(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":170,"author":{"gitId":"gosongying"},"content":"        assertFalse(deleteFirstHousekeeperCommand.equals(deleteSecondHousekeeperCommand));","lastModifiedDate":"2024-04-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":176,"author":{"gitId":"gosongying"},"content":"        // Test for deleting client","lastModifiedDate":"2024-04-04"},{"lineNumber":177,"author":{"gitId":"gosongying"},"content":"        DeleteClientCommand deleteClientCommand \u003d new DeleteClientCommand(targetIndex);","lastModifiedDate":"2024-04-04"},{"lineNumber":178,"author":{"gitId":"gosongying"},"content":"        String expected \u003d DeleteClientCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2024-04-04"},{"lineNumber":179,"author":{"gitId":"gosongying"},"content":"        assertEquals(expected, deleteClientCommand.toString());","lastModifiedDate":"2024-04-04"},{"lineNumber":180,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":181,"author":{"gitId":"gosongying"},"content":"        // Test for deleting housekeeper","lastModifiedDate":"2024-04-04"},{"lineNumber":182,"author":{"gitId":"gosongying"},"content":"        DeleteHousekeeperCommand deleteHousekeeperCommand \u003d new DeleteHousekeeperCommand(targetIndex);","lastModifiedDate":"2024-04-04"},{"lineNumber":183,"author":{"gitId":"gosongying"},"content":"        expected \u003d DeleteHousekeeperCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2024-04-04"},{"lineNumber":184,"author":{"gitId":"gosongying"},"content":"        assertEquals(expected, deleteHousekeeperCommand.toString());","lastModifiedDate":"2024-04-04"},{"lineNumber":185,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":186,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":187,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":188,"author":{"gitId":"gosongying"},"content":"     * Updates {@code model}\u0027s filtered client list to show no one.","lastModifiedDate":"2024-04-04"},{"lineNumber":189,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":190,"author":{"gitId":"gosongying"},"content":"    private void showNoClient(Model model) {","lastModifiedDate":"2024-04-04"},{"lineNumber":191,"author":{"gitId":"gosongying"},"content":"        model.updateFilteredClientList(p -\u003e false);","lastModifiedDate":"2024-04-04"},{"lineNumber":192,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":193,"author":{"gitId":"gosongying"},"content":"        assertTrue(model.getFilteredClientList().isEmpty());","lastModifiedDate":"2024-04-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":197,"author":{"gitId":"gosongying"},"content":"     * Updates {@code model}\u0027s filtered housekeeper list to show no one.","lastModifiedDate":"2024-04-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":199,"author":{"gitId":"gosongying"},"content":"    private void showNoHousekeeper(Model model) {","lastModifiedDate":"2024-04-04"},{"lineNumber":200,"author":{"gitId":"gosongying"},"content":"        model.updateFilteredHousekeeperList(p -\u003e false);","lastModifiedDate":"2024-04-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":202,"author":{"gitId":"gosongying"},"content":"        assertTrue(model.getFilteredHousekeeperList().isEmpty());","lastModifiedDate":"2024-04-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"LimZiJia":15,"gosongying":121,"-":68}},{"path":"src/test/java/housekeeping/hub/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.showClientAtIndex;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.index.Index;","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.Messages;","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.AddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.ModelManager;","lastModifiedDate":"2024-04-05"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.UserPrefs;","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Housekeeper;","lastModifiedDate":"2024-04-05"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Person;","lastModifiedDate":"2024-04-05"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.testutil.ClientBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.testutil.HousekeeperBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"GERARDJM018"},"content":"        Client editedClient \u003d new ClientBuilder().build();","lastModifiedDate":"2024-04-05"},{"lineNumber":44,"author":{"gitId":"GERARDJM018"},"content":"        Housekeeper editedHousekeeper \u003d new HousekeeperBuilder().build();","lastModifiedDate":"2024-04-05"},{"lineNumber":45,"author":{"gitId":"GERARDJM018"},"content":"        EditPersonDescriptor descriptorClient \u003d new EditPersonDescriptorBuilder(editedClient).build();","lastModifiedDate":"2024-04-05"},{"lineNumber":46,"author":{"gitId":"GERARDJM018"},"content":"        EditPersonDescriptor descriptorHousekeeper \u003d new EditPersonDescriptorBuilder(editedHousekeeper).build();","lastModifiedDate":"2024-04-05"},{"lineNumber":47,"author":{"gitId":"GERARDJM018"},"content":"        EditCommand editClientCommand \u003d new EditClientCommand(INDEX_FIRST_PERSON, descriptorClient);","lastModifiedDate":"2024-04-05"},{"lineNumber":48,"author":{"gitId":"GERARDJM018"},"content":"        EditCommand editHousekeeperCommand \u003d new EditHousekeeperCommand(INDEX_FIRST_PERSON, descriptorHousekeeper);","lastModifiedDate":"2024-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"GERARDJM018"},"content":"        String expectedMessageClient \u003d","lastModifiedDate":"2024-04-05"},{"lineNumber":51,"author":{"gitId":"GERARDJM018"},"content":"                String.format(EditClientCommand.MESSAGE_EDIT_CLIENT_SUCCESS, Messages.formatClient(editedClient));","lastModifiedDate":"2024-04-05"},{"lineNumber":52,"author":{"gitId":"GERARDJM018"},"content":"        String expectedMessageHousekeeper \u003d","lastModifiedDate":"2024-04-05"},{"lineNumber":53,"author":{"gitId":"GERARDJM018"},"content":"                String.format(EditHousekeeperCommand.MESSAGE_EDIT_HOUSEKEEPER_SUCCESS,","lastModifiedDate":"2024-04-05"},{"lineNumber":54,"author":{"gitId":"GERARDJM018"},"content":"                        Messages.formatHousekeeper(editedHousekeeper));","lastModifiedDate":"2024-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"GERARDJM018"},"content":"        Model expectedModelClient \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-05"},{"lineNumber":57,"author":{"gitId":"GERARDJM018"},"content":"        expectedModelClient.setClient(model.getFilteredClientList().get(0), editedClient);","lastModifiedDate":"2024-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"GERARDJM018"},"content":"        Model expectedModelHousekeeper \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-05"},{"lineNumber":60,"author":{"gitId":"GERARDJM018"},"content":"        expectedModelHousekeeper.setHousekeeper(model.getFilteredHousekeeperList().get(0), editedHousekeeper);","lastModifiedDate":"2024-04-05"},{"lineNumber":61,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":62,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":63,"author":{"gitId":"GERARDJM018"},"content":"        assertCommandSuccess(editClientCommand, model, expectedMessageClient, expectedModelClient);","lastModifiedDate":"2024-04-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"GERARDJM018"},"content":"        Index indexLastClient \u003d Index.fromOneBased(model.getFilteredClientList().size());","lastModifiedDate":"2024-04-05"},{"lineNumber":69,"author":{"gitId":"GERARDJM018"},"content":"        Client lastClient \u003d model.getFilteredClientList().get(indexLastClient.getZeroBased());","lastModifiedDate":"2024-04-05"},{"lineNumber":70,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":71,"author":{"gitId":"GERARDJM018"},"content":"        Index indexLastHousekeeper \u003d Index.fromOneBased(model.getFilteredHousekeeperList().size());","lastModifiedDate":"2024-04-05"},{"lineNumber":72,"author":{"gitId":"GERARDJM018"},"content":"        Housekeeper lastHousekeeper \u003d model.getFilteredHousekeeperList().get(indexLastHousekeeper.getZeroBased());","lastModifiedDate":"2024-04-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"GERARDJM018"},"content":"        ClientBuilder clientInList \u003d new ClientBuilder(lastClient);","lastModifiedDate":"2024-04-05"},{"lineNumber":75,"author":{"gitId":"GERARDJM018"},"content":"        Client editedClient \u003d clientInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-04-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"GERARDJM018"},"content":"        HousekeeperBuilder housekeeperInList \u003d new HousekeeperBuilder(lastHousekeeper);","lastModifiedDate":"2024-04-05"},{"lineNumber":79,"author":{"gitId":"GERARDJM018"},"content":"        Housekeeper editedHousekeeper \u003d housekeeperInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-04-05"},{"lineNumber":80,"author":{"gitId":"GERARDJM018"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-04-05"},{"lineNumber":81,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":82,"author":{"gitId":"GERARDJM018"},"content":"        EditPersonDescriptor descriptorC \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2024-04-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"GERARDJM018"},"content":"        EditCommand editCommandClient \u003d new EditClientCommand(indexLastClient, descriptorC);","lastModifiedDate":"2024-04-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"GERARDJM018"},"content":"        EditPersonDescriptor descriptorH \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2024-04-05"},{"lineNumber":87,"author":{"gitId":"GERARDJM018"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-04-05"},{"lineNumber":88,"author":{"gitId":"GERARDJM018"},"content":"        EditCommand editCommandHousekeeper \u003d new EditHousekeeperCommand(indexLastHousekeeper, descriptorH);","lastModifiedDate":"2024-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"GERARDJM018"},"content":"        String expectedMessageC \u003d","lastModifiedDate":"2024-04-05"},{"lineNumber":91,"author":{"gitId":"GERARDJM018"},"content":"                String.format(EditClientCommand.MESSAGE_EDIT_CLIENT_SUCCESS, Messages.formatClient(editedClient));","lastModifiedDate":"2024-04-05"},{"lineNumber":92,"author":{"gitId":"GERARDJM018"},"content":"        String expectedMessageH \u003d","lastModifiedDate":"2024-04-05"},{"lineNumber":93,"author":{"gitId":"GERARDJM018"},"content":"                String.format(EditHousekeeperCommand.MESSAGE_EDIT_HOUSEKEEPER_SUCCESS, Messages.formatHousekeeper(editedHousekeeper));","lastModifiedDate":"2024-04-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"GERARDJM018"},"content":"        Model expectedModelClient \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-05"},{"lineNumber":96,"author":{"gitId":"GERARDJM018"},"content":"        expectedModelClient.setClient(lastClient, editedClient);","lastModifiedDate":"2024-04-05"},{"lineNumber":97,"author":{"gitId":"GERARDJM018"},"content":"        Model expectedModelHousekeeper \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-05"},{"lineNumber":98,"author":{"gitId":"GERARDJM018"},"content":"        expectedModelHousekeeper.setHousekeeper(lastHousekeeper, editedHousekeeper);","lastModifiedDate":"2024-04-05"},{"lineNumber":99,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":100,"author":{"gitId":"GERARDJM018"},"content":"        assertCommandSuccess(editCommandClient, model, expectedMessageC, expectedModelClient);","lastModifiedDate":"2024-04-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"GERARDJM018"},"content":"        EditCommand editCommand \u003d new EditClientCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2024-04-05"},{"lineNumber":106,"author":{"gitId":"GERARDJM018"},"content":"        Client editedPerson \u003d model.getFilteredClientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"GERARDJM018"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2024-04-05"},{"lineNumber":109,"author":{"gitId":"GERARDJM018"},"content":"                String.format(EditClientCommand.MESSAGE_EDIT_CLIENT_SUCCESS, Messages.formatClient(editedPerson));","lastModifiedDate":"2024-04-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"GERARDJM018"},"content":"        Client personInFilteredList \u003d model.getFilteredClientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-05"},{"lineNumber":119,"author":{"gitId":"GERARDJM018"},"content":"        Client editedPerson \u003d new ClientBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-04-05"},{"lineNumber":120,"author":{"gitId":"GERARDJM018"},"content":"        EditCommand editCommand \u003d new EditClientCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-04-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"GERARDJM018"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2024-04-05"},{"lineNumber":124,"author":{"gitId":"GERARDJM018"},"content":"                String.format(EditClientCommand.MESSAGE_EDIT_CLIENT_SUCCESS, Messages.formatClient(editedPerson));","lastModifiedDate":"2024-04-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"GERARDJM018"},"content":"        expectedModel.setClient(model.getFilteredClientList().get(0), editedPerson);","lastModifiedDate":"2024-04-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"GERARDJM018"},"content":"        Client firstPerson \u003d model.getFilteredClientList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-04-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"GERARDJM018"},"content":"        EditCommand editCommand \u003d new EditClientCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2024-04-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"GERARDJM018"},"content":"        assertCommandFailure(editCommand, model, EditClientCommand.MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2024-04-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"GERARDJM018"},"content":"        showClientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"LimZiJia"},"content":"        // edit person in filtered list into a duplicate in hub book","lastModifiedDate":"2024-04-05"},{"lineNumber":146,"author":{"gitId":"GERARDJM018"},"content":"        Person personInList \u003d model.getAddressBook().getClientList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-04-05"},{"lineNumber":147,"author":{"gitId":"GERARDJM018"},"content":"        EditCommand editCommand \u003d new EditClientCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-04-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"GERARDJM018"},"content":"        assertCommandFailure(editCommand, model, EditClientCommand.MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2024-04-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":155,"author":{"gitId":"GERARDJM018"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredClientList().size() + 1);","lastModifiedDate":"2024-04-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"GERARDJM018"},"content":"        EditCommand editCommand \u003d new EditClientCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2024-04-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"GERARDJM018"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":164,"author":{"gitId":"LimZiJia"},"content":"     * but smaller than size of hub book","lastModifiedDate":"2024-04-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":168,"author":{"gitId":"GERARDJM018"},"content":"        showClientAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":170,"author":{"gitId":"LimZiJia"},"content":"        // ensures that outOfBoundIndex is still in bounds of hub book list","lastModifiedDate":"2024-04-05"},{"lineNumber":171,"author":{"gitId":"GERARDJM018"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getClientList().size());","lastModifiedDate":"2024-04-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":173,"author":{"gitId":"GERARDJM018"},"content":"        EditCommand editCommand \u003d new EditClientCommand(outOfBoundIndex,","lastModifiedDate":"2024-04-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":176,"author":{"gitId":"GERARDJM018"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_CLIENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":181,"author":{"gitId":"GERARDJM018"},"content":"        final EditCommand standardCommand \u003d new EditClientCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2024-04-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"GERARDJM018"},"content":"        EditCommand commandWithSameValues \u003d new EditClientCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2024-04-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":198,"author":{"gitId":"GERARDJM018"},"content":"        assertFalse(standardCommand.equals(new EditClientCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2024-04-05"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":201,"author":{"gitId":"GERARDJM018"},"content":"        assertFalse(standardCommand.equals(new EditClientCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2024-04-05"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":208,"author":{"gitId":"GERARDJM018"},"content":"        EditCommand editCommand \u003d new EditClientCommand(index, editPersonDescriptor);","lastModifiedDate":"2024-04-05"},{"lineNumber":209,"author":{"gitId":"GERARDJM018"},"content":"        String expected \u003d EditClientCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2024-04-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"LimZiJia":28,"-":112,"GERARDJM018":74}},{"path":"src/test/java/housekeeping/hub/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"LimZiJia"},"content":"        // different hub -\u003e returns false","lastModifiedDate":"2024-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"LimZiJia"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", hub\u003d\"","lastModifiedDate":"2024-04-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"GERARDJM018"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \", area\u003d\"","lastModifiedDate":"2024-04-05"},{"lineNumber":69,"author":{"gitId":"GERARDJM018"},"content":"                + editPersonDescriptor.getArea().orElse(null) + \", booking list\u003d\"","lastModifiedDate":"2024-04-05"},{"lineNumber":70,"author":{"gitId":"GERARDJM018"},"content":"                + editPersonDescriptor.getBookingList().orElse(null)","lastModifiedDate":"2024-04-05"},{"lineNumber":71,"author":{"gitId":"gosongying"},"content":"                + \"}\";","lastModifiedDate":"2024-04-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"LimZiJia":12,"gosongying":1,"-":58,"GERARDJM018":3}},{"path":"src/test/java/housekeeping/hub/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.ModelManager;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"LimZiJia":5,"-":15}},{"path":"src/test/java/housekeeping/hub/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.Messages.*;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.ModelManager;","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.UserPrefs;","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.ContainsKeywordsPredicate;","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"gosongying"},"content":"        ContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2024-04-05"},{"lineNumber":32,"author":{"gitId":"gosongying"},"content":"                new ContainsKeywordsPredicate(Collections.singletonList(\"first\"), Collections.singletonList(\"Clementi\"),","lastModifiedDate":"2024-04-05"},{"lineNumber":33,"author":{"gitId":"gosongying"},"content":"                        Collections.singletonList(\"north\"));","lastModifiedDate":"2024-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"gosongying"},"content":"        ContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2024-04-05"},{"lineNumber":36,"author":{"gitId":"gosongying"},"content":"                new ContainsKeywordsPredicate(Collections.singletonList(\"second\"), Collections.singletonList(\"Jurong\"),","lastModifiedDate":"2024-04-05"},{"lineNumber":37,"author":{"gitId":"gosongying"},"content":"                        Collections.singletonList(\"east\"));","lastModifiedDate":"2024-04-05"},{"lineNumber":38,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":39,"author":{"gitId":"gosongying"},"content":"        // Test for FindClientCommand","lastModifiedDate":"2024-04-05"},{"lineNumber":40,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":41,"author":{"gitId":"gosongying"},"content":"        FindClientCommand findFirstClientCommand \u003d new FindClientCommand(firstPredicate);","lastModifiedDate":"2024-04-05"},{"lineNumber":42,"author":{"gitId":"gosongying"},"content":"        FindClientCommand findSecondClientCommand \u003d new FindClientCommand(secondPredicate);","lastModifiedDate":"2024-04-05"},{"lineNumber":43,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":44,"author":{"gitId":"gosongying"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-05"},{"lineNumber":45,"author":{"gitId":"gosongying"},"content":"        assertTrue(findFirstClientCommand.equals(findFirstClientCommand));","lastModifiedDate":"2024-04-05"},{"lineNumber":46,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":47,"author":{"gitId":"gosongying"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-05"},{"lineNumber":48,"author":{"gitId":"gosongying"},"content":"        FindCommand findFirstCommandCopy \u003d new FindClientCommand(firstPredicate);","lastModifiedDate":"2024-04-05"},{"lineNumber":49,"author":{"gitId":"gosongying"},"content":"        assertTrue(findFirstClientCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2024-04-05"},{"lineNumber":50,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":51,"author":{"gitId":"gosongying"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-05"},{"lineNumber":52,"author":{"gitId":"gosongying"},"content":"        assertFalse(findFirstClientCommand.equals(1));","lastModifiedDate":"2024-04-05"},{"lineNumber":53,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":54,"author":{"gitId":"gosongying"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-05"},{"lineNumber":55,"author":{"gitId":"gosongying"},"content":"        assertFalse(findFirstClientCommand.equals(null));","lastModifiedDate":"2024-04-05"},{"lineNumber":56,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":57,"author":{"gitId":"gosongying"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-04-05"},{"lineNumber":58,"author":{"gitId":"gosongying"},"content":"        assertFalse(findFirstClientCommand.equals(findSecondClientCommand));","lastModifiedDate":"2024-04-05"},{"lineNumber":59,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":60,"author":{"gitId":"gosongying"},"content":"        // Test for FindHousekeeperCommand","lastModifiedDate":"2024-04-05"},{"lineNumber":61,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":62,"author":{"gitId":"gosongying"},"content":"        FindHousekeeperCommand findFirstHousekeeperCommand \u003d new FindHousekeeperCommand(firstPredicate);","lastModifiedDate":"2024-04-05"},{"lineNumber":63,"author":{"gitId":"gosongying"},"content":"        FindHousekeeperCommand findSecondHousekeeperCommand \u003d new FindHousekeeperCommand(secondPredicate);","lastModifiedDate":"2024-04-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"gosongying"},"content":"        assertTrue(findFirstHousekeeperCommand.equals(findFirstHousekeeperCommand));","lastModifiedDate":"2024-04-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"gosongying"},"content":"        FindCommand findFirstHousekeeperCommandCopy \u003d new FindHousekeeperCommand(firstPredicate);","lastModifiedDate":"2024-04-05"},{"lineNumber":70,"author":{"gitId":"gosongying"},"content":"        assertTrue(findFirstHousekeeperCommand.equals(findFirstHousekeeperCommandCopy));","lastModifiedDate":"2024-04-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"gosongying"},"content":"        assertFalse(findFirstHousekeeperCommand.equals(1));","lastModifiedDate":"2024-04-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"gosongying"},"content":"        assertFalse(findFirstHousekeeperCommand.equals(null));","lastModifiedDate":"2024-04-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"gosongying"},"content":"        assertFalse(findFirstHousekeeperCommand.equals(findSecondHousekeeperCommand));","lastModifiedDate":"2024-04-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"gosongying"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CLIENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-04-05"},{"lineNumber":85,"author":{"gitId":"GERARDJM018"},"content":"        ContainsKeywordsPredicate predicate \u003d preparePredicate(\"a\", \"2\", \"west\");","lastModifiedDate":"2024-04-05"},{"lineNumber":86,"author":{"gitId":"gosongying"},"content":"        FindClientCommand clientCommand \u003d new FindClientCommand(predicate);","lastModifiedDate":"2024-04-05"},{"lineNumber":87,"author":{"gitId":"gosongying"},"content":"        expectedModel.updateFilteredClientList(predicate);","lastModifiedDate":"2024-04-05"},{"lineNumber":88,"author":{"gitId":"gosongying"},"content":"        assertCommandSuccess(clientCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-05"},{"lineNumber":89,"author":{"gitId":"gosongying"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredClientList());","lastModifiedDate":"2024-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"GERARDJM018"},"content":"        String expectedMessage \u003d String.format(MESSAGE_HOUSEKEEPERS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-04-05"},{"lineNumber":95,"author":{"gitId":"gosongying"},"content":"        ContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\", \"\", \"\");","lastModifiedDate":"2024-04-05"},{"lineNumber":96,"author":{"gitId":"GERARDJM018"},"content":"        FindHousekeeperCommand command \u003d new FindHousekeeperCommand(predicate);","lastModifiedDate":"2024-04-05"},{"lineNumber":97,"author":{"gitId":"GERARDJM018"},"content":"        expectedModel.updateFilteredHousekeeperList(predicate);","lastModifiedDate":"2024-04-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"GERARDJM018"},"content":"        assertEquals(Arrays.asList(ELLE, FIONA), model.getFilteredHousekeeperList());","lastModifiedDate":"2024-04-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"gosongying"},"content":"        ContainsKeywordsPredicate predicate \u003d new ContainsKeywordsPredicate(Arrays.asList(\"keyword1\"),","lastModifiedDate":"2024-04-05"},{"lineNumber":105,"author":{"gitId":"gosongying"},"content":"                Arrays.asList(\"keyword2\"), Arrays.asList(\"keyword3\"));","lastModifiedDate":"2024-04-05"},{"lineNumber":106,"author":{"gitId":"gosongying"},"content":"        FindClientCommand findCommand \u003d new FindClientCommand(predicate);","lastModifiedDate":"2024-04-05"},{"lineNumber":107,"author":{"gitId":"GERARDJM018"},"content":"        String expected \u003d FindClientCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2024-04-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":114,"author":{"gitId":"gosongying"},"content":"    /*private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2024-04-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"gosongying"},"content":"    }*/","lastModifiedDate":"2024-04-05"},{"lineNumber":117,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":118,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-05"},{"lineNumber":119,"author":{"gitId":"LimZiJia"},"content":"     * Parses {@code name}, {@code hub} and {@code area} into a {@code ContainsKeywordsPredicate}.","lastModifiedDate":"2024-04-05"},{"lineNumber":120,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-05"},{"lineNumber":121,"author":{"gitId":"gosongying"},"content":"    private ContainsKeywordsPredicate preparePredicate(String name, String address, String area) {","lastModifiedDate":"2024-04-05"},{"lineNumber":122,"author":{"gitId":"gosongying"},"content":"        return new ContainsKeywordsPredicate(Arrays.asList(name.split(\"\\\\s+\")), Arrays.asList(address.split(\"\\\\s+\")),","lastModifiedDate":"2024-04-05"},{"lineNumber":123,"author":{"gitId":"gosongying"},"content":"                Arrays.asList(area.split(\"\\\\s+\")));","lastModifiedDate":"2024-04-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"LimZiJia":11,"gosongying":55,"-":53,"GERARDJM018":6}},{"path":"src/test/java/housekeeping/hub/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.ModelManager;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"LimZiJia":5,"-":15}},{"path":"src/test/java/housekeeping/hub/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.commands;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.ModelManager;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.UserPrefs;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"gosongying"},"content":"    public void execute_clientListIsFiltered_showsClientList() {","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"gosongying"},"content":"        assertCommandSuccess(new ListClientCommand(), model, ListCommand.MESSAGE_SUCCESS","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"gosongying"},"content":"                + \"all clients\", expectedModel);","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"gosongying"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"gosongying"},"content":"    public void execute_housekeeperListIsFiltered_showsHousekeeperList() {","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"gosongying"},"content":"        assertCommandSuccess(new ListHousekeeperCommand(), model, ListCommand.MESSAGE_SUCCESS","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"gosongying"},"content":"                + \"all housekeepers\", expectedModel);","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"LimZiJia":6,"gosongying":9,"-":23}},{"path":"src/test/java/housekeeping/hub/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.parser;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-04-05"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-04-05"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-04-05"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-05"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-05"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-05"},{"lineNumber":33,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalPersons.AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.Messages;","lastModifiedDate":"2024-04-05"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.AddClientCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.AddCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Address;","lastModifiedDate":"2024-04-05"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Email;","lastModifiedDate":"2024-04-05"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Name;","lastModifiedDate":"2024-04-05"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Phone;","lastModifiedDate":"2024-04-05"},{"lineNumber":45,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.tag.Tag;","lastModifiedDate":"2024-04-05"},{"lineNumber":46,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.testutil.ClientBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"gosongying"},"content":"        Client expectedClient \u003d new ClientBuilder(AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"gosongying"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"gosongying"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddClientCommand(expectedClient));","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"gosongying"},"content":"        Client expectedClientMultipleTags \u003d new ClientBuilder(AMY).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":63,"author":{"gitId":"gosongying"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"gosongying"},"content":"                        + TAG_DESC_FRIEND, new AddClientCommand(expectedClientMultipleTags));","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"gosongying"},"content":"        assertParseFailure(parser, validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2024-04-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"LimZiJia"},"content":"        // invalid hub","lastModifiedDate":"2024-04-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2024-04-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2024-04-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"LimZiJia"},"content":"        // invalid hub","lastModifiedDate":"2024-04-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2024-04-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"gosongying"},"content":"        Client expectedClient \u003d new ClientBuilder(AMY).withTags().build();","lastModifiedDate":"2024-04-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2024-04-04"},{"lineNumber":135,"author":{"gitId":"gosongying"},"content":"                new AddClientCommand(expectedClient));","lastModifiedDate":"2024-04-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"LimZiJia"},"content":"        // missing hub prefix","lastModifiedDate":"2024-04-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"gosongying"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-04-04"},{"lineNumber":167,"author":{"gitId":"GERARDJM018"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"gosongying"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2024-04-04"},{"lineNumber":171,"author":{"gitId":"GERARDJM018"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":174,"author":{"gitId":"gosongying"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2024-04-04"},{"lineNumber":175,"author":{"gitId":"GERARDJM018"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"LimZiJia"},"content":"        // invalid hub","lastModifiedDate":"2024-04-05"},{"lineNumber":178,"author":{"gitId":"gosongying"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-04-04"},{"lineNumber":179,"author":{"gitId":"GERARDJM018"},"content":"                + INVALID_ADDRESS_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":182,"author":{"gitId":"gosongying"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-04-04"},{"lineNumber":183,"author":{"gitId":"GERARDJM018"},"content":"                + ADDRESS_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":186,"author":{"gitId":"gosongying"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-04-04"},{"lineNumber":187,"author":{"gitId":"GERARDJM018"},"content":"                + INVALID_ADDRESS_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":190,"author":{"gitId":"gosongying"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-04-04"},{"lineNumber":191,"author":{"gitId":"GERARDJM018"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"LimZiJia":47,"gosongying":16,"-":124,"GERARDJM018":7}},{"path":"src/test/java/housekeeping/hub/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.parser;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.ALLOWED_PREAMBLES_TYPE;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.AddClientCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.ClearCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.DeleteClientCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.DeleteHousekeeperCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.EditClientCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.EditHousekeeperCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.ExitCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.HelpCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.ListCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Housekeeper;","lastModifiedDate":"2024-04-05"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.testutil.ClientBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.testutil.HousekeeperBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.testutil.PersonUtil;","lastModifiedDate":"2024-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"gosongying"},"content":"        Client person \u003d new ClientBuilder().build();","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"gosongying"},"content":"        AddClientCommand command \u003d (AddClientCommand) parser.parseCommand(PersonUtil.getAddClientCommand(person));","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"gosongying"},"content":"        assertEquals(new AddClientCommand(person), command);","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"gosongying"},"content":"        // Delete client","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"gosongying"},"content":"        DeleteClientCommand deleteClientCommand \u003d (DeleteClientCommand) parser.parseCommand(","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"gosongying"},"content":"                DeleteClientCommand.COMMAND_WORD + \" client \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"gosongying"},"content":"        assertEquals(new DeleteClientCommand(INDEX_FIRST_PERSON), deleteClientCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"gosongying"},"content":"        // Delete housekeeper","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"gosongying"},"content":"        DeleteHousekeeperCommand deleteHousekeeperCommand \u003d (DeleteHousekeeperCommand) parser.parseCommand(","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"gosongying"},"content":"                DeleteHousekeeperCommand.COMMAND_WORD + \" housekeeper \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"gosongying"},"content":"        assertEquals(new DeleteHousekeeperCommand(INDEX_FIRST_PERSON), deleteHousekeeperCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"gosongying"},"content":"        // Edit client","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"gosongying"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"gosongying"},"content":"        EditPersonDescriptor clientDescriptor \u003d new EditPersonDescriptorBuilder(client).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"gosongying"},"content":"        EditClientCommand editClientCommand \u003d (EditClientCommand) parser.parseCommand(EditClientCommand.COMMAND_WORD","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"gosongying"},"content":"                + \" client \" + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"gosongying"},"content":"                + PersonUtil.getEditPersonDescriptorDetails(clientDescriptor));","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"gosongying"},"content":"        assertEquals(new EditClientCommand(INDEX_FIRST_PERSON, clientDescriptor), editClientCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"gosongying"},"content":"        // Edit housekeeper","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"gosongying"},"content":"        Housekeeper housekeeper \u003d new HousekeeperBuilder().build();","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"gosongying"},"content":"        EditPersonDescriptor housekeeperDescriptor \u003d new EditPersonDescriptorBuilder(housekeeper).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"gosongying"},"content":"        EditHousekeeperCommand editHousekeeperCommand \u003d (EditHousekeeperCommand) parser.parseCommand(","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"gosongying"},"content":"                EditHousekeeperCommand.COMMAND_WORD + \" housekeeper \" + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"gosongying"},"content":"                + PersonUtil.getEditPersonDescriptorDetails(housekeeperDescriptor));","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"gosongying"},"content":"        assertEquals(new EditHousekeeperCommand(INDEX_FIRST_PERSON, housekeeperDescriptor), editHousekeeperCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"gosongying"},"content":"    /*@Test","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"gosongying"},"content":"        List\u003cString\u003e name \u003d Arrays.asList(\"foo\", \"bar\");","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"LimZiJia"},"content":"        List\u003cString\u003e hub \u003d Arrays.asList(\"Clementi\", \"Jurong\");","lastModifiedDate":"2024-04-05"},{"lineNumber":90,"author":{"gitId":"gosongying"},"content":"        List\u003cString\u003e area \u003d Arrays.asList(\"west\", \"east\");","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"gosongying"},"content":"        FindClientCommand findClientCommand \u003d (FindClientCommand) parser.parseCommand(","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"gosongying"},"content":"                FindClientCommand.COMMAND_WORD + \" client \"","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"gosongying"},"content":"                        + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"gosongying"},"content":"        assertEquals(new FindClientCommand(new ContainsKeywordsPredicate(Arrays.asList(keywords[0]),","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"gosongying"},"content":"                Arrays.asList(addressKeywords), Arrays.asList(areaKeywords))), findClientCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":96,"author":{"gitId":"gosongying"},"content":"    }*/","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"LimZiJia"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"GERARDJM018"},"content":"                ListCommand.COMMAND_WORD + \" \" + ALLOWED_PREAMBLES_TYPE[0]) instanceof ListCommand);","lastModifiedDate":"2024-03-28"},{"lineNumber":108,"author":{"gitId":"LimZiJia"},"content":"        assertTrue(parser.parseCommand(","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"GERARDJM018"},"content":"                ListCommand.COMMAND_WORD + \" \" + ALLOWED_PREAMBLES_TYPE[1]) instanceof ListCommand);","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"GERARDJM018"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" client\") instanceof ListCommand);","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"LimZiJia":26,"gosongying":36,"-":58,"GERARDJM018":3}},{"path":"src/test/java/housekeeping/hub/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.parser;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"LimZiJia":1,"-":149}},{"path":"src/test/java/housekeeping/hub/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.parser;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.Command;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"LimZiJia":3,"-":36}},{"path":"src/test/java/housekeeping/hub/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.parser;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.Messages;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.DeleteClientCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"gosongying"},"content":"        assertParseSuccess(parser, \"client 1\", new DeleteClientCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"gosongying"},"content":"        assertParseFailure(parser, \"client a\", String.format(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX));","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"LimZiJia":6,"gosongying":2,"-":24}},{"path":"src/test/java/housekeeping/hub/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.parser;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-04-05"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-04-05"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-05"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-05"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-05"},{"lineNumber":32,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2024-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.index.Index;","lastModifiedDate":"2024-04-05"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.Messages;","lastModifiedDate":"2024-04-05"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.EditClientCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.EditCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-04-05"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Address;","lastModifiedDate":"2024-04-05"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Email;","lastModifiedDate":"2024-04-05"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Name;","lastModifiedDate":"2024-04-05"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Phone;","lastModifiedDate":"2024-04-05"},{"lineNumber":45,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.tag.Tag;","lastModifiedDate":"2024-04-05"},{"lineNumber":46,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"GERARDJM018"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2024-04-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"GERARDJM018"},"content":"        String typeClient \u003d \"client \";","lastModifiedDate":"2024-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"GERARDJM018"},"content":"        assertParseFailure(parser, typeClient + VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"GERARDJM018"},"content":"        assertParseFailure(parser, typeClient + \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2024-04-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"GERARDJM018"},"content":"        assertParseFailure(parser, typeClient + \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"GERARDJM018"},"content":"        String typeclient \u003d \"client \";","lastModifiedDate":"2024-04-05"},{"lineNumber":88,"author":{"gitId":"GERARDJM018"},"content":"        assertParseFailure(parser, typeclient + \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2024-04-05"},{"lineNumber":89,"author":{"gitId":"GERARDJM018"},"content":"        assertParseFailure(parser, typeclient + \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2024-04-05"},{"lineNumber":90,"author":{"gitId":"GERARDJM018"},"content":"        assertParseFailure(parser, typeclient + \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2024-04-05"},{"lineNumber":91,"author":{"gitId":"LimZiJia"},"content":"        assertParseFailure(parser, typeclient + \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid hub","lastModifiedDate":"2024-04-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"GERARDJM018"},"content":"        assertParseFailure(parser, typeclient + \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"GERARDJM018"},"content":"        assertParseFailure(parser, typeclient + \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-05"},{"lineNumber":99,"author":{"gitId":"GERARDJM018"},"content":"        assertParseFailure(parser, typeclient + \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-05"},{"lineNumber":100,"author":{"gitId":"GERARDJM018"},"content":"        assertParseFailure(parser, typeclient + \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"GERARDJM018"},"content":"        assertParseFailure(parser, typeclient + \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2024-04-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":110,"author":{"gitId":"GERARDJM018"},"content":"        String userInput \u003d \"client \" + targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2024-04-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"gosongying"},"content":"        EditClientCommand expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"GERARDJM018"},"content":"        String userInput \u003d \"client \" + targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"gosongying"},"content":"        EditClientCommand expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2024-04-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":137,"author":{"gitId":"GERARDJM018"},"content":"        String userInput \u003d \"client \" + targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"gosongying"},"content":"        EditClientCommand expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2024-04-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"GERARDJM018"},"content":"        userInput \u003d \"client \" + targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"gosongying"},"content":"        expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2024-04-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"GERARDJM018"},"content":"        userInput \u003d \"client \" +targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"gosongying"},"content":"        expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2024-04-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"LimZiJia"},"content":"        // hub","lastModifiedDate":"2024-04-05"},{"lineNumber":155,"author":{"gitId":"GERARDJM018"},"content":"        userInput \u003d \"client \" + targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"gosongying"},"content":"        expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2024-04-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"GERARDJM018"},"content":"        userInput \u003d \"client \" + targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2024-04-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"gosongying"},"content":"        expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2024-04-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"GERARDJM018"},"content":"        String userInput \u003d \"client \" + targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"GERARDJM018"},"content":"        userInput \u003d \"client \" + targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2024-04-05"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"GERARDJM018"},"content":"        userInput \u003d \"client \" + targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-04-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"GERARDJM018"},"content":"        userInput \u003d \"client \" + targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2024-04-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":202,"author":{"gitId":"GERARDJM018"},"content":"        String userInput \u003d \"client \" + targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2024-04-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"gosongying"},"content":"        EditClientCommand expectedCommand \u003d new EditClientCommand(targetIndex, descriptor);","lastModifiedDate":"2024-04-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"LimZiJia":45,"gosongying":8,"-":130,"GERARDJM018":26}},{"path":"src/test/java/housekeeping/hub/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.parser;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.FindClientCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.FindCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.ContainsKeywordsPredicate;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"gosongying"},"content":"        FindClientCommand expectedFindCommand \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"gosongying"},"content":"                new FindClientCommand(new ContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"),","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"gosongying"},"content":"                        Arrays.asList(\"Clementi\", \"Jurong\"), Arrays.asList(\"west\", \"east\")));","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"gosongying"},"content":"        assertParseSuccess(parser, \"client n/Alice Bob a/Clementi Jurong ar/west east\", expectedFindCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"gosongying"},"content":"        //assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"LimZiJia":7,"gosongying":5,"-":24}},{"path":"src/test/java/housekeeping/hub/logic/parser/ListCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.parser;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"gosongying"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.ListClientCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.ListCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.ListHousekeeperCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"gosongying"},"content":"public class ListCommandParserTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"gosongying"},"content":"    private ListCommandParser parser \u003d new ListCommandParser();","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"gosongying"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"gosongying"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"gosongying"},"content":"        assertParseFailure(parser, \" \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"gosongying"},"content":"                ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"gosongying"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"gosongying"},"content":"                ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"gosongying"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"gosongying"},"content":"    public void parse_invalidArg_throwsParseException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"gosongying"},"content":"        assertParseFailure(parser, \"invalid\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"gosongying"},"content":"                ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"gosongying"},"content":"        assertParseFailure(parser, \"clint\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"gosongying"},"content":"                ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"gosongying"},"content":"        assertParseFailure(parser, \"house keeper\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"gosongying"},"content":"                ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"gosongying"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"gosongying"},"content":"    public void parse_validArgs_returnsListCommand() {","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"gosongying"},"content":"        assertParseSuccess(parser, \"client\", new ListClientCommand());","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"gosongying"},"content":"        assertParseSuccess(parser, \"housekeeper\", new ListHousekeeperCommand());","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"gosongying"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"LimZiJia":7,"gosongying":38}},{"path":"src/test/java/housekeeping/hub/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.logic.parser;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Address;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Email;","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Name;","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Phone;","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.tag.Tag;","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"LimZiJia":10,"-":186}},{"path":"src/test/java/housekeeping/hub/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Housekeeper;","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.testutil.ClientBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.testutil.HousekeeperBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"gosongying"},"content":"        assertEquals(Collections.emptyList(), addressBook.getClientList());","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"gosongying"},"content":"        assertEquals(Collections.emptyList(), addressBook.getHousekeeperList());","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"gosongying"},"content":"        // Two clients with the same identity fields","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"gosongying"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"gosongying"},"content":"        Housekeeper editedBob \u003d new HousekeeperBuilder(BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"gosongying"},"content":"                .build();","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"gosongying"},"content":"        List\u003cClient\u003e newClients \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"gosongying"},"content":"        List\u003cHousekeeper\u003e newHousekeepers \u003d Arrays.asList(BOB, editedBob);","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"gosongying"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newClients, newHousekeepers);","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"gosongying"},"content":"    public void hasClient_nullClient_throwsNullPointerException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"gosongying"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasClient(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"gosongying"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"gosongying"},"content":"    public void hasHousekeeper_nullHousekeeper_throwsNullPointerException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"gosongying"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasHousekeeper(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"gosongying"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"gosongying"},"content":"    public void hasClient_clientNotInAddressBook_returnsFalse() {","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"gosongying"},"content":"        assertFalse(addressBook.hasClient(ALICE));","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"gosongying"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"gosongying"},"content":"    public void hasHousekeeper_housekeeperNotInAddressBook_returnsFalse() {","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"gosongying"},"content":"        assertFalse(addressBook.hasHousekeeper(BOB));","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"gosongying"},"content":"    public void hasClient_clientInAddressBook_returnsTrue() {","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"gosongying"},"content":"        addressBook.addClient(ALICE);","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"gosongying"},"content":"        assertTrue(addressBook.hasClient(ALICE));","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"gosongying"},"content":"    public void hasHousekeeper_housekeeperInAddressBook_returnsTrue() {","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"gosongying"},"content":"        addressBook.addHousekeeper(BOB);","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"gosongying"},"content":"        assertTrue(addressBook.hasHousekeeper(BOB));","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"gosongying"},"content":"    public void hasClient_clientWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"gosongying"},"content":"        addressBook.addClient(ALICE);","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"gosongying"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"gosongying"},"content":"        assertTrue(addressBook.hasClient(editedAlice));","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"gosongying"},"content":"    public void hasHousekeeper_housekeeperWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"gosongying"},"content":"        addressBook.addHousekeeper(BOB);","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"gosongying"},"content":"        Housekeeper editedBob \u003d new HousekeeperBuilder(BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"gosongying"},"content":"                .build();","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"gosongying"},"content":"        assertTrue(addressBook.hasHousekeeper(editedBob));","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"gosongying"},"content":"    public void getClientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"gosongying"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getClientList().remove(0));","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"gosongying"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"gosongying"},"content":"    public void getHousekeeperList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":119,"author":{"gitId":"gosongying"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getHousekeeperList().remove(0));","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":121,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":122,"author":{"gitId":"gosongying"},"content":"    /*@Test","lastModifiedDate":"2024-04-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":124,"author":{"gitId":"gosongying"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getClientList() + \"}\";","lastModifiedDate":"2024-04-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"gosongying"},"content":"    }*/","lastModifiedDate":"2024-04-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":132,"author":{"gitId":"gosongying"},"content":"        private final ObservableList\u003cClient\u003e clients \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-04-04"},{"lineNumber":133,"author":{"gitId":"gosongying"},"content":"        private final ObservableList\u003cHousekeeper\u003e housekeepers \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-04-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":135,"author":{"gitId":"gosongying"},"content":"        AddressBookStub(Collection\u003cClient\u003e clients, Collection\u003cHousekeeper\u003e housekeepers) {","lastModifiedDate":"2024-04-04"},{"lineNumber":136,"author":{"gitId":"gosongying"},"content":"            this.clients.setAll(clients);","lastModifiedDate":"2024-04-04"},{"lineNumber":137,"author":{"gitId":"gosongying"},"content":"            this.housekeepers.setAll(housekeepers);","lastModifiedDate":"2024-04-04"},{"lineNumber":138,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":139,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":140,"author":{"gitId":"gosongying"},"content":"        @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":141,"author":{"gitId":"gosongying"},"content":"        public ObservableList\u003cClient\u003e getClientList() {","lastModifiedDate":"2024-04-04"},{"lineNumber":142,"author":{"gitId":"gosongying"},"content":"            return clients;","lastModifiedDate":"2024-04-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":146,"author":{"gitId":"gosongying"},"content":"        public ObservableList\u003cHousekeeper\u003e getHousekeeperList() {","lastModifiedDate":"2024-04-04"},{"lineNumber":147,"author":{"gitId":"gosongying"},"content":"            return housekeepers;","lastModifiedDate":"2024-04-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"LimZiJia":12,"gosongying":65,"-":74}},{"path":"src/test/java/housekeeping/hub/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.model.Model.PREDICATE_SHOW_ALL_CLIENTS;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.GuiSettings;","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.testutil.AddressBookBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"hub/book/file/path\"));","lastModifiedDate":"2024-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"LimZiJia"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/hub/book/file/path\"));","lastModifiedDate":"2024-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"LimZiJia"},"content":"        Path path \u003d Paths.get(\"hub/book/file/path\");","lastModifiedDate":"2024-04-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"gosongying"},"content":"    public void hasClient_nullClient_throwsNullPointerException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"gosongying"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasClient(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"gosongying"},"content":"    public void hasHousekeeper_nullHousekeeper_throwsNullPointerException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"gosongying"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasHousekeeper(null));","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"gosongying"},"content":"    public void hasClient_clientNotInAddressBook_returnsFalse() {","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"gosongying"},"content":"        assertFalse(modelManager.hasClient(ALICE));","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"gosongying"},"content":"    public void hasHousekeeper_housekeeperNotInAddressBook_returnsFalse() {","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"gosongying"},"content":"        assertFalse(modelManager.hasHousekeeper(BOB));","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":96,"author":{"gitId":"gosongying"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"gosongying"},"content":"    public void hasClient_clientInAddressBook_returnsTrue() {","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"gosongying"},"content":"        modelManager.addClient(ALICE);","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"gosongying"},"content":"        assertTrue(modelManager.hasClient(ALICE));","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"gosongying"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"gosongying"},"content":"    public void hasHousekeeper_housekeeperInAddressBook_returnsTrue() {","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"gosongying"},"content":"        modelManager.addHousekeeper(BOB);","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"gosongying"},"content":"        assertTrue(modelManager.hasHousekeeper(BOB));","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"gosongying"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"gosongying"},"content":"    public void getFilteredClientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"gosongying"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredClientList().remove(0));","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"gosongying"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"gosongying"},"content":"    public void getFilteredHousekeeperList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"gosongying"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredHousekeeperList().remove(0));","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"gosongying"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withClient(ALICE).withClient(BENSON).build();","lastModifiedDate":"2024-04-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":143,"author":{"gitId":"gosongying"},"content":"        modelManager.updateFilteredClientList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2024-04-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":147,"author":{"gitId":"gosongying"},"content":"        modelManager.updateFilteredClientList(PREDICATE_SHOW_ALL_CLIENTS);","lastModifiedDate":"2024-04-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"LimZiJia":12,"gosongying":33,"-":109}},{"path":"src/test/java/housekeeping/hub/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"LimZiJia":2,"-":19}},{"path":"src/test/java/housekeeping/hub/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model.person;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"        // null hub","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long hub","lastModifiedDate":"2024-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Address address \u003d new Address(\"Valid Address\");","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(new Address(\"Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(address));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(new Address(\"Other Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"LimZiJia":4,"-":52}},{"path":"src/test/java/housekeeping/hub/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model.person;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"LimZiJia":2,"-":86}},{"path":"src/test/java/housekeeping/hub/model/person/HousekeeperTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model.person;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"moguries"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"moguries"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"moguries"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_AREA_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_BOOKING_LIST_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalPersons.AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"moguries"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"moguries"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.parser.ParserUtil;","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-05"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.testutil.HousekeeperBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.testutil.PersonBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":30,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"moguries"},"content":"public class HousekeeperTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"    private static Housekeeper copyBob;","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"moguries"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"moguries"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"moguries"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"moguries"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"moguries"},"content":"    static {","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"moguries"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"GERARDJM018"},"content":"            ArrayList\u003cString\u003e bobTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"GERARDJM018"},"content":"            bobTags.add(VALID_TAG_HUSBAND);","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"GERARDJM018"},"content":"            bobTags.add(VALID_TAG_FRIEND);","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"GERARDJM018"},"content":"            copyBob \u003d new Housekeeper(","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"moguries"},"content":"                    ParserUtil.parseName(VALID_NAME_BOB),","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"moguries"},"content":"                    ParserUtil.parsePhone(VALID_PHONE_BOB),","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"moguries"},"content":"                    ParserUtil.parseEmail(VALID_EMAIL_BOB),","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"moguries"},"content":"                    ParserUtil.parseAddress(VALID_ADDRESS_BOB),","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"GERARDJM018"},"content":"                    ParserUtil.parseTags(bobTags),","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"GERARDJM018"},"content":"                    ParserUtil.parseArea(VALID_AREA_BOB),","lastModifiedDate":"2024-04-05"},{"lineNumber":52,"author":{"gitId":"GERARDJM018"},"content":"                    VALID_BOOKING_LIST_BOB);","lastModifiedDate":"2024-04-05"},{"lineNumber":53,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"moguries"},"content":"            //Assert that created Housekeeper object is not null","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"GERARDJM018"},"content":"            assertNotNull(copyBob);","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"moguries"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"moguries"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"moguries"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"moguries"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"moguries"},"content":"    public void equals() {","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"moguries"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"GERARDJM018"},"content":"        assertTrue(copyBob.equals(BOB));","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"moguries"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"GERARDJM018"},"content":"        assertTrue(copyBob.equals(copyBob));","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"moguries"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"GERARDJM018"},"content":"        assertFalse(copyBob.equals(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"moguries"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"GERARDJM018"},"content":"        assertFalse(copyBob.equals(5));","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"moguries"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"GERARDJM018"},"content":"        assertFalse(copyBob.equals(AMY));","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"moguries"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"GERARDJM018"},"content":"        Person editedCopyBob \u003d new HousekeeperBuilder(BOB).withName(VALID_NAME_AMY).build();","lastModifiedDate":"2024-04-05"},{"lineNumber":80,"author":{"gitId":"GERARDJM018"},"content":"        assertFalse(copyBob.equals(editedCopyBob));","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"moguries"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"GERARDJM018"},"content":"        editedCopyBob \u003d new HousekeeperBuilder(BOB).withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2024-04-05"},{"lineNumber":84,"author":{"gitId":"GERARDJM018"},"content":"        assertFalse(copyBob.equals(editedCopyBob));","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"moguries"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"GERARDJM018"},"content":"        editedCopyBob \u003d new HousekeeperBuilder(BOB).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2024-04-05"},{"lineNumber":88,"author":{"gitId":"GERARDJM018"},"content":"        assertFalse(copyBob.equals(editedCopyBob));","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"LimZiJia"},"content":"        // different hub -\u003e returns false","lastModifiedDate":"2024-04-05"},{"lineNumber":91,"author":{"gitId":"GERARDJM018"},"content":"        editedCopyBob \u003d new HousekeeperBuilder(BOB).withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2024-04-05"},{"lineNumber":92,"author":{"gitId":"GERARDJM018"},"content":"        assertFalse(copyBob.equals(editedCopyBob));","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"moguries"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"GERARDJM018"},"content":"        editedCopyBob \u003d new HousekeeperBuilder(BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-04-05"},{"lineNumber":96,"author":{"gitId":"GERARDJM018"},"content":"        assertFalse(copyBob.equals(editedCopyBob));","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"moguries"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"moguries"},"content":"    public void isClient() {","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"moguries"},"content":"        //is a client -\u003e return true","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"moguries"},"content":"        assertTrue(AMY.isClient());","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"moguries"},"content":"        //is a housekeeper -\u003e return false","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"moguries"},"content":"        assertFalse(BOB.isClient());","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"moguries"},"content":"        //is a housekeeper -\u003e return false","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"GERARDJM018"},"content":"        assertFalse(copyBob.isClient());","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"moguries"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"LimZiJia":21,"moguries":65,"GERARDJM018":25}},{"path":"src/test/java/housekeeping/hub/model/person/LeadsFilterPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model.person;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.testutil.ClientBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import java.time.Period;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"class LeadsFilterPredicateTest {","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"        // The combination here gives a predicted housekeeping date that is in the past. Client should get notification.","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"        private static final LocalDate DEFAULT_DATE \u003d LocalDate.parse(\"2023-04-01\");","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"        private static final Period DEFAULT_PERIOD \u003d Period.ofMonths(1);","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"        @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"        void client_no_housekeeping_details() {","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"            LeadsFilterPredicate predicate \u003d new LeadsFilterPredicate();","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"            HousekeepingDetails housekeepingDetails \u003d new HousekeepingDetails();","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"GERARDJM018"},"content":"            ClientBuilder clientBuilder \u003d new ClientBuilder().withDetails(housekeepingDetails);","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"GERARDJM018"},"content":"            Client client \u003d clientBuilder.build();","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"LimZiJia"},"content":"            assertFalse(predicate.test(client));","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"        @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"LimZiJia"},"content":"        void client_no_booking_date() {","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"            LeadsFilterPredicate predicate \u003d new LeadsFilterPredicate();","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"            HousekeepingDetails housekeepingDetails \u003d new HousekeepingDetails(DEFAULT_DATE, DEFAULT_PERIOD);","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"            ClientBuilder clientBuilder \u003d new ClientBuilder().withDetails(housekeepingDetails);","lastModifiedDate":"2024-04-05"},{"lineNumber":33,"author":{"gitId":"GERARDJM018"},"content":"            Client client \u003d clientBuilder.build();","lastModifiedDate":"2024-04-05"},{"lineNumber":34,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"            assertTrue(predicate.test(client));","lastModifiedDate":"2024-04-06"},{"lineNumber":36,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"        @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"        void client_booking_date_after_today() {","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"            LeadsFilterPredicate predicate \u003d new LeadsFilterPredicate();","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"LimZiJia"},"content":"            Period period \u003d Period.ofMonths(1);","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"LimZiJia"},"content":"            LocalDate date \u003d LocalDate.now().plus(period); // Create a date one month from now","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"            HousekeepingDetails housekeepingDetails \u003d new HousekeepingDetails(date, DEFAULT_PERIOD);","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"GERARDJM018"},"content":"            ClientBuilder clientBuilder \u003d new ClientBuilder().withDetails(housekeepingDetails);","lastModifiedDate":"2024-04-05"},{"lineNumber":46,"author":{"gitId":"GERARDJM018"},"content":"            Client client \u003d clientBuilder.build();","lastModifiedDate":"2024-04-05"},{"lineNumber":47,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"LimZiJia"},"content":"            assertFalse(predicate.test(client));","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"LimZiJia"},"content":"    void client_booking_date_today() {","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"LimZiJia"},"content":"        LeadsFilterPredicate predicate \u003d new LeadsFilterPredicate();","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"LimZiJia"},"content":"        LocalDate date \u003d LocalDate.now(); // Create a date that is today","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"LimZiJia"},"content":"        HousekeepingDetails housekeepingDetails \u003d new HousekeepingDetails(date, DEFAULT_PERIOD);","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"GERARDJM018"},"content":"        ClientBuilder clientBuilder \u003d new ClientBuilder().withDetails(housekeepingDetails);","lastModifiedDate":"2024-04-05"},{"lineNumber":58,"author":{"gitId":"GERARDJM018"},"content":"        Client client \u003d clientBuilder.build();","lastModifiedDate":"2024-04-05"},{"lineNumber":59,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"LimZiJia"},"content":"        assertFalse(predicate.test(client));","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"LimZiJia"},"content":"    void client_booking_date_before_today() {","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"LimZiJia"},"content":"        LeadsFilterPredicate predicate \u003d new LeadsFilterPredicate();","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"LimZiJia"},"content":"        Period period \u003d Period.ofMonths(1);","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"LimZiJia"},"content":"        LocalDate date \u003d LocalDate.now().minus(period); // Create a date that is before today","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"LimZiJia"},"content":"        HousekeepingDetails housekeepingDetails \u003d new HousekeepingDetails(date, DEFAULT_PERIOD);","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"GERARDJM018"},"content":"        ClientBuilder clientBuilder \u003d new ClientBuilder().withDetails(housekeepingDetails);","lastModifiedDate":"2024-04-05"},{"lineNumber":71,"author":{"gitId":"GERARDJM018"},"content":"        Client client \u003d clientBuilder.build();","lastModifiedDate":"2024-04-05"},{"lineNumber":72,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"LimZiJia"},"content":"        assertTrue(predicate.test(client));","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"LimZiJia"},"content":"    void client_predicted_housekeeping_date_before_today() {","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"LimZiJia"},"content":"        LeadsFilterPredicate predicate \u003d new LeadsFilterPredicate();","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"LimZiJia"},"content":"        HousekeepingDetails housekeepingDetails \u003d new HousekeepingDetails(DEFAULT_DATE, DEFAULT_PERIOD);","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"GERARDJM018"},"content":"        ClientBuilder clientBuilder \u003d new ClientBuilder().withDetails(housekeepingDetails);","lastModifiedDate":"2024-04-05"},{"lineNumber":82,"author":{"gitId":"GERARDJM018"},"content":"        Client client \u003d clientBuilder.build();","lastModifiedDate":"2024-04-05"},{"lineNumber":83,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"LimZiJia"},"content":"        assertTrue(predicate.test(client));","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"LimZiJia"},"content":"    void client_predicted_housekeeping_date_today() {","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"LimZiJia"},"content":"        LeadsFilterPredicate predicate \u003d new LeadsFilterPredicate();","lastModifiedDate":"2024-04-04"},{"lineNumber":90,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"LimZiJia"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"LimZiJia"},"content":"        Period period \u003d Period.ZERO;","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"LimZiJia"},"content":"        HousekeepingDetails housekeepingDetails \u003d new HousekeepingDetails(date, period);","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"GERARDJM018"},"content":"        ClientBuilder clientBuilder \u003d new ClientBuilder().withDetails(housekeepingDetails);","lastModifiedDate":"2024-04-05"},{"lineNumber":95,"author":{"gitId":"GERARDJM018"},"content":"        Client client \u003d clientBuilder.build();","lastModifiedDate":"2024-04-05"},{"lineNumber":96,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"LimZiJia"},"content":"        assertTrue(predicate.test(client));","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"LimZiJia"},"content":"    void client_predicted_housekeeping_date_after_today() {","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"LimZiJia"},"content":"        LeadsFilterPredicate predicate \u003d new LeadsFilterPredicate();","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"LimZiJia"},"content":"        LocalDate date \u003d LocalDate.now();","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"LimZiJia"},"content":"        Period period \u003d Period.ofMonths(1);","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"LimZiJia"},"content":"        HousekeepingDetails housekeepingDetails \u003d new HousekeepingDetails(date, period);","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"GERARDJM018"},"content":"        ClientBuilder clientBuilder \u003d new ClientBuilder().withDetails(housekeepingDetails);","lastModifiedDate":"2024-04-05"},{"lineNumber":108,"author":{"gitId":"GERARDJM018"},"content":"        Client client \u003d clientBuilder.build();","lastModifiedDate":"2024-04-05"},{"lineNumber":109,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"LimZiJia"},"content":"        assertFalse(predicate.test(client));","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"LimZiJia"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"LimZiJia":98,"GERARDJM018":17}},{"path":"src/test/java/housekeeping/hub/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model.person;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"LimZiJia":2,"-":58}},{"path":"src/test/java/housekeeping/hub/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model.person;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(new Phone(\"999\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(new Phone(\"995\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"LimZiJia":2,"-":58}},{"path":"src/test/java/housekeeping/hub/model/person/TypePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model.person;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"moguries"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"moguries"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalPersons.AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"moguries"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"moguries"},"content":"public class TypePredicateTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"moguries"},"content":"    private static final TypePredicate TEST_PREDICATE_CLIENT \u003d new TypePredicate(\"client\");","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"moguries"},"content":"    private static final TypePredicate TEST_PREDICATE_CLIENT_2 \u003d new TypePredicate(\"client\");","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"moguries"},"content":"    private static final TypePredicate TEST_PREDICATE_HOUSEKEEPER \u003d new TypePredicate(\"housekeeper\");","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"moguries"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"moguries"},"content":"    public void testTest() {","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"moguries"},"content":"        //Person is a client and type predicate is \"client\" -\u003e return true","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"moguries"},"content":"        assertTrue(TEST_PREDICATE_CLIENT.test(AMY));","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"moguries"},"content":"        //Person is a client and type predicate is \"housekeeper\" -\u003e return false","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"moguries"},"content":"        assertFalse(TEST_PREDICATE_HOUSEKEEPER.test(AMY));","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"moguries"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"moguries"},"content":"    public void equalsTest() {","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"moguries"},"content":"        // same type value -\u003e returns true","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"moguries"},"content":"        assertTrue(TEST_PREDICATE_CLIENT.equals(TEST_PREDICATE_CLIENT_2));","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"moguries"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"moguries"},"content":"        assertTrue(TEST_PREDICATE_HOUSEKEEPER.equals(TEST_PREDICATE_HOUSEKEEPER));","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"moguries"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"moguries"},"content":"        assertFalse(TEST_PREDICATE_CLIENT.equals(null));","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"moguries"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"moguries"},"content":"        assertFalse(TEST_PREDICATE_CLIENT_2.equals(5));","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"moguries"},"content":"        // different object -\u003e returns false","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"moguries"},"content":"        assertFalse(TEST_PREDICATE_CLIENT.equals(TEST_PREDICATE_HOUSEKEEPER));","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"moguries"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"moguries"},"content":"    public void toStringTest() {","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"moguries"},"content":"        // prints correct type (client) -\u003e return true","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"LimZiJia"},"content":"        assertTrue(TEST_PREDICATE_CLIENT.toString().equals(\"housekeeping.hub.model.person.TypePredicate{type\u003dclient}\"));","lastModifiedDate":"2024-04-05"},{"lineNumber":45,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"moguries"},"content":"        // prints correct type (housekeeper) -\u003e return true","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"GERARDJM018"},"content":"        assertTrue(TEST_PREDICATE_HOUSEKEEPER.toString()","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"LimZiJia"},"content":"                .equals(\"housekeeping.hub.model.person.TypePredicate{type\u003dhousekeeper}\"));","lastModifiedDate":"2024-04-05"},{"lineNumber":49,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"moguries"},"content":"        //prints wrong type -\u003e return false","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"GERARDJM018"},"content":"        assertFalse(TEST_PREDICATE_CLIENT_2.toString()","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"LimZiJia"},"content":"                .equals(\"housekeeping.hub.model.person.TypePredicate{type\u003dhousekeeper}\"));","lastModifiedDate":"2024-04-05"},{"lineNumber":53,"author":{"gitId":"moguries"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"moguries"},"content":"        // prints wrong string -\u003e return false","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"moguries"},"content":"        assertFalse(TEST_PREDICATE_CLIENT.toString().equals(\"{type\u003dclient}\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"moguries"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"moguries"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"LimZiJia":5,"moguries":50,"GERARDJM018":2}},{"path":"src/test/java/housekeeping/hub/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model.person;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalPersons.HOON;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.testutil.ClientBuilder;","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"gosongying"},"content":"    private final UniquePersonList\u003cClient\u003e uniquePersonList \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"gosongying"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"gosongying"},"content":"        UniquePersonList\u003cClient\u003e expectedUniquePersonList \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2024-04-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"gosongying"},"content":"        Client editedAlice \u003d new ClientBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"gosongying"},"content":"        UniquePersonList\u003cClient\u003e expectedUniquePersonList \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2024-04-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"gosongying"},"content":"        uniquePersonList.setPerson(ALICE, HOON);","lastModifiedDate":"2024-04-05"},{"lineNumber":100,"author":{"gitId":"gosongying"},"content":"        UniquePersonList\u003cClient\u003e expectedUniquePersonList \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2024-04-05"},{"lineNumber":101,"author":{"gitId":"gosongying"},"content":"        expectedUniquePersonList.add(HOON);","lastModifiedDate":"2024-04-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"gosongying"},"content":"        uniquePersonList.add(HOON);","lastModifiedDate":"2024-04-05"},{"lineNumber":109,"author":{"gitId":"gosongying"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, HOON));","lastModifiedDate":"2024-04-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"gosongying"},"content":"        UniquePersonList\u003cClient\u003e expectedUniquePersonList \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2024-04-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"gosongying"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList\u003cClient\u003e) null));","lastModifiedDate":"2024-04-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"gosongying"},"content":"        UniquePersonList\u003cClient\u003e expectedUniquePersonList \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2024-04-05"},{"lineNumber":139,"author":{"gitId":"gosongying"},"content":"        expectedUniquePersonList.add(HOON);","lastModifiedDate":"2024-04-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"gosongying"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cClient\u003e) null));","lastModifiedDate":"2024-04-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"gosongying"},"content":"        List\u003cClient\u003e personList \u003d Collections.singletonList(HOON);","lastModifiedDate":"2024-04-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"gosongying"},"content":"        UniquePersonList\u003cClient\u003e expectedUniquePersonList \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2024-04-05"},{"lineNumber":155,"author":{"gitId":"gosongying"},"content":"        expectedUniquePersonList.add(HOON);","lastModifiedDate":"2024-04-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"gosongying"},"content":"        List\u003cClient\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2024-04-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"LimZiJia":9,"gosongying":19,"-":147}},{"path":"src/test/java/housekeeping/hub/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.model.tag;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"LimZiJia":2,"-":24}},{"path":"src/test/java/housekeeping/hub/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.storage;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Address;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Email;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Name;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Phone;","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Type;","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"LimZiJia"},"content":"    private static final String INVALID_TYPE \u003d \"hoousekeeper\";","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"gosongying"},"content":"    private static final String VALID_AREA \u003d BENSON.getArea().toString();","lastModifiedDate":"2024-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"gosongying"},"content":"        JsonAdaptedClient person \u003d new JsonAdaptedClient(BENSON);","lastModifiedDate":"2024-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"gosongying"},"content":"        JsonAdaptedClient person \u003d","lastModifiedDate":"2024-04-05"},{"lineNumber":46,"author":{"gitId":"gosongying"},"content":"                new JsonAdaptedClient(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, null, VALID_AREA);","lastModifiedDate":"2024-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"gosongying"},"content":"        JsonAdaptedClient person \u003d","lastModifiedDate":"2024-04-05"},{"lineNumber":54,"author":{"gitId":"gosongying"},"content":"                new JsonAdaptedClient(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, null, VALID_AREA);","lastModifiedDate":"2024-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"gosongying"},"content":"        JsonAdaptedClient person \u003d","lastModifiedDate":"2024-04-05"},{"lineNumber":62,"author":{"gitId":"gosongying"},"content":"                new JsonAdaptedClient(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, null, VALID_AREA);","lastModifiedDate":"2024-04-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"gosongying"},"content":"        JsonAdaptedClient person \u003d","lastModifiedDate":"2024-04-05"},{"lineNumber":70,"author":{"gitId":"gosongying"},"content":"                new JsonAdaptedClient(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, null, VALID_AREA);","lastModifiedDate":"2024-04-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"gosongying"},"content":"        JsonAdaptedClient person \u003d","lastModifiedDate":"2024-04-05"},{"lineNumber":78,"author":{"gitId":"gosongying"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS, null, VALID_AREA);","lastModifiedDate":"2024-04-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"gosongying"},"content":"        JsonAdaptedClient person \u003d","lastModifiedDate":"2024-04-05"},{"lineNumber":86,"author":{"gitId":"gosongying"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS, null, VALID_AREA);","lastModifiedDate":"2024-04-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"gosongying"},"content":"        JsonAdaptedClient person \u003d","lastModifiedDate":"2024-04-05"},{"lineNumber":94,"author":{"gitId":"gosongying"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS, null, VALID_AREA);","lastModifiedDate":"2024-04-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"gosongying"},"content":"        JsonAdaptedClient person \u003d","lastModifiedDate":"2024-04-05"},{"lineNumber":102,"author":{"gitId":"gosongying"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS, null, VALID_AREA);","lastModifiedDate":"2024-04-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"gosongying"},"content":"        JsonAdaptedClient person \u003d","lastModifiedDate":"2024-04-05"},{"lineNumber":112,"author":{"gitId":"gosongying"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags, null, VALID_AREA);","lastModifiedDate":"2024-04-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"LimZiJia"},"content":"    public void toModelType_invalidType_throwsIllegalValueException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"gosongying"},"content":"        JsonAdaptedClient person \u003d","lastModifiedDate":"2024-04-05"},{"lineNumber":119,"author":{"gitId":"gosongying"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, null, VALID_AREA);","lastModifiedDate":"2024-04-05"},{"lineNumber":120,"author":{"gitId":"LimZiJia"},"content":"        String expectedMessage \u003d Type.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"LimZiJia"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"LimZiJia"},"content":"    public void toModelType_nullType_throwsIllegalValueException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"gosongying"},"content":"        JsonAdaptedClient person \u003d","lastModifiedDate":"2024-04-05"},{"lineNumber":127,"author":{"gitId":"gosongying"},"content":"                new JsonAdaptedClient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, null, VALID_AREA);","lastModifiedDate":"2024-04-05"},{"lineNumber":128,"author":{"gitId":"LimZiJia"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Type.class.getSimpleName());","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"LimZiJia"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"LimZiJia":20,"gosongying":24,"-":88}},{"path":"src/test/java/housekeeping/hub/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.storage;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalPersons.HOON;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalPersons.IDA;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.AddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"gosongying"},"content":"        original.addClient(HOON);","lastModifiedDate":"2024-04-05"},{"lineNumber":76,"author":{"gitId":"gosongying"},"content":"        original.removeClient(ALICE);","lastModifiedDate":"2024-04-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"gosongying"},"content":"        original.addHousekeeper(IDA);","lastModifiedDate":"2024-04-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"LimZiJia":9,"gosongying":3,"-":98}},{"path":"src/test/java/housekeeping/hub/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.storage;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.util.JsonUtil;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.AddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.testutil.TypicalPersons;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"LimZiJia":6,"-":41}},{"path":"src/test/java/housekeeping/hub/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.storage;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.GuiSettings;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.UserPrefs;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"LimZiJia":5,"-":118}},{"path":"src/test/java/housekeeping/hub/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.storage;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.GuiSettings;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.AddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.UserPrefs;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimZiJia":6,"-":62}},{"path":"src/test/java/housekeeping/hub/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.testutil;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.AddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Housekeeper;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"gosongying"},"content":"     * Adds a new {@code Client} to the {@code AddressBook} that we are building.","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":27,"author":{"gitId":"gosongying"},"content":"    public AddressBookBuilder withClient(Client client) {","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"gosongying"},"content":"        addressBook.addClient(client);","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"gosongying"},"content":"        return this;","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"gosongying"},"content":"     * Adds a new {@code Housekeeper} to the {@code AddressBook} that we are building.","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"gosongying"},"content":"    public AddressBookBuilder withHousekeeper(Housekeeper housekeeper) {","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"gosongying"},"content":"        addressBook.addHousekeeper(housekeeper);","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimZiJia":4,"gosongying":11,"-":28}},{"path":"src/test/java/housekeeping/hub/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.testutil;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"LimZiJia":1,"-":33}},{"path":"src/test/java/housekeeping/hub/testutil/ClientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.testutil;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"gosongying"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"gosongying"},"content":"import java.time.Period;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"gosongying"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"gosongying"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Address;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Area;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Email;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.HousekeepingDetails;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Name;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Phone;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.tag.Tag;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.util.SampleDataUtil;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"gosongying"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"gosongying"},"content":" * A utility class to help with building Client objects.","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"gosongying"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"gosongying"},"content":"public class ClientBuilder {","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"gosongying"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"gosongying"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"gosongying"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"gosongying"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"gosongying"},"content":"    public static final String DEFAULT_AREA \u003d \"west\";","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"gosongying"},"content":"    public static final String DEFAULT_LAST_CLEANING_DATE \u003d \"2021-10-10\";","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"gosongying"},"content":"    public static final String DEFAULT_PREFERRED_INTERVAL \u003d \"1\";","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"gosongying"},"content":"    private Name name;","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"gosongying"},"content":"    private Phone phone;","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"gosongying"},"content":"    private Email email;","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"gosongying"},"content":"    private Address address;","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"gosongying"},"content":"    private Area area;","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"gosongying"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"gosongying"},"content":"    private HousekeepingDetails housekeepingDetails;","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"gosongying"},"content":"     * Creates a {@code ClientBuilder} with the default details.","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"gosongying"},"content":"    public ClientBuilder() {","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"gosongying"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"gosongying"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"gosongying"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"gosongying"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"gosongying"},"content":"        area \u003d new Area(DEFAULT_AREA);","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"gosongying"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"gosongying"},"content":"        housekeepingDetails \u003d new HousekeepingDetails(LocalDate.parse(DEFAULT_LAST_CLEANING_DATE),","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"gosongying"},"content":"                Period.ofMonths(Integer.parseInt(DEFAULT_PREFERRED_INTERVAL)));","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"gosongying"},"content":"     * Initializes the ClientBuilder with the data of {@code clientToCopy}.","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"gosongying"},"content":"    public ClientBuilder(Client clientToCopy) {","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"gosongying"},"content":"        name \u003d clientToCopy.getName();","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"gosongying"},"content":"        phone \u003d clientToCopy.getPhone();","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"gosongying"},"content":"        email \u003d clientToCopy.getEmail();","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"gosongying"},"content":"        address \u003d clientToCopy.getAddress();","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"gosongying"},"content":"        area \u003d clientToCopy.getArea();","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"gosongying"},"content":"        tags \u003d new HashSet\u003c\u003e(clientToCopy.getTags());","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"gosongying"},"content":"        housekeepingDetails \u003d clientToCopy.getDetails();","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"gosongying"},"content":"     * Sets the {@code Name} of the {@code Client} that we are building.","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"gosongying"},"content":"    public ClientBuilder withName(String name) {","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"gosongying"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"gosongying"},"content":"        return this;","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"gosongying"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Client} that we are building.","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"gosongying"},"content":"    public ClientBuilder withTags(String ... tags) {","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"gosongying"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"gosongying"},"content":"        return this;","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"gosongying"},"content":"     * Sets the {@code Address} of the {@code Client} that we are building.","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"gosongying"},"content":"    public ClientBuilder withAddress(String address) {","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"gosongying"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"gosongying"},"content":"        return this;","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":90,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"gosongying"},"content":"     * Sets the {@code Phone} of the {@code Client} that we are building.","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"gosongying"},"content":"    public ClientBuilder withPhone(String phone) {","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"gosongying"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"gosongying"},"content":"        return this;","lastModifiedDate":"2024-04-04"},{"lineNumber":96,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"gosongying"},"content":"     * Sets the {@code Email} of the {@code Client} that we are building.","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"gosongying"},"content":"    public ClientBuilder withEmail(String email) {","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"gosongying"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"gosongying"},"content":"        return this;","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"gosongying"},"content":"     * Sets the {@code Area} of the {@code Client} that we are building.","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"gosongying"},"content":"    public ClientBuilder withArea(String area) {","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"gosongying"},"content":"        this.area \u003d new Area(area);","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"gosongying"},"content":"        return this;","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"LimZiJia"},"content":"     * Sets the {@code HousekeepingDetails} of the {@code Client} that we are building.","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"LimZiJia"},"content":"    public ClientBuilder withDetails(HousekeepingDetails housekeepingDetails) {","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"LimZiJia"},"content":"        this.housekeepingDetails \u003d housekeepingDetails;","lastModifiedDate":"2024-04-04"},{"lineNumber":119,"author":{"gitId":"LimZiJia"},"content":"        return this;","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":121,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":122,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":123,"author":{"gitId":"gosongying"},"content":"     * Returns client with the given data.","lastModifiedDate":"2024-04-04"},{"lineNumber":124,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":125,"author":{"gitId":"gosongying"},"content":"    public Client build() {","lastModifiedDate":"2024-04-04"},{"lineNumber":126,"author":{"gitId":"gosongying"},"content":"        return new Client(name, phone, email, address, tags, housekeepingDetails, area);","lastModifiedDate":"2024-04-04"},{"lineNumber":127,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":128,"author":{"gitId":"gosongying"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"LimZiJia":18,"gosongying":110}},{"path":"src/test/java/housekeeping/hub/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.testutil;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Address;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Area;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.BookingList;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Email;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Housekeeper;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.HousekeepingDetails;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Name;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Person;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Phone;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.tag.Tag;","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":45,"author":{"gitId":"gosongying"},"content":"        descriptor.setArea(person.getArea());","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"gosongying"},"content":"        if (person.isClient()) {","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"gosongying"},"content":"            Client client \u003d (Client) person;","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"gosongying"},"content":"            descriptor.setDetails(client.getDetails());","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"gosongying"},"content":"        } else {","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"gosongying"},"content":"            Housekeeper housekeeper \u003d (Housekeeper) person;","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"gosongying"},"content":"        }","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"gosongying"},"content":"    public EditPersonDescriptorBuilder withArea(String area) {","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"gosongying"},"content":"        descriptor.setArea(new Area(area));","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"gosongying"},"content":"        return this;","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"gosongying"},"content":"    public EditPersonDescriptorBuilder withBookingList(BookingList bookingList) {","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"gosongying"},"content":"        descriptor.setBookingList(bookingList);","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"gosongying"},"content":"        return this;","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"gosongying"},"content":"    public EditPersonDescriptorBuilder withDetails(HousekeepingDetails details) {","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"gosongying"},"content":"        descriptor.setDetails(details);","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"gosongying"},"content":"        return this;","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"LimZiJia":13,"gosongying":22,"-":79}},{"path":"src/test/java/housekeeping/hub/testutil/HousekeeperBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.testutil;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"gosongying"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"gosongying"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Address;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Area;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.BookingList;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Email;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Housekeeper;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Name;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Phone;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.tag.Tag;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.util.SampleDataUtil;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"gosongying"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"gosongying"},"content":" * A utility class to help with building Housekeeper objects.","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"gosongying"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"gosongying"},"content":"public class HousekeeperBuilder {","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"gosongying"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"gosongying"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"gosongying"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"gosongying"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"gosongying"},"content":"    public static final String DEFAULT_AREA \u003d \"west\";","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"gosongying"},"content":"    private Name name;","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"gosongying"},"content":"    private Phone phone;","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"gosongying"},"content":"    private Email email;","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"gosongying"},"content":"    private Address address;","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"gosongying"},"content":"    private Area area;","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"gosongying"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"gosongying"},"content":"    private BookingList bookingList;","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"gosongying"},"content":"     * Creates a {@code HousekeeperBuilder} with the default details.","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"gosongying"},"content":"    public HousekeeperBuilder() {","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"gosongying"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"gosongying"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"gosongying"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"gosongying"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"gosongying"},"content":"        area \u003d new Area(DEFAULT_AREA);","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"gosongying"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"gosongying"},"content":"        bookingList \u003d new BookingList();","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"gosongying"},"content":"     * Initializes the HousekeeperBuilder with the data of {@code housekeeperToCopy}.","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"gosongying"},"content":"    public HousekeeperBuilder(Housekeeper housekeeperToCopy) {","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"gosongying"},"content":"        name \u003d housekeeperToCopy.getName();","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"gosongying"},"content":"        phone \u003d housekeeperToCopy.getPhone();","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"gosongying"},"content":"        email \u003d housekeeperToCopy.getEmail();","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"gosongying"},"content":"        address \u003d housekeeperToCopy.getAddress();","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"gosongying"},"content":"        area \u003d housekeeperToCopy.getArea();","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"gosongying"},"content":"        tags \u003d new HashSet\u003c\u003e(housekeeperToCopy.getTags());","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"gosongying"},"content":"        bookingList \u003d new BookingList();","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"gosongying"},"content":"     * Sets the {@code Name} of the {@code Housekeeper} that we are building.","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"gosongying"},"content":"    public HousekeeperBuilder withName(String name) {","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"gosongying"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"gosongying"},"content":"        return this;","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"gosongying"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Housekeeper} that we are building.","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"gosongying"},"content":"    public HousekeeperBuilder withTags(String ... tags) {","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"gosongying"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"gosongying"},"content":"        return this;","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":76,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":77,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":78,"author":{"gitId":"gosongying"},"content":"     * Sets the {@code Address} of the {@code Housekeeper} that we are building.","lastModifiedDate":"2024-04-04"},{"lineNumber":79,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"gosongying"},"content":"    public HousekeeperBuilder withAddress(String address) {","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"gosongying"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"gosongying"},"content":"        return this;","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"gosongying"},"content":"     * Sets the {@code Phone} of the {@code Housekeeper} that we are building.","lastModifiedDate":"2024-04-04"},{"lineNumber":87,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"gosongying"},"content":"    public HousekeeperBuilder withPhone(String phone) {","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"gosongying"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2024-04-04"},{"lineNumber":90,"author":{"gitId":"gosongying"},"content":"        return this;","lastModifiedDate":"2024-04-04"},{"lineNumber":91,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":92,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":93,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"gosongying"},"content":"     * Sets the {@code Email} of the {@code Housekeeper} that we are building.","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":96,"author":{"gitId":"gosongying"},"content":"    public HousekeeperBuilder withEmail(String email) {","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"gosongying"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"gosongying"},"content":"        return this;","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"gosongying"},"content":"     * Sets the {@code Area} of the {@code Housekeeper} that we are building.","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"gosongying"},"content":"    public HousekeeperBuilder withArea(String area) {","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"gosongying"},"content":"        this.area \u003d new Area(area);","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"gosongying"},"content":"        return this;","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"gosongying"},"content":"     * Sets the {@code BookingList} of the {@code Housekeeper} that we are building.","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"gosongying"},"content":"    public HousekeeperBuilder withBookingList(BookingList bookingList) {","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"gosongying"},"content":"        this.bookingList \u003d bookingList;","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"gosongying"},"content":"        return this;","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"gosongying"},"content":"     * Returns housekeeper with the given data.","lastModifiedDate":"2024-04-04"},{"lineNumber":119,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"gosongying"},"content":"    public Housekeeper build() {","lastModifiedDate":"2024-04-04"},{"lineNumber":121,"author":{"gitId":"gosongying"},"content":"        return new Housekeeper(name, phone, email, address, tags, area, bookingList);","lastModifiedDate":"2024-04-04"},{"lineNumber":122,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":123,"author":{"gitId":"gosongying"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"LimZiJia":10,"gosongying":113}},{"path":"src/test/java/housekeeping/hub/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.testutil;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Address;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Area;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.BookingList;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Email;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Housekeeper;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.HousekeepingDetails;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Name;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Person;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Phone;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Type;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.tag.Tag;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.util.SampleDataUtil;","lastModifiedDate":"2024-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"LimZiJia"},"content":"    public static final String DEFAULT_TYPE \u003d \"client\";","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"LimZiJia"},"content":"    public static final String DEFAULT_AREA \u003d \"east\";","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"LimZiJia"},"content":"    public static final String DEFAULT_HOUSEKEEPINGDETAILS \u003d \"null\";","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"LimZiJia"},"content":"    private Type type;","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"LimZiJia"},"content":"    private HousekeepingDetails housekeepingDetails;","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"LimZiJia"},"content":"    private Area area;","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"LimZiJia"},"content":"    private BookingList bookingList;","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"LimZiJia"},"content":"        type \u003d new Type(DEFAULT_TYPE);","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"LimZiJia"},"content":"        housekeepingDetails \u003d new HousekeepingDetails();","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"LimZiJia"},"content":"        area \u003d new Area(DEFAULT_AREA);","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"LimZiJia"},"content":"        bookingList \u003d new BookingList();","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"LimZiJia"},"content":"     * Sets the {@code Type} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"LimZiJia"},"content":"    public PersonBuilder withType(String type) {","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"LimZiJia"},"content":"        this.type \u003d new Type(type);","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"LimZiJia"},"content":"        return this;","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"LimZiJia"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"LimZiJia"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"LimZiJia"},"content":"     * Sets the {@code HousekeepingDetails} of the {@code Person} that we are building.","lastModifiedDate":"2024-04-04"},{"lineNumber":119,"author":{"gitId":"LimZiJia"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"LimZiJia"},"content":"    public PersonBuilder withHousekeepingDetails(HousekeepingDetails housekeepingDetails) {","lastModifiedDate":"2024-04-04"},{"lineNumber":121,"author":{"gitId":"LimZiJia"},"content":"        this.housekeepingDetails \u003d housekeepingDetails;","lastModifiedDate":"2024-04-04"},{"lineNumber":122,"author":{"gitId":"LimZiJia"},"content":"        return this;","lastModifiedDate":"2024-04-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":125,"author":{"gitId":"LimZiJia"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"GERARDJM018"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"GERARDJM018"},"content":"     * Returns either client or housekeeper with the given data","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"GERARDJM018"},"content":"     * based on the {@code Type}.","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"GERARDJM018"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":131,"author":{"gitId":"LimZiJia"},"content":"        switch (type.toString()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"LimZiJia"},"content":"        case \"client\":","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"GERARDJM018"},"content":"            return new Client(name, phone, email, address, tags, housekeepingDetails, area);","lastModifiedDate":"2024-04-05"},{"lineNumber":134,"author":{"gitId":"LimZiJia"},"content":"        case \"housekeeper\":","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"GERARDJM018"},"content":"            return new Housekeeper(name, phone, email, address, tags, area, bookingList);","lastModifiedDate":"2024-04-05"},{"lineNumber":136,"author":{"gitId":"LimZiJia"},"content":"        default:","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"LimZiJia"},"content":"            return null;","lastModifiedDate":"2024-03-19"},{"lineNumber":138,"author":{"gitId":"LimZiJia"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"LimZiJia":46,"-":88,"GERARDJM018":6}},{"path":"src/test/java/housekeeping/hub/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.testutil;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_AREA;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_DETAILS;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.AddClientCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.AddHousekeeperCommand;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-04-05"},{"lineNumber":16,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Housekeeper;","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"GERARDJM018"},"content":"import housekeeping.hub.model.person.HousekeepingDetails;","lastModifiedDate":"2024-04-06"},{"lineNumber":19,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.tag.Tag;","lastModifiedDate":"2024-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"gosongying"},"content":"    public static String getAddClientCommand(Client client) {","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"GERARDJM018"},"content":"        return AddClientCommand.COMMAND_WORD + \" client \" + getClientDetails(client);","lastModifiedDate":"2024-04-06"},{"lineNumber":27,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"gosongying"},"content":"    public static String getAddHousekeeperCommand(Housekeeper housekeeper) {","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"gosongying"},"content":"        return AddHousekeeperCommand.COMMAND_WORD + \" \" + getHousekeeperDetails(housekeeper);","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"gosongying"},"content":"     * Returns the part of command string for the given {@code client}\u0027s details.","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"gosongying"},"content":"    public static String getClientDetails(Client client) {","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"gosongying"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"gosongying"},"content":"        sb.append(PREFIX_NAME + client.getName().fullName + \" \");","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"gosongying"},"content":"        sb.append(PREFIX_PHONE + client.getPhone().value + \" \");","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"gosongying"},"content":"        sb.append(PREFIX_EMAIL + client.getEmail().value + \" \");","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"gosongying"},"content":"        sb.append(PREFIX_ADDRESS + client.getAddress().value + \" \");","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"gosongying"},"content":"        sb.append(PREFIX_AREA + client.getArea().value + \" \");","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"gosongying"},"content":"        client.getTags().stream().forEach(","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"gosongying"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"gosongying"},"content":"        );","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"GERARDJM018"},"content":"        String[] hD \u003d HousekeepingDetails.makeStoredDetailsReadable(client.getDetails().toString()).split(\"\\n\");","lastModifiedDate":"2024-04-06"},{"lineNumber":47,"author":{"gitId":"GERARDJM018"},"content":"        String lHD \u003d hD[0].split(\" \")[2];","lastModifiedDate":"2024-04-06"},{"lineNumber":48,"author":{"gitId":"GERARDJM018"},"content":"        String pI \u003d hD[1].split(\" \")[2] + \" \" + hD[1].split(\" \")[3];","lastModifiedDate":"2024-04-06"},{"lineNumber":49,"author":{"gitId":"GERARDJM018"},"content":"        sb.append(PREFIX_DETAILS + lHD + \" \" + pI);","lastModifiedDate":"2024-04-06"},{"lineNumber":50,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"gosongying"},"content":"        return sb.toString();","lastModifiedDate":"2024-04-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":55,"author":{"gitId":"gosongying"},"content":"     * Returns the part of command string for the given {@code housekeeper}\u0027s details.","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":57,"author":{"gitId":"gosongying"},"content":"    public static String getHousekeeperDetails(Housekeeper housekeeper) {","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"gosongying"},"content":"        sb.append(PREFIX_NAME + housekeeper.getName().fullName + \" \");","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"gosongying"},"content":"        sb.append(PREFIX_PHONE + housekeeper.getPhone().value + \" \");","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"gosongying"},"content":"        sb.append(PREFIX_EMAIL + housekeeper.getEmail().value + \" \");","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"gosongying"},"content":"        sb.append(PREFIX_ADDRESS + housekeeper.getAddress().value + \" \");","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"gosongying"},"content":"        sb.append(PREFIX_AREA + housekeeper.getArea().value + \" \");","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"gosongying"},"content":"        housekeeper.getTags().stream().forEach(","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":67,"author":{"gitId":"gosongying"},"content":"        sb.append(PREFIX_DETAILS + housekeeper.getDetails().toString());","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":81,"author":{"gitId":"gosongying"},"content":"        descriptor.getArea().ifPresent(area -\u003e sb.append(PREFIX_AREA).append(area.value).append(\" \"));","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":92,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"LimZiJia":14,"gosongying":30,"-":42,"GERARDJM018":7}},{"path":"src/test/java/housekeeping/hub/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.testutil;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimZiJia":1,"-":71}},{"path":"src/test/java/housekeeping/hub/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.testutil;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.index.Index;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.Model;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Person;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"gosongying"},"content":"     * Returns the middle index of the client in the {@code model}\u0027s client list.","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"gosongying"},"content":"    public static Index getMidClientIndex(Model model) {","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"gosongying"},"content":"        return Index.fromOneBased(model.getFilteredClientList().size() / 2);","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"gosongying"},"content":"     * Returns the middle index of the housekeeper in the {@code model}\u0027s housekeeper list.","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"gosongying"},"content":"    public static Index getMidHousekeeperIndex(Model model) {","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"gosongying"},"content":"        return Index.fromOneBased(model.getFilteredHousekeeperList().size() / 2);","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"gosongying"},"content":"     * Returns the last index of the client in the {@code model}\u0027s client list.","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"gosongying"},"content":"    public static Index getLastClientIndex(Model model) {","lastModifiedDate":"2024-04-04"},{"lineNumber":53,"author":{"gitId":"gosongying"},"content":"        return Index.fromOneBased(model.getFilteredClientList().size());","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"gosongying"},"content":"     * Returns the last index of the housekeeper in the {@code model}\u0027s housekeeper list.","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"gosongying"},"content":"    public static Index getLastHousekeeperIndex(Model model) {","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"gosongying"},"content":"        return Index.fromOneBased(model.getFilteredHousekeeperList().size());","lastModifiedDate":"2024-04-04"},{"lineNumber":61,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"gosongying"},"content":"     * Returns the client in the {@code model}\u0027s client list at {@code index}.","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"gosongying"},"content":"    public static Person getClient(Model model, Index index) {","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"gosongying"},"content":"        return model.getFilteredClientList().get(index.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"gosongying"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":69,"author":{"gitId":"gosongying"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":70,"author":{"gitId":"gosongying"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"gosongying"},"content":"     * Returns the housekeeper in the {@code model}\u0027s housekeeper list at {@code index}.","lastModifiedDate":"2024-04-04"},{"lineNumber":72,"author":{"gitId":"gosongying"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":73,"author":{"gitId":"gosongying"},"content":"    public static Person getHousekeeper(Model model, Index index) {","lastModifiedDate":"2024-04-04"},{"lineNumber":74,"author":{"gitId":"gosongying"},"content":"        return model.getFilteredHousekeeperList().get(index.getZeroBased());","lastModifiedDate":"2024-04-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"LimZiJia":4,"gosongying":30,"-":42}},{"path":"src/test/java/housekeeping/hub/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.testutil;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.commons.core.index.Index;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"LimZiJia":2,"-":10}},{"path":"src/test/java/housekeeping/hub/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.testutil;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_AREA_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_AREA_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":8,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":9,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":11,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2024-04-05"},{"lineNumber":12,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-04-05"},{"lineNumber":13,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-04-05"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.AddressBook;","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Client;","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.model.person.Housekeeper;","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"gosongying"},"content":"    public static final Client ALICE \u003d new ClientBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"GERARDJM018"},"content":"            .withPhone(\"94351253\").withTags(\"friends\").withArea(\"west\").build();","lastModifiedDate":"2024-04-05"},{"lineNumber":32,"author":{"gitId":"GERARDJM018"},"content":"    public static final Client BENSON \u003d new ClientBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2024-04-05"},{"lineNumber":33,"author":{"gitId":"GERARDJM018"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2024-04-05"},{"lineNumber":34,"author":{"gitId":"GERARDJM018"},"content":"            .withTags(\"owesMoney\", \"friends\").withArea(\"east\").build();","lastModifiedDate":"2024-04-05"},{"lineNumber":35,"author":{"gitId":"GERARDJM018"},"content":"    public static final Client CARL \u003d new ClientBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2024-04-05"},{"lineNumber":36,"author":{"gitId":"GERARDJM018"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withArea(\"south\").build();","lastModifiedDate":"2024-04-05"},{"lineNumber":37,"author":{"gitId":"GERARDJM018"},"content":"    public static final Client DANIEL \u003d new ClientBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2024-04-05"},{"lineNumber":38,"author":{"gitId":"GERARDJM018"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").withArea(\"north\").build();","lastModifiedDate":"2024-04-05"},{"lineNumber":39,"author":{"gitId":"GERARDJM018"},"content":"    public static final Housekeeper ELLE \u003d new HousekeeperBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2024-04-05"},{"lineNumber":40,"author":{"gitId":"GERARDJM018"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withArea(\"southeast\").build();","lastModifiedDate":"2024-04-05"},{"lineNumber":41,"author":{"gitId":"GERARDJM018"},"content":"    public static final Housekeeper FIONA \u003d new HousekeeperBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2024-04-05"},{"lineNumber":42,"author":{"gitId":"GERARDJM018"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withArea(\"northwest\").build();","lastModifiedDate":"2024-04-05"},{"lineNumber":43,"author":{"gitId":"GERARDJM018"},"content":"    public static final Housekeeper GEORGE \u003d new HousekeeperBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2024-04-05"},{"lineNumber":44,"author":{"gitId":"GERARDJM018"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withArea(\"southwest\").build();","lastModifiedDate":"2024-04-05"},{"lineNumber":45,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":48,"author":{"gitId":"GERARDJM018"},"content":"    public static final Client HOON \u003d new ClientBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2024-04-05"},{"lineNumber":49,"author":{"gitId":"GERARDJM018"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withArea(\"west\").build();","lastModifiedDate":"2024-04-05"},{"lineNumber":50,"author":{"gitId":"GERARDJM018"},"content":"    public static final Housekeeper IDA \u003d new HousekeeperBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2024-04-05"},{"lineNumber":51,"author":{"gitId":"GERARDJM018"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withArea(\"east\").build();","lastModifiedDate":"2024-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":54,"author":{"gitId":"GERARDJM018"},"content":"    public static final Client AMY \u003d new ClientBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2024-04-05"},{"lineNumber":55,"author":{"gitId":"moguries"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"GERARDJM018"},"content":"            .withArea(VALID_AREA_AMY).build();","lastModifiedDate":"2024-04-05"},{"lineNumber":57,"author":{"gitId":"GERARDJM018"},"content":"    public static final Housekeeper BOB \u003d new HousekeeperBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"GERARDJM018"},"content":"            .withArea(VALID_AREA_BOB).build();","lastModifiedDate":"2024-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":70,"author":{"gitId":"GERARDJM018"},"content":"        for (Client client : getTypicalClients()) {","lastModifiedDate":"2024-04-05"},{"lineNumber":71,"author":{"gitId":"GERARDJM018"},"content":"            ab.addClient(client);","lastModifiedDate":"2024-04-05"},{"lineNumber":72,"author":{"gitId":"GERARDJM018"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":73,"author":{"gitId":"GERARDJM018"},"content":"        for (Housekeeper housekeeper : getTypicalHousekeepers()) {","lastModifiedDate":"2024-04-05"},{"lineNumber":74,"author":{"gitId":"GERARDJM018"},"content":"            ab.addHousekeeper(housekeeper);","lastModifiedDate":"2024-04-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":79,"author":{"gitId":"GERARDJM018"},"content":"    public static List\u003cClient\u003e getTypicalClients() {","lastModifiedDate":"2024-04-05"},{"lineNumber":80,"author":{"gitId":"GERARDJM018"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL));","lastModifiedDate":"2024-04-05"},{"lineNumber":81,"author":{"gitId":"GERARDJM018"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":82,"author":{"gitId":"GERARDJM018"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":83,"author":{"gitId":"GERARDJM018"},"content":"    public static List\u003cHousekeeper\u003e getTypicalHousekeepers() {","lastModifiedDate":"2024-04-05"},{"lineNumber":84,"author":{"gitId":"GERARDJM018"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ELLE, FIONA, GEORGE));","lastModifiedDate":"2024-04-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"LimZiJia":16,"moguries":1,"gosongying":1,"-":34,"GERARDJM018":34}},{"path":"src/test/java/housekeeping/hub/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.ui;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!(other instanceof TestFxmlObject)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        TestFxmlObject otherTestFxmlObject \u003d (TestFxmlObject) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Objects.equals(text, otherTestFxmlObject.text);","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"LimZiJia":1,"-":44}},{"path":"src/test/java/housekeeping/hub/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"LimZiJia"},"content":"package housekeeping.hub.ui;","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"LimZiJia"},"content":"import static housekeeping.hub.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"LimZiJia"},"content":"import housekeeping.hub.MainApp;","lastModifiedDate":"2024-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"LimZiJia":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"\u003c?import housekeeping.hub.ui.TestFxmlObject?\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"LimZiJia":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"LimZiJia"},"content":"\u003cfx:root type\u003d\"housekeeping.hub.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"LimZiJia":1,"-":5}}]
