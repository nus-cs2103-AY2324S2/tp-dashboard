[{"path":".github/ISSUE_TEMPLATE/bug_report.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"name: Bug report","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"about: Create a report to help us improve","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"title: \u0027\u0027","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"labels: \u0027\u0027","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"assignees: \u0027\u0027","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"**Describe the bug**","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"A clear and concise description of what the bug is.","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"**To Reproduce**","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"Steps to reproduce the behavior:","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"1. Go to \u0027...\u0027","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"2. Click on \u0027....\u0027","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"3. Scroll down to \u0027....\u0027","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"4. See error","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"**Expected behavior**","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"A clear and concise description of what you expected to happen.","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"**Screenshots**","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"If applicable, add screenshots to help explain your problem.","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"**Desktop (please complete the following information):**","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":" - OS: [e.g. iOS]","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":" - Browser [e.g. chrome, safari]","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":" - Version [e.g. 22]","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"**Additional context**","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"Add any other context about the problem here.","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"bachletuankhai":32}},{"path":".github/ISSUE_TEMPLATE/feature_request.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"name: Feature request","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"about: Suggest an idea for this project","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"title: \u0027\u0027","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"labels: \u0027\u0027","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"assignees: \u0027\u0027","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"**Is your feature request related to a problem? Please describe.**","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"A clear and concise description of what the problem is. Ex. I\u0027m always frustrated when [...]","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"**Describe the solution you\u0027d like**","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"A clear and concise description of what you want to happen.","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"**Describe alternatives you\u0027ve considered**","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"A clear and concise description of any alternative solutions or features you\u0027ve considered.","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"**Additional context**","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"Add any other context or screenshots about the feature request here.","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"bachletuankhai":20}},{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-F12-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-F12-4/tp/actions)","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-F12-4/tp/graph/badge.svg?token\u003dGBDKPFRKM5)](https://codecov.io/gh/AY2324S2-CS2103T-F12-4/tp)","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"* This is **a CS2103T team project for NUS Software Engineering (SE) students**.\u003cbr\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  * as a starting point of a course project (as opposed to writing everything from scratch)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  * as a case study","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"* The project simulates an ongoing software project for a desktop application (called _HackLink_) used for managing contact details of Hackathon participants and sponsors.","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"  * It is CLI based, so this is highly practical and efficient to use for hackathon organisers. ","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"* It is named `HackLink` because this app acts as a useful link between hackathon organiser and other participants.","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"* For the detailed documentation of this project, see the **[HackLink Website](https://github.com/AY2324S2-CS2103T-F12-4/tp)**.","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"dhlee03":8,"-":8}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"dhlee03"},"content":"run {","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"dhlee03"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"dhlee03":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"julia-cp"},"content":"# About Us","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"julia-cp"},"content":"**HackLink** - a java application that help Student Hackathon organizers seamlessly handle participant, ","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"julia-cp"},"content":"staff, and sponsor details, ensuring every event runs smoothly.","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"julia-cp"},"content":"Tutor: Tan Wei Zhe","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"julia-cp"},"content":"### Bach Le Tuan Khai","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"julia-cp"},"content":"\u003cimg src\u003d\"images/bachletuankhai.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"julia-cp"},"content":"[[github](https://github.com/bachletuankhai)]","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"julia-cp"},"content":"* Role: Developer","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"julia-cp"},"content":"* Responsibilities: Model","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"julia-cp"},"content":"### Julia Christy Purba","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"julia-cp"},"content":"\u003cimg src\u003d\"images/julia-cp.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"julia-cp"},"content":"[[github](https://github.com/julia-cp)]","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"julia-cp"},"content":"### Lee Donghyun","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"julia-cp"},"content":"\u003cimg src\u003d\"images/dhlee03.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"julia-cp"},"content":"[[github](https://github.com/dhlee03)]","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"julia-cp"},"content":"### Premakumar Meenu Lekha","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"julia-cp"},"content":"\u003cimg src\u003d\"images/meenulekha.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"julia-cp"},"content":"[[github](https://github.com/meenulekha)]","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"julia-cp"},"content":"* Responsibilities: Storage","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"julia-cp":21,"-":30}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"- Table of Contents","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"The **_Architecture Diagram_** given above explains the high-level design of the App.","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"- At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"- At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"- [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"- [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"- [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"- [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"- defines its _API_ in an `interface` with the same name as the Component.","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"- implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"bachletuankhai"},"content":"- executes user commands using the `Logic` component.","lastModifiedDate":"2024-03-12"},{"lineNumber":85,"author":{"gitId":"bachletuankhai"},"content":"- listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2024-03-12"},{"lineNumber":86,"author":{"gitId":"bachletuankhai"},"content":"- keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"bachletuankhai"},"content":"- depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"bachletuankhai"},"content":"- When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"bachletuankhai"},"content":"- All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2024-03-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"bachletuankhai"},"content":"- stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2024-03-12"},{"lineNumber":130,"author":{"gitId":"bachletuankhai"},"content":"- stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2024-03-12"},{"lineNumber":131,"author":{"gitId":"bachletuankhai"},"content":"- stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2024-03-12"},{"lineNumber":132,"author":{"gitId":"bachletuankhai"},"content":"- does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2024-03-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":148,"author":{"gitId":"bachletuankhai"},"content":"- can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2024-03-12"},{"lineNumber":149,"author":{"gitId":"bachletuankhai"},"content":"- inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2024-03-12"},{"lineNumber":150,"author":{"gitId":"bachletuankhai"},"content":"- depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2024-03-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-03-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"bachletuankhai"},"content":"- `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2024-03-12"},{"lineNumber":169,"author":{"gitId":"bachletuankhai"},"content":"- `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2024-03-12"},{"lineNumber":170,"author":{"gitId":"bachletuankhai"},"content":"- `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2024-03-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"bachletuankhai"},"content":"- **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":237,"author":{"gitId":"bachletuankhai"},"content":"  - Pros: Easy to implement.","lastModifiedDate":"2024-03-12"},{"lineNumber":238,"author":{"gitId":"bachletuankhai"},"content":"  - Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2024-03-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"bachletuankhai"},"content":"- **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2024-03-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"bachletuankhai"},"content":"  - Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2024-03-12"},{"lineNumber":243,"author":{"gitId":"bachletuankhai"},"content":"  - Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2024-03-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-03-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"bachletuankhai"},"content":"- [Documentation guide](Documentation.md)","lastModifiedDate":"2024-03-12"},{"lineNumber":256,"author":{"gitId":"bachletuankhai"},"content":"- [Testing guide](Testing.md)","lastModifiedDate":"2024-03-12"},{"lineNumber":257,"author":{"gitId":"bachletuankhai"},"content":"- [Logging guide](Logging.md)","lastModifiedDate":"2024-03-12"},{"lineNumber":258,"author":{"gitId":"bachletuankhai"},"content":"- [Configuration guide](Configuration.md)","lastModifiedDate":"2024-03-12"},{"lineNumber":259,"author":{"gitId":"bachletuankhai"},"content":"- [DevOps guide](DevOps.md)","lastModifiedDate":"2024-03-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-03-12"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"bachletuankhai"},"content":"**Target user profile**: A student hackathon organizer who,","lastModifiedDate":"2024-03-12"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"bachletuankhai"},"content":"- has a need to manage a significant number of contacts","lastModifiedDate":"2024-03-12"},{"lineNumber":270,"author":{"gitId":"bachletuankhai"},"content":"- prefer desktop apps over other types","lastModifiedDate":"2024-03-12"},{"lineNumber":271,"author":{"gitId":"bachletuankhai"},"content":"- can type fast","lastModifiedDate":"2024-03-12"},{"lineNumber":272,"author":{"gitId":"bachletuankhai"},"content":"- prefers typing to mouse interactions","lastModifiedDate":"2024-03-12"},{"lineNumber":273,"author":{"gitId":"bachletuankhai"},"content":"- is reasonably comfortable using CLI apps","lastModifiedDate":"2024-03-12"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"bachletuankhai"},"content":"**Value proposition**: Manage participant contacts, staff information \u0026 sponsor contacts, schedule event logistics, and , offering a dedicated tool to optimize hackathon planning. Optimized for user preferring CLI.","lastModifiedDate":"2024-03-12"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"| Priority | As a …​                     | I want to …​                                     | So that I can…​                                              |","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"bachletuankhai"},"content":"| -------- | --------------------------- | ------------------------------------------------ | ------------------------------------------------------------ |","lastModifiedDate":"2024-03-12"},{"lineNumber":283,"author":{"gitId":"meenulekha"},"content":"| `* * *`  | Student Hackathon Organizer | Add new participants to the contact managing app | Have a centralized database of all hackathon attendees.      |","lastModifiedDate":"2024-03-07"},{"lineNumber":284,"author":{"gitId":"meenulekha"},"content":"| `* * *`  | Student Hackathon Organizer | Update and edit participant contact details      | Ensure accurate and up-to-date information.                  |","lastModifiedDate":"2024-03-07"},{"lineNumber":285,"author":{"gitId":"meenulekha"},"content":"| `* * *`  | Student Hackathon Organizer | Add notes or comments to contact                 | Provide additional context or reminders for each contact.    |","lastModifiedDate":"2024-03-07"},{"lineNumber":286,"author":{"gitId":"meenulekha"},"content":"| `* * *`  | Student Hackathon Organizer | View contact count in the database               | Know the number of participants, staff, etc. in the event    |","lastModifiedDate":"2024-03-07"},{"lineNumber":287,"author":{"gitId":"meenulekha"},"content":"| `* * *`  | Student Hackathon Organizer | List out members                                 | See all the members in one go                                |","lastModifiedDate":"2024-03-07"},{"lineNumber":288,"author":{"gitId":"meenulekha"},"content":"| `* * *`  | Student Hackathon Organizer | Remove specific participants                     | remove participants who signed up but unable to participate. |","lastModifiedDate":"2024-03-07"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"bachletuankhai"},"content":"_{More to be added}_","lastModifiedDate":"2024-03-12"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"meenulekha"},"content":"**Use case: Add a Contact**","lastModifiedDate":"2024-03-07"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"meenulekha"},"content":"1. User requests to add a new contact.","lastModifiedDate":"2024-03-07"},{"lineNumber":301,"author":{"gitId":"meenulekha"},"content":"2. System prompts for contact details: name, email, phone, category.","lastModifiedDate":"2024-03-07"},{"lineNumber":302,"author":{"gitId":"meenulekha"},"content":"3. User provides valid information.","lastModifiedDate":"2024-03-07"},{"lineNumber":303,"author":{"gitId":"meenulekha"},"content":"4. System validates input and adds the contact to the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":304,"author":{"gitId":"meenulekha"},"content":"5. System displays a success message.","lastModifiedDate":"2024-03-07"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"meenulekha"},"content":"3a. Invalid input provided.","lastModifiedDate":"2024-03-07"},{"lineNumber":311,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":312,"author":{"gitId":"meenulekha"},"content":"- System displays an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":313,"author":{"gitId":"meenulekha"},"content":"- Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":314,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":315,"author":{"gitId":"meenulekha"},"content":"**Use case: View Participant List**","lastModifiedDate":"2024-03-07"},{"lineNumber":316,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":317,"author":{"gitId":"meenulekha"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":318,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":319,"author":{"gitId":"meenulekha"},"content":"1. User requests to view the list of all participants.","lastModifiedDate":"2024-03-07"},{"lineNumber":320,"author":{"gitId":"meenulekha"},"content":"2. System displays the list with relevant information.","lastModifiedDate":"2024-03-07"},{"lineNumber":321,"author":{"gitId":"meenulekha"},"content":"3. System shows the total count of participants.","lastModifiedDate":"2024-03-07"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"meenulekha"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":326,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":327,"author":{"gitId":"meenulekha"},"content":"**Use case:Update Participant Contact Details**","lastModifiedDate":"2024-03-07"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"meenulekha"},"content":"1. User requests to update contact details for a specific participant.","lastModifiedDate":"2024-03-07"},{"lineNumber":332,"author":{"gitId":"meenulekha"},"content":"2. System prompts for the participant\u0027s name and the field to update.","lastModifiedDate":"2024-03-07"},{"lineNumber":333,"author":{"gitId":"meenulekha"},"content":"3. User provides valid information.","lastModifiedDate":"2024-03-07"},{"lineNumber":334,"author":{"gitId":"meenulekha"},"content":"4. System validates input and updates the contact details.","lastModifiedDate":"2024-03-07"},{"lineNumber":335,"author":{"gitId":"meenulekha"},"content":"5. System displays a success message.","lastModifiedDate":"2024-03-07"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":337,"author":{"gitId":"meenulekha"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":339,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":340,"author":{"gitId":"meenulekha"},"content":"3a. Invalid input provided.","lastModifiedDate":"2024-03-07"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":342,"author":{"gitId":"meenulekha"},"content":"- System displays an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":343,"author":{"gitId":"meenulekha"},"content":"- Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":345,"author":{"gitId":"meenulekha"},"content":"**Use case: Comment**","lastModifiedDate":"2024-03-07"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":347,"author":{"gitId":"meenulekha"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":349,"author":{"gitId":"meenulekha"},"content":"1. User requests to add notes or comments to a participant.","lastModifiedDate":"2024-03-07"},{"lineNumber":350,"author":{"gitId":"meenulekha"},"content":"2. System prompts for the participant\u0027s name and the notes.","lastModifiedDate":"2024-03-07"},{"lineNumber":351,"author":{"gitId":"meenulekha"},"content":"3. User provides notes.","lastModifiedDate":"2024-03-07"},{"lineNumber":352,"author":{"gitId":"meenulekha"},"content":"4. System adds the notes to the participant\u0027s profile.","lastModifiedDate":"2024-03-07"},{"lineNumber":353,"author":{"gitId":"meenulekha"},"content":"5. System displays a success message.","lastModifiedDate":"2024-03-07"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":355,"author":{"gitId":"meenulekha"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":357,"author":{"gitId":"meenulekha"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":358,"author":{"gitId":"meenulekha"},"content":"3a. No notes provided.","lastModifiedDate":"2024-03-07"},{"lineNumber":359,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":360,"author":{"gitId":"meenulekha"},"content":"- System displays an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":361,"author":{"gitId":"meenulekha"},"content":"- Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":362,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":363,"author":{"gitId":"meenulekha"},"content":"**Use case: Remove Participant**","lastModifiedDate":"2024-03-07"},{"lineNumber":364,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":365,"author":{"gitId":"meenulekha"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":366,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":367,"author":{"gitId":"meenulekha"},"content":"1. User requests to remove a specific participant.","lastModifiedDate":"2024-03-07"},{"lineNumber":368,"author":{"gitId":"meenulekha"},"content":"2. System prompts for the participant\u0027s ID.","lastModifiedDate":"2024-03-07"},{"lineNumber":369,"author":{"gitId":"meenulekha"},"content":"3. User provides the ID.","lastModifiedDate":"2024-03-07"},{"lineNumber":370,"author":{"gitId":"meenulekha"},"content":"4. System deletes the participant.","lastModifiedDate":"2024-03-07"},{"lineNumber":371,"author":{"gitId":"meenulekha"},"content":"5. System displays a success message.","lastModifiedDate":"2024-03-07"},{"lineNumber":372,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":373,"author":{"gitId":"meenulekha"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":374,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":375,"author":{"gitId":"meenulekha"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":376,"author":{"gitId":"meenulekha"},"content":"3a. Participant not found.","lastModifiedDate":"2024-03-07"},{"lineNumber":377,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":378,"author":{"gitId":"meenulekha"},"content":"- System displays an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":379,"author":{"gitId":"meenulekha"},"content":"- Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"bachletuankhai"},"content":"3.  The application should be designed to scale gracefully, accommodating an increase in the number of participants or contacts without significant degradation in performance.","lastModifiedDate":"2024-03-12"},{"lineNumber":386,"author":{"gitId":"bachletuankhai"},"content":"4.  The codebase should follow best practices and be well-documented to facilitate future maintenance and updates by developers.","lastModifiedDate":"2024-03-12"},{"lineNumber":387,"author":{"gitId":"bachletuankhai"},"content":"5.  The system should provide clear and user-friendly error messages for invalid inputs or failed operations, aiding users in understanding and resolving issues.","lastModifiedDate":"2024-03-12"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"bachletuankhai"},"content":"- **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-03-12"},{"lineNumber":392,"author":{"gitId":"bachletuankhai"},"content":"- \\*\\*Java 11: A version of the Java programming language and runtime environment, required for running the application","lastModifiedDate":"2024-03-12"},{"lineNumber":393,"author":{"gitId":"bachletuankhai"},"content":"- \\*\\*Participant: An individual registered to participate in the hackathon","lastModifiedDate":"2024-03-12"},{"lineNumber":394,"author":{"gitId":"bachletuankhai"},"content":"- \\*\\*ID: A unique identifier assigned to each participant in the system","lastModifiedDate":"2024-03-12"},{"lineNumber":395,"author":{"gitId":"bachletuankhai"},"content":"-","lastModifiedDate":"2024-03-12"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-03-12"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"      Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"meenulekha":64,"bachletuankhai":71,"-":313}},{"path":"docs/Documentation.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Documentation guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"**Setting up and maintaining the project website:**","lastModifiedDate":"2020-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"- We use [**Jekyll**](https://jekyllrb.com/) to manage documentation.","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"- The `docs/` folder is used for documentation.","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"- To learn how set it up and maintain the project website, follow the guide [_[se-edu/guides] **Using Jekyll for project documentation**_](https://se-education.org/guides/tutorials/jekyll.html).","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"- Note these points when adapting the documentation to a different project/product:","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"  - The \u0027Site-wide settings\u0027 section of the page linked above has information on how to update site-wide elements such as the top navigation bar.","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"  - :bulb: In addition to updating content files, you might have to update the config files `docs\\_config.yml` and `docs\\_sass\\minima\\_base.scss` (which contains a reference to `HackLink` that comes into play when converting documentation pages to PDF format).","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"- If you are using Intellij for editing documentation files, you can consider enabling \u0027soft wrapping\u0027 for `*.md` files, as explained in [_[se-edu/guides] **Intellij IDEA: Useful settings**_](https://se-education.org/guides/tutorials/intellijUsefulSettings.html#enabling-soft-wrapping)","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Style guidance:**","lastModifiedDate":"2020-06-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"- Follow the [**_Google developer documentation style guide_**](https://developers.google.com/style).","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"- Also relevant is the [_[se-edu/guides] **Markdown coding standard**_](https://se-education.org/guides/conventions/markdown.html)","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"**Diagrams:**","lastModifiedDate":"2020-06-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"- See the [_[se-edu/guides] **Using PlantUML**_](https://se-education.org/guides/tutorials/plantUml.html)","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Converting a document to the PDF format:**","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"- See the guide [_[se-edu/guides] **Saving web documents as PDF files**_](https://se-education.org/guides/tutorials/savingPdf.html)","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"bachletuankhai":11,"-":17}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"WELCOME TO HACKLINK!","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"The Hackathon Participant Management Application is designed to help organizers efficiently manage participant information for hackathons. With features such as finding, sorting, adding, and deleting participants, you can streamline the process of organizing and coordinating your hackathon event.","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"1. [Quick start](#quick-start)","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"2. [Features](#features)","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"    - [Viewing help](#viewing-help--help)","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"    - [Adding a person](#adding-a-person--add)","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"    - [Listing all persons](#listing-all-persons--list)","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"    - [Editing a person](#editing-a-person--update)","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"    - [Comment](#comment--comment)","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"    - [Locating persons by name](#locating-persons-by-name--find)","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"    - [Removing a person](#removing-a-person--remove)","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"    - [Clearing all entries](#clearing-all-entries--clear)","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"    - [Exiting the program](#exiting-the-program--exit)","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"    - [Saving the data](#saving-the-data)","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"    - [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"    - [Archiving data files (coming in v2.0)](#archiving-data-files-coming-in-v20)","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"3. [FAQ](#faq)","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"4. [Warnings](#warnings)","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"5. [Known issues](#known-issues)","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"6. [Tips](#tips)","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"7. [Command summary](#command-summary)","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"1. Download the latest `HackLink.jar` from [here](link to release).","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your HakcLink application.","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar HackLink.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"   * `add n/John Doe p/98765432 e/johndoe@gmail.com c/participant` : Adds a person named `John Doe` to HackLink.","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"   * `Remove 3` : Deletes the 3rd person shown in the current list.","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"     ","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"   * `Update update John Dow /number 89898989` : Updates the information of the person named \"John Doe\"","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"  ","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"   * `Comment John Doe`","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"   * `clear` : Deletes all contact information.","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"meenulekha"},"content":"  e.g. `[c/CATEGORY]…​` can be used as ` ` (i.e. 0 times), `c/staff`, `c/sponsor` etc.","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"meenulekha"},"content":"![help message](images/helpMessageHackLink.png)","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"meenulekha"},"content":"Adds a person to HackLink.","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"dhlee03"},"content":"Format: `add n/\u003cname\u003e, e/\u003cemail\u003e, p/\u003cphone\u003e, a/\u003caddress\u003e, c/\u003ccategory\u003e`","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"meenulekha"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb:","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"dhlee03"},"content":"* `add n/John Doe e/johnd@example.com p/98765432, a/Kent Ridge c/participant`","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"dhlee03"},"content":"* `add n/Betsy Crowe e/betsycrowe@example.com p/1234567, a/Clementi ,c/sponsor`","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"dhlee03"},"content":"\u003cspan style\u003d\"color:orange; font-weight:bold\"\u003eCautions / Warnings for Add:\u003c/span\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"dhlee03"},"content":"* There should be no \u003cspan style\u003d\"color:yellow\"\u003e“/”\u003c/span\u003e in each parameter.","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"dhlee03"},"content":"* There should be no contacts with the \u003cspan style\u003d\"color:yellow\"\u003esame information\u003c/span\u003e.","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"dhlee03"},"content":"* Category should be one of \u003cspan style\u003d\"color:yellow\"\u003eParticipant, Sponsor, and Staff\u003c/span\u003e.","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"meenulekha"},"content":"Shows a list of all persons in HackLink. ","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"meenulekha"},"content":"Example: `Total: \u003ctotal number of data\u003e`","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"meenulekha"},"content":"         The table will show all the data","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"meenulekha"},"content":"### Editing a person : `update`","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"meenulekha"},"content":"Update and edit participant contact details.","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"meenulekha"},"content":"Format: `update \u003cname\u003e /\u003cfield that needs update\u003e \u003cnew value\u003e`","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"meenulekha"},"content":"Acceptable values for each parameter","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"meenulekha"},"content":"* `\u003cname\u003e`: case insensitive alphabetic characters, spaces.","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"meenulekha"},"content":"* `\u003cfield\u003e`: name, email, phone, category.","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"meenulekha"},"content":"* `\u003cnew value\u003e`: follow the format of its field.","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"dhlee03"},"content":"\u003cspan style\u003d\"color:orange; font-weight:bold\"\u003eCautions / Warnings for Edit:\u003c/span\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"dhlee03"},"content":"* There should be no \u003cspan style\u003d\"color:yellow\"\u003e“/”\u003c/span\u003e in each parameter. ","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"dhlee03"},"content":"* There should be only \u003cspan style\u003d\"color:yellow\"\u003eone field\u003c/span\u003e rather than multiple fields. ","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"dhlee03"},"content":"* Updated information should be \u003cspan style\u003d\"color:yellow\"\u003edifferent\u003c/span\u003e from the original. ","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"meenulekha"},"content":"### Comment: `comment`","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"meenulekha"},"content":"Add notes or comments to contacts","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"meenulekha"},"content":"format `comment \u003cname\u003e, \u003cnotes\u003e`","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"meenulekha"},"content":"Example:","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"meenulekha"},"content":"`comment John, Allergic to peanuts`","lastModifiedDate":"2024-03-18"},{"lineNumber":139,"author":{"gitId":"meenulekha"},"content":"Acceptable values for each parameter","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"meenulekha"},"content":"`\u003cname\u003e`: case insensitive alphabetic characters, spaces.","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"meenulekha"},"content":"`\u003cnote\u003e`: any string","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"meenulekha"},"content":"Precise expected outputs when the command succeeds","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"meenulekha"},"content":"* Your comment “\u003cnote\u003e” on \u003cname\u003e is successfully added.","lastModifiedDate":"2024-03-18"},{"lineNumber":144,"author":{"gitId":"meenulekha"},"content":"Precise expected outputs when the command fails","lastModifiedDate":"2024-03-18"},{"lineNumber":145,"author":{"gitId":"meenulekha"},"content":"* Error: please provide a note to the participant. (when note is not provided)","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"meenulekha"},"content":"  ![result for \u0027find alex david\u0027](images/findJohnDoe.png)","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"meenulekha"},"content":"### Removing a person : `Remove`","lastModifiedDate":"2024-03-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"meenulekha"},"content":"Remove specific participants from the database.","lastModifiedDate":"2024-03-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"meenulekha"},"content":"Format: `remove \u003cid\u003e`","lastModifiedDate":"2024-03-18"},{"lineNumber":171,"author":{"gitId":"meenulekha"},"content":"Example:","lastModifiedDate":"2024-03-18"},{"lineNumber":172,"author":{"gitId":"meenulekha"},"content":"`remove 1`","lastModifiedDate":"2024-03-18"},{"lineNumber":173,"author":{"gitId":"meenulekha"},"content":"Acceptable values for each parameter","lastModifiedDate":"2024-03-18"},{"lineNumber":174,"author":{"gitId":"meenulekha"},"content":"* `\u003cid\u003e`: the id of the contact in the list","lastModifiedDate":"2024-03-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"meenulekha"},"content":"Precise expected outputs when the command succeeds","lastModifiedDate":"2024-03-18"},{"lineNumber":177,"author":{"gitId":"meenulekha"},"content":"* You have successfully deleted \u003ccategory\u003e \u003cname\u003e.","lastModifiedDate":"2024-03-18"},{"lineNumber":178,"author":{"gitId":"meenulekha"},"content":"Example: You have successfully deleted participant John Doe.","lastModifiedDate":"2024-03-18"},{"lineNumber":179,"author":{"gitId":"meenulekha"},"content":"Precise expected outputs when the command fails","lastModifiedDate":"2024-03-18"},{"lineNumber":180,"author":{"gitId":"meenulekha"},"content":"* Error: no contact with id \u003cid\u003e. (when name is not in the list)","lastModifiedDate":"2024-03-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"meenulekha"},"content":"Clears all entries from the database.","lastModifiedDate":"2024-03-20"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"meenulekha"},"content":"HackLink data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-03-20"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":201,"author":{"gitId":"meenulekha"},"content":"HackLink data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2024-03-20"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":204,"author":{"gitId":"meenulekha"},"content":"If your changes to the data file makes its format invalid, HackLink will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":205,"author":{"gitId":"meenulekha"},"content":"Furthermore, certain edits can cause the HackLink to behave in unexpected ways (e.g., if a value entered is outside of the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-03-20"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"meenulekha"},"content":"## Warnings ","lastModifiedDate":"2024-03-20"},{"lineNumber":222,"author":{"gitId":"meenulekha"},"content":"1. **Invalid Command** : When a command format is incorrect or parameters are missing, the application will prompt the user with a warning message.","lastModifiedDate":"2024-03-20"},{"lineNumber":223,"author":{"gitId":"meenulekha"},"content":"2. **Command Failure** : If the person specified for editing or removing does not exist in the database, the application should display a warning message indicating the failure.","lastModifiedDate":"2024-03-20"},{"lineNumber":224,"author":{"gitId":"meenulekha"},"content":"3. **Invalid input for update** : If the input for editing a person\u0027s information is invalid, the application should display a warning message indicating the failure and provide guidance on the correct format.","lastModifiedDate":"2024-03-20"},{"lineNumber":225,"author":{"gitId":"meenulekha"},"content":"   ","lastModifiedDate":"2024-03-20"},{"lineNumber":226,"author":{"gitId":"meenulekha"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-20"},{"lineNumber":227,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":231,"author":{"gitId":"meenulekha"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-20"},{"lineNumber":232,"author":{"gitId":"meenulekha"},"content":"## Tips ","lastModifiedDate":"2024-03-20"},{"lineNumber":233,"author":{"gitId":"meenulekha"},"content":"1. **Use Descriptive Command Names**: You are encouraged to use descriptive names when adding, updating, or removing participants. This makes it easier to identify and manage individuals within the application.","lastModifiedDate":"2024-03-20"},{"lineNumber":234,"author":{"gitId":"meenulekha"},"content":"2. **Utilize Tags for Organization**: Using tags when adding participants to categorize them effectively. For instance, tags like \"participant,\" \"sponsor,\" or \"staff\" can help you quickly filter and manage different groups.","lastModifiedDate":"2024-03-20"},{"lineNumber":235,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":236,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"dhlee03"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS c/CATEGORY [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend c/participant t/colleague`","lastModifiedDate":"2024-03-20"},{"lineNumber":243,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"meenulekha"},"content":"**Remove** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2024-03-18"},{"lineNumber":245,"author":{"gitId":"meenulekha"},"content":"**Update** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2024-03-18"},{"lineNumber":246,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"meenulekha"},"content":"**Comment** | `comment \u003cname\u003e, \u003cnotes\u003e`","lastModifiedDate":"2024-03-18"},{"lineNumber":249,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"dhlee03":14,"meenulekha":89,"-":146}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"body,","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"h1,","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"h2,","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"h3,","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"h4,","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"h5,","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"h6,","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"p,","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"blockquote,","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"pre,","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"hr,","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"dl,","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"dd,","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"ol,","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"ul,","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"figure {","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height}","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"    $base-font-family;","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"h1,","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"h2,","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"h3,","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"h4,","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"h5,","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"h6,","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"p,","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"blockquote,","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"pre,","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"ul,","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"ol,","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"dl,","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"figure,","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"bachletuankhai"},"content":"ul,","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"bachletuankhai"},"content":"ol {","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"bachletuankhai"},"content":"h1,","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"bachletuankhai"},"content":"h2,","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"bachletuankhai"},"content":"h3,","lastModifiedDate":"2024-03-12"},{"lineNumber":120,"author":{"gitId":"bachletuankhai"},"content":"h4,","lastModifiedDate":"2024-03-12"},{"lineNumber":121,"author":{"gitId":"bachletuankhai"},"content":"h5,","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"bachletuankhai"},"content":"h6 {","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"bachletuankhai"},"content":"  i,","lastModifiedDate":"2024-03-12"},{"lineNumber":166,"author":{"gitId":"bachletuankhai"},"content":"  em {","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"bachletuankhai"},"content":"  th,","lastModifiedDate":"2024-03-12"},{"lineNumber":263,"author":{"gitId":"bachletuankhai"},"content":"  td {","lastModifiedDate":"2024-03-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":282,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":288,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":292,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":297,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":298,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":299,"author":{"gitId":"bachletuankhai"},"content":"    content: \"HackLink\";","lastModifiedDate":"2024-03-12"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":301,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"bachletuankhai":44,"-":258}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"Person *--\u003e \"1\"Phone","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"Person *--\u003e \"1\"Email","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"Person *--\u003e \"1\"Address","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"Person *--\u003e \"1\" Category","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"dhlee03":5,"-":17}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"julia-cp"},"content":"Class Category","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"Person *--\u003e \"1\" Phone","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"Person *--\u003e \"1\" Email","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"Person *--\u003e \"1\" Address","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"Person *--\u003e \"1\" Category","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"julia-cp"},"content":"Email -[hidden]right-\u003e Category","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"dhlee03":5,"julia-cp":2,"-":50}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dhlee03":1,"-":185}},{"path":"src/main/java/seedu/address/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"dhlee03"},"content":"     * Appends given string to a file.","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"dhlee03"},"content":"    public static void appendToFile(Path filePath, String csvString) throws IOException {","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"dhlee03"},"content":"        Files.write(filePath, csvString.getBytes(), java.nio.file.StandardOpenOption.APPEND);","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dhlee03":6,"-":83}},{"path":"src/main/java/seedu/address/commons/util/QueueUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":" * Represents a queue that allows random access to its elements.","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":" *","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":" * @param \u003cE\u003e the type of elements in the queue","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"public class QueueUtil\u003cE\u003e implements RandomAccessQueue\u003cE\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"    private final int capacity;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"    private final E[] elements;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"    private int head;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"    private int tail;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"    private int size;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"     * Current traversal index. By default, it is at the tail of the queue.","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"    private int cur;","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"     * Constructs a {@code QueueUtil} with the given capacity.","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"    public QueueUtil(int capacity) {","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"        this.capacity \u003d capacity;","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"        E[] temp \u003d (E[]) new Object[capacity];","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"        this.elements \u003d temp;","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"        this.head \u003d 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"        this.tail \u003d 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"        this.size \u003d 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"        this.cur \u003d 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"    public void addLast(E e) {","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"        if (size \u003d\u003d capacity) {","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"            head \u003d (head + 1) % capacity;","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"        } else {","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"            size++;","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"        elements[tail] \u003d e;","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"        tail \u003d (tail + 1) % capacity;","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"        cur \u003d tail;","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"    public E pollFirst() {","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"            return null;","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"        E result \u003d elements[head];","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"        head \u003d (head + 1) % capacity;","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"        size--;","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"        return result;","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"    public E get(int index) {","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"        if (index \u003c 0 || index \u003e\u003d size) {","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"            throw new IndexOutOfBoundsException(\"Index: \" + index + \", Size: \" + size);","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"        return elements[(head + index) % capacity];","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"    public int size() {","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"        return size;","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"    public E traverseUp() {","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"bachletuankhai"},"content":"        if (cur \u003d\u003d head) {","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"bachletuankhai"},"content":"            return null;","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"bachletuankhai"},"content":"        cur \u003d (cur - 1 + capacity) % capacity;","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"bachletuankhai"},"content":"        return elements[cur];","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"bachletuankhai"},"content":"    public E traverseDown() {","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"bachletuankhai"},"content":"        if (cur \u003d\u003d tail) {","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"bachletuankhai"},"content":"            return null;","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"bachletuankhai"},"content":"        cur \u003d (cur + 1) % capacity;","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"bachletuankhai"},"content":"        return elements[cur];","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"bachletuankhai"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"bachletuankhai"},"content":"        return size \u003d\u003d 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"bachletuankhai":92}},{"path":"src/main/java/seedu/address/commons/util/RandomAccessQueue.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":" * Represents a queue that allows random access to its elements.","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":" *","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":" * @param \u003cE\u003e the type of elements in the queue","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"public interface RandomAccessQueue\u003cE\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"     * Adds the specified element to the tail of the queue. If the queue is full,","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"     * the oldest element will be removed from the head of the queue. Behavior is","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"     * undefined if the queue has maximum capacity of 0.","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"     * @param e the element to add","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    public void addLast(E e);","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"     * Retrieves and removes the head of this queue, or returns null if this queue","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"     * is empty.","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"     * @return the first element in the queue, or null if the queue is empty","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"    public E pollFirst();","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"     * Returns the element at the specified index in the queue. The element at index","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"     * 0 is the head of the queue, the element at index 1 is the next element in the","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"     * queue, and so on.","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"     * @param index the index of the element to return","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"     * @return the element at the specified index","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"    public E get(int index);","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"     * Returns the number of elements in the queue.","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"     * @return the number of elements in the queue","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"    public int size();","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"     * Traverses one step up towards the head to the next element in the queue and","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"     * returns it. If the head of the queue is reached, returns null.","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"     * @return the next element in the queue, or null if the head of the queue is","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"     *         reached","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"    public E traverseUp();","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"     * Traverses one step down towards the tail to the next element in the queue and","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"     * returns it. If the tail of the queue is reached, returns null.","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"     * @return the next element in the queue, or null if the tail of the queue is","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"     *         reached","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"    public E traverseDown();","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"     * Returns whether the queue is empty.","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"     * @return true if the queue is empty, false otherwise","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"    public boolean isEmpty();","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"bachletuankhai":68}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.inputhistory.UserInputHistory;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"     * Returns the user input history.","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"    UserInputHistory\u003cString\u003e getUserInputHistory();","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"bachletuankhai":7,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.inputhistory.UserInputHistory;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.inputhistory.UserInputHistoryManager;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d \"Could not save data to file %s\"","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"            + \" due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"    private final UserInputHistory\u003cString\u003e userInputHistory;","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"     * {@code Storage}.","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"        userInputHistory \u003d new UserInputHistoryManager();","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"bachletuankhai"},"content":"    public UserInputHistory\u003cString\u003e getUserInputHistory() {","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"bachletuankhai"},"content":"        return userInputHistory;","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"bachletuankhai":13,"-":85}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"    public static final String MESSAGE_DUPLICATE_INDEX \u003d \"Duplicate index detected\";","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"    public static final String MESSAGE_IO_ERROR \u003d \"An error occurred while writing to the file\";","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"                .append(\"; Category: \")","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"                .append(person.getCategory());","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dhlee03":4,"-":47}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.exceptions.UndoException;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"public class AddCommand extends Command implements ReversibleCommand {","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"julia-cp"},"content":"            + PREFIX_CATEGORY + \"CATEGORY \"","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"julia-cp"},"content":"            + \"[\" + PREFIX_GROUP + \"GROUP]\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"            + PREFIX_CATEGORY + \"participant \"","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"julia-cp"},"content":"            + PREFIX_GROUP + \"3 \";","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MESSAGE_SUCCESS_UNDO \u003d \"Person deleted: %1$s\";","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MESSAGE_UNDO_NONEXISTENT_PERSON \u003d \"Undo failed:\"","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"            + \"Person does not exist in the address book\";","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"        model.addCommand(this);","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"    public CommandResult undo(Model model) throws UndoException {","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"        if (!model.hasPerson(toAdd)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"bachletuankhai"},"content":"            throw new UndoException(MESSAGE_UNDO_NONEXISTENT_PERSON);","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"bachletuankhai"},"content":"        model.deletePerson(toAdd);","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"bachletuankhai"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS_UNDO, Messages.format(toAdd)));","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"bachletuankhai"},"content":"    public CommandResult redo(Model model) throws UndoException, CommandException {","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"bachletuankhai"},"content":"        return new ToStringBuilder(this).add(\"toAdd\", toAdd).toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dhlee03":2,"julia-cp":4,"bachletuankhai":20,"-":77}},{"path":"src/main/java/seedu/address/logic/commands/CommentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import java.util.List;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Category;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.PersonFactory;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":" * Comments an existing person in the address book.","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"public class CommentCommand extends Command implements ReversibleCommand {","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"    public static final String COMMAND_WORD \u003d \"comment\";","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the comment of the person identified \"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"            + \"Parameters: INDEX (must be a positive integer) \" + \"COMMENT\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + \"This is a comment.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"    public static final String MESSAGE_COMMENT_PERSON_SUCCESS \u003d \"Commented Person: %1$s\";","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"    public static final String MESSAGE_SUCCESS_UNDO \u003d \"Changes reverted: %1$s\";","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"    private final Index index;","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"    private final Comment editComment;","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"    private Person originalPerson;","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"    private Person editedPerson;","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"     * @param index of the person in the filtered person list to comment","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"     * @param editComment comment to the person","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"    public CommentCommand(Index index, Comment editComment) {","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"        requireNonNull(editComment);","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"        this.editComment \u003d editComment;","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"dhlee03"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"dhlee03"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"dhlee03"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"dhlee03"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"dhlee03"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"dhlee03"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"dhlee03"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editComment);","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"dhlee03"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"dhlee03"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"dhlee03"},"content":"        this.originalPerson \u003d personToEdit;","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"dhlee03"},"content":"        this.editedPerson \u003d editedPerson;","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"dhlee03"},"content":"        model.addCommand(this);","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"dhlee03"},"content":"        return new CommandResult(String.format(MESSAGE_COMMENT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"dhlee03"},"content":"    public CommandResult undo(Model model) {","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"dhlee03"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"dhlee03"},"content":"        model.setPerson(editedPerson, originalPerson);","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"dhlee03"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"dhlee03"},"content":"        return new CommandResult(String.format(CommentCommand.MESSAGE_SUCCESS_UNDO, Messages.format(originalPerson)));","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"dhlee03"},"content":"    public CommandResult redo(Model model) throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"dhlee03"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"dhlee03"},"content":"        model.setPerson(originalPerson, editedPerson);","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"dhlee03"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"dhlee03"},"content":"        return new CommandResult(String.format(MESSAGE_COMMENT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"dhlee03"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"dhlee03"},"content":"    private static Person createEditedPerson(Person personToEdit, Comment comment) {","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"dhlee03"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"dhlee03"},"content":"        Name name \u003d personToEdit.getName();","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"dhlee03"},"content":"        Phone phone \u003d personToEdit.getPhone();","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"dhlee03"},"content":"        Email email \u003d personToEdit.getEmail();","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"dhlee03"},"content":"        Category category \u003d personToEdit.getCategory();","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"dhlee03"},"content":"        return PersonFactory.createPerson(name, phone, email, category, comment);","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"dhlee03"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"dhlee03"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"dhlee03"},"content":"            return true;","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"dhlee03"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"dhlee03"},"content":"        if (!(other instanceof CommentCommand)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"dhlee03"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"dhlee03"},"content":"        CommentCommand otherCommentCommand \u003d (CommentCommand) other;","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"dhlee03"},"content":"        return index.equals(otherCommentCommand.index)","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"dhlee03"},"content":"                \u0026\u0026 editComment.equals(otherCommentCommand.editComment);","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"dhlee03"},"content":"    public String toString() {","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"dhlee03"},"content":"        return new ToStringBuilder(this).add(\"index\", index)","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"dhlee03"},"content":"                .add(\"editComment\", editComment).toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"dhlee03":131}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"public class DeleteCommand extends Command implements ReversibleCommand {","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\" + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MESSAGE_SUCCESS_UNDO \u003d \"Undo deleting: Person added: %1$s\";","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"    private Person personToDelete;","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"        this.personToDelete \u003d personToDelete;","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"        model.addCommand(this);","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"    public CommandResult undo(Model model) {","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"        model.addPerson(personToDelete);","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS_UNDO, Messages.format(personToDelete)));","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"    public CommandResult redo(Model model) {","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"bachletuankhai"},"content":"        return new ToStringBuilder(this).add(\"targetIndex\", targetIndex).toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bachletuankhai":21,"-":63}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Category;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Group;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Participant;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.PersonFactory;","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"public class EditCommand extends Command implements ReversibleCommand {","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"julia-cp"},"content":"            + \"[\" + PREFIX_GROUP + \"GROUP]\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"julia-cp"},"content":"    public static final String MESSAGE_SPONSOR_HAS_NO_GROUP \u003d \"A sponsor doesn\u0027t have a group.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MESSAGE_SUCCESS_UNDO \u003d \"Changes reverted: %1$s\";","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"    private Person originalPerson;","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"    private Person editedPerson;","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param index                of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"bachletuankhai"},"content":"        this.originalPerson \u003d personToEdit;","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"bachletuankhai"},"content":"        this.editedPerson \u003d editedPerson;","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"bachletuankhai"},"content":"        model.addCommand(this);","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"bachletuankhai"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"bachletuankhai"},"content":"    public CommandResult undo(Model model) {","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"bachletuankhai"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"bachletuankhai"},"content":"        model.setPerson(editedPerson, originalPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"bachletuankhai"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"bachletuankhai"},"content":"        return new CommandResult(String.format(EditCommand.MESSAGE_SUCCESS_UNDO, Messages.format(originalPerson)));","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"bachletuankhai"},"content":"    public CommandResult redo(Model model) throws CommandException {","lastModifiedDate":"2024-03-30"},{"lineNumber":111,"author":{"gitId":"bachletuankhai"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-30"},{"lineNumber":112,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":113,"author":{"gitId":"bachletuankhai"},"content":"        model.setPerson(originalPerson, editedPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":114,"author":{"gitId":"bachletuankhai"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"julia-cp"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor)","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"julia-cp"},"content":"            throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"dhlee03"},"content":"        Category updatedCategory \u003d editPersonDescriptor.getCategory().orElse(personToEdit.getCategory());","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"julia-cp"},"content":"        Person editedPerson \u003d PersonFactory.createPerson(updatedName, updatedPhone, updatedEmail, updatedCategory);","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"julia-cp"},"content":"        if (editedPerson instanceof Staff) {","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"julia-cp"},"content":"            Staff editedStaff \u003d (Staff) editedPerson;","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"julia-cp"},"content":"            Group updatedGroup \u003d editPersonDescriptor.getGroup().orElse(new Group(editedStaff.getGroupNumber()));","lastModifiedDate":"2024-04-03"},{"lineNumber":136,"author":{"gitId":"julia-cp"},"content":"            editedStaff.setGroupNumber(updatedGroup.getGroupNumber());","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"julia-cp"},"content":"            return editedStaff;","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"julia-cp"},"content":"        } else if (editedPerson instanceof Participant) {","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"julia-cp"},"content":"            Participant editedParticipant \u003d (Participant) editedPerson;","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"julia-cp"},"content":"            Group updatedGroup \u003d editPersonDescriptor.getGroup().orElse(new Group(editedParticipant.getGroupNumber()));","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"julia-cp"},"content":"            editedParticipant.setGroupNumber(updatedGroup.getGroupNumber());","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"julia-cp"},"content":"            return editedParticipant;","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"julia-cp"},"content":"        } else if (editPersonDescriptor.getGroup().isPresent()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"julia-cp"},"content":"            throw new CommandException(MESSAGE_SPONSOR_HAS_NO_GROUP);","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"julia-cp"},"content":"        return editedPerson;","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-04-03"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2024-04-03"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2024-04-03"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"bachletuankhai"},"content":"     * Stores the details to edit the person with. Each non-empty field value will","lastModifiedDate":"2024-03-30"},{"lineNumber":176,"author":{"gitId":"bachletuankhai"},"content":"     * replace the corresponding field value of the person.","lastModifiedDate":"2024-03-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"dhlee03"},"content":"        private Category category;","lastModifiedDate":"2024-03-17"},{"lineNumber":183,"author":{"gitId":"julia-cp"},"content":"        private Group group;","lastModifiedDate":"2024-04-03"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"dhlee03"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2024-03-17"},{"lineNumber":186,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"bachletuankhai"},"content":"         * Copy constructor. A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":195,"author":{"gitId":"dhlee03"},"content":"            setCategory(toCopy.category);","lastModifiedDate":"2024-03-17"},{"lineNumber":196,"author":{"gitId":"julia-cp"},"content":"            setGroup(toCopy.group);","lastModifiedDate":"2024-04-03"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"julia-cp"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, category, group);","lastModifiedDate":"2024-04-03"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"dhlee03"},"content":"        public void setCategory(Category category) {","lastModifiedDate":"2024-03-17"},{"lineNumber":231,"author":{"gitId":"dhlee03"},"content":"            this.category \u003d category;","lastModifiedDate":"2024-03-17"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":234,"author":{"gitId":"dhlee03"},"content":"        public Optional\u003cCategory\u003e getCategory() {","lastModifiedDate":"2024-03-17"},{"lineNumber":235,"author":{"gitId":"dhlee03"},"content":"            return Optional.ofNullable(category);","lastModifiedDate":"2024-03-17"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":238,"author":{"gitId":"julia-cp"},"content":"        public void setGroup(Group group) {","lastModifiedDate":"2024-04-03"},{"lineNumber":239,"author":{"gitId":"julia-cp"},"content":"            this.group \u003d group;","lastModifiedDate":"2024-04-03"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":242,"author":{"gitId":"julia-cp"},"content":"        public Optional\u003cGroup\u003e getGroup() {","lastModifiedDate":"2024-04-03"},{"lineNumber":243,"author":{"gitId":"julia-cp"},"content":"            return Optional.ofNullable(group);","lastModifiedDate":"2024-04-03"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":246,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":260,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":261,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":262,"author":{"gitId":"julia-cp"},"content":"                    \u0026\u0026 Objects.equals(group, otherEditPersonDescriptor.group);","lastModifiedDate":"2024-04-03"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":271,"author":{"gitId":"julia-cp"},"content":"                    .add(\"group\", group)","lastModifiedDate":"2024-04-03"},{"lineNumber":272,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"dhlee03":10,"julia-cp":35,"bachletuankhai":33,"-":197}},{"path":"src/main/java/seedu/address/logic/commands/GroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"julia-cp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"julia-cp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"julia-cp"},"content":"import java.util.List;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"julia-cp"},"content":"import java.util.Random;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"julia-cp"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"julia-cp"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"julia-cp"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"julia-cp"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Group;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Participant;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Sponsor;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"julia-cp"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"julia-cp"},"content":" * Changes the group of a person identified by the index number used in the displayed person list.","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"julia-cp"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"julia-cp"},"content":"public class GroupCommand extends Command implements ReversibleCommand {","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"julia-cp"},"content":"    public static final String COMMAND_WORD \u003d \"group\";","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"julia-cp"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"julia-cp"},"content":"            + \": Changes the group of a person identified by the index number used in the displayed person list.\"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"julia-cp"},"content":"            + \"Existing values will be overwritten by the input values. \\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"julia-cp"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"julia-cp"},"content":"            + \"NEW_GROUP (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"julia-cp"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\" + \" 3\";","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"julia-cp"},"content":"    public static final String MESSAGE_GROUP_PERSON_SUCCESS \u003d \"Grouped Person: %1$s\";","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"julia-cp"},"content":"    public static final String MESSAGE_PERSON_WITHOUT_GROUP \u003d \"Sponsor doesn\u0027t have a group\";","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"julia-cp"},"content":"    public static final String MESSAGE_SUCCESS_UNDO \u003d \"Changes reverted: %1$s\";","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"julia-cp"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"julia-cp"},"content":"    private final int targetGroupNumber;","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"julia-cp"},"content":"    private int originalGroupNumber;","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"julia-cp"},"content":"    private Person groupedPerson;","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"julia-cp"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"julia-cp"},"content":"     * Groups person with index {@code targetIndex} into random available groups.","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"julia-cp"},"content":"     * @param targetIndex of the person in the filtered person list to group.","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"julia-cp"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"julia-cp"},"content":"    public GroupCommand(Index targetIndex) {","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"julia-cp"},"content":"        Random random \u003d new Random();","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"julia-cp"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"julia-cp"},"content":"        this.targetGroupNumber \u003d random.nextInt(Group.getTotalGroupNumber()) + 1;","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"julia-cp"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"julia-cp"},"content":"     * Groups person with index {@code targetIndex} into {@code targetGroupNumber}.","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"julia-cp"},"content":"     * @param targetIndex of the person in the filtered person list to group","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"julia-cp"},"content":"     * @param targetGroupNumber number to group the person into","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"julia-cp"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"julia-cp"},"content":"    public GroupCommand(Index targetIndex, int targetGroupNumber) {","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"julia-cp"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"julia-cp"},"content":"        this.targetGroupNumber \u003d targetGroupNumber;","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"julia-cp"},"content":"        Group.setTotalGroupNumber(Math.max(targetGroupNumber, Group.getTotalGroupNumber()));","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"julia-cp"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"julia-cp"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"julia-cp"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"julia-cp"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"julia-cp"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"julia-cp"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"julia-cp"},"content":"        Person personToGroup \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"julia-cp"},"content":"        if (personToGroup instanceof Sponsor) {","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"julia-cp"},"content":"            throw new CommandException(MESSAGE_PERSON_WITHOUT_GROUP);","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"julia-cp"},"content":"        } else if (personToGroup instanceof Staff) {","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"julia-cp"},"content":"            Staff staffToGroup \u003d (Staff) personToGroup;","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"julia-cp"},"content":"            originalGroupNumber \u003d staffToGroup.getGroupNumber();","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"julia-cp"},"content":"            groupedPerson \u003d staffToGroup;","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"julia-cp"},"content":"            staffToGroup.setGroupNumber(targetGroupNumber);","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"julia-cp"},"content":"            model.setPerson(personToGroup, staffToGroup);","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"julia-cp"},"content":"        } else if (personToGroup instanceof Participant) {","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"julia-cp"},"content":"            Participant participantToGroup \u003d (Participant) personToGroup;","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"julia-cp"},"content":"            originalGroupNumber \u003d participantToGroup.getGroupNumber();","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"julia-cp"},"content":"            groupedPerson \u003d participantToGroup;","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"julia-cp"},"content":"            participantToGroup.setGroupNumber(targetGroupNumber);","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"julia-cp"},"content":"            model.setPerson(personToGroup, participantToGroup);","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"julia-cp"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"julia-cp"},"content":"        model.addCommand(this);","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"julia-cp"},"content":"        return new CommandResult(String.format(MESSAGE_GROUP_PERSON_SUCCESS, Messages.format(personToGroup)));","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"julia-cp"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"julia-cp"},"content":"    public CommandResult undo(Model model) {","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"julia-cp"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"julia-cp"},"content":"        model.groupPerson(groupedPerson, originalGroupNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"julia-cp"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"julia-cp"},"content":"        return new CommandResult(String.format(GroupCommand.MESSAGE_SUCCESS_UNDO, Messages.format(groupedPerson)));","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"julia-cp"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"julia-cp"},"content":"    public CommandResult redo(Model model) throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"julia-cp"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"julia-cp"},"content":"        model.groupPerson(groupedPerson, targetGroupNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"julia-cp"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"julia-cp"},"content":"        return new CommandResult(String.format(MESSAGE_GROUP_PERSON_SUCCESS, Messages.format(groupedPerson)));","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"julia-cp"},"content":"    @Override public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"julia-cp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"julia-cp"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"julia-cp"},"content":"        if (!(other instanceof GroupCommand)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"julia-cp"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"julia-cp"},"content":"        GroupCommand otherGroupCommand \u003d (GroupCommand) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"julia-cp"},"content":"        return targetIndex.equals(otherGroupCommand.targetIndex)","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"julia-cp"},"content":"                \u0026\u0026 (targetGroupNumber \u003d\u003d otherGroupCommand.targetGroupNumber);","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"julia-cp"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"julia-cp"},"content":"    public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"julia-cp"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"julia-cp"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"julia-cp"},"content":"                .add(\"targetGroup\", targetGroupNumber)","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"julia-cp"},"content":"                .toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"julia-cp"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"julia-cp":148}},{"path":"src/main/java/seedu/address/logic/commands/GroupRandomCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"julia-cp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"julia-cp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"julia-cp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"julia-cp"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"julia-cp"},"content":"import java.util.List;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"julia-cp"},"content":"import java.util.Random;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"julia-cp"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"julia-cp"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"julia-cp"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Category;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Group;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Participant;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"julia-cp"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"julia-cp"},"content":" * Sets randomly the group of every person displayed on the list.","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"julia-cp"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"julia-cp"},"content":"public class GroupRandomCommand extends Command implements ReversibleCommand {","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"julia-cp"},"content":"    public static final String COMMAND_WORD \u003d \"grouprandom\";","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"julia-cp"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"julia-cp"},"content":"            + \": Sets randomly the group of every person displayed on the list.\"","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"julia-cp"},"content":"            + \"Existing values will be overwritten by the input values. \\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"julia-cp"},"content":"            + \"Parameters: MAX_GROUP_SIZE (must be a positive integer)\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"julia-cp"},"content":"            + \"Example: \" + COMMAND_WORD + \" 4\";","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"julia-cp"},"content":"    public static final String MESSAGE_GROUP_RANDOM_SUCCESS \u003d \"Grouped every person on the list\";","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"julia-cp"},"content":"    public static final String MESSAGE_INVALID_MAX_GROUP_SIZE \u003d \"MAX_GROUP_SIZE must be a positive integer\";","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"julia-cp"},"content":"    public static final String MESSAGE_SUCCESS_UNDO \u003d \"Changes reverted.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"julia-cp"},"content":"    private final int maxGroupSize;","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"julia-cp"},"content":"    private List\u003cInteger\u003e originalGroups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"julia-cp"},"content":"    private List\u003cInteger\u003e randomGroups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"julia-cp"},"content":"    private List\u003cPerson\u003e noSponsorList;","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"julia-cp"},"content":"    public GroupRandomCommand(int maxGroupSize) {","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"julia-cp"},"content":"        this.maxGroupSize \u003d maxGroupSize;","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"julia-cp"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"julia-cp"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"julia-cp"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"julia-cp"},"content":"        if (maxGroupSize \u003c 1) {","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"julia-cp"},"content":"            throw new CommandException(MESSAGE_INVALID_MAX_GROUP_SIZE);","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"julia-cp"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"julia-cp"},"content":"        noSponsorList \u003d lastShownList.stream()","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"julia-cp"},"content":"                .filter(person -\u003e !person.getCategory().equals(new Category(\"SPONSOR\")))","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"julia-cp"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"julia-cp"},"content":"        int numberOfGroup \u003d (int) Math.ceil((double) noSponsorList.size() / maxGroupSize);","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"julia-cp"},"content":"        Group.setTotalGroupNumber(Math.max(numberOfGroup, Group.getTotalGroupNumber()));","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"julia-cp"},"content":"        int[] groupSizes \u003d new int[numberOfGroup];","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"julia-cp"},"content":"        Arrays.fill(groupSizes, 0);","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"julia-cp"},"content":"        Random random \u003d new Random();","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"julia-cp"},"content":"        for (Person personToGroup : noSponsorList) {","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"julia-cp"},"content":"            int targetGroupNumber \u003d random.nextInt(numberOfGroup) + 1;","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"julia-cp"},"content":"            while (groupSizes[targetGroupNumber - 1] \u003e\u003d maxGroupSize) {","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"julia-cp"},"content":"                targetGroupNumber \u003d random.nextInt(numberOfGroup) + 1;","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"julia-cp"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"julia-cp"},"content":"            groupSizes[targetGroupNumber - 1] +\u003d 1;","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"julia-cp"},"content":"            if (personToGroup instanceof Staff) {","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"julia-cp"},"content":"                Staff staffToGroup \u003d (Staff) personToGroup;","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"julia-cp"},"content":"                originalGroups.add(staffToGroup.getGroupNumber());","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"julia-cp"},"content":"                staffToGroup.setGroupNumber(targetGroupNumber);","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"julia-cp"},"content":"                model.setPerson(personToGroup, staffToGroup);","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"julia-cp"},"content":"            } else if (personToGroup instanceof Participant) {","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"julia-cp"},"content":"                Participant participantToGroup \u003d (Participant) personToGroup;","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"julia-cp"},"content":"                originalGroups.add(participantToGroup.getGroupNumber());","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"julia-cp"},"content":"                participantToGroup.setGroupNumber(targetGroupNumber);","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"julia-cp"},"content":"                model.setPerson(personToGroup, participantToGroup);","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"julia-cp"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"julia-cp"},"content":"            randomGroups.add(targetGroupNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"julia-cp"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"julia-cp"},"content":"        model.addCommand(this);","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"julia-cp"},"content":"        return new CommandResult(String.format(MESSAGE_GROUP_RANDOM_SUCCESS));","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"julia-cp"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"julia-cp"},"content":"    public CommandResult undo(Model model) {","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"julia-cp"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"julia-cp"},"content":"        for (int i \u003d 0; i \u003c noSponsorList.size(); i++) {","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"julia-cp"},"content":"            Person groupedPerson \u003d noSponsorList.get(i);","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"julia-cp"},"content":"            int originalGroupNumber \u003d originalGroups.get(i);","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"julia-cp"},"content":"            model.groupPerson(groupedPerson, originalGroupNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"julia-cp"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"julia-cp"},"content":"        return new CommandResult(String.format(GroupRandomCommand.MESSAGE_SUCCESS_UNDO));","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"julia-cp"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"julia-cp"},"content":"    public CommandResult redo(Model model) throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"julia-cp"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"julia-cp"},"content":"        for (int i \u003d 0; i \u003c noSponsorList.size(); i++) {","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"julia-cp"},"content":"            Person groupedPerson \u003d noSponsorList.get(i);","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"julia-cp"},"content":"            int randomGroupNumber \u003d randomGroups.get(i);","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"julia-cp"},"content":"            model.groupPerson(groupedPerson, randomGroupNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"julia-cp"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"julia-cp"},"content":"        return new CommandResult(String.format(MESSAGE_GROUP_RANDOM_SUCCESS));","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"julia-cp"},"content":"    @Override public boolean equals(Object other) {","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"julia-cp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"julia-cp"},"content":"            return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"julia-cp"},"content":"        if (!(other instanceof GroupRandomCommand)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"julia-cp"},"content":"            return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"julia-cp"},"content":"        GroupRandomCommand otherGroupCommand \u003d (GroupRandomCommand) other;","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"julia-cp"},"content":"        return maxGroupSize \u003d\u003d otherGroupCommand.maxGroupSize;","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"julia-cp"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"julia-cp"},"content":"    public String toString() {","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"julia-cp"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"julia-cp"},"content":"                .add(\"maxGroupSize\", maxGroupSize)","lastModifiedDate":"2024-04-02"},{"lineNumber":147,"author":{"gitId":"julia-cp"},"content":"                .toString();","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"julia-cp"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"julia-cp":149}},{"path":"src/main/java/seedu/address/logic/commands/LinkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import java.util.List;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":" * Exports all selected participants to the event.","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"public class LinkCommand extends Command {","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"    public static final String COMMAND_WORD \u003d \"link\";","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Links all selected participants to the event. \"","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"            + \"Parameters: multiple index (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 2 3\";","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Exported all selected participants\";","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"    public final int[] indexes;","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"     * Creates a LinkCommand to link the specified {@code Person} to the Sponsors.","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"     * @param indexes the indexes of the selected participants","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"    public LinkCommand(int[] indexes) {","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"        requireNonNull(indexes);","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"        this.indexes \u003d indexes;","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"        Path filePath \u003d Path.of(\"./selectedParticipants/list.csv\");","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"        try {","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"            FileUtil.createFile(filePath);","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"            String header \u003d \"Name, Phone, Email, Comment\\n\";","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"            FileUtil.writeToFile(filePath, header);","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"            throw new CommandException(Messages.MESSAGE_IO_ERROR);","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"dhlee03"},"content":"        for (int i \u003d 0; i \u003c indexes.length; i++) {","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"dhlee03"},"content":"            List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"dhlee03"},"content":"            int index \u003d indexes[i];","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"dhlee03"},"content":"            if (index \u003c 0 || index \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"dhlee03"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"dhlee03"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"dhlee03"},"content":"            for (int j \u003d i + 1; j \u003c indexes.length; j++) {","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"dhlee03"},"content":"                if (index \u003d\u003d indexes[j]) {","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"dhlee03"},"content":"                    //checks if the user input has duplicate indexes","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"dhlee03"},"content":"                    throw new CommandException(Messages.MESSAGE_DUPLICATE_INDEX);","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"dhlee03"},"content":"                }","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"dhlee03"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"dhlee03"},"content":"            try {","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"dhlee03"},"content":"                FileUtil.appendToFile(filePath, lastShownList.get(index).toCsvString());","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"dhlee03"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"dhlee03"},"content":"                throw new CommandException(Messages.MESSAGE_IO_ERROR);","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"dhlee03"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"dhlee03"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"dhlee03"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"dhlee03"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"dhlee03"},"content":"            return true;","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"dhlee03"},"content":"        if (!(other instanceof LinkCommand)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"dhlee03"},"content":"            return false;","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"dhlee03"},"content":"        LinkCommand otherLinkCommand \u003d (LinkCommand) other;","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"dhlee03"},"content":"        return Arrays.equals(indexes, otherLinkCommand.indexes);","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"dhlee03"},"content":"    public String toString() {","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"dhlee03"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"dhlee03"},"content":"                .add(\"indexes\", indexes)","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"dhlee03"},"content":"                .toString();","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"dhlee03":98}},{"path":"src/main/java/seedu/address/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.exceptions.UndoException;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":" * Redoes the most recent undone command that modifies the address book.","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"            + \": Redoes the most recent undone command that modifies the address book.\";","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MESSAGE_FAILURE_NO_COMMAND_TO_REDO \u003d \"There is no command to redo.\";","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    public RedoCommand() {","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"        if (!model.canRedoAddressBook()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"            throw new CommandException(MESSAGE_FAILURE_NO_COMMAND_TO_REDO);","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"        try {","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"            return model.redoAddressBook();","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"        } catch (UndoException e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"bachletuankhai":35}},{"path":"src/main/java/seedu/address/logic/commands/ReversibleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.exceptions.UndoException;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" * Represents a command that can be undone and redone. For a command to be","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":" * reversible, {@link Command#execute(Model)} must add the command to the","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":" * command history in the model.","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"public interface ReversibleCommand {","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"     * Undoes the effects of this command. The command should be added to the","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"     * command history in the model before this method is called. The command must","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"     * not be manually removed from the history in this method.","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"    public CommandResult undo(Model model) throws UndoException;","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"     * Executes the command again after undoing it. The command must not be manually","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"     * added to the history in this method.","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"    public CommandResult redo(Model model) throws UndoException, CommandException;","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"bachletuankhai":33}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.exceptions.UndoException;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":" * Undoes the most recent command that modifies the address book.","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"            + \": Undoes the most recent command that modifies the address book.\\n\" + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MESSAGE_FAILURE_NO_COMMAND_TO_UNDO \u003d \"There\u0027s no command to undo.\";","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"    public UndoCommand() {","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"        if (!model.canUndoAddressBook()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"            throw new CommandException(MESSAGE_FAILURE_NO_COMMAND_TO_UNDO);","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"        try {","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"            return model.undoAddressBook();","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"        } catch (UndoException e) {","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"bachletuankhai":35}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":" * Views the comment of the person selected by the index number used in the displayed person list.","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Views the comment of the person selected \"","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"            + \"by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"    public static final String MESSAGE_VIEW_COMMENT_SUCCESS \u003d \"Viewing comment of Person: %1$s\\n\";","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"    private final Index index;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"    public ViewCommand(Index index) {","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"        Person personToView \u003d model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"        String comment \u003d personToView.getComment().toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"        String successMessage \u003d String.format(MESSAGE_VIEW_COMMENT_SUCCESS, Messages.format(personToView));","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"        String result \u003d successMessage + comment;","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"        return new CommandResult(result);","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"            return true;","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"        if (!(other instanceof ViewCommand)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"        ViewCommand otherViewCommand \u003d (ViewCommand) other;","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"        return index.equals(otherViewCommand.index);","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"    public String toString() {","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"        return \"Viewing comment of Person: \" + index.getOneBased();","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"dhlee03":54}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/UndoException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":" * Represents an error which occurs during undoing a {@link Command}.","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"public class UndoException extends Exception {","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"    public UndoException(String message) {","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"        super(message);","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"bachletuankhai":10}},{"path":"src/main/java/seedu/address/logic/commands/history/CommandHistoryManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.commands.history;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import java.util.ArrayDeque;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import java.util.Deque;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.ReversibleCommand;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.exceptions.UndoException;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":" * Represents a history of reversible commands. This class is responsible for","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":" * managing the history of commands that can be undone and redone.","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"public class CommandHistoryManager implements ReversibleCommandHistory {","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"    private static final int MAX_SIZE \u003d 100;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    private final Deque\u003cReversibleCommand\u003e history;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"    private final Deque\u003cReversibleCommand\u003e future;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"     * Creates a new instance of CommandHistoryManager.","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    public CommandHistoryManager() {","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"        history \u003d new ArrayDeque\u003c\u003e(MAX_SIZE);","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"        future \u003d new ArrayDeque\u003c\u003e(MAX_SIZE);","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"    public void addCommand(ReversibleCommand command) {","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"        if (history.size() \u003d\u003d MAX_SIZE) {","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"            history.pollLast();","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"        history.addFirst(command);","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"    public ReversibleCommand getCommandToUndo() throws UndoException {","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"        if (history.isEmpty()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"            throw new UndoException(\"No command to undo\");","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"        ReversibleCommand command \u003d history.pollFirst();","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"        future.addFirst(command);","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"        return command;","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"    public ReversibleCommand getCommandToRedo() throws UndoException {","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"        if (future.isEmpty()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"            throw new UndoException(\"No command to redo\");","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"        ReversibleCommand command \u003d future.pollFirst();","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"        history.addFirst(command);","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"        return command;","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"    public boolean canUndo() {","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"        return !history.isEmpty();","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"    public boolean canRedo() {","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"        return !future.isEmpty();","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"bachletuankhai":63}},{"path":"src/main/java/seedu/address/logic/commands/history/ReversibleCommandHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.commands.history;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.ReversibleCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.exceptions.UndoException;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":" * Represents a history of reversible commands.","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"public interface ReversibleCommandHistory {","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"     * Adds a command to the history.","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"     * @param command The command to add.","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    void addCommand(ReversibleCommand command);","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"     * Returns the most recently executed reversible command in the history.","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"     * @return The most recently executed reversible command.","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"     * @throws UndoException If an error occurs during history retrieval.","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"    ReversibleCommand getCommandToUndo() throws UndoException;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"     * Returns the most recently undone command in the history.","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"     * @return The most recently undone command.","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"     * @throws UndoException If an error occurs during history retrieval.","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"    ReversibleCommand getCommandToRedo() throws UndoException;","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"     * Checks if there are commands that can be undone.","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"     * @return True if there are commands that can be undone, false otherwise.","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"    boolean canUndo();","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"     * Checks if there are commands that can be redone.","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"     * @return True if there are commands that can be redone, false otherwise.","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"    boolean canRedo();","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"bachletuankhai":46}},{"path":"src/main/java/seedu/address/logic/inputhistory/UserInputHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.inputhistory;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":" * Represents the history of user input.","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":" *","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":" * @param \u003cT\u003e The type of the user input.","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"public interface UserInputHistory\u003cT\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"     * Adds the given chat message to the chat history.","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"     * @param chatMessage The chat message to be added to the chat history.","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"    public void addChatToHistory(String chatMessage);","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"     * Returns true if there are chat messages in the chat history.","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"     * @return True if there are chat messages in the chat history, false otherwise.","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    public boolean hasHistory();","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"     * Returns the previous chat message in the chat history.","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"     * @return The previous chat message in the chat history.","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"    public T getPreviousChat();","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"     * Returns the next chat message in the chat history.","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"     * @return The next chat message in the chat history.","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"    public T getNextChat();","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"bachletuankhai":36}},{"path":"src/main/java/seedu/address/logic/inputhistory/UserInputHistoryManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.inputhistory;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.commons.util.QueueUtil;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.commons.util.RandomAccessQueue;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":" * Represents the history of user input.","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"public class UserInputHistoryManager implements UserInputHistory\u003cString\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"    private static final int MAX_HISTORY_SIZE \u003d 100;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"     * The history of user input.","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    private final RandomAccessQueue\u003cString\u003e history; // not sure if String should be used","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    public UserInputHistoryManager() {","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"        history \u003d new QueueUtil\u003c\u003e(MAX_HISTORY_SIZE);","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"    public void addChatToHistory(String chatMessage) {","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"        history.addLast(chatMessage);","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"    public boolean hasHistory() {","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"        return !history.isEmpty();","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"    int size() {","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"        return history.size();","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"    public String getPreviousChat() {","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"        return history.traverseUp();","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"    public String getNextChat() {","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"        return history.traverseDown();","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"bachletuankhai":44}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Category;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Participant;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.PersonFactory;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"julia-cp"},"content":"                        PREFIX_CATEGORY, PREFIX_GROUP);","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_CATEGORY)","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"julia-cp"},"content":"                PREFIX_CATEGORY, PREFIX_GROUP);","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"        Category category \u003d ParserUtil.parseCategory(argMultimap.getValue(PREFIX_CATEGORY).get());","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"julia-cp"},"content":"        Person person \u003d PersonFactory.createPerson(name, phone, email, category);","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"julia-cp"},"content":"        if (argMultimap.getValue(PREFIX_GROUP).isPresent() \u0026\u0026 person instanceof Staff) {","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"julia-cp"},"content":"            Staff staff \u003d (Staff) person;","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"julia-cp"},"content":"            staff.setGroupNumber(ParserUtil.parseGroup(argMultimap.getValue(PREFIX_GROUP).get()).getGroupNumber());","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"julia-cp"},"content":"            return new AddCommand(staff);","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"julia-cp"},"content":"        } else if (argMultimap.getValue(PREFIX_GROUP).isPresent() \u0026\u0026 person instanceof Participant) {","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"julia-cp"},"content":"            Participant participant \u003d (Participant) person;","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"julia-cp"},"content":"            participant.setGroupNumber(ParserUtil.parseGroup(argMultimap.getValue(PREFIX_GROUP).get())","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"julia-cp"},"content":"                    .getGroupNumber());","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"julia-cp"},"content":"            return new AddCommand(participant);","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"dhlee03":5,"julia-cp":18,"-":51}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.commands.CommentCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"julia-cp"},"content":"import seedu.address.logic.commands.GroupCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"julia-cp"},"content":"import seedu.address.logic.commands.GroupRandomCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.commands.LinkCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"        // Note to developers: Change the log level in config.json to enable lower level","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"        // (i.e., FINE, FINER and lower)","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"julia-cp"},"content":"        case GroupCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"julia-cp"},"content":"            return new GroupCommandParser().parse(arguments);","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"julia-cp"},"content":"        case GroupRandomCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"julia-cp"},"content":"            return new GroupRandomCommandParser().parse(arguments);","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":94,"author":{"gitId":"bachletuankhai"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"bachletuankhai"},"content":"            return new UndoCommand();","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"bachletuankhai"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"bachletuankhai"},"content":"            return new RedoCommand();","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"dhlee03"},"content":"        case LinkCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"dhlee03"},"content":"            return new LinkCommandParser().parse(arguments);","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"dhlee03"},"content":"        case CommentCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"dhlee03"},"content":"            return new CommentCommandParser().parse(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"dhlee03"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"dhlee03"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dhlee03":12,"julia-cp":8,"bachletuankhai":10,"-":85}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"    public static final Prefix PREFIX_CATEGORY \u003d new Prefix(\"c/\");","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"julia-cp"},"content":"    public static final Prefix PREFIX_GROUP \u003d new Prefix(\"g/\");","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"dhlee03":1,"julia-cp":1,"-":13}},{"path":"src/main/java/seedu/address/logic/parser/CommentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.commands.CommentCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":" * Parses input arguments and creates a new CommentCommand object","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"public class CommentCommandParser implements Parser\u003cCommentCommand\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"    public static final String MESSAGE_INVALID_COMMENT \u003d \"Comment should not be empty\";","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"    public static final String MESSAGE_INVALID_COMMENT_LENGTH \u003d \"Comment should not exceed 1000 characters\";","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"     * Parses the given {@code String} of arguments in the context of the CommentCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"     * and returns a CommentCommand object for execution.","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"    public CommentCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"        String[] splitArgs \u003d trimmedArgs.split(\"\\\\s+\", 2);","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"        if (splitArgs.length \u003c 2) {","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CommentCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"            Index index \u003d ParserUtil.parseIndex(splitArgs[0]);","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"            String comment \u003d splitArgs[1];","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"            return new CommentCommand(index, new Comment(comment));","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"            throw new ParseException(","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, CommentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"dhlee03":39}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"julia-cp"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_GROUP);","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"julia-cp"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_GROUP);","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"julia-cp"},"content":"        if (argMultimap.getValue(PREFIX_GROUP).isPresent()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"julia-cp"},"content":"            editPersonDescriptor.setGroup(ParserUtil.parseGroup(argMultimap.getValue(PREFIX_GROUP).get()));","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"julia-cp":5,"-":54}},{"path":"src/main/java/seedu/address/logic/parser/GroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"julia-cp"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"julia-cp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"julia-cp"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"julia-cp"},"content":"import seedu.address.logic.commands.GroupCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"julia-cp"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"julia-cp"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"julia-cp"},"content":" * Parses input arguments and creates a new GroupCommand object","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"julia-cp"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"julia-cp"},"content":"public class GroupCommandParser implements Parser\u003cGroupCommand\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"julia-cp"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"julia-cp"},"content":"     * Parses tje given {@code String} of arguments in the context of the GroupCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"julia-cp"},"content":"     * and returns a GroupCommand object for execution.","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"julia-cp"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"julia-cp"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"julia-cp"},"content":"    public GroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"julia-cp"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"julia-cp"},"content":"        String[] trimmedArgs \u003d args.trim().split(\"\\\\s\");","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"julia-cp"},"content":"        Index index;","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"julia-cp"},"content":"        try {","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"julia-cp"},"content":"            String trimmedIndex \u003d trimmedArgs[0];","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"julia-cp"},"content":"            index \u003d ParserUtil.parseIndex(trimmedIndex);","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"julia-cp"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"julia-cp"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"julia-cp"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"julia-cp"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"julia-cp"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"julia-cp"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"julia-cp"},"content":"        if (trimmedArgs.length \u003c 2) {","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"julia-cp"},"content":"            return new GroupCommand(index);","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"julia-cp"},"content":"        } else {","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"julia-cp"},"content":"            try {","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"julia-cp"},"content":"                return new GroupCommand(index, Integer.parseInt(trimmedArgs[1]));","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"julia-cp"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"julia-cp"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"julia-cp"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":45,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"julia-cp"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"julia-cp":48}},{"path":"src/main/java/seedu/address/logic/parser/GroupRandomCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"julia-cp"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"julia-cp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"julia-cp"},"content":"import seedu.address.logic.commands.GroupRandomCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"julia-cp"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"julia-cp"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"julia-cp"},"content":" * Parses input arguments and creates a new GroupRandomCommand object","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"julia-cp"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"julia-cp"},"content":"public class GroupRandomCommandParser implements Parser\u003cGroupRandomCommand\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"julia-cp"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"julia-cp"},"content":"     * Parses the given {@code String} of arguments in the context of the GroupRandomCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"julia-cp"},"content":"     * and returns a GroupRandomCommand object for execution.","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"julia-cp"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"julia-cp"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"julia-cp"},"content":"    public GroupRandomCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"julia-cp"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"julia-cp"},"content":"        String[] trimmedArgs \u003d args.trim().split(\"\\\\s\");","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"julia-cp"},"content":"        int maxGroupSize;","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"julia-cp"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"julia-cp"},"content":"            String trimmedMaxGroupSize \u003d trimmedArgs[0];","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"julia-cp"},"content":"            maxGroupSize \u003d Integer.parseInt(trimmedMaxGroupSize);","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"julia-cp"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"julia-cp"},"content":"            throw new ParseException(","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"julia-cp"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupRandomCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"julia-cp"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"julia-cp"},"content":"            throw new ParseException(","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"julia-cp"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupRandomCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"julia-cp"},"content":"        return new GroupRandomCommand(maxGroupSize);","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"julia-cp"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"julia-cp":39}},{"path":"src/main/java/seedu/address/logic/parser/LinkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.commands.LinkCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":" * Parses input arguments and creates a new LinkCommand object","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"public class LinkCommandParser implements Parser\u003cLinkCommand\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"     * Parses the given {@code String} of arguments in the context of the LinkCommand","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"     * and returns a LinkCommand object for execution.","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"    public LinkCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"        Boolean isEmpty \u003d args.trim().isEmpty();","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"        Boolean isInvalid \u003d !args.trim().matches(\"\\\\d+(\\\\s+\\\\d+)*\");","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"        if (isEmpty || isInvalid) {","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"            //checks if the user input is not all integers separated by spaces or empty","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"            throw new ParseException(LinkCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"        int[] indexes \u003d Arrays.stream(args.trim().split(\"\\\\s+\"))","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"                                .mapToInt(Integer::parseInt)","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"                                .map(i -\u003e i - 1)","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"                                .toArray();","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"        return new LinkCommand(indexes);","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"dhlee03":34}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"julia-cp"},"content":"import seedu.address.logic.commands.GroupCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Category;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Group;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"dhlee03"},"content":"     * Parses a {@code String category} into a {@code Category}.","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"dhlee03"},"content":"     * @throws ParseException if the given {@code category} is invalid.","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"dhlee03"},"content":"    public static Category parseCategory(String category) throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"dhlee03"},"content":"        requireNonNull(category);","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"dhlee03"},"content":"        String trimmedCategory \u003d category.trim().toUpperCase();","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"dhlee03"},"content":"        if (!Category.isValidCategory(trimmedCategory)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"dhlee03"},"content":"            throw new ParseException(Category.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"dhlee03"},"content":"        return new Category(trimmedCategory);","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"julia-cp"},"content":"     * Parses a {@code String group} into a {@code Group}.","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"julia-cp"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"julia-cp"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"julia-cp"},"content":"     * @throws ParseException if the given {@code group} is invalid.","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"julia-cp"},"content":"    public static Group parseGroup(String group) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"julia-cp"},"content":"        requireNonNull(group);","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"julia-cp"},"content":"        String trimmedGroup \u003d group.trim();","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"julia-cp"},"content":"        int groupNumber;","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"julia-cp"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"julia-cp"},"content":"            groupNumber \u003d Integer.parseInt(trimmedGroup);","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"julia-cp"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"julia-cp"},"content":"            throw new ParseException(","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"julia-cp"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"julia-cp"},"content":"        if (!Group.isValidGroup(groupNumber)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"julia-cp"},"content":"            throw new ParseException(Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"julia-cp"},"content":"        return new Group(groupNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"dhlee03":9,"julia-cp":25,"-":88}},{"path":"src/main/java/seedu/address/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":" * Parses input arguments and creates a new ViewCommand object","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"     * and returns a ViewCommand object for execution.","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"            return new ViewCommand(index);","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"            throw new ParseException(","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"dhlee03":28}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"julia-cp"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"julia-cp"},"content":"     * Groups {@code target} into {@code groupNumber}.","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"julia-cp"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"julia-cp"},"content":"     * {@code groupNumber} must be a positive integer.","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"julia-cp"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"julia-cp"},"content":"    public void groupPerson(Person target, int groupNumber) {","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"julia-cp"},"content":"        requireNonNull(target);","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"julia-cp"},"content":"        persons.groupPerson(target, groupNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"julia-cp":11,"-":130}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.ReversibleCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.exceptions.UndoException;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"     * Returns true if a person with the same identity as {@code person} exists in","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"     * the address book.","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"     * Deletes the given person. The person must exist in the address book.","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"     * Adds the given person. {@code person} must not already exist in the address","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"bachletuankhai"},"content":"     * book.","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":78,"author":{"gitId":"bachletuankhai"},"content":"     * {@code target} must exist in the address book. The person identity of","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"bachletuankhai"},"content":"     * {@code editedPerson} must not be the same as another existing person in the","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"bachletuankhai"},"content":"     * address book.","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"julia-cp"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"julia-cp"},"content":"     * Groups the given person {@code target} into {@code groupNumber}.","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"julia-cp"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"julia-cp"},"content":"     * {@code groupNumber} must be a positive integer.","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"julia-cp"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"julia-cp"},"content":"    void groupPerson(Person target, int groupNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"bachletuankhai"},"content":"     * Updates the filter of the filtered person list to filter by the given","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"bachletuankhai"},"content":"     * {@code predicate}.","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"bachletuankhai"},"content":"     * Returns true if the model has previous address book states to restore.","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"bachletuankhai"},"content":"     * @return True if the model has previous address book states to restore, false","lastModifiedDate":"2024-03-29"},{"lineNumber":106,"author":{"gitId":"bachletuankhai"},"content":"     *         otherwise.","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"bachletuankhai"},"content":"    boolean canUndoAddressBook();","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"bachletuankhai"},"content":"     * Returns true if the model has undone address book states to restore.","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"bachletuankhai"},"content":"     * @return True if the model has undone address book states to restore, false","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"bachletuankhai"},"content":"     *         otherwise.","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"bachletuankhai"},"content":"    boolean canRedoAddressBook();","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"bachletuankhai"},"content":"     * Restores the model\u0027s address book to its previous state.","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"bachletuankhai"},"content":"     * @return The result of the undo operation.","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"bachletuankhai"},"content":"    CommandResult undoAddressBook() throws UndoException;","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"bachletuankhai"},"content":"     * Restores the model\u0027s address book to its previously undone state.","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"bachletuankhai"},"content":"     * @return The result of the redo operation.","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"bachletuankhai"},"content":"    CommandResult redoAddressBook() throws UndoException, CommandException;","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"bachletuankhai"},"content":"     * Adds a reversible command to the history for undo/redo.","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"bachletuankhai"},"content":"    void addCommand(ReversibleCommand command);","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"julia-cp":7,"bachletuankhai":50,"-":79}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.ReversibleCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.exceptions.UndoException;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.history.CommandHistoryManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.history.ReversibleCommandHistory;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"    private final ReversibleCommandHistory commandHistory;","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs, and an","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"     * empty command history.","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"        commandHistory \u003d new CommandHistoryManager();","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"bachletuankhai"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"bachletuankhai"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"julia-cp"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"julia-cp"},"content":"    public void groupPerson(Person target, int groupNumber) {","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"julia-cp"},"content":"        requireAllNonNull(target, groupNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"julia-cp"},"content":"        addressBook.groupPerson(target, groupNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"bachletuankhai"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"bachletuankhai"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"bachletuankhai"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"bachletuankhai"},"content":"     * internal list of {@code versionedAddressBook}","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":162,"author":{"gitId":"bachletuankhai"},"content":"        return addressBook.equals(otherModelManager.addressBook) \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2024-03-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"bachletuankhai"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Command History","lastModifiedDate":"2024-03-29"},{"lineNumber":167,"author":{"gitId":"bachletuankhai"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":168,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":169,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":170,"author":{"gitId":"bachletuankhai"},"content":"    public void addCommand(ReversibleCommand command) {","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"bachletuankhai"},"content":"        commandHistory.addCommand(command);","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":175,"author":{"gitId":"bachletuankhai"},"content":"    public boolean canUndoAddressBook() {","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"bachletuankhai"},"content":"        return commandHistory.canUndo();","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"bachletuankhai"},"content":"    public boolean canRedoAddressBook() {","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"bachletuankhai"},"content":"        return commandHistory.canRedo();","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":183,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":184,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":185,"author":{"gitId":"bachletuankhai"},"content":"    public CommandResult undoAddressBook() throws UndoException {","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"bachletuankhai"},"content":"        ReversibleCommand command \u003d commandHistory.getCommandToUndo();","lastModifiedDate":"2024-03-29"},{"lineNumber":187,"author":{"gitId":"bachletuankhai"},"content":"        return command.undo(this);","lastModifiedDate":"2024-03-29"},{"lineNumber":188,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":189,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":190,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":191,"author":{"gitId":"bachletuankhai"},"content":"    public CommandResult redoAddressBook() throws UndoException, CommandException {","lastModifiedDate":"2024-03-29"},{"lineNumber":192,"author":{"gitId":"bachletuankhai"},"content":"        ReversibleCommand command \u003d commandHistory.getCommandToRedo();","lastModifiedDate":"2024-03-29"},{"lineNumber":193,"author":{"gitId":"bachletuankhai"},"content":"        return command.redo(this);","lastModifiedDate":"2024-03-29"},{"lineNumber":194,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":195,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"julia-cp":7,"bachletuankhai":49,"-":140}},{"path":"src/main/java/seedu/address/model/person/Categories.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":" * Enum for three categories of contacts.","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"public enum Categories {","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"    PARTICIPANT, STAFF, SPONSOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"     * @param test string to be tested.","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"     * @return boolean whether enum contains test.","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"    public static boolean contains(String test) {","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"        for (Categories c : Categories.values()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"            if (c.name().equals(test)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"                return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"        return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"dhlee03":21}},{"path":"src/main/java/seedu/address/model/person/Category.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":" * Represents a Person\u0027s category in the address book.","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"public class Category {","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"            \"Category should be one of participant, staff, and sponsor.\";","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"    public final String value;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"     * Constructs a {@code Category}.","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"     * @param category one of Participant, Staff, and Sponsors.","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"    public Category(String category) {","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"        requireNonNull(category);","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"        checkArgument(isValidCategory(category), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"        value \u003d category;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"     * Returns true if a given string is a valid Category.","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"    public static boolean isValidCategory(String test) {","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"        return Categories.contains(test);","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"        return value;","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"        if (!(other instanceof Category)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"        Category otherCategory \u003d (Category) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"        return value.equals(otherCategory.value);","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"dhlee03"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"dhlee03"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"dhlee03":57}},{"path":"src/main/java/seedu/address/model/person/Comment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":" * Represents a Person\u0027s comment in the address book.","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidComment(String)}","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"public class Comment {","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Comment can take any values, and it should not be blank\";","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"     * The first character of the comment must not be a whitespace,","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"    public static final String DEFAULT_COMMENT \u003d \"No comment provided.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"    public final String value;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"     * Constructs a {@code Comment} with the default comment.","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"    public Comment() {","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"        value \u003d DEFAULT_COMMENT;","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"     * Constructs an {@code Comment}.","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"     * @param comment A valid comment.","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"    public Comment(String comment) {","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"        requireNonNull(comment);","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"        checkArgument(isValidComment(comment), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"        value \u003d comment;","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"     * Returns true if a given string is a valid comment.","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"    public static boolean isValidComment(String test) {","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"    public String toString() {","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"        return value;","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"dhlee03"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"dhlee03"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"dhlee03"},"content":"            return true;","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"dhlee03"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"dhlee03"},"content":"        if (!(other instanceof Comment)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"dhlee03"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"dhlee03"},"content":"        Comment otherComment \u003d (Comment) other;","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"dhlee03"},"content":"        return value.equals(otherComment.value);","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"dhlee03"},"content":"    public int hashCode() {","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"dhlee03"},"content":"        return value.hashCode();","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"dhlee03":71}},{"path":"src/main/java/seedu/address/model/person/Group.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":" * Represents a Person\u0027s group in the hackathon.","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"public class Group {","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"            \"Group should be a positive integer.\";","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"    private static int totalGroupNumber \u003d 0;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"    private final int groupNumber;","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"     * Constructs a {@code Group} with group number 0.","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"    public Group() {","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"        this.groupNumber \u003d 0;","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"     * Constructs a {@code Group}.","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"     * @param groupNumber a positive integer.","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"    public Group(int groupNumber) {","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"        checkArgument(isValidGroup(groupNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"        this.groupNumber \u003d groupNumber;","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"     * Returns true if a given string is a valid Group.","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"    public static boolean isValidGroup(int test) {","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"        return test \u003e\u003d 0;","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"     * Sets the last group number.","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"    public static void setTotalGroupNumber(int lastNumber) {","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"        totalGroupNumber \u003d lastNumber;","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"     * Returns the last group number.","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"    public static int getTotalGroupNumber() {","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"        return totalGroupNumber;","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"dhlee03"},"content":"     * Returns the group number.","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":56,"author":{"gitId":"dhlee03"},"content":"    public int getGroupNumber() {","lastModifiedDate":"2024-03-22"},{"lineNumber":57,"author":{"gitId":"dhlee03"},"content":"        return groupNumber;","lastModifiedDate":"2024-03-22"},{"lineNumber":58,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":59,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":60,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":61,"author":{"gitId":"dhlee03"},"content":"    public String toString() {","lastModifiedDate":"2024-03-22"},{"lineNumber":62,"author":{"gitId":"dhlee03"},"content":"        return Integer.toString(groupNumber);","lastModifiedDate":"2024-03-22"},{"lineNumber":63,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":64,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":65,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":66,"author":{"gitId":"dhlee03"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-22"},{"lineNumber":67,"author":{"gitId":"dhlee03"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-22"},{"lineNumber":68,"author":{"gitId":"dhlee03"},"content":"            return true;","lastModifiedDate":"2024-03-22"},{"lineNumber":69,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":70,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":71,"author":{"gitId":"dhlee03"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-22"},{"lineNumber":72,"author":{"gitId":"dhlee03"},"content":"        if (!(other instanceof Group)) {","lastModifiedDate":"2024-03-22"},{"lineNumber":73,"author":{"gitId":"dhlee03"},"content":"            return false;","lastModifiedDate":"2024-03-22"},{"lineNumber":74,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":75,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":76,"author":{"gitId":"dhlee03"},"content":"        Group otherCategory \u003d (Group) other;","lastModifiedDate":"2024-03-22"},{"lineNumber":77,"author":{"gitId":"dhlee03"},"content":"        return groupNumber \u003d\u003d otherCategory.groupNumber;","lastModifiedDate":"2024-03-22"},{"lineNumber":78,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":79,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"dhlee03":79}},{"path":"src/main/java/seedu/address/model/person/Participant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":" * Represents a participants in hackathon.","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"public class Participant extends Person {","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"    private Group group;","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"     * Constructs participants. Every field must be present and not null.","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"    public Participant(Name name, Phone phone, Email email, Category category) {","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"        super(name, phone, email, category);","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"        this.group \u003d new Group();","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"     * Constructs participants with comment. Every field must be present and not null.","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"    public Participant(Name name, Phone phone, Email email, Category category, Comment comment) {","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"        super(name, phone, email, category, comment);","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"        this.group \u003d new Group();","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"julia-cp"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"julia-cp"},"content":"     * Sets the group number of the participant.","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"julia-cp"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"julia-cp"},"content":"    public void setGroupNumber(int groupNumber) {","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"julia-cp"},"content":"        this.group \u003d new Group(groupNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"     * Returns the group number of the participant.","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"    public int getGroupNumber() {","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"        return group.getGroupNumber();","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"    public boolean isSamePerson(Person other) {","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"            return true;","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"        if (!(other instanceof Participant)) {","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"            return false;","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"        return super.isSamePerson(other);","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"dhlee03":43,"julia-cp":7}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"public abstract class Person {","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"    private final Category category;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"    private final Comment comment;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"    public Person(Name name, Phone phone, Email email, Category category) {","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"        requireAllNonNull(name, phone, email, category);","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"        this.category \u003d category;","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"        this.comment \u003d new Comment();","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"     * Constructs person with comment. Every field must be present and not null.","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"    public Person(Name name, Phone phone, Email email, Category category, Comment comment) {","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"        requireAllNonNull(name, phone, email, category);","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"        this.email \u003d email;","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"        this.category \u003d category;","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"        this.comment \u003d comment;","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"dhlee03"},"content":"    public Category getCategory() {","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"dhlee03"},"content":"        return category;","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"dhlee03"},"content":"    public Comment getComment() {","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"dhlee03"},"content":"        return comment;","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":100,"author":{"gitId":"dhlee03"},"content":"                \u0026\u0026 category.equals(otherPerson.category);","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"dhlee03"},"content":"        return Objects.hash(name, phone, email);","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"dhlee03"},"content":"                .add(\"category\", category)","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"dhlee03"},"content":"                .add(\"comment\", comment)","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"dhlee03"},"content":"    public String toCsvString() {","lastModifiedDate":"2024-03-31"},{"lineNumber":121,"author":{"gitId":"dhlee03"},"content":"        return name + \",\" + phone + \",\" + email + \",\" + comment + \"\\n\";","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dhlee03":29,"-":94}},{"path":"src/main/java/seedu/address/model/person/PersonFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":" * Factory class for creating Person objects.","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"public class PersonFactory {","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"     * Creates a Person based on the category.","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"    public static Person createPerson(Name name, Phone phone, Email email, Category category) {","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"        switch (category.value) {","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"        case \"PARTICIPANT\":","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"            return new Participant(name, phone, email, category);","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"        case \"STAFF\":","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"            return new Staff(name, phone, email, category);","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"        case \"SPONSOR\":","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"            return new Sponsor(name, phone, email, category);","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"        default: // cannot happen due to category validation","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"            throw new IllegalArgumentException(\"Invalid category\");","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"     * Creates a Person based on the category and comment.","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"    public static Person createPerson(Name name, Phone phone, Email email, Category category, Comment comment) {","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"        switch (category.value) {","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"        case \"PARTICIPANT\":","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"            return new Participant(name, phone, email, category, comment);","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"        case \"STAFF\":","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"            return new Staff(name, phone, email, category, comment);","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"        case \"SPONSOR\":","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"            return new Sponsor(name, phone, email, category, comment);","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"        default: // cannot happen due to category validation","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"            throw new IllegalArgumentException(\"Invalid category\");","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"dhlee03":38}},{"path":"src/main/java/seedu/address/model/person/Sponsor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":" * Represents a sponsor in the hackathon.","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"public class Sponsor extends Person {","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"     * Constructs a sponsor. Every field must be present and not null.","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"    public Sponsor(Name name, Phone phone, Email email, Category category) {","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"        super(name, phone, email, category);","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"     * Constructs a sponsor with comment. Every field must be present and not null.","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"    public Sponsor(Name name, Phone phone, Email email, Category category, Comment comment) {","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"        super(name, phone, email, category, comment);","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"    public boolean isSamePerson(Person other) {","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"            return true;","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"        if (!(other instanceof Sponsor)) {","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"            return false;","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"        return super.isSamePerson(other);","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"dhlee03":31}},{"path":"src/main/java/seedu/address/model/person/Staff.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":" * Represents a staff in the hackathon.","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"public class Staff extends Person {","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"    private Group group;","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"     * Constructs staff. Every field must be present and not null.","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"    public Staff(Name name, Phone phone, Email email, Category category) {","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"        super(name, phone, email, category);","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"        this.group \u003d new Group();","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"     * Constructs staff with comment. Every field must be present and not null.","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"    public Staff(Name name, Phone phone, Email email, Category category, Comment comment) {","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"        super(name, phone, email, category, comment);","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"        this.group \u003d new Group();","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"     * Sets the group number of the staff.","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"    public void setGroupNumber(int groupNumber) {","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"        this.group \u003d new Group(groupNumber);","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"     * Returns the group number of the staff.","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"    public int getGroupNumber() {","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"        return group.getGroupNumber();","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"    public boolean isSamePerson(Person other) {","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"            return true;","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"        if (!(other instanceof Staff)) {","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"            return false;","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"        return super.isSamePerson(other);","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"dhlee03":49}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"julia-cp"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"julia-cp"},"content":"     * Groups {@code target} into {@code groupNumber}.","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"julia-cp"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"julia-cp"},"content":"     * {@code groupNumber} must be a positive integer.","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"julia-cp"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"julia-cp"},"content":"    public void groupPerson(Person target, int groupNumber) {","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"julia-cp"},"content":"        requireAllNonNull(target, groupNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"julia-cp"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"julia-cp"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"julia-cp"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"julia-cp"},"content":"        if (target instanceof Staff) {","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"julia-cp"},"content":"            Staff staff \u003d (Staff) target;","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"julia-cp"},"content":"            staff.setGroupNumber(groupNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"julia-cp"},"content":"        } else if (target instanceof Participant) {","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"julia-cp"},"content":"            Participant participant \u003d (Participant) target;","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"julia-cp"},"content":"            participant.setGroupNumber(groupNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"julia-cp"},"content":"        internalList.set(index, target);","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"julia-cp":24,"-":150}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Category;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.PersonFactory;","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Person[]{","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"                PersonFactory.createPerson(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"                        new Email(\"alexyeoh@example.com\"), new Category(\"PARTICIPANT\")),","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"                PersonFactory.createPerson(new Name(\"Bernice Yu\"), new Phone(\"99272758\"),","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"                        new Email(\"berniceyu@example.com\"), new Category(\"PARTICIPANT\")),","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"                PersonFactory.createPerson(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"),","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"                        new Email(\"charlotte@example.com\"), new Category(\"PARTICIPANT\")),","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"                PersonFactory.createPerson(new Name(\"David Li\"), new Phone(\"91031282\"),","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"                        new Email(\"lidavid@example.com\"), new Category(\"PARTICIPANT\")),","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"                PersonFactory.createPerson(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"),","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"                        new Email(\"irfan@example.com\"), new Category(\"PARTICIPANT\")),","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"                PersonFactory.createPerson(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"),","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"                        new Email(\"royb@example.com\"), new Category(\"PARTICIPANT\")),","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"                PersonFactory.createPerson(new Name(\"Gogle\"), new Phone(\"12345678\"),","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"                        new Email(\"gogle@example.com\"), new Category(\"SPONSOR\")),","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"                PersonFactory.createPerson(new Name(\"Facebok\"), new Phone(\"87654321\"),","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"                        new Email(\"facebok@example.com\"), new Category(\"SPONSOR\")),","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"                PersonFactory.createPerson(new Name(\"Twiter\"), new Phone(\"87654322\"),","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"                        new Email(\"twiter@example.com\"), new Category(\"SPONSOR\")),","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"                PersonFactory.createPerson(new Name(\"Peter Lee\"), new Phone(\"7171717\"),","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"                        new Email(\"peterlee@example.com\"), new Category(\"STAFF\"))};","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"dhlee03":23,"-":25}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Category;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.PersonFactory;","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"    private final String category;","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"    private final String comment;","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"category\") String category,","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"                             @JsonProperty(\"comment\") String comment) {","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"        this.category \u003d category;","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"        this.comment \u003d comment;","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"        category \u003d source.getCategory().value;","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"        comment \u003d source.getComment().value;","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"dhlee03"},"content":"        if (category \u003d\u003d null) {","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"dhlee03"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"dhlee03"},"content":"                    Category.class.getSimpleName()));","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"dhlee03"},"content":"        if (!Category.isValidCategory(category)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"dhlee03"},"content":"            throw new IllegalValueException(Category.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"dhlee03"},"content":"        final Category modelCategory \u003d new Category(category);","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"dhlee03"},"content":"        if (comment \u003d\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"dhlee03"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"dhlee03"},"content":"                    Comment.class.getSimpleName()));","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"dhlee03"},"content":"        if (!Comment.isValidComment(comment)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"dhlee03"},"content":"            throw new IllegalValueException(Comment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"dhlee03"},"content":"        final Comment modelComment \u003d new Comment(comment);","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"dhlee03"},"content":"        return PersonFactory.createPerson(modelName, modelPhone, modelEmail, modelCategory, modelComment);","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"dhlee03":28,"-":77}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"    private Consumer\u003cString\u003e commandToHistorySaver \u003d (commandText) -\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"    };","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"        // command box.","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor} and 2","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"     * suppliers for the previous and next command.","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"     * @param commandExecutor         The command executor.","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"     * @param previousCommandSupplier The supplier for the previous command.","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"     * @param nextCommandSupplier     The supplier for the next command.","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"     * @param commandToHistorySaver   The consumer for saving the command to","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"     *                                history.","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"    public CommandBox(CommandExecutor commandExecutor, Supplier\u003cString\u003e previousCommandSupplier,","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"            Supplier\u003cString\u003e nextCommandSupplier, Consumer\u003cString\u003e commandToHistorySaver) {","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"        this(commandExecutor);","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"        setArrowKeyHandler(previousCommandSupplier, nextCommandSupplier);","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"        this.commandToHistorySaver \u003d commandToHistorySaver;","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"     * Sets the action handler for arrow key events. This handler will cycle through","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"     * the command history.","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"    private void setArrowKeyHandler(Supplier\u003cString\u003e previousCommandSupplier, Supplier\u003cString\u003e nextCommandSupplier) {","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"        commandTextField.addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"            switch (event.getCode()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"            case UP:","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"                setNullableUserInput(previousCommandSupplier);","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"                event.consume();","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"                break;","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"            case DOWN:","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"                setNullableUserInput(nextCommandSupplier);","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"                event.consume();","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"bachletuankhai"},"content":"                break;","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"bachletuankhai"},"content":"            default:","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"bachletuankhai"},"content":"                // let the event pass","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"bachletuankhai"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"bachletuankhai"},"content":"        });","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"bachletuankhai"},"content":"     * Sets the user input to the given supplier\u0027s result if it is not null.","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"bachletuankhai"},"content":"     * @param supplier The supplier to get the user input from.","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"bachletuankhai"},"content":"    private void setNullableUserInput(Supplier\u003cString\u003e supplier) {","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"bachletuankhai"},"content":"        String result \u003d supplier.get();","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"bachletuankhai"},"content":"        if (result \u003d\u003d null) {","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"bachletuankhai"},"content":"            return;","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"bachletuankhai"},"content":"        commandTextField.setText(result);","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"bachletuankhai"},"content":"        commandTextField.positionCaret(result.length());","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"bachletuankhai"},"content":"     * Saves the command to history.","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"bachletuankhai"},"content":"     * @param commandText The command text to be saved.","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"bachletuankhai"},"content":"    private void saveCommandToHistory(String commandText) {","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"bachletuankhai"},"content":"        commandToHistorySaver.accept(commandText);","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":111,"author":{"gitId":"bachletuankhai"},"content":"        saveCommandToHistory(commandText);","lastModifiedDate":"2024-03-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"bachletuankhai":70,"-":83}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.inputhistory.UserInputHistory;","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":" * The Main Window. Provides the basic application layout containing a menu bar","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":" * and space where other JavaFX elements can be placed.","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"bachletuankhai"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666 is fixed in later version of","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"bachletuankhai"},"content":"         * SDK.","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"bachletuankhai"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will not","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"bachletuankhai"},"content":"         * work when the focus is in them because the key event is consumed by the","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"bachletuankhai"},"content":"         * TextInputControl(s).","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"bachletuankhai"},"content":"         * help window purposely so to support accelerators even when focus is in","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"bachletuankhai"},"content":"         * CommandBox or ResultDisplay.","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"bachletuankhai"},"content":"        UserInputHistory\u003cString\u003e history \u003d logic.getUserInputHistory();","lastModifiedDate":"2024-03-31"},{"lineNumber":125,"author":{"gitId":"bachletuankhai"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand, history::getPreviousChat, history::getNextChat,","lastModifiedDate":"2024-03-31"},{"lineNumber":126,"author":{"gitId":"bachletuankhai"},"content":"                history::addChatToHistory);","lastModifiedDate":"2024-03-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"bachletuankhai":14,"-":186}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.person.Category;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Participant;","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"     * keywords in JavaFX.","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"     * issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"    private Label category;","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"    @FXML","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"    private Label group;","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"     * display.","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"        id.setText(displayedIndex + \"\");","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"dhlee03"},"content":"        group.setText(getGroupNumber(person));","lastModifiedDate":"2024-03-22"},{"lineNumber":58,"author":{"gitId":"dhlee03"},"content":"        category.setText(person.getCategory().value);","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"        category.getStyleClass().add(getCategoryStyleClass(person.getCategory()));","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"    private String getCategoryStyleClass(Category category) {","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"        return \"category-label-\" + category.value.toLowerCase();","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":65,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":66,"author":{"gitId":"dhlee03"},"content":"    private String getGroupNumber(Person person) {","lastModifiedDate":"2024-03-22"},{"lineNumber":67,"author":{"gitId":"dhlee03"},"content":"        switch (person.getCategory().value) {","lastModifiedDate":"2024-03-22"},{"lineNumber":68,"author":{"gitId":"dhlee03"},"content":"        case \"PARTICIPANT\":","lastModifiedDate":"2024-03-22"},{"lineNumber":69,"author":{"gitId":"dhlee03"},"content":"            return Integer.toString(((Participant) person).getGroupNumber());","lastModifiedDate":"2024-03-22"},{"lineNumber":70,"author":{"gitId":"dhlee03"},"content":"        case \"STAFF\":","lastModifiedDate":"2024-03-22"},{"lineNumber":71,"author":{"gitId":"dhlee03"},"content":"            return Integer.toString(((Staff) person).getGroupNumber());","lastModifiedDate":"2024-03-22"},{"lineNumber":72,"author":{"gitId":"dhlee03"},"content":"        default:","lastModifiedDate":"2024-03-22"},{"lineNumber":73,"author":{"gitId":"dhlee03"},"content":"            return \"N/A (Sponsors)\";","lastModifiedDate":"2024-03-22"},{"lineNumber":74,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"dhlee03":17,"bachletuankhai":13,"-":46}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"\u003cStackPane styleClass\u003d\"round-container\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"    \u003cInsets top\u003d\"1\" right\u003d\"3\" bottom\u003d\"1\" left\u003d\"3\" /\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"bachletuankhai":5,"-":8}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #21222c;","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"  -fx-font-size: 14pt;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #2c2d37;","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"  -fx-base: #2c2d37;","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"  -fx-control-inner-background: #2c2d37;","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #2c2d37;","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":".table-view .column-header,","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":".table-view .filler {","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-color: transparent transparent derive(-fx-base, 80%) transparent;","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: transparent;","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"bachletuankhai"},"content":".list-header {","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #55565b;","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-radius: 13 13 0 0;","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"bachletuankhai"},"content":"  -fx-min-height: 35px;","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"bachletuankhai"},"content":"  -fx-max-height: 35px;","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"bachletuankhai"},"content":".list-header .label {","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"bachletuankhai"},"content":"  -fx-font-size: 12pt;","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"bachletuankhai"},"content":"  -fx-font-family: \"Segoe UI Bold\";","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"bachletuankhai"},"content":"  -fx-font-weight: 700;","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"bachletuankhai"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"bachletuankhai"},"content":"  -fx-opacity: 1;","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  -fx-graphic-text-gap: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #2c2d37;","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-color: #21222c;","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"bachletuankhai"},"content":"  /* bottom border only */","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-width: 0 0 1 0;","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #2c2d37;","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-color: #21222c;","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"bachletuankhai"},"content":"  /* bottom border only */","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-width: 0 0 1 0;","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"  -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"bachletuankhai"},"content":".list-container {","lastModifiedDate":"2024-03-16"},{"lineNumber":144,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: rgba(49, 51, 65, 0.2);","lastModifiedDate":"2024-03-21"},{"lineNumber":145,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-width: 0;","lastModifiedDate":"2024-03-16"},{"lineNumber":146,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-insets: 0;","lastModifiedDate":"2024-03-16"},{"lineNumber":147,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-radius: 13 13 0 0;","lastModifiedDate":"2024-03-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"  -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":163,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #2c2d37;","lastModifiedDate":"2024-03-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":167,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #21222c;","lastModifiedDate":"2024-03-14"},{"lineNumber":168,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-width: 0px;","lastModifiedDate":"2024-03-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #191a21;","lastModifiedDate":"2024-03-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":176,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #2c2d37;","lastModifiedDate":"2024-03-14"},{"lineNumber":177,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-width: 0;","lastModifiedDate":"2024-03-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"  -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":180,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":181,"author":{"gitId":"bachletuankhai"},"content":"  -fx-max-height: 85;","lastModifiedDate":"2024-03-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"  -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"  -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":192,"author":{"gitId":"bachletuankhai"},"content":"  -fx-font-size: 11pt;","lastModifiedDate":"2024-03-16"},{"lineNumber":193,"author":{"gitId":"bachletuankhai"},"content":"  -fx-max-height: 30px;","lastModifiedDate":"2024-03-16"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #191a21;","lastModifiedDate":"2024-03-16"},{"lineNumber":198,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-color: #191a21;","lastModifiedDate":"2024-03-16"},{"lineNumber":199,"author":{"gitId":"-"},"content":"  -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"  -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #343746;","lastModifiedDate":"2024-03-16"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #191a21;","lastModifiedDate":"2024-03-16"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"  -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"  -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"bachletuankhai"},"content":".button:pressed,","lastModifiedDate":"2024-03-14"},{"lineNumber":261,"author":{"gitId":"bachletuankhai"},"content":".button:default:hover:pressed {","lastModifiedDate":"2024-03-14"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"  -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"  -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"  -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"  -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"bachletuankhai"},"content":".button:disabled,","lastModifiedDate":"2024-03-14"},{"lineNumber":275,"author":{"gitId":"bachletuankhai"},"content":".button:default:disabled {","lastModifiedDate":"2024-03-14"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"  -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"  -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"  -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"  -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"  -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"  -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"  -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":316,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #21222c;","lastModifiedDate":"2024-03-21"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":319,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":320,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #3f4047;","lastModifiedDate":"2024-03-21"},{"lineNumber":321,"author":{"gitId":"-"},"content":"  -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"bachletuankhai"},"content":".scroll-bar .increment-button,","lastModifiedDate":"2024-03-14"},{"lineNumber":325,"author":{"gitId":"bachletuankhai"},"content":".scroll-bar .decrement-button {","lastModifiedDate":"2024-03-14"},{"lineNumber":326,"author":{"gitId":"-"},"content":"  -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":327,"author":{"gitId":"-"},"content":"  -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":330,"author":{"gitId":"bachletuankhai"},"content":".scroll-bar .increment-arrow,","lastModifiedDate":"2024-03-14"},{"lineNumber":331,"author":{"gitId":"bachletuankhai"},"content":".scroll-bar .decrement-arrow {","lastModifiedDate":"2024-03-14"},{"lineNumber":332,"author":{"gitId":"-"},"content":"  -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":335,"author":{"gitId":"bachletuankhai"},"content":".scroll-bar:vertical .increment-arrow,","lastModifiedDate":"2024-03-14"},{"lineNumber":336,"author":{"gitId":"bachletuankhai"},"content":".scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2024-03-14"},{"lineNumber":337,"author":{"gitId":"-"},"content":"  -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":340,"author":{"gitId":"bachletuankhai"},"content":".scroll-bar:horizontal .increment-arrow,","lastModifiedDate":"2024-03-14"},{"lineNumber":341,"author":{"gitId":"bachletuankhai"},"content":".scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2024-03-14"},{"lineNumber":342,"author":{"gitId":"-"},"content":"  -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":345,"author":{"gitId":"bachletuankhai"},"content":".round-container {","lastModifiedDate":"2024-03-14"},{"lineNumber":346,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #2c2d37;","lastModifiedDate":"2024-03-14"},{"lineNumber":347,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-insets: 0;","lastModifiedDate":"2024-03-14"},{"lineNumber":348,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-width: 0;","lastModifiedDate":"2024-03-14"},{"lineNumber":349,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-radius: 13 13 13 13;","lastModifiedDate":"2024-03-14"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-14"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":352,"author":{"gitId":"bachletuankhai"},"content":".category-label {","lastModifiedDate":"2024-03-21"},{"lineNumber":353,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: transparent;","lastModifiedDate":"2024-03-21"},{"lineNumber":354,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-radius: 15 15 15 15;","lastModifiedDate":"2024-03-21"},{"lineNumber":355,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-radius: 15 15 15 15;","lastModifiedDate":"2024-03-21"},{"lineNumber":356,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-insets: 0;","lastModifiedDate":"2024-03-21"},{"lineNumber":357,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-width: 2;","lastModifiedDate":"2024-03-21"},{"lineNumber":358,"author":{"gitId":"bachletuankhai"},"content":"  -fx-font-size: 11pt;","lastModifiedDate":"2024-03-21"},{"lineNumber":359,"author":{"gitId":"bachletuankhai"},"content":"  -fx-font-family: \"Segoe UI Bold\";","lastModifiedDate":"2024-03-21"},{"lineNumber":360,"author":{"gitId":"bachletuankhai"},"content":"  -fx-font-weight: 700;","lastModifiedDate":"2024-03-21"},{"lineNumber":361,"author":{"gitId":"bachletuankhai"},"content":"  -fx-padding: 5 10 5 10;","lastModifiedDate":"2024-03-21"},{"lineNumber":362,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-21"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":364,"author":{"gitId":"bachletuankhai"},"content":".category-label-participant {","lastModifiedDate":"2024-03-21"},{"lineNumber":365,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: rgba(64, 186, 140, 0.15);","lastModifiedDate":"2024-03-21"},{"lineNumber":366,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-color: #40ba8c;","lastModifiedDate":"2024-03-21"},{"lineNumber":367,"author":{"gitId":"bachletuankhai"},"content":"  -fx-text-fill: #40ba8c !important; /* Important to override the default color */","lastModifiedDate":"2024-03-21"},{"lineNumber":368,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-21"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":370,"author":{"gitId":"bachletuankhai"},"content":".category-label-sponsor {","lastModifiedDate":"2024-03-21"},{"lineNumber":371,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: rgba(169, 186, 64, 0.15);","lastModifiedDate":"2024-03-21"},{"lineNumber":372,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-color: #a9ba40;","lastModifiedDate":"2024-03-21"},{"lineNumber":373,"author":{"gitId":"bachletuankhai"},"content":"  -fx-text-fill: #a9ba40 !important; /* Important to override the default color */","lastModifiedDate":"2024-03-21"},{"lineNumber":374,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-21"},{"lineNumber":375,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":376,"author":{"gitId":"bachletuankhai"},"content":".category-label-staff {","lastModifiedDate":"2024-03-21"},{"lineNumber":377,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: rgba(103, 133, 193, 0.15);","lastModifiedDate":"2024-03-21"},{"lineNumber":378,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-color: #6785c1;","lastModifiedDate":"2024-03-21"},{"lineNumber":379,"author":{"gitId":"bachletuankhai"},"content":"  -fx-text-fill: #6785c1 !important; /* Important to override the default color */","lastModifiedDate":"2024-03-21"},{"lineNumber":380,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-21"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":382,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":383,"author":{"gitId":"-"},"content":"  -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":384,"author":{"gitId":"-"},"content":"  -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":385,"author":{"gitId":"bachletuankhai"},"content":"  -fx-padding: 10 0 10 0;","lastModifiedDate":"2024-03-21"},{"lineNumber":386,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-21"},{"lineNumber":387,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":388,"author":{"gitId":"bachletuankhai"},"content":"#cardPane .label {","lastModifiedDate":"2024-03-21"},{"lineNumber":389,"author":{"gitId":"bachletuankhai"},"content":"  -fx-font-size: 12pt;","lastModifiedDate":"2024-03-21"},{"lineNumber":390,"author":{"gitId":"bachletuankhai"},"content":"  -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2024-03-21"},{"lineNumber":391,"author":{"gitId":"bachletuankhai"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2024-03-21"},{"lineNumber":392,"author":{"gitId":"bachletuankhai"},"content":"  -fx-opacity: 1;","lastModifiedDate":"2024-03-21"},{"lineNumber":393,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":395,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":396,"author":{"gitId":"-"},"content":"  -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":397,"author":{"gitId":"bachletuankhai"},"content":"  -fx-text-fill: #f70d1a;","lastModifiedDate":"2024-03-14"},{"lineNumber":398,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":400,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":401,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #2c2d37;","lastModifiedDate":"2024-03-14"},{"lineNumber":402,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-radius: 13 13 13 13;","lastModifiedDate":"2024-03-14"},{"lineNumber":403,"author":{"gitId":"-"},"content":"  -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":404,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-width: 0;","lastModifiedDate":"2024-03-14"},{"lineNumber":405,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":406,"author":{"gitId":"-"},"content":"  -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":407,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":408,"author":{"gitId":"bachletuankhai"},"content":"  -fx-min-height: 50;","lastModifiedDate":"2024-03-14"},{"lineNumber":409,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":411,"author":{"gitId":"bachletuankhai"},"content":"#filterField,","lastModifiedDate":"2024-03-14"},{"lineNumber":412,"author":{"gitId":"bachletuankhai"},"content":"#personListPanel,","lastModifiedDate":"2024-03-14"},{"lineNumber":413,"author":{"gitId":"bachletuankhai"},"content":"#personWebpage {","lastModifiedDate":"2024-03-14"},{"lineNumber":414,"author":{"gitId":"-"},"content":"  -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":415,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":417,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2024-03-14"},{"lineNumber":418,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #2c2d37;","lastModifiedDate":"2024-03-14"},{"lineNumber":419,"author":{"gitId":"-"},"content":"  -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":420,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-width: 0;","lastModifiedDate":"2024-03-14"},{"lineNumber":421,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":423,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":424,"author":{"gitId":"-"},"content":"  -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":425,"author":{"gitId":"-"},"content":"  -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":426,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":428,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":429,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":430,"author":{"gitId":"-"},"content":"  -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":431,"author":{"gitId":"-"},"content":"  -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":432,"author":{"gitId":"-"},"content":"  -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":433,"author":{"gitId":"-"},"content":"  -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":434,"author":{"gitId":"-"},"content":"  -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":435,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"bachletuankhai":111,"-":324}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background: transparent;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bachletuankhai":1,"-":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"         title\u003d\"HackLink\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"            \u003cInsets top\u003d\"12\" right\u003d\"20\" bottom\u003d\"8\" left\u003d\"20\" /\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"                   minHeight\u003d\"110\" prefHeight\u003d\"110\" maxHeight\u003d\"115\"\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"            \u003cInsets top\u003d\"8\" right\u003d\"20\" bottom\u003d\"8\" left\u003d\"20\" /\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"            \u003cInsets top\u003d\"8\" right\u003d\"20\" bottom\u003d\"8\" left\u003d\"20\" /\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"bachletuankhai":5,"-":55}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"        \u003cGridPane HBox.hgrow\u003d\"ALWAYS\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"            \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"                \u003cColumnConstraints percentWidth\u003d\"8\" fx:id\u003d\"idColumn\"/\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"                \u003cColumnConstraints percentWidth\u003d\"20\" fx:id\u003d\"nameColumn\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"                \u003cColumnConstraints percentWidth\u003d\"20\" fx:id\u003d\"emailColumn\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"                \u003cColumnConstraints percentWidth\u003d\"20\" fx:id\u003d\"phoneColumn\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"                \u003cColumnConstraints percentWidth\u003d\"15\" fx:id\u003d\"categoryColumn\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"                \u003cColumnConstraints percentWidth\u003d\"17\" fx:id\u003d\"groupColumn\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"            \u003c/columnConstraints\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"            \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_small_label\" GridPane.columnIndex\u003d\"0\" alignment\u003d\"CENTER\"","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"                   GridPane.hgrow\u003d\"ALWAYS\" GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"            \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$first\" GridPane.columnIndex\u003d\"1\" alignment\u003d\"CENTER\"","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"                   GridPane.hgrow\u003d\"ALWAYS\" GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" GridPane.columnIndex\u003d\"2\"","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"                   alignment\u003d\"CENTER\" GridPane.hgrow\u003d\"ALWAYS\" GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" GridPane.columnIndex\u003d\"3\"","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"                   alignment\u003d\"CENTER\" GridPane.hgrow\u003d\"ALWAYS\" GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"            \u003cLabel fx:id\u003d\"category\" styleClass\u003d\"category-label\" text\u003d\"\\$category\" GridPane.columnIndex\u003d\"4\"","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"                   alignment\u003d\"CENTER\" GridPane.hgrow\u003d\"ALWAYS\" GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"            \u003cLabel fx:id\u003d\"group\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$group\" GridPane.columnIndex\u003d\"5\"","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"                   alignment\u003d\"CENTER\" GridPane.hgrow\u003d\"ALWAYS\" GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"        \u003c/GridPane\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dhlee03":17,"bachletuankhai":5,"-":18}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"\u003cVBox styleClass\u003d\"list-container\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"    \u003cGridPane styleClass\u003d\"list-header\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"            \u003cColumnConstraints percentWidth\u003d\"8\" fx:id\u003d\"idColumn\"/\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"            \u003cColumnConstraints percentWidth\u003d\"20\" fx:id\u003d\"nameColumn\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"            \u003cColumnConstraints percentWidth\u003d\"20\" fx:id\u003d\"emailColumn\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"            \u003cColumnConstraints percentWidth\u003d\"20\" fx:id\u003d\"phoneColumn\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"            \u003cColumnConstraints percentWidth\u003d\"16\" fx:id\u003d\"categoryColumn\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"            \u003cColumnConstraints percentWidth\u003d\"16\" fx:id\u003d\"groupColumn\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"        \u003cLabel text\u003d\"ID\" GridPane.columnIndex\u003d\"0\" alignment\u003d\"CENTER\" GridPane.hgrow\u003d\"ALWAYS\"","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"               GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"        \u003cLabel text\u003d\"NAME\" GridPane.columnIndex\u003d\"1\" alignment\u003d\"CENTER\" GridPane.hgrow\u003d\"ALWAYS\"","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"               GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"        \u003cLabel text\u003d\"EMAIL\" GridPane.columnIndex\u003d\"2\" alignment\u003d\"CENTER\" GridPane.hgrow\u003d\"ALWAYS\"","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"               GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"        \u003cLabel text\u003d\"PHONE\" GridPane.columnIndex\u003d\"3\" alignment\u003d\"CENTER\" GridPane.hgrow\u003d\"ALWAYS\"","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"               GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"        \u003cLabel text\u003d\"CATEGORY\" GridPane.columnIndex\u003d\"4\" alignment\u003d\"CENTER\" GridPane.hgrow\u003d\"ALWAYS\"","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"               GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"        \u003cLabel text\u003d\"GROUP\" GridPane.columnIndex\u003d\"5\" alignment\u003d\"CENTER\" GridPane.hgrow\u003d\"ALWAYS\"","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"               GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dhlee03":17,"bachletuankhai":9,"-":7}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"round-container\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\" minHeight\u003d\"95\"\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"    \u003cInsets top\u003d\"5\" right\u003d\"3\" bottom\u003d\"5\" left\u003d\"3\" /\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"bachletuankhai":6,"-":7}},{"path":"src/test/java/seedu/address/commons/util/QueueUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"class QueueUtilTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"    private QueueUtil\u003cInteger\u003e queue;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"    void setUp() {","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"        queue \u003d new QueueUtil\u003c\u003e(5);","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    void addLast_threeItems_sizeIsThree() {","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(1);","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(2);","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(3);","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(3, queue.size());","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"    void addLast_sixItems_onlyFiveItemsRemaining() {","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(1);","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(2);","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(3);","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(4);","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(5);","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(6);","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(5, queue.size());","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(2, queue.get(0));","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"    void pollFirst_addThreeItems_itemsOutFifo() {","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(1);","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(2);","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(3);","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(1, queue.pollFirst());","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(2, queue.pollFirst());","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(3, queue.pollFirst());","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"        assertNull(queue.pollFirst());","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"        assertTrue(queue.isEmpty());","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"    void get_addThreeItems_correctIndex() {","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(1);","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(2);","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(3);","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(1, queue.get(0));","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(2, queue.get(1));","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(3, queue.get(2));","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e queue.get(-1));","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e queue.get(3));","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"    void size_addThreeItems_correctSize() {","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(0, queue.size());","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(1);","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(1, queue.size());","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(2);","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(2, queue.size());","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"        queue.pollFirst();","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(1, queue.size());","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"bachletuankhai"},"content":"    void traverseUp_tailToHead_correctOrderAndNullReachingHead() {","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(1);","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(2);","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(3);","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(3, queue.traverseUp());","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(2, queue.traverseUp());","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(1, queue.traverseUp());","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(null, queue.traverseUp());","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"bachletuankhai"},"content":"    void traverseDown_afterTraversingUp_correctOrderAndNull() {","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(1);","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(2);","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(3);","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"bachletuankhai"},"content":"        queue.traverseUp();","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"bachletuankhai"},"content":"        queue.traverseUp();","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"bachletuankhai"},"content":"        queue.traverseUp();","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(2, queue.traverseDown());","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(3, queue.traverseDown());","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"bachletuankhai"},"content":"        assertNull(queue.traverseDown());","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"bachletuankhai"},"content":"    void isEmpty_addItemThenPoll_correctSize() {","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"bachletuankhai"},"content":"        assertTrue(queue.isEmpty());","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(1);","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"bachletuankhai"},"content":"        assertFalse(queue.isEmpty());","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"bachletuankhai"},"content":"        queue.pollFirst();","lastModifiedDate":"2024-03-31"},{"lineNumber":107,"author":{"gitId":"bachletuankhai"},"content":"        assertTrue(queue.isEmpty());","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"bachletuankhai":109}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CATEGORY_DESC_PARTICIPANT;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"dhlee03"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-04-03"},{"lineNumber":169,"author":{"gitId":"dhlee03"},"content":"                + CATEGORY_DESC_PARTICIPANT;","lastModifiedDate":"2024-04-03"},{"lineNumber":170,"author":{"gitId":"dhlee03"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"dhlee03":4,"-":171}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":" * Contains integration tests (interaction with the Model) for","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":" * {@code AddCommand}.","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)), expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"    public void undo_afterAddingNewPerson_removesPerson() throws CommandException {","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"        Command addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"        addCommand.execute(model);","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"        assertCommandSuccess(new UndoCommand(), model,","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS_UNDO, Messages.format(validPerson)), expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"    public void redo_afterUndo_addsPerson() throws CommandException {","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"        Command addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"        addCommand.execute(model);","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"        Command undoCommand \u003d new UndoCommand();","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"bachletuankhai"},"content":"        undoCommand.execute(model);","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"bachletuankhai"},"content":"        assertCommandSuccess(new RedoCommand(), model,","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"bachletuankhai"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)), expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"bachletuankhai":33,"-":45}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.exceptions.UndoException;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"    public void undo_validPerson_success() throws CommandException, UndoException {","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"        // Execute the add command","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"        addCommand.execute(modelStub);","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"        // Undo the add command","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"        CommandResult undoResult \u003d addCommand.undo(modelStub);","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"        // Verify that the person is removed from the model","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"        assertFalse(modelStub.personsAdded.contains(validPerson));","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS_UNDO, Messages.format(validPerson)),","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"bachletuankhai"},"content":"                undoResult.getFeedbackToUser());","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"bachletuankhai"},"content":"    public void undo_nonExistentPerson_throwsCommandException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"bachletuankhai"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"bachletuankhai"},"content":"        Person nonExistentPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"bachletuankhai"},"content":"        AddCommand addCommand \u003d new AddCommand(nonExistentPerson);","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"bachletuankhai"},"content":"        // Undo the add command for a non-existent person","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"bachletuankhai"},"content":"        String expectedMessage \u003d AddCommand.MESSAGE_UNDO_NONEXISTENT_PERSON;","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"bachletuankhai"},"content":"        assertThrows(UndoException.class, expectedMessage, () -\u003e addCommand.undo(modelStub));","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"bachletuankhai"},"content":"    public void redo_validPerson_success() throws CommandException, UndoException {","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"bachletuankhai"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"bachletuankhai"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"bachletuankhai"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"bachletuankhai"},"content":"        // Execute the add command","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"bachletuankhai"},"content":"        addCommand.execute(modelStub);","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"bachletuankhai"},"content":"        // Undo the add command","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"bachletuankhai"},"content":"        addCommand.undo(modelStub);","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"bachletuankhai"},"content":"        // Redo the add command","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"bachletuankhai"},"content":"        CommandResult redoResult \u003d addCommand.redo(modelStub);","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"bachletuankhai"},"content":"        // Verify that the person is added back to the model","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"bachletuankhai"},"content":"        assertTrue(modelStub.personsAdded.contains(validPerson));","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"bachletuankhai"},"content":"                redoResult.getFeedbackToUser());","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"julia-cp"},"content":"        @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":203,"author":{"gitId":"julia-cp"},"content":"        public void groupPerson(Person target, int groupNumber) {","lastModifiedDate":"2024-04-03"},{"lineNumber":204,"author":{"gitId":"julia-cp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":205,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":206,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":217,"author":{"gitId":"bachletuankhai"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":218,"author":{"gitId":"bachletuankhai"},"content":"        public CommandResult undoAddressBook() throws UndoException {","lastModifiedDate":"2024-03-29"},{"lineNumber":219,"author":{"gitId":"bachletuankhai"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":220,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":221,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":222,"author":{"gitId":"bachletuankhai"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":223,"author":{"gitId":"bachletuankhai"},"content":"        public CommandResult redoAddressBook() throws UndoException {","lastModifiedDate":"2024-03-29"},{"lineNumber":224,"author":{"gitId":"bachletuankhai"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":225,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":226,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":227,"author":{"gitId":"bachletuankhai"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":228,"author":{"gitId":"bachletuankhai"},"content":"        public boolean canUndoAddressBook() {","lastModifiedDate":"2024-03-29"},{"lineNumber":229,"author":{"gitId":"bachletuankhai"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":230,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":231,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":232,"author":{"gitId":"bachletuankhai"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":233,"author":{"gitId":"bachletuankhai"},"content":"        public boolean canRedoAddressBook() {","lastModifiedDate":"2024-03-29"},{"lineNumber":234,"author":{"gitId":"bachletuankhai"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":235,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":236,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":237,"author":{"gitId":"bachletuankhai"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":238,"author":{"gitId":"bachletuankhai"},"content":"        public void addCommand(ReversibleCommand command) {","lastModifiedDate":"2024-03-29"},{"lineNumber":239,"author":{"gitId":"bachletuankhai"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":240,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":262,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":263,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":283,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":284,"author":{"gitId":"bachletuankhai"},"content":"        @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":285,"author":{"gitId":"bachletuankhai"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2024-03-28"},{"lineNumber":286,"author":{"gitId":"bachletuankhai"},"content":"            personsAdded.remove(target);","lastModifiedDate":"2024-03-28"},{"lineNumber":287,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":288,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":289,"author":{"gitId":"bachletuankhai"},"content":"        @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":290,"author":{"gitId":"bachletuankhai"},"content":"        public void addCommand(ReversibleCommand c) {","lastModifiedDate":"2024-03-30"},{"lineNumber":291,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"julia-cp":5,"bachletuankhai":85,"-":204}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"    public static final String VALID_CATEGORY_PARTICIPANT \u003d \"PARTICIPANT\";","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"julia-cp"},"content":"    public static final String VALID_CATEGORY_STAFF \u003d \"STAFF\";","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"julia-cp"},"content":"    public static final int VALID_GROUP \u003d 2;","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"    public static final String CATEGORY_DESC_PARTICIPANT \u003d \" \" + PREFIX_CATEGORY + VALID_CATEGORY_PARTICIPANT;","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"julia-cp"},"content":"    public static final String CATEGORY_DESC_STAFF \u003d \" \" + PREFIX_CATEGORY + VALID_CATEGORY_STAFF;","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"julia-cp"},"content":"    public static final String GROUP_DESC \u003d \" \" + PREFIX_GROUP + VALID_GROUP;","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"julia-cp"},"content":"    public static final String INVALID_GROUP_DESC \u003d \" \" + PREFIX_GROUP + \"one\"; // not an integer","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"dhlee03"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"dhlee03"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"dhlee03":4,"julia-cp":7,"-":112}},{"path":"src/test/java/seedu/address/logic/commands/CommentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"public class CommentCommandTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"    public void execute_comment_success() throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"        CommentCommand commentCommand \u003d new CommentCommand(INDEX_FIRST_PERSON, new Comment(\"This is a comment.\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"        commentCommand.execute(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"        assertEquals(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()).getComment(),","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"                new Comment(\"This is a comment.\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"    public void execute_no_comment() {","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"        Comment comment \u003d new Comment(\"No comment provided.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"        assertEquals(comment, person.getComment());","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"    public void undo() throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"        CommentCommand commentCommand \u003d new CommentCommand(INDEX_FIRST_PERSON, new Comment(\"This is a comment.\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"        commentCommand.execute(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"        commentCommand.undo(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"        assertEquals(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()).getComment(),","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"                new Comment(\"She is an Expert.\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"    public void redo() throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"        CommentCommand commentCommand \u003d new CommentCommand(INDEX_FIRST_PERSON, new Comment(\"This is a comment.\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"        commentCommand.execute(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"        commentCommand.undo(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"        commentCommand.redo(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"        assertEquals(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()).getComment(),","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"                new Comment(\"This is a comment.\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"dhlee03":52}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":113,"author":{"gitId":"bachletuankhai"},"content":"    public void executeUndoRedo_validIndexUnfilteredList_success() {","lastModifiedDate":"2024-03-30"},{"lineNumber":114,"author":{"gitId":"bachletuankhai"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"bachletuankhai"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-30"},{"lineNumber":116,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":117,"author":{"gitId":"bachletuankhai"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-30"},{"lineNumber":118,"author":{"gitId":"bachletuankhai"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2024-03-30"},{"lineNumber":119,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"bachletuankhai"},"content":"        // delete -\u003e first person deleted","lastModifiedDate":"2024-03-30"},{"lineNumber":121,"author":{"gitId":"bachletuankhai"},"content":"        assertCommandSuccess(deleteCommand, model,","lastModifiedDate":"2024-03-30"},{"lineNumber":122,"author":{"gitId":"bachletuankhai"},"content":"                String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)),","lastModifiedDate":"2024-03-30"},{"lineNumber":123,"author":{"gitId":"bachletuankhai"},"content":"                expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":124,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":125,"author":{"gitId":"bachletuankhai"},"content":"        // undo -\u003e reverts addressbook back to previous state and filtered person list","lastModifiedDate":"2024-03-30"},{"lineNumber":126,"author":{"gitId":"bachletuankhai"},"content":"        // to show all persons","lastModifiedDate":"2024-03-30"},{"lineNumber":127,"author":{"gitId":"bachletuankhai"},"content":"        expectedModel.addPerson(personToDelete);","lastModifiedDate":"2024-03-30"},{"lineNumber":128,"author":{"gitId":"bachletuankhai"},"content":"        assertCommandSuccess(new UndoCommand(), model,","lastModifiedDate":"2024-03-30"},{"lineNumber":129,"author":{"gitId":"bachletuankhai"},"content":"                String.format(DeleteCommand.MESSAGE_SUCCESS_UNDO, Messages.format(personToDelete)), expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"bachletuankhai"},"content":"        // redo -\u003e same first person deleted again","lastModifiedDate":"2024-03-30"},{"lineNumber":132,"author":{"gitId":"bachletuankhai"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"bachletuankhai"},"content":"        assertCommandSuccess(new RedoCommand(), model,","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"bachletuankhai"},"content":"                String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)),","lastModifiedDate":"2024-03-30"},{"lineNumber":135,"author":{"gitId":"bachletuankhai"},"content":"                expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":136,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":137,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"bachletuankhai":26,"-":120}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":" * EditCommand.","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"dhlee03"},"content":"                .build();","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"dhlee03"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"bachletuankhai"},"content":"     * Edit filtered list where index is larger than size of filtered list, but","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"bachletuankhai"},"content":"     * smaller than size of address book","lastModifiedDate":"2024-03-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":150,"author":{"gitId":"bachletuankhai"},"content":"    public void executeUndoRedo_validIndexUnfilteredList_success() throws Exception {","lastModifiedDate":"2024-03-30"},{"lineNumber":151,"author":{"gitId":"bachletuankhai"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-30"},{"lineNumber":152,"author":{"gitId":"bachletuankhai"},"content":"        Person personToEdit \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-30"},{"lineNumber":153,"author":{"gitId":"bachletuankhai"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":154,"author":{"gitId":"bachletuankhai"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-03-30"},{"lineNumber":155,"author":{"gitId":"bachletuankhai"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-30"},{"lineNumber":156,"author":{"gitId":"bachletuankhai"},"content":"        expectedModel.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":157,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":158,"author":{"gitId":"bachletuankhai"},"content":"        // edit -\u003e first person edited","lastModifiedDate":"2024-03-30"},{"lineNumber":159,"author":{"gitId":"bachletuankhai"},"content":"        editCommand.execute(model);","lastModifiedDate":"2024-03-30"},{"lineNumber":160,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":161,"author":{"gitId":"bachletuankhai"},"content":"        // undo -\u003e reverts addressbook back to previous state and filtered person list","lastModifiedDate":"2024-03-30"},{"lineNumber":162,"author":{"gitId":"bachletuankhai"},"content":"        // to show all persons","lastModifiedDate":"2024-03-30"},{"lineNumber":163,"author":{"gitId":"bachletuankhai"},"content":"        expectedModel.setPerson(editedPerson, personToEdit);","lastModifiedDate":"2024-03-30"},{"lineNumber":164,"author":{"gitId":"bachletuankhai"},"content":"        assertCommandSuccess(new UndoCommand(), model,","lastModifiedDate":"2024-03-30"},{"lineNumber":165,"author":{"gitId":"bachletuankhai"},"content":"                String.format(EditCommand.MESSAGE_SUCCESS_UNDO, Messages.format(personToEdit)), expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":166,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":167,"author":{"gitId":"bachletuankhai"},"content":"        // redo -\u003e same first person edited again","lastModifiedDate":"2024-03-30"},{"lineNumber":168,"author":{"gitId":"bachletuankhai"},"content":"        expectedModel.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":169,"author":{"gitId":"bachletuankhai"},"content":"        assertCommandSuccess(new RedoCommand(), model,","lastModifiedDate":"2024-03-30"},{"lineNumber":170,"author":{"gitId":"bachletuankhai"},"content":"                String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)), expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":171,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":172,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":173,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":174,"author":{"gitId":"julia-cp"},"content":"    public void execute_editNonSponsorGroup_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":175,"author":{"gitId":"julia-cp"},"content":"        PersonBuilder editedPersonBuilder \u003d new PersonBuilder();","lastModifiedDate":"2024-04-03"},{"lineNumber":176,"author":{"gitId":"julia-cp"},"content":"        Person editedPerson \u003d editedPersonBuilder.withCategory(\"PARTICIPANT\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":177,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":178,"author":{"gitId":"julia-cp"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson)","lastModifiedDate":"2024-04-03"},{"lineNumber":179,"author":{"gitId":"julia-cp"},"content":"                .withGroup(2).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":180,"author":{"gitId":"julia-cp"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-04-03"},{"lineNumber":181,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":182,"author":{"gitId":"julia-cp"},"content":"        Model modelUsed \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":183,"author":{"gitId":"julia-cp"},"content":"        modelUsed.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-04-03"},{"lineNumber":184,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":185,"author":{"gitId":"julia-cp"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-04-03"},{"lineNumber":186,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":187,"author":{"gitId":"julia-cp"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":188,"author":{"gitId":"julia-cp"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-04-03"},{"lineNumber":189,"author":{"gitId":"julia-cp"},"content":"        expectedModel.groupPerson(editedPerson, 2);","lastModifiedDate":"2024-04-03"},{"lineNumber":190,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":191,"author":{"gitId":"julia-cp"},"content":"        assertCommandSuccess(editCommand, modelUsed, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":192,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":193,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":194,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":195,"author":{"gitId":"julia-cp"},"content":"    public void execute_editSponsorGroup_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":196,"author":{"gitId":"julia-cp"},"content":"        PersonBuilder editedPersonBuilder \u003d new PersonBuilder();","lastModifiedDate":"2024-04-03"},{"lineNumber":197,"author":{"gitId":"julia-cp"},"content":"        Person editedPerson \u003d editedPersonBuilder.withCategory(\"SPONSOR\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":198,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":199,"author":{"gitId":"julia-cp"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson)","lastModifiedDate":"2024-04-03"},{"lineNumber":200,"author":{"gitId":"julia-cp"},"content":"                .withGroup(2).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":201,"author":{"gitId":"julia-cp"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-04-03"},{"lineNumber":202,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":203,"author":{"gitId":"julia-cp"},"content":"        Model modelUsed \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":204,"author":{"gitId":"julia-cp"},"content":"        modelUsed.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-04-03"},{"lineNumber":205,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":206,"author":{"gitId":"julia-cp"},"content":"        assertCommandFailure(editCommand, modelUsed, EditCommand.MESSAGE_SPONSOR_HAS_NO_GROUP);","lastModifiedDate":"2024-04-03"},{"lineNumber":207,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":208,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":209,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":210,"author":{"gitId":"julia-cp"},"content":"    public void execute_editSponsor_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":211,"author":{"gitId":"julia-cp"},"content":"        PersonBuilder editedPersonBuilder \u003d new PersonBuilder();","lastModifiedDate":"2024-04-03"},{"lineNumber":212,"author":{"gitId":"julia-cp"},"content":"        Person editedPerson \u003d editedPersonBuilder.withCategory(\"SPONSOR\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":213,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":214,"author":{"gitId":"julia-cp"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":215,"author":{"gitId":"julia-cp"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-04-03"},{"lineNumber":216,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":217,"author":{"gitId":"julia-cp"},"content":"        Model modelUsed \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":218,"author":{"gitId":"julia-cp"},"content":"        modelUsed.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-04-03"},{"lineNumber":219,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":220,"author":{"gitId":"julia-cp"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-04-03"},{"lineNumber":221,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":222,"author":{"gitId":"julia-cp"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":223,"author":{"gitId":"julia-cp"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-04-03"},{"lineNumber":224,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":225,"author":{"gitId":"julia-cp"},"content":"        assertCommandSuccess(editCommand, modelUsed, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":226,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":227,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"dhlee03":2,"julia-cp":55,"bachletuankhai":28,"-":178}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"julia-cp"},"content":"                + editPersonDescriptor.getGroup().orElse(null) + \", group\u003d\"","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"dhlee03"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \"}\";","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"dhlee03":1,"julia-cp":1,"-":58}},{"path":"src/test/java/seedu/address/logic/commands/GroupCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"julia-cp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"julia-cp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"julia-cp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"julia-cp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"julia-cp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"julia-cp"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"julia-cp"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"julia-cp"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"julia-cp"},"content":"public class GroupCommandTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"julia-cp"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"julia-cp"},"content":"    public void execute_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"julia-cp"},"content":"        Person personToGroup \u003d new PersonBuilder().build();","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"julia-cp"},"content":"        model.setPerson(model.getFilteredPersonList().get(0), personToGroup);","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"julia-cp"},"content":"        GroupCommand groupCommand \u003d new GroupCommand(INDEX_FIRST_PERSON, 2);","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"julia-cp"},"content":"        String expectedMessage \u003d String.format(GroupCommand.MESSAGE_GROUP_PERSON_SUCCESS,","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"julia-cp"},"content":"                Messages.format(personToGroup));","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"julia-cp"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"julia-cp"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), personToGroup);","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"julia-cp"},"content":"        expectedModel.groupPerson(personToGroup, 2);","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"julia-cp"},"content":"        assertCommandSuccess(groupCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"julia-cp"},"content":"    public void execute_noTargetGroup_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"julia-cp"},"content":"        Person personToGroup \u003d new PersonBuilder().build();","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"julia-cp"},"content":"        model.setPerson(model.getFilteredPersonList().get(0), personToGroup);","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"julia-cp"},"content":"        GroupCommand groupCommandToSetTotalGroupNumber \u003d new GroupCommand(INDEX_FIRST_PERSON, 3);","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"julia-cp"},"content":"        GroupCommand groupCommand \u003d new GroupCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"julia-cp"},"content":"        String expectedMessage \u003d String.format(GroupCommand.MESSAGE_GROUP_PERSON_SUCCESS,","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"julia-cp"},"content":"                Messages.format(personToGroup));","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"julia-cp"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"julia-cp"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), personToGroup);","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"julia-cp"},"content":"        assertCommandSuccess(groupCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"julia-cp"},"content":"    public void execute_invalidPersonIndex_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"julia-cp"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"julia-cp"},"content":"        GroupCommand groupCommand \u003d new GroupCommand(outOfBoundIndex, 2);","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"julia-cp"},"content":"        assertCommandFailure(groupCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"julia-cp"},"content":"    public void execute_groupSponsor_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"julia-cp"},"content":"        Person personToGroup \u003d new PersonBuilder().withCategory(\"SPONSOR\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"julia-cp"},"content":"        model.setPerson(model.getFilteredPersonList().get(0), personToGroup);","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"julia-cp"},"content":"        GroupCommand groupCommand \u003d new GroupCommand(INDEX_FIRST_PERSON, 2);","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"julia-cp"},"content":"        assertCommandFailure(groupCommand, model, GroupCommand.MESSAGE_PERSON_WITHOUT_GROUP);","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"julia-cp"},"content":"    public void execute_groupStaff_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"julia-cp"},"content":"        Person personToGroup \u003d new PersonBuilder().withCategory(\"STAFF\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"julia-cp"},"content":"        model.setPerson(model.getFilteredPersonList().get(0), personToGroup);","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"julia-cp"},"content":"        GroupCommand groupCommand \u003d new GroupCommand(INDEX_FIRST_PERSON, 2);","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"julia-cp"},"content":"        String expectedMessage \u003d String.format(GroupCommand.MESSAGE_GROUP_PERSON_SUCCESS,","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"julia-cp"},"content":"                Messages.format(personToGroup));","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"julia-cp"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"julia-cp"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), personToGroup);","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"julia-cp"},"content":"        expectedModel.groupPerson(personToGroup, 2);","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"julia-cp"},"content":"        assertCommandSuccess(groupCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"julia-cp"},"content":"    public void execute_groupParticipant_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"julia-cp"},"content":"        Person personToGroup \u003d new PersonBuilder().withCategory(\"PARTICIPANT\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"julia-cp"},"content":"        model.setPerson(model.getFilteredPersonList().get(0), personToGroup);","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"julia-cp"},"content":"        GroupCommand groupCommand \u003d new GroupCommand(INDEX_FIRST_PERSON, 2);","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"julia-cp"},"content":"        String expectedMessage \u003d String.format(GroupCommand.MESSAGE_GROUP_PERSON_SUCCESS,","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"julia-cp"},"content":"                Messages.format(personToGroup));","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"julia-cp"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"julia-cp"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), personToGroup);","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"julia-cp"},"content":"        expectedModel.groupPerson(personToGroup, 2);","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"julia-cp"},"content":"        assertCommandSuccess(groupCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"julia-cp"},"content":"    public void executeUndoRedo_validIndex_success() throws Exception {","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"julia-cp"},"content":"        Person personToGroup \u003d new PersonBuilder().withCategory(\"PARTICIPANT\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"julia-cp"},"content":"        model.setPerson(model.getFilteredPersonList().get(0), personToGroup);","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"julia-cp"},"content":"        GroupCommand previousGroupCommand \u003d new GroupCommand(INDEX_FIRST_PERSON, 4);","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"julia-cp"},"content":"        GroupCommand groupCommand \u003d new GroupCommand(INDEX_FIRST_PERSON, 2);","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"julia-cp"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"julia-cp"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), personToGroup);","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"julia-cp"},"content":"        expectedModel.groupPerson(personToGroup, 2);","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"julia-cp"},"content":"        // first person -\u003e group 4","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"julia-cp"},"content":"        previousGroupCommand.execute(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"julia-cp"},"content":"        // first person -\u003e group 2","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"julia-cp"},"content":"        groupCommand.execute(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"julia-cp"},"content":"        // undo -\u003e reverts addressbook back to previous state","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"julia-cp"},"content":"        expectedModel.groupPerson(personToGroup, 4);","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"julia-cp"},"content":"        assertCommandSuccess(new UndoCommand(), model,","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"julia-cp"},"content":"                String.format(GroupCommand.MESSAGE_SUCCESS_UNDO, Messages.format(personToGroup)), expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"julia-cp"},"content":"        // redo -\u003e same first person edited again","lastModifiedDate":"2024-04-03"},{"lineNumber":136,"author":{"gitId":"julia-cp"},"content":"        expectedModel.groupPerson(personToGroup, 2);","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"julia-cp"},"content":"        assertCommandSuccess(new RedoCommand(), model,","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"julia-cp"},"content":"                String.format(GroupCommand.MESSAGE_GROUP_PERSON_SUCCESS, Messages.format(personToGroup)),","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"julia-cp"},"content":"                expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"julia-cp"},"content":"    public void equals() {","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"julia-cp"},"content":"        final GroupCommand standardCommand \u003d new GroupCommand(INDEX_FIRST_PERSON, 2);","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"julia-cp"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"julia-cp"},"content":"        GroupCommand commandWithSameValues \u003d new GroupCommand(INDEX_FIRST_PERSON, 2);","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"julia-cp"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":150,"author":{"gitId":"julia-cp"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":151,"author":{"gitId":"julia-cp"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-04-03"},{"lineNumber":152,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":153,"author":{"gitId":"julia-cp"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":154,"author":{"gitId":"julia-cp"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-04-03"},{"lineNumber":155,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":156,"author":{"gitId":"julia-cp"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":157,"author":{"gitId":"julia-cp"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-04-03"},{"lineNumber":158,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":159,"author":{"gitId":"julia-cp"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":160,"author":{"gitId":"julia-cp"},"content":"        assertFalse(standardCommand.equals(new GroupCommand(INDEX_SECOND_PERSON, 2)));","lastModifiedDate":"2024-04-03"},{"lineNumber":161,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":162,"author":{"gitId":"julia-cp"},"content":"        // different targetGroupNumber -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":163,"author":{"gitId":"julia-cp"},"content":"        assertFalse(standardCommand.equals(new GroupCommand(INDEX_FIRST_PERSON, 3)));","lastModifiedDate":"2024-04-03"},{"lineNumber":164,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":165,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":166,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":167,"author":{"gitId":"julia-cp"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-04-03"},{"lineNumber":168,"author":{"gitId":"julia-cp"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-04-03"},{"lineNumber":169,"author":{"gitId":"julia-cp"},"content":"        int targetGroupNumber \u003d 2;","lastModifiedDate":"2024-04-03"},{"lineNumber":170,"author":{"gitId":"julia-cp"},"content":"        GroupCommand groupCommand \u003d new GroupCommand(INDEX_FIRST_PERSON, targetGroupNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":171,"author":{"gitId":"julia-cp"},"content":"        String expected \u003d GroupCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \", targetGroup\u003d\"","lastModifiedDate":"2024-04-03"},{"lineNumber":172,"author":{"gitId":"julia-cp"},"content":"                + targetGroupNumber + \"}\";","lastModifiedDate":"2024-04-03"},{"lineNumber":173,"author":{"gitId":"julia-cp"},"content":"        assertEquals(expected, groupCommand.toString());","lastModifiedDate":"2024-04-03"},{"lineNumber":174,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":175,"author":{"gitId":"julia-cp"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"julia-cp":175}},{"path":"src/test/java/seedu/address/logic/commands/GroupRandomCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"julia-cp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"julia-cp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"julia-cp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"julia-cp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"julia-cp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"julia-cp"},"content":"public class GroupRandomCommandTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"julia-cp"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"julia-cp"},"content":"    public void execute_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"julia-cp"},"content":"        GroupRandomCommand groupRandomCommand \u003d new GroupRandomCommand(3);","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"julia-cp"},"content":"        String expectedMessage \u003d String.format(GroupRandomCommand.MESSAGE_GROUP_RANDOM_SUCCESS);","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"julia-cp"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"julia-cp"},"content":"        assertCommandSuccess(groupRandomCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"julia-cp"},"content":"    public void execute_invalidGroupSize_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"julia-cp"},"content":"        GroupRandomCommand groupRandomCommand \u003d new GroupRandomCommand(0);","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"julia-cp"},"content":"        assertCommandFailure(groupRandomCommand, model, GroupRandomCommand.MESSAGE_INVALID_MAX_GROUP_SIZE);","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"julia-cp"},"content":"    public void executeUndoRedo_validIndex_success() throws Exception {","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"julia-cp"},"content":"        GroupRandomCommand groupRandomCommand \u003d new GroupRandomCommand(3);","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"julia-cp"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"julia-cp"},"content":"        groupRandomCommand.execute(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"julia-cp"},"content":"        // undo -\u003e reverts addressbook back to previous state","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"julia-cp"},"content":"        assertCommandSuccess(new UndoCommand(), model,","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"julia-cp"},"content":"                String.format(GroupRandomCommand.MESSAGE_SUCCESS_UNDO), expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"julia-cp"},"content":"        // redo -\u003e same first person edited again","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"julia-cp"},"content":"        assertCommandSuccess(new RedoCommand(), model,","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"julia-cp"},"content":"                String.format(GroupRandomCommand.MESSAGE_GROUP_RANDOM_SUCCESS), expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"julia-cp"},"content":"    public void equals() {","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"julia-cp"},"content":"        final GroupRandomCommand standardCommand \u003d new GroupRandomCommand(2);","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"julia-cp"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"julia-cp"},"content":"        GroupRandomCommand commandWithSameValues \u003d new GroupRandomCommand(2);","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"julia-cp"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"julia-cp"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"julia-cp"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"julia-cp"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"julia-cp"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"julia-cp"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"julia-cp"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"julia-cp"},"content":"        // different maxGroupSize -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"julia-cp"},"content":"        assertFalse(standardCommand.equals(new GroupRandomCommand(3)));","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"julia-cp"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"julia-cp"},"content":"        int maxGroupSize \u003d 2;","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"julia-cp"},"content":"        GroupRandomCommand groupRandomCommand \u003d new GroupRandomCommand(maxGroupSize);","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"julia-cp"},"content":"        String expected \u003d GroupRandomCommand.class.getCanonicalName() + \"{maxGroupSize\u003d\" + maxGroupSize + \"}\";","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"julia-cp"},"content":"        assertEquals(expected, groupRandomCommand.toString());","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"julia-cp"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"julia-cp":84}},{"path":"src/test/java/seedu/address/logic/commands/LinkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"public class LinkCommandTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"    public void execute_linkCommand_success() {","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"        int[] indexes \u003d {2, 3, 4};","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"        LinkCommand linkCommand \u003d new LinkCommand(indexes);","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"        try {","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"            linkCommand.execute(model);","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"            assertEquals(\"Exported all selected participants\", linkCommand.MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"            fail();","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"    public void execute_linkCommand_failure() {","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"        int[] indexes \u003d {999};","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"        LinkCommand linkCommand \u003d new LinkCommand(indexes);","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"        try {","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"            linkCommand.execute(model);","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"            fail();","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"            assertEquals(\"The person index provided is invalid\", e.getMessage());","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"    public void duplicateIndexes() {","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"        int[] indexes \u003d {2, 2, 3};","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"        LinkCommand linkCommand \u003d new LinkCommand(indexes);","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"        try {","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"            linkCommand.execute(model);","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"            fail();","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"            assertEquals(\"Duplicate index detected\", e.getMessage());","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"dhlee03":54}},{"path":"src/test/java/seedu/address/logic/commands/RedoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"class RedoCommandTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"    private Model model;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    void setUp() {","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"    void execute_noUndoneCommand_fail() {","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"        assertCommandFailure(new RedoCommand(), model, String.format(RedoCommand.MESSAGE_FAILURE_NO_COMMAND_TO_REDO));","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"bachletuankhai":25}},{"path":"src/test/java/seedu/address/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"class UndoCommandTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"    private Model model;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    void setUp() {","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"    void execute_emptyHistory_fail() {","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"        assertCommandFailure(new UndoCommand(), model, String.format(UndoCommand.MESSAGE_FAILURE_NO_COMMAND_TO_UNDO));","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"    public void execute_reversibleCommandStub_success() throws CommandException {","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"        Command command \u003d new ReversibleCommandStub();","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"        command.execute(model);","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"        // Stub execution has no effect on model","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"        assertCommandSuccess(new UndoCommand(), model, ReversibleCommandStub.MESSAGE_SUCCESS_UNDO, model);","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"    private class ReversibleCommandStub extends Command implements ReversibleCommand {","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"        public static final String MESSAGE_SUCCESS \u003d \"success\";","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"        public static final String MESSAGE_SUCCESS_UNDO \u003d \"undo\";","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"        public static final String MESSAGE_SUCCESS_REDO \u003d \"redo\";","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"        @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"        public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"            model.addCommand(this);","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"        @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"        public CommandResult undo(Model model) {","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"            return new CommandResult(MESSAGE_SUCCESS_UNDO);","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"        @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"        public CommandResult redo(Model model) {","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"            return new CommandResult(MESSAGE_SUCCESS_REDO);","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"bachletuankhai":57}},{"path":"src/test/java/seedu/address/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"public class ViewCommandTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"    public void execute() {","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"        assertEquals(\"Viewing comment of Person: Alice Pauline; Phone: 94351253; Email: alice@example.com; \"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"                + \"Category: PARTICIPANT\\n\" + \"She is an Expert.\", viewCommand.execute(model).getFeedbackToUser());","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"dhlee03":21}},{"path":"src/test/java/seedu/address/logic/inputhistory/UserInputHistoryManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.inputhistory;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"class UserInputHistoryManagerTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"    private static final String[] CHAT_HISTORY \u003d {\"Hello\", \"World\", \"How\", \"Are\", \"You\"};","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"    private UserInputHistoryManager history;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    void setUp() {","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"        history \u003d new UserInputHistoryManager();","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    void addInputs() {","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"        for (String chat : CHAT_HISTORY) {","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"            history.addChatToHistory(chat);","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"    void addChatToHistory() {","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"        addInputs();","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(history.size(), CHAT_HISTORY.length);","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"        assertTrue(history.hasHistory());","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"    void getPreviousChat() {","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"        addInputs();","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"        for (int i \u003d CHAT_HISTORY.length - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"            assertEquals(CHAT_HISTORY[i], history.getPreviousChat());","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"        assertNull(history.getPreviousChat());","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"    void getNextChat() {","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"        addInputs();","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"        for (int i \u003d CHAT_HISTORY.length - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"            history.getPreviousChat();","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"        for (int i \u003d 1; i \u003c CHAT_HISTORY.length; i++) {","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"            assertEquals(CHAT_HISTORY[i], history.getNextChat());","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"        assertNull(history.getNextChat());","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"    void getPreviousChat_emptyHistory_returnsNull() {","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"        assertNull(history.getPreviousChat());","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"    void getNextChat_emptyHistory_returnsNull() {","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"        assertNull(history.getNextChat());","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"    void hasHistory_emptyHistory_returnsFalse() {","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"        assertFalse(history.hasHistory());","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"bachletuankhai":69}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CATEGORY_DESC_PARTICIPANT;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CATEGORY_DESC_STAFF;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUP_DESC;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"                + CATEGORY_DESC_PARTICIPANT, new AddCommand(expectedPerson));","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB)","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":55,"author":{"gitId":"dhlee03"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + CATEGORY_DESC_PARTICIPANT,","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":57,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"julia-cp"},"content":"        // participant with a group","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"julia-cp"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"julia-cp"},"content":"                + CATEGORY_DESC_PARTICIPANT + GROUP_DESC, new AddCommand(expectedPerson));","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"julia-cp"},"content":"        // staff with a group","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"julia-cp"},"content":"        expectedPerson \u003d new PersonBuilder(BOB).withCategory(\"STAFF\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"julia-cp"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"julia-cp"},"content":"                + CATEGORY_DESC_STAFF + GROUP_DESC, new AddCommand(expectedPerson));","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"dhlee03"},"content":"                + CATEGORY_DESC_PARTICIPANT;","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"dhlee03"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"dhlee03"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"dhlee03"},"content":"                        + CATEGORY_DESC_PARTICIPANT,","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"dhlee03"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"dhlee03"},"content":"                        + CATEGORY_DESC_PARTICIPANT, expectedMessage);","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"dhlee03"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"dhlee03"},"content":"                        + CATEGORY_DESC_PARTICIPANT, expectedMessage);","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"dhlee03"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"dhlee03"},"content":"                        + CATEGORY_DESC_PARTICIPANT, expectedMessage);","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"dhlee03"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"dhlee03"},"content":"                        + CATEGORY_DESC_PARTICIPANT, expectedMessage);","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"dhlee03"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"dhlee03"},"content":"                + CATEGORY_DESC_PARTICIPANT, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"dhlee03"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"dhlee03"},"content":"                + CATEGORY_DESC_PARTICIPANT, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"dhlee03"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2024-04-03"},{"lineNumber":152,"author":{"gitId":"dhlee03"},"content":"                + CATEGORY_DESC_PARTICIPANT, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"dhlee03"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-04-03"},{"lineNumber":156,"author":{"gitId":"dhlee03"},"content":"                        + CATEGORY_DESC_PARTICIPANT, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":160,"author":{"gitId":"dhlee03"},"content":"                + CATEGORY_DESC_PARTICIPANT,","lastModifiedDate":"2024-04-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"dhlee03":26,"julia-cp":11,"-":126}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"julia-cp"},"content":"import seedu.address.logic.commands.GroupCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"julia-cp"},"content":"import seedu.address.logic.commands.GroupRandomCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"julia-cp"},"content":"    public void parseCommand_group() throws Exception {","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"julia-cp"},"content":"        GroupCommand command \u003d (GroupCommand) parser.parseCommand(GroupCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"julia-cp"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" 3\");","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"julia-cp"},"content":"        assertEquals(new GroupCommand(INDEX_FIRST_PERSON, 3), command);","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"julia-cp"},"content":"    public void parseCommand_grouprandom() throws Exception {","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"julia-cp"},"content":"        GroupRandomCommand command \u003d (GroupRandomCommand) parser.parseCommand(GroupRandomCommand.COMMAND_WORD","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"julia-cp"},"content":"                + \" \" + \" 3\");","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"julia-cp"},"content":"        assertEquals(new GroupRandomCommand(3), command);","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"julia-cp":17,"-":101}},{"path":"src/test/java/seedu/address/logic/parser/CommentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.commands.CommentCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"public class CommentCommandParserTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"    private CommentCommandParser parser \u003d new CommentCommandParser();","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"    public void parse_validArgs_returnsCommentCommand() {","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"        assertParseSuccess(parser, \"1 This is a comment.\",","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"                            new CommentCommand(INDEX_FIRST_PERSON, new Comment(\"This is a comment.\")));","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"                            String.format(MESSAGE_INVALID_COMMAND_FORMAT, CommentCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"dhlee03":26}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUP_DESC;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"dhlee03"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_PHONE_AMY,","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":88,"author":{"gitId":"dhlee03"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"dhlee03"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"julia-cp"},"content":"        // group","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"julia-cp"},"content":"        userInput \u003d targetIndex.getOneBased() + GROUP_DESC;","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"julia-cp"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withGroup(VALID_GROUP).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":154,"author":{"gitId":"dhlee03"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-04-03"},{"lineNumber":155,"author":{"gitId":"dhlee03"},"content":"                + PHONE_DESC_AMY + EMAIL_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB;","lastModifiedDate":"2024-04-03"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":158,"author":{"gitId":"dhlee03"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL));","lastModifiedDate":"2024-04-03"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":161,"author":{"gitId":"dhlee03"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_EMAIL_DESC + INVALID_PHONE_DESC","lastModifiedDate":"2024-04-03"},{"lineNumber":162,"author":{"gitId":"dhlee03"},"content":"                + INVALID_EMAIL_DESC;","lastModifiedDate":"2024-04-03"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":165,"author":{"gitId":"dhlee03"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL));","lastModifiedDate":"2024-04-03"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"dhlee03":9,"julia-cp":5,"-":153}},{"path":"src/test/java/seedu/address/logic/parser/GroupCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"julia-cp"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GROUP_DESC;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"julia-cp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"julia-cp"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"julia-cp"},"content":"import seedu.address.logic.commands.GroupCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Group;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"julia-cp"},"content":"public class GroupCommandParserTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"julia-cp"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"julia-cp"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"julia-cp"},"content":"    private GroupCommandParser parser \u003d new GroupCommandParser();","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"julia-cp"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"julia-cp"},"content":"        // no index specified","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"julia-cp"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"julia-cp"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"julia-cp"},"content":"        // negative index","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"julia-cp"},"content":"        assertParseFailure(parser, \"-5\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"julia-cp"},"content":"        // zero index","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"julia-cp"},"content":"        assertParseFailure(parser, \"0\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"julia-cp"},"content":"        // invalid index","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"julia-cp"},"content":"        assertParseFailure(parser, \"some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"julia-cp"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"julia-cp"},"content":"        // invalid group","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"julia-cp"},"content":"        assertParseFailure(parser, \"1\" + INVALID_GROUP_DESC,","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"julia-cp"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"julia-cp"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"julia-cp"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"julia-cp"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + VALID_GROUP;","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"julia-cp"},"content":"        GroupCommand expectedCommand \u003d new GroupCommand(targetIndex, VALID_GROUP);","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"julia-cp"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"julia-cp"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"julia-cp"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"julia-cp"},"content":"        String userInput \u003d String.valueOf(targetIndex.getOneBased());","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"julia-cp"},"content":"        Group.setTotalGroupNumber(1);","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"julia-cp"},"content":"        GroupCommand expectedCommand \u003d new GroupCommand(targetIndex);","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"julia-cp"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"julia-cp"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"julia-cp":73}},{"path":"src/test/java/seedu/address/logic/parser/GroupRandomCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"julia-cp"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"julia-cp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"julia-cp"},"content":"import seedu.address.logic.commands.GroupRandomCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"julia-cp"},"content":"public class GroupRandomCommandParserTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"julia-cp"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"julia-cp"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupRandomCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"julia-cp"},"content":"    private GroupRandomCommandParser parser \u003d new GroupRandomCommandParser();","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"julia-cp"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"julia-cp"},"content":"        // no maximum group size specified","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"julia-cp"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"julia-cp"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"julia-cp"},"content":"        // invalid maximum group size","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"julia-cp"},"content":"        assertParseFailure(parser, \"some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"julia-cp"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"julia-cp"},"content":"        int maxGroupSize \u003d 2;","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"julia-cp"},"content":"        String userInput \u003d \" \" + maxGroupSize;","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"julia-cp"},"content":"        GroupRandomCommand expectedCommand \u003d new GroupRandomCommand(maxGroupSize);","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"julia-cp"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"julia-cp"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"julia-cp":42}},{"path":"src/test/java/seedu/address/logic/parser/LinkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.commands.LinkCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"public class LinkCommandParserTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"    public void parse_oneIndex_success() {","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"        // single index","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"        LinkCommandParser parser \u003d new LinkCommandParser();","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"        assertParseSuccess(parser, \"1\", new LinkCommand(new int[] {0}));","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"    public void parse_multipleIndexes_success() {","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"        // multiple indexes","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"        LinkCommandParser parser \u003d new LinkCommandParser();","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"        assertParseSuccess(parser, \"1 2 3\", new LinkCommand(new int[] {0, 1, 2}));","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"    public void parse_invalidIndex_failure() {","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"        // invalid index","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"        LinkCommandParser parser \u003d new LinkCommandParser();","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"        assertParseFailure(parser, \"1 a\", LinkCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"dhlee03":31}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Group;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"julia-cp"},"content":"    private static final int INVALID_GROUP \u003d -1;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"julia-cp"},"content":"    private static final int VALID_GROUP \u003d 2;","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"julia-cp"},"content":"    public void parseGroup_null_throwsNullPointerException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"julia-cp"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseGroup((String) null));","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"julia-cp"},"content":"    public void parseGroup_invalidInteger_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"julia-cp"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGroup(String.valueOf(INVALID_GROUP)));","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"julia-cp"},"content":"    public void parseGroup_invalidValue_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"julia-cp"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGroup(\"random string\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"julia-cp"},"content":"    public void parseGroup_validValueWithoutWhitespace_returnsGroup() throws Exception {","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"julia-cp"},"content":"        Group expectedGroup \u003d new Group(VALID_GROUP);","lastModifiedDate":"2024-04-03"},{"lineNumber":136,"author":{"gitId":"julia-cp"},"content":"        assertEquals(expectedGroup, ParserUtil.parseGroup(String.valueOf(VALID_GROUP)));","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"julia-cp":12,"-":127}},{"path":"src/test/java/seedu/address/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"public class ViewCommandParserTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"    private ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"    public void parse_validArgs_returnsViewCommand() {","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"        assertParseSuccess(parser, \"1\", new ViewCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"dhlee03":23}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"dhlee03"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"dhlee03":2,"-":102}},{"path":"src/test/java/seedu/address/model/person/CommentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"public class CommentTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"    public void equals() {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"        Comment comment \u003d new Comment(\"Test comment\");","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"        assertEquals(comment, comment);","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"        assertNotEquals(comment, null);","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"        assertNotEquals(comment, 5);","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"        // different comment -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"        Comment differentComment \u003d new Comment(\"Different comment\");","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"        assertNotEquals(comment, differentComment);","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"        // same comment -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"        Comment sameComment \u003d new Comment(\"Test comment\");","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"        Comment sameComment2 \u003d new Comment(\"Test comment\");","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"        assertEquals(sameComment, sameComment2);","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"    public void isValidComment() {","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"        // no comment -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"        assertFalse(Comment.isValidComment(\"\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"        // invalid comment -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"        assertFalse(Comment.isValidComment(\" \"));","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"        // valid comment -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"        assertTrue(Comment.isValidComment(\"Test comment\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"dhlee03":44}},{"path":"src/test/java/seedu/address/model/person/GroupTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"public class GroupTest {","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"    public void constructor_null() {","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"        Group group \u003d new Group();","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"        assertEquals(group.getGroupNumber(), 0);","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"    public void constructor_valid() {","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"        Group group \u003d new Group(5);","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"        assertEquals(group.getGroupNumber(), 5);","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"    public void isValidGroup() {","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"        // invalid group number","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"        assertFalse(Group.isValidGroup(-1)); // negative number","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"        assertTrue(Group.isValidGroup(0)); // zero","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"        // valid group number","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"        assertTrue(Group.isValidGroup(0)); // zero","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"        assertTrue(Group.isValidGroup(100));","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"    public void equals() {","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"        Group group \u003d new Group(5);","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"        assertEquals(group, new Group(5));","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"        assertNotEquals(group, new Group(6));","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"    public void setTotalGroupNumber() {","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"        Group.setTotalGroupNumber(5);","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"        assertEquals(Group.getTotalGroupNumber(), 5);","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"dhlee03":50}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"dhlee03"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"dhlee03":1,"-":84}},{"path":"src/test/java/seedu/address/model/person/PersonFactoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"public class PersonFactoryTest {","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"    public void createPerson() {","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"        assertTrue(PersonFactory.createPerson(ALICE.getName(), ALICE.getPhone(), ALICE.getEmail(),","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"                new Category(\"STAFF\")) instanceof Staff);","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"        assertTrue(PersonFactory.createPerson(ALICE.getName(), ALICE.getPhone(), ALICE.getEmail(),","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"                new Category(\"PARTICIPANT\")) instanceof Participant);","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"        assertTrue(PersonFactory.createPerson(ALICE.getName(), ALICE.getPhone(), ALICE.getEmail(),","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"                new Category(\"SPONSOR\")) instanceof Sponsor);","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"dhlee03":20}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"dhlee03"},"content":"        String expected \u003d Participant.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName()","lastModifiedDate":"2024-03-22"},{"lineNumber":78,"author":{"gitId":"dhlee03"},"content":"                + \", phone\u003d\" + ALICE.getPhone() + \", email\u003d\" + ALICE.getEmail()","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"dhlee03"},"content":"                + \", category\u003d\" + ALICE.getCategory() + \", comment\u003d\" + ALICE.getComment()","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"dhlee03"},"content":"                + \"}\";","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"dhlee03":5,"-":78}},{"path":"src/test/java/seedu/address/model/person/SponsorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"public class SponsorTest {","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"    public void isSamePerson() {","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"        Sponsor sponsor \u003d (Sponsor) new PersonBuilder().withCategory(\"SPONSOR\").build();","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"        assert (sponsor.isSamePerson(sponsor));","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"        assert (!sponsor.isSamePerson(null));","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"        Staff staff \u003d (Staff) new PersonBuilder().withCategory(\"STAFF\").build();","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"        assert (!sponsor.isSamePerson(staff));","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"        Sponsor differentSponsor \u003d (Sponsor) new PersonBuilder().withCategory(\"SPONSOR\").withName(\"john\").build();","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"        assert (!sponsor.isSamePerson(differentSponsor));","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"dhlee03":25}},{"path":"src/test/java/seedu/address/model/person/StaffTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"public class StaffTest {","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"    public void isSamePerson() {","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"        Staff staff \u003d (Staff) new PersonBuilder().withCategory(\"STAFF\").withName(\"John\").build();","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"        Staff staffCopy \u003d (Staff) new PersonBuilder().withCategory(\"STAFF\").withName(\"John\").build();","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"        Staff other \u003d (Staff) new PersonBuilder().withCategory(\"STAFF\").withName(\"Peter\").build();","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"        assertFalse(staff.isSamePerson(other));","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"        assert (staff.isSamePerson(staffCopy));","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"        Sponsor sponsor \u003d (Sponsor) new PersonBuilder().withCategory(\"SPONSOR\").withName(\"Jake\").build();","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"        assertFalse(staff.isSamePerson(sponsor));","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"    public void getGroupNumber() {","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"        Staff test \u003d (Staff) new PersonBuilder().withCategory(\"STAFF\").withName(\"John\").build();","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"        test.setGroupNumber(1);","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"        assertNotEquals(5, test.getGroupNumber());","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"        assertEquals(1, test.getGroupNumber());","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"dhlee03":33}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"dhlee03"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"julia-cp"},"content":"    public void groupPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"julia-cp"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.groupPerson(ALICE, 2));","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"dhlee03":2,"julia-cp":5,"-":169}},{"path":"src/test/java/seedu/address/model/util/SampleDataUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.model.util;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"public class SampleDataUtilTest {","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"    public void getSamplePersons() {","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"        SampleDataUtil.getSamplePersons();","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"        for (int i \u003d 0; i \u003c 6; i++) {","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"            assertTrue(SampleDataUtil.getSamplePersons()[i] instanceof Person);","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"dhlee03":17}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"    private static final String INVALID_CATEGORY \u003d \"student\";","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"    private static final String VALID_CATEGORY \u003d BENSON.getCategory().toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"    private static final String VALID_COMMENT \u003d BENSON.getComment().toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_CATEGORY, VALID_COMMENT);","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"                VALID_CATEGORY, VALID_COMMENT);","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_CATEGORY, VALID_COMMENT);","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"dhlee03"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"dhlee03"},"content":"                VALID_CATEGORY, VALID_COMMENT);","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"dhlee03"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_CATEGORY, VALID_COMMENT);","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"dhlee03"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"dhlee03"},"content":"                VALID_CATEGORY, VALID_COMMENT);","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"dhlee03":12,"-":68}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Group;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"        descriptor.setCategory(person.getCategory());","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"julia-cp"},"content":"     * Sets the {@code groupNumber} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"julia-cp"},"content":"    public EditPersonDescriptorBuilder withGroup(int groupNumber) {","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"julia-cp"},"content":"        descriptor.setGroup(new Group(groupNumber));","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"dhlee03":1,"julia-cp":4,"-":66}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Category;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.PersonFactory;","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"    public static final String DEFAULT_CATEGORY \u003d \"PARTICIPANT\";","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"    public static final String DEFAULT_COMMENT \u003d \"No comment provided.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"    private Category category;","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"    private Comment comment;","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"        category \u003d new Category(DEFAULT_CATEGORY);","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"        comment \u003d new Comment(DEFAULT_COMMENT);","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"        category \u003d personToCopy.getCategory();","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"        comment \u003d personToCopy.getComment();","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"dhlee03"},"content":"     * Sets the {@code Category} of the {@code Category} that we are building.","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"dhlee03"},"content":"    public PersonBuilder withCategory(String category) {","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"dhlee03"},"content":"        this.category \u003d new Category(category);","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"dhlee03"},"content":"     * Sets the {@code Comment} of the {@code Person} that we are building.","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"dhlee03"},"content":"    public PersonBuilder withComment(String comment) {","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"dhlee03"},"content":"        this.comment \u003d new Comment(comment);","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"dhlee03"},"content":"        return PersonFactory.createPerson(name, phone, email, category, comment);","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"dhlee03":19,"-":76}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"        sb.append(PREFIX_CATEGORY + person.getCategory().value + \" \");","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"dhlee03":3,"-":44}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"            .withEmail(\"alice@example.com\").withPhone(\"94351253\").withComment(\"She is an Expert.\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withComment(\"No comment provided.\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"            .withEmail(\"heinz@example.com\").withComment(\"Sick.\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"            .withEmail(\"cornelia@example.com\").withCategory(\"SPONSOR\").withComment(\"No comment provided.\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"            .withEmail(\"werner@example.com\").withCategory(\"STAFF\").withComment(\"No comment provided.\").build();;","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"            .withEmail(\"lydia@example.com\").withCategory(\"PARTICIPANT\").withComment(\"Nice effort.\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"            .withEmail(\"anna@example.com\").withCategory(\"STAFF\").withComment(\"No comment provided.\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"            .withEmail(\"stefan@example.com\").withCategory(\"SPONSOR\")","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"            .withComment(\"No comment provided.\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"            .withEmail(\"hans@example.com\").withCategory(\"SPONSOR\")","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"            .withComment(\"No comment provided.\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"            .withEmail(VALID_EMAIL_AMY).withCategory(\"PARTICIPANT\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"            .withEmail(VALID_EMAIL_BOB).withCategory(\"PARTICIPANT\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":54,"author":{"gitId":"dhlee03"},"content":"    private TypicalPersons() {","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"dhlee03"},"content":"    } // prevents instantiation","lastModifiedDate":"2024-03-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"dhlee03":16,"-":55}}]
