[{"path":".github/ISSUE_TEMPLATE/bug_report.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"name: Bug report","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"about: Create a report to help us improve","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"title: \u0027\u0027","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"labels: \u0027\u0027","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"assignees: \u0027\u0027","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"**Describe the bug**","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"A clear and concise description of what the bug is.","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"**To Reproduce**","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"Steps to reproduce the behavior:","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"1. Go to \u0027...\u0027","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"2. Click on \u0027....\u0027","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"3. Scroll down to \u0027....\u0027","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"4. See error","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"**Expected behavior**","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"A clear and concise description of what you expected to happen.","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"**Screenshots**","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"If applicable, add screenshots to help explain your problem.","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"**Desktop (please complete the following information):**","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":" - OS: [e.g. iOS]","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":" - Browser [e.g. chrome, safari]","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":" - Version [e.g. 22]","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"**Additional context**","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"Add any other context about the problem here.","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"bachletuankhai":32}},{"path":".github/ISSUE_TEMPLATE/feature_request.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"name: Feature request","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"about: Suggest an idea for this project","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"title: \u0027\u0027","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"labels: \u0027\u0027","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"assignees: \u0027\u0027","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"**Is your feature request related to a problem? Please describe.**","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"A clear and concise description of what the problem is. Ex. I\u0027m always frustrated when [...]","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"**Describe the solution you\u0027d like**","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"A clear and concise description of what you want to happen.","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"**Describe alternatives you\u0027ve considered**","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"A clear and concise description of any alternative solutions or features you\u0027ve considered.","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"**Additional context**","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"Add any other context or screenshots about the feature request here.","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"bachletuankhai":20}},{"path":".github/workflows/gradle.yml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"name: Java CI","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"on: [push, pull_request]","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"jobs:","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  build:","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    strategy:","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      matrix:","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        platform: [ubuntu-latest, macos-latest, windows-latest]","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    runs-on: ${{ matrix.platform }}","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    steps:","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"      - name: Set up repository","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        uses: actions/checkout@main","lastModifiedDate":"2020-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      - name: Set up repository","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        uses: actions/checkout@main","lastModifiedDate":"2020-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        with:","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"          ref: master","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      - name: Merge to master","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        run: git checkout --progress --force ${{ github.sha }}","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      - name: Run repository-wide tests","lastModifiedDate":"2020-06-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        if: runner.os \u003d\u003d \u0027Linux\u0027","lastModifiedDate":"2020-06-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        working-directory: ${{ github.workspace }}/.github","lastModifiedDate":"2020-06-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        run: ./run-checks.sh","lastModifiedDate":"2020-06-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      - name: Validate Gradle Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        uses: gradle/wrapper-validation-action@v1","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      - name: Setup JDK 11","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        uses: actions/setup-java@v1","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        with:","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"          java-version: \"11\"","lastModifiedDate":"2024-04-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          java-package: jdk+fx","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      - name: Build and check with Gradle","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        run: ./gradlew check coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      - name: Upload coverage reports to Codecov","lastModifiedDate":"2023-09-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if: runner.os \u003d\u003d \u0027Linux\u0027","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"        uses: codecov/codecov-action@v4","lastModifiedDate":"2024-04-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        env:","lastModifiedDate":"2023-09-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}","lastModifiedDate":"2023-09-08"}],"authorContributionMap":{"bachletuankhai":2,"-":43}},{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-F12-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-F12-4/tp/actions)","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-F12-4/tp/graph/badge.svg?token\u003dGBDKPFRKM5)](https://codecov.io/gh/AY2324S2-CS2103T-F12-4/tp)","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"* This is **a CS2103T team project for NUS Software Engineering (SE) students**.\u003cbr\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  * as a starting point of a course project (as opposed to writing everything from scratch)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  * as a case study","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"* The project simulates an ongoing software project for a desktop application (called _HackLink_) used for managing contact details of Hackathon participants and sponsors.","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"  * It is CLI based, so this is highly practical and efficient to use for hackathon organisers. ","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"* It is named `HackLink` because this app acts as a useful link between hackathon organiser and other participants.","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"* For the detailed documentation of this project, see the **[HackLink Website](https://github.com/AY2324S2-CS2103T-F12-4/tp)**.","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"dhlee03":8,"-":8}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"dhlee03"},"content":"run {","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"dhlee03"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"dhlee03":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"julia-cp"},"content":"# About Us","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"julia-cp"},"content":"**HackLink** - a java application that help Student Hackathon organizers seamlessly handle participant, ","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"julia-cp"},"content":"staff, and sponsor details, ensuring every event runs smoothly.","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"julia-cp"},"content":"Tutor: Tan Wei Zhe","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"julia-cp"},"content":"### Bach Le Tuan Khai","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"julia-cp"},"content":"\u003cimg src\u003d\"images/bachletuankhai.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"julia-cp"},"content":"[[github](https://github.com/bachletuankhai)]","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"julia-cp"},"content":"* Role: Developer","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"julia-cp"},"content":"* Responsibilities: Model","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"julia-cp"},"content":"### Julia Christy Purba","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"julia-cp"},"content":"\u003cimg src\u003d\"images/julia-cp.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"julia-cp"},"content":"[[github](https://github.com/julia-cp)]","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"julia-cp"},"content":"### Lee Donghyun","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"julia-cp"},"content":"\u003cimg src\u003d\"images/dhlee03.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"julia-cp"},"content":"[[github](https://github.com/dhlee03)]","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"julia-cp"},"content":"### Premakumar Meenu Lekha","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"julia-cp"},"content":"\u003cimg src\u003d\"images/meenulekha.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"julia-cp"},"content":"[[github](https://github.com/meenulekha)]","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"julia-cp"},"content":"* Responsibilities: Storage","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"julia-cp":21,"-":30}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"toc: true","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"* TOC","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"and edit diagrams.","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"The **_Architecture Diagram_** given above explains the high-level design of the App.","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"**`Main`** (consisting of","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"classes [`Main`](https://github.com/AY2324S2-CS2103T-F12-4/tp/tree/master/src/main/java/seedu/address/Main.java)","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"and [`MainApp`](https://github.com/AY2324S2-CS2103T-F12-4/tp/tree/master/src/main/java/seedu/address/MainApp.java)) is","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"in charge of the app launch and shut down.","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"- At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"- At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"- [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"- [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"- [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"- [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues","lastModifiedDate":"2024-04-15"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"the command `delete 1`.","lastModifiedDate":"2024-04-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"- defines its _API_ in an `interface` with the same name as the Component.","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"- implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding","lastModifiedDate":"2024-04-15"},{"lineNumber":72,"author":{"gitId":"julia-cp"},"content":"  API `interface` mentioned in the previous point).","lastModifiedDate":"2024-04-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"bachletuankhai"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using","lastModifiedDate":"2024-04-15"},{"lineNumber":75,"author":{"gitId":"bachletuankhai"},"content":"the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component","lastModifiedDate":"2024-04-15"},{"lineNumber":76,"author":{"gitId":"bachletuankhai"},"content":"through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the","lastModifiedDate":"2024-04-15"},{"lineNumber":77,"author":{"gitId":"bachletuankhai"},"content":"implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2024-04-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"bachletuankhai"},"content":"The **API** of this component is specified","lastModifiedDate":"2024-04-15"},{"lineNumber":86,"author":{"gitId":"bachletuankhai"},"content":"in [`Ui.java`](https://github.com/AY2324S2-CS2103T-F12-4/tp/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2024-04-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"bachletuankhai"},"content":"The UI consists of a `MainWindow` that is made up of parts","lastModifiedDate":"2024-04-15"},{"lineNumber":91,"author":{"gitId":"bachletuankhai"},"content":"e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`,","lastModifiedDate":"2024-04-15"},{"lineNumber":92,"author":{"gitId":"bachletuankhai"},"content":"inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the","lastModifiedDate":"2024-04-15"},{"lineNumber":93,"author":{"gitId":"bachletuankhai"},"content":"visible GUI.","lastModifiedDate":"2024-04-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"bachletuankhai"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that","lastModifiedDate":"2024-04-15"},{"lineNumber":96,"author":{"gitId":"bachletuankhai"},"content":"are in the `src/main/resources/view` folder. For example, the layout of","lastModifiedDate":"2024-04-15"},{"lineNumber":97,"author":{"gitId":"bachletuankhai"},"content":"the [`MainWindow`](https://github.com/AY2324S2-CS2103T-F12-4/tp/tree/master/src/main/java/seedu/address/ui/MainWindow.java)","lastModifiedDate":"2024-04-15"},{"lineNumber":98,"author":{"gitId":"bachletuankhai"},"content":"is specified","lastModifiedDate":"2024-04-15"},{"lineNumber":99,"author":{"gitId":"bachletuankhai"},"content":"in [`MainWindow.fxml`](https://github.com/AY2324S2-CS2103T-F12-4/tp/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2024-04-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"bachletuankhai"},"content":"- executes user commands using the `Logic` component.","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"bachletuankhai"},"content":"- listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2024-03-12"},{"lineNumber":105,"author":{"gitId":"bachletuankhai"},"content":"- keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"bachletuankhai"},"content":"- depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"bachletuankhai"},"content":"**API**:","lastModifiedDate":"2024-04-15"},{"lineNumber":111,"author":{"gitId":"bachletuankhai"},"content":"[`Logic.java`](https://github.com/AY2324S2-CS2103T-F12-4/tp/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2024-04-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"bachletuankhai"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API","lastModifiedDate":"2024-04-15"},{"lineNumber":118,"author":{"gitId":"bachletuankhai"},"content":"call as an example.","lastModifiedDate":"2024-04-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":127,"author":{"gitId":"bachletuankhai"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates","lastModifiedDate":"2024-04-15"},{"lineNumber":128,"author":{"gitId":"bachletuankhai"},"content":"   a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2024-04-15"},{"lineNumber":129,"author":{"gitId":"bachletuankhai"},"content":"2. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which","lastModifiedDate":"2024-04-15"},{"lineNumber":130,"author":{"gitId":"bachletuankhai"},"content":"   is executed by the `LogicManager`.","lastModifiedDate":"2024-04-15"},{"lineNumber":131,"author":{"gitId":"bachletuankhai"},"content":"3. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":132,"author":{"gitId":"bachletuankhai"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take","lastModifiedDate":"2024-04-15"},{"lineNumber":133,"author":{"gitId":"bachletuankhai"},"content":"   several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-04-15"},{"lineNumber":134,"author":{"gitId":"bachletuankhai"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2024-04-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":142,"author":{"gitId":"bachletuankhai"},"content":"- When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a","lastModifiedDate":"2024-04-15"},{"lineNumber":143,"author":{"gitId":"bachletuankhai"},"content":"  placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse","lastModifiedDate":"2024-04-15"},{"lineNumber":144,"author":{"gitId":"bachletuankhai"},"content":"  the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as","lastModifiedDate":"2024-04-15"},{"lineNumber":145,"author":{"gitId":"bachletuankhai"},"content":"  a `Command` object.","lastModifiedDate":"2024-04-15"},{"lineNumber":146,"author":{"gitId":"bachletuankhai"},"content":"- All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser`","lastModifiedDate":"2024-04-15"},{"lineNumber":147,"author":{"gitId":"bachletuankhai"},"content":"  interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2024-04-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":151,"author":{"gitId":"bachletuankhai"},"content":"**API** :","lastModifiedDate":"2024-04-15"},{"lineNumber":152,"author":{"gitId":"bachletuankhai"},"content":"[`Model.java`](https://github.com/AY2324S2-CS2103T-F12-4/tp/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2024-04-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"bachletuankhai"},"content":"- stores the contact list data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2024-04-15"},{"lineNumber":159,"author":{"gitId":"bachletuankhai"},"content":"- stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which","lastModifiedDate":"2024-04-15"},{"lineNumber":160,"author":{"gitId":"bachletuankhai"},"content":"  is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to","lastModifiedDate":"2024-04-15"},{"lineNumber":161,"author":{"gitId":"bachletuankhai"},"content":"  this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2024-04-15"},{"lineNumber":162,"author":{"gitId":"bachletuankhai"},"content":"- stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as","lastModifiedDate":"2024-04-15"},{"lineNumber":163,"author":{"gitId":"bachletuankhai"},"content":"  a `ReadOnlyUserPref` objects.","lastModifiedDate":"2024-04-15"},{"lineNumber":164,"author":{"gitId":"bachletuankhai"},"content":"- does not depend on any of the other three components (as the `Model` represents data entities of the domain, they","lastModifiedDate":"2024-04-15"},{"lineNumber":165,"author":{"gitId":"bachletuankhai"},"content":"  should make sense on their own without depending on other components)","lastModifiedDate":"2024-04-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"bachletuankhai"},"content":"**API** :","lastModifiedDate":"2024-04-15"},{"lineNumber":170,"author":{"gitId":"bachletuankhai"},"content":"[`Storage.java`](https://github.com/AY2324S2-CS2103T-F12-4/tp/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2024-04-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":176,"author":{"gitId":"bachletuankhai"},"content":"- can save both address book data and user preference data in JSON format, and read them back into corresponding","lastModifiedDate":"2024-04-15"},{"lineNumber":177,"author":{"gitId":"bachletuankhai"},"content":"  objects.","lastModifiedDate":"2024-04-15"},{"lineNumber":178,"author":{"gitId":"bachletuankhai"},"content":"- inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only","lastModifiedDate":"2024-04-15"},{"lineNumber":179,"author":{"gitId":"bachletuankhai"},"content":"  the functionality of only one is needed).","lastModifiedDate":"2024-04-15"},{"lineNumber":180,"author":{"gitId":"bachletuankhai"},"content":"- depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects","lastModifiedDate":"2024-04-15"},{"lineNumber":181,"author":{"gitId":"bachletuankhai"},"content":"  that belong to the `Model`)","lastModifiedDate":"2024-04-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-03-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"bachletuankhai"},"content":"### Undo/redo feature","lastModifiedDate":"2024-04-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"bachletuankhai"},"content":"#### Implementation","lastModifiedDate":"2024-04-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"bachletuankhai"},"content":"The undo/redo feature is implemented using the following components:","lastModifiedDate":"2024-04-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"bachletuankhai"},"content":"- `ReverisbleCommand` interface. This interface defines two methods:","lastModifiedDate":"2024-04-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"bachletuankhai"},"content":"    - `ReversibleCommand#undo(Model model)`— Reverts the command and returns a `CommandResult`.","lastModifiedDate":"2024-04-15"},{"lineNumber":202,"author":{"gitId":"bachletuankhai"},"content":"    - `ReversibleCommand#redo(Model model)`— Re-executes the command and returns a `CommandResult`.","lastModifiedDate":"2024-04-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":204,"author":{"gitId":"bachletuankhai"},"content":"  `ReversibleCommand` interface is used in conjunction with the abstract `Command` class. Commands that support","lastModifiedDate":"2024-04-15"},{"lineNumber":205,"author":{"gitId":"bachletuankhai"},"content":"  undo/redo","lastModifiedDate":"2024-04-15"},{"lineNumber":206,"author":{"gitId":"bachletuankhai"},"content":"  implement this interface.","lastModifiedDate":"2024-04-15"},{"lineNumber":207,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":208,"author":{"gitId":"bachletuankhai"},"content":"- `CommandHistoryManager` class. This class is responsible for managing the undo/redo history. It maintains 2 lists","lastModifiedDate":"2024-04-15"},{"lineNumber":209,"author":{"gitId":"bachletuankhai"},"content":"  of `ReversibleCommand` objects: `history` and `future`.","lastModifiedDate":"2024-04-15"},{"lineNumber":210,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":211,"author":{"gitId":"bachletuankhai"},"content":"    - `history` contains the commands that have been executed and can be undone. New commands are added to the end of","lastModifiedDate":"2024-04-15"},{"lineNumber":212,"author":{"gitId":"bachletuankhai"},"content":"      the list.","lastModifiedDate":"2024-04-15"},{"lineNumber":213,"author":{"gitId":"bachletuankhai"},"content":"    - `future` contains the commands that have been undone and can be redone.","lastModifiedDate":"2024-04-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":215,"author":{"gitId":"bachletuankhai"},"content":"   \u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":216,"author":{"gitId":"bachletuankhai"},"content":"   `CommandHistoryManager` provides the following methods:","lastModifiedDate":"2024-04-15"},{"lineNumber":217,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":218,"author":{"gitId":"bachletuankhai"},"content":"    - `CommandHistoryManager#addCommand(ReversibleCommand command)`— Adds a command to the `history` list and clears","lastModifiedDate":"2024-04-15"},{"lineNumber":219,"author":{"gitId":"bachletuankhai"},"content":"      the `future` list.","lastModifiedDate":"2024-04-15"},{"lineNumber":220,"author":{"gitId":"bachletuankhai"},"content":"    - `CommandHistoryManager#getCommandToUndo(Model model)`— Returns the last command in the `history` list and moves it","lastModifiedDate":"2024-04-15"},{"lineNumber":221,"author":{"gitId":"bachletuankhai"},"content":"      to the end of the `future` list.","lastModifiedDate":"2024-04-15"},{"lineNumber":222,"author":{"gitId":"bachletuankhai"},"content":"    - `CommandHistoryManager#getCommandToRedo(Model model)`— Returns the last command in the `future` list and moves it","lastModifiedDate":"2024-04-15"},{"lineNumber":223,"author":{"gitId":"bachletuankhai"},"content":"      to the end of the `history` list.","lastModifiedDate":"2024-04-15"},{"lineNumber":224,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":225,"author":{"gitId":"bachletuankhai"},"content":"These operations are exposed in the `Model` interface","lastModifiedDate":"2024-04-15"},{"lineNumber":226,"author":{"gitId":"bachletuankhai"},"content":"as `Model#addCommand(ReversibleCommand)`, `Model#undoAddressBook()`","lastModifiedDate":"2024-04-15"},{"lineNumber":227,"author":{"gitId":"bachletuankhai"},"content":"and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2024-04-15"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"bachletuankhai"},"content":"**Step 1.** The user launches the application. The `CommandHistoryManager` is initialized with empty `history`","lastModifiedDate":"2024-04-15"},{"lineNumber":232,"author":{"gitId":"bachletuankhai"},"content":"and `future` lists.","lastModifiedDate":"2024-04-15"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"bachletuankhai"},"content":"**Step 2.** The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command","lastModifiedDate":"2024-04-15"},{"lineNumber":235,"author":{"gitId":"bachletuankhai"},"content":"calls `Model#addCommand(ReversibleCommand)` to add the itself to the `history` list.","lastModifiedDate":"2024-04-15"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"bachletuankhai"},"content":"![Add \"delete 5\" to history](images/UndoRedoAddCommandObjectDiagram.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"bachletuankhai"},"content":"**Step 3.** The user executes `add n/David …​` to add a new person. The `add` command also","lastModifiedDate":"2024-04-15"},{"lineNumber":240,"author":{"gitId":"bachletuankhai"},"content":"calls `Model#addCommand(ReversibleCommand)` to add itself to the `history` list.","lastModifiedDate":"2024-04-15"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"bachletuankhai"},"content":"![Add \"add n/David\" to history](images/UndoRedoAddCommandObjectDiagram2.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"bachletuankhai"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#addCommand(ReversibleCommand)`, so the command will not be added to the `history` list. This ensures that only successful commands are added to the history.","lastModifiedDate":"2024-04-15"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"bachletuankhai"},"content":"**Step 4.** The user decides to undo the `add n/David …​` command by executing the `undo` command. The `undo` command","lastModifiedDate":"2024-04-15"},{"lineNumber":249,"author":{"gitId":"bachletuankhai"},"content":"calls `Model#undoAddressBook()`, which retrieves the last command from the `history` list and","lastModifiedDate":"2024-04-15"},{"lineNumber":250,"author":{"gitId":"bachletuankhai"},"content":"calls `ReversibleCommand#undo(Model model)` on it. The add command is removed from the `history` list and added to","lastModifiedDate":"2024-04-15"},{"lineNumber":251,"author":{"gitId":"bachletuankhai"},"content":"the `future` list.","lastModifiedDate":"2024-04-15"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"bachletuankhai"},"content":"![Undo \"add n/David\"](images/UndoRedoUndoCommandObjectDiagram.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"bachletuankhai"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `history` list is empty, there is no command to undo.","lastModifiedDate":"2024-04-15"},{"lineNumber":256,"author":{"gitId":"bachletuankhai"},"content":"The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2024-04-15"},{"lineNumber":257,"author":{"gitId":"bachletuankhai"},"content":"than attempting to perform the undo. Similarly, the `redo` command uses `Model#canRedoAddressBook()` to check if the `future` list is empty.","lastModifiedDate":"2024-04-15"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":271,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":273,"author":{"gitId":"bachletuankhai"},"content":"The `redo` command is similar — it calls `Model#redoAddressBook()`, which retrieves the last command from the `future`","lastModifiedDate":"2024-04-15"},{"lineNumber":274,"author":{"gitId":"bachletuankhai"},"content":"list and calls `ReversibleCommand#redo(Model model)` on it.","lastModifiedDate":"2024-04-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"bachletuankhai"},"content":"**Step 5.** The user then decides to execute the command `list`. Commands that do not modify the data, such","lastModifiedDate":"2024-04-15"},{"lineNumber":277,"author":{"gitId":"bachletuankhai"},"content":"as `list`, will usually not call `Model#addCommand()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`.","lastModifiedDate":"2024-04-15"},{"lineNumber":278,"author":{"gitId":"bachletuankhai"},"content":"Thus, the `history` list remains unchanged.","lastModifiedDate":"2024-04-15"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"bachletuankhai"},"content":"![Undo \"add n/David\"](images/UndoRedoUndoCommandObjectDiagram.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"bachletuankhai"},"content":"**Step 6.** The user executes `delete 1`, which calls `Model#addCommand(ReversibleCommand)`. The `future` list, which","lastModifiedDate":"2024-04-15"},{"lineNumber":283,"author":{"gitId":"bachletuankhai"},"content":"contains the previous `add n/David...` command, is cleared.","lastModifiedDate":"2024-04-15"},{"lineNumber":284,"author":{"gitId":"bachletuankhai"},"content":"Reason: It no longer makes sense to redo the `add n/David …​` command, since `delete 1` may affect the added person.","lastModifiedDate":"2024-04-15"},{"lineNumber":285,"author":{"gitId":"bachletuankhai"},"content":"This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2024-04-15"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"bachletuankhai"},"content":"![Add \"delete 1\" to history](images/UndoRedoAddCommandObjectDiagram3.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"bachletuankhai"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"200\" /\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"bachletuankhai"},"content":"- **Alternative 1:** Saves the entire address book.","lastModifiedDate":"2024-04-15"},{"lineNumber":298,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":299,"author":{"gitId":"bachletuankhai"},"content":"    - Pros: Easy to implement.","lastModifiedDate":"2024-03-12"},{"lineNumber":300,"author":{"gitId":"bachletuankhai"},"content":"    - Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2024-03-12"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"bachletuankhai"},"content":"- **Alternative 2 (current choice):** Individual command knows how to undo/redo by","lastModifiedDate":"2024-04-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"bachletuankhai"},"content":"    - Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2024-03-12"},{"lineNumber":305,"author":{"gitId":"bachletuankhai"},"content":"    - Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2024-03-12"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"dhlee03"},"content":"### Link Feature","lastModifiedDate":"2024-04-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"dhlee03"},"content":"#### Implementation","lastModifiedDate":"2024-04-15"},{"lineNumber":312,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":313,"author":{"gitId":"dhlee03"},"content":"The `link` command allows users to export selected contacts to a CSV file. The user can first use `list` command to view all contacts","lastModifiedDate":"2024-04-15"},{"lineNumber":314,"author":{"gitId":"dhlee03"},"content":"and then use the `link` command to export the selected contacts to a CSV file. The CSV file will be saved in the","lastModifiedDate":"2024-04-15"},{"lineNumber":315,"author":{"gitId":"dhlee03"},"content":"`selectedPeople` folder in the project directory with the name `list.csv`. The file will contain selected people\u0027s name,","lastModifiedDate":"2024-04-15"},{"lineNumber":316,"author":{"gitId":"dhlee03"},"content":"email, phone number, and comments.","lastModifiedDate":"2024-04-15"},{"lineNumber":317,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":318,"author":{"gitId":"dhlee03"},"content":"The `LinkCommandParser` class is responsible for parsing the user input and creating instance of `LinkCommand`. The parser extracts the ","lastModifiedDate":"2024-04-15"},{"lineNumber":319,"author":{"gitId":"dhlee03"},"content":"indexes of the contacts to be exported from the user input. The parser uses `split()` method to split the user input into","lastModifiedDate":"2024-04-15"},{"lineNumber":320,"author":{"gitId":"dhlee03"},"content":"each `String`. The parser then uses `ParserUtil#parseIndex(String)` to parse all those `String` values into a `Index` objects. The objects are","lastModifiedDate":"2024-04-15"},{"lineNumber":321,"author":{"gitId":"dhlee03"},"content":"stored in a `List\u003cIndex\u003e`. The parser then creates a `LinkCommand` object with the `List\u003cIndex\u003e` and returns it. If the","lastModifiedDate":"2024-04-15"},{"lineNumber":322,"author":{"gitId":"dhlee03"},"content":"user input is invalid, the parser throws a `ParseException`. The parser method ensures that there are no duplicate indexes and that the","lastModifiedDate":"2024-04-15"},{"lineNumber":323,"author":{"gitId":"dhlee03"},"content":"indexes are within the range of the contact list.","lastModifiedDate":"2024-04-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":325,"author":{"gitId":"dhlee03"},"content":"The `LinkCommand` class is responsible for executing the link command. The class uses the `Model#getFilteredPersonList()`to get the list of contacts.","lastModifiedDate":"2024-04-15"},{"lineNumber":326,"author":{"gitId":"dhlee03"},"content":"`FileUtil#createCsvFile(Path, String)` is then used to create the CSV file with the given path and the header. The fixed Path and header are passed to the method.","lastModifiedDate":"2024-04-15"},{"lineNumber":327,"author":{"gitId":"dhlee03"},"content":"Then it iterates through the list of indexes and writes the details of the contacts to the CSV file through","lastModifiedDate":"2024-04-15"},{"lineNumber":328,"author":{"gitId":"dhlee03"},"content":"`FileUtil#appendToFile(Path, String)`. The class then returns a `CommandResult` with the success message. User can then find the CSV file in the `selectedPeople` folder.","lastModifiedDate":"2024-04-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":330,"author":{"gitId":"dhlee03"},"content":"The activity diagram below illustrates the flow of the `link` command.","lastModifiedDate":"2024-04-15"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":332,"author":{"gitId":"dhlee03"},"content":"![LinkActivity](images/LinkCommandActivityDiagram.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"dhlee03"},"content":"#### Design considerations:","lastModifiedDate":"2024-04-15"},{"lineNumber":335,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":336,"author":{"gitId":"dhlee03"},"content":"- **Aspect: Exporting selected contacts:**","lastModifiedDate":"2024-04-15"},{"lineNumber":337,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":338,"author":{"gitId":"dhlee03"},"content":"    - **Alternative 1:** Export all contacts in the contact list.","lastModifiedDate":"2024-04-15"},{"lineNumber":339,"author":{"gitId":"dhlee03"},"content":"        - Pros: Easy to implement.","lastModifiedDate":"2024-04-15"},{"lineNumber":340,"author":{"gitId":"dhlee03"},"content":"        - Cons: May not be user-friendly as the user may not want to export all contacts. Especially sponsors may only","lastModifiedDate":"2024-04-15"},{"lineNumber":341,"author":{"gitId":"dhlee03"},"content":"          want to export talented selected contacts.","lastModifiedDate":"2024-04-15"},{"lineNumber":342,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":343,"author":{"gitId":"dhlee03"},"content":"    - **Alternative 2 (current choice):** Export selected contacts.","lastModifiedDate":"2024-04-15"},{"lineNumber":344,"author":{"gitId":"dhlee03"},"content":"        - Pros: More user-friendly as the user can choose which contacts to export.","lastModifiedDate":"2024-04-15"},{"lineNumber":345,"author":{"gitId":"dhlee03"},"content":"        - Cons: More complex to implement.","lastModifiedDate":"2024-04-15"},{"lineNumber":346,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-03-12"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"bachletuankhai"},"content":"- [Documentation guide](Documentation.md)","lastModifiedDate":"2024-03-12"},{"lineNumber":351,"author":{"gitId":"bachletuankhai"},"content":"- [Testing guide](Testing.md)","lastModifiedDate":"2024-03-12"},{"lineNumber":352,"author":{"gitId":"bachletuankhai"},"content":"- [Logging guide](Logging.md)","lastModifiedDate":"2024-03-12"},{"lineNumber":353,"author":{"gitId":"bachletuankhai"},"content":"- [Configuration guide](Configuration.md)","lastModifiedDate":"2024-03-12"},{"lineNumber":354,"author":{"gitId":"bachletuankhai"},"content":"- [DevOps guide](DevOps.md)","lastModifiedDate":"2024-03-12"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-03-12"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"bachletuankhai"},"content":"**Target user profile**: A student hackathon organizer who,","lastModifiedDate":"2024-03-12"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"bachletuankhai"},"content":"- has a need to manage a significant number of contacts","lastModifiedDate":"2024-03-12"},{"lineNumber":365,"author":{"gitId":"bachletuankhai"},"content":"- prefer desktop apps over other types","lastModifiedDate":"2024-03-12"},{"lineNumber":366,"author":{"gitId":"bachletuankhai"},"content":"- can type fast","lastModifiedDate":"2024-03-12"},{"lineNumber":367,"author":{"gitId":"bachletuankhai"},"content":"- prefers typing to mouse interactions","lastModifiedDate":"2024-03-12"},{"lineNumber":368,"author":{"gitId":"bachletuankhai"},"content":"- is reasonably comfortable using CLI apps","lastModifiedDate":"2024-03-12"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"bachletuankhai"},"content":"**Value proposition**: Manage participant contacts, staff information \u0026 sponsor contacts, schedule event logistics,","lastModifiedDate":"2024-04-15"},{"lineNumber":371,"author":{"gitId":"bachletuankhai"},"content":"and , offering a dedicated tool to optimize hackathon planning. Optimized for user preferring CLI.","lastModifiedDate":"2024-04-15"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"| Priority | As a …​                     | I want to …​                                     | So that I can…​                                               |","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"dhlee03"},"content":"|----------|-----------------------------|--------------------------------------------------|---------------------------------------------------------------|","lastModifiedDate":"2024-04-15"},{"lineNumber":379,"author":{"gitId":"meenulekha"},"content":"| `* * *`  | Student Hackathon Organizer | Add new persons to the contact managing app      | Have a centralized database of all hackathon attendees.       |","lastModifiedDate":"2024-04-15"},{"lineNumber":380,"author":{"gitId":"meenulekha"},"content":"| `* * *`  | Student Hackathon Organizer | Update and edit person contact details           | Ensure accurate and up-to-date information.                   |","lastModifiedDate":"2024-04-15"},{"lineNumber":381,"author":{"gitId":"meenulekha"},"content":"| `* * *`  | Student Hackathon Organizer | Add notes or comments to contact                 | Provide additional context or reminders for each contact.     |","lastModifiedDate":"2024-03-07"},{"lineNumber":382,"author":{"gitId":"meenulekha"},"content":"| `* * *`  | Student Hackathon Organizer | View contact count in the database               | Know the number of participants, staff and sponsors in the event     |","lastModifiedDate":"2024-04-15"},{"lineNumber":383,"author":{"gitId":"meenulekha"},"content":"| `* * *`  | Student Hackathon Organizer | View comment of a specific person                | Have a quick reference to the important notes for a contact   |","lastModifiedDate":"2024-04-15"},{"lineNumber":384,"author":{"gitId":"meenulekha"},"content":"| `* * *`  | Student Hackathon Organizer | List out members                                 | See all the members in one go                                 |","lastModifiedDate":"2024-03-07"},{"lineNumber":385,"author":{"gitId":"meenulekha"},"content":"| `* * *`  | Student Hackathon Organizer | Find a person with keyword                       | Effectively search for a specific person\u0027s information   |","lastModifiedDate":"2024-04-15"},{"lineNumber":386,"author":{"gitId":"dhlee03"},"content":"| `* * *`  | Student Hackathon Organizer | Export specific contact details to a CSV file    | Share contact information with sponsors                       |","lastModifiedDate":"2024-04-15"},{"lineNumber":387,"author":{"gitId":"meenulekha"},"content":"| `* * *`  | Student Hackathon Organizer | Remove specific persons                          | remove participants who signed up but unable to participate.  |","lastModifiedDate":"2024-04-15"},{"lineNumber":388,"author":{"gitId":"meenulekha"},"content":"| `* * *`  | Student Hackathon Organizer | Remove specific persons                          | Remove persons who are no longer involved in the hackathon.  |","lastModifiedDate":"2024-04-15"},{"lineNumber":389,"author":{"gitId":"julia-cp"},"content":"| `* * *`  | Student Hackathon Organizer | Group specific participants                      | Know which participants are working together.                |","lastModifiedDate":"2024-04-15"},{"lineNumber":390,"author":{"gitId":"julia-cp"},"content":"| `* * *`  | Student Hackathon Organizer | Group specific staff                             | Assign easily a staff to a group.                            |","lastModifiedDate":"2024-04-15"},{"lineNumber":391,"author":{"gitId":"meenulekha"},"content":"| `* * *`  | Student Hackathon Organizer | Randomly group all participants and staff     | Quickly ensure that all participants and staff have a group.           |","lastModifiedDate":"2024-04-15"},{"lineNumber":392,"author":{"gitId":"meenulekha"},"content":"| `* * *`  | Student Hackathon Organizer | Add events for specific categories of people     | Have a database with all the events related to hackathon.     |","lastModifiedDate":"2024-04-14"},{"lineNumber":393,"author":{"gitId":"meenulekha"},"content":"| `* * *`  | Student Hackathon Organizer | Delete event                                     | Remove events that have been cancelled or no longer relevant. |","lastModifiedDate":"2024-04-14"},{"lineNumber":394,"author":{"gitId":"meenulekha"},"content":"| `* * *`  | Student Hackathon Organizer | Find events                                      | Find details such as date and category of an upcoming event   |","lastModifiedDate":"2024-04-14"},{"lineNumber":395,"author":{"gitId":"meenulekha"},"content":"| `* * *`  | Student Hackathon Organizer | List events                                      | Have an overall view of all the events in one go.             |","lastModifiedDate":"2024-04-14"},{"lineNumber":396,"author":{"gitId":"bachletuankhai"},"content":"| `* *`    | Student Hackathon Organizer | Clear all events                                 | Remove all sample data and start with my own.                 |","lastModifiedDate":"2024-04-15"},{"lineNumber":397,"author":{"gitId":"bachletuankhai"},"content":"| `* * *`  | Student Hackathon Organizer | Revert the change made to the database           | Correct any mistakes made while managing the database.        |","lastModifiedDate":"2024-04-15"},{"lineNumber":398,"author":{"gitId":"bachletuankhai"},"content":"| `* *`    | Student Hackathon Organizer | Redo the change made to the database             | Reapply any changes that were undone.                         |","lastModifiedDate":"2024-04-15"},{"lineNumber":399,"author":{"gitId":"bachletuankhai"},"content":"| `* *`    | Student Hackathon Organizer | Export a list of people to a CSV file            | Share the list with other organizers or for record-keeping.   |","lastModifiedDate":"2024-04-15"},{"lineNumber":400,"author":{"gitId":"bachletuankhai"},"content":"| `* *`    | Student Hackathon Organizer | Import a list of people from a CSV file          | Quickly add a large number of contacts to the database.       |","lastModifiedDate":"2024-04-15"},{"lineNumber":401,"author":{"gitId":"bachletuankhai"},"content":"| `* *`    | Fast typist                 | Use keyboard shortcuts to perform common tasks   | Save time and effort in navigating and managing the app.      |","lastModifiedDate":"2024-04-15"},{"lineNumber":402,"author":{"gitId":"bachletuankhai"},"content":"| `* * *`  | Student Hackathon Organizer | See the output of my command                     | Confirm that my command was executed correctly.               |","lastModifiedDate":"2024-04-15"},{"lineNumber":403,"author":{"gitId":"bachletuankhai"},"content":"| `* * *`  | Student Hackathon Organizer | Get help on how to use the app                   | Understand how to use the app effectively.                    |","lastModifiedDate":"2024-04-15"},{"lineNumber":404,"author":{"gitId":"bachletuankhai"},"content":"| `* * *`  | Student Hackathon Organizer | Exit the app                                     | Close the app when I am done.                                 |","lastModifiedDate":"2024-04-15"},{"lineNumber":405,"author":{"gitId":"bachletuankhai"},"content":"| `* *`    | Student Hackathon Organizer | Save the data automatically                      | Ensure that my data is always up to date.                     |","lastModifiedDate":"2024-04-15"},{"lineNumber":406,"author":{"gitId":"bachletuankhai"},"content":"| `* *`    | Student Hackathon Organizer | See error messages when I enter invalid commands | Understand what went wrong and how to correct it.             |","lastModifiedDate":"2024-04-15"},{"lineNumber":407,"author":{"gitId":"bachletuankhai"},"content":"| `* * *`  | Student Hackathon Organizer | View commands I have entered                     | Recall what I have done previously.                           |","lastModifiedDate":"2024-04-15"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"bachletuankhai"},"content":"(For all use cases below, the **System** is the `HackLink` and the **Actor** is the `user`, unless specified","lastModifiedDate":"2024-04-15"},{"lineNumber":412,"author":{"gitId":"bachletuankhai"},"content":"otherwise)","lastModifiedDate":"2024-04-15"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"meenulekha"},"content":"**Use case: Add a Contact**","lastModifiedDate":"2024-03-07"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"meenulekha"},"content":"1. User requests to add a new contact.","lastModifiedDate":"2024-03-07"},{"lineNumber":419,"author":{"gitId":"meenulekha"},"content":"2. System prompts for contact details: name, email, phone, category.","lastModifiedDate":"2024-03-07"},{"lineNumber":420,"author":{"gitId":"meenulekha"},"content":"3. User provides valid information.","lastModifiedDate":"2024-03-07"},{"lineNumber":421,"author":{"gitId":"meenulekha"},"content":"4. System validates input and adds the contact to the list.","lastModifiedDate":"2024-03-07"},{"lineNumber":422,"author":{"gitId":"meenulekha"},"content":"5. System displays a success message.","lastModifiedDate":"2024-03-07"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"meenulekha"},"content":"3a. Invalid input provided.","lastModifiedDate":"2024-03-07"},{"lineNumber":429,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":430,"author":{"gitId":"meenulekha"},"content":"- System displays an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":431,"author":{"gitId":"meenulekha"},"content":"- Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":432,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":433,"author":{"gitId":"bachletuankhai"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":434,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":435,"author":{"gitId":"meenulekha"},"content":"**Use case: View Persons List**","lastModifiedDate":"2024-04-15"},{"lineNumber":436,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":437,"author":{"gitId":"meenulekha"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":438,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":439,"author":{"gitId":"meenulekha"},"content":"1. User requests to view the list of all persons.","lastModifiedDate":"2024-04-15"},{"lineNumber":440,"author":{"gitId":"meenulekha"},"content":"2. System displays the list with relevant information.","lastModifiedDate":"2024-03-07"},{"lineNumber":441,"author":{"gitId":"meenulekha"},"content":"3. System shows the total count of persons.","lastModifiedDate":"2024-04-15"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"bachletuankhai"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":446,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":447,"author":{"gitId":"meenulekha"},"content":"**Use case: Update Person Contact Details**","lastModifiedDate":"2024-04-15"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"meenulekha"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"meenulekha"},"content":"1. User requests to update contact details for a specific person.","lastModifiedDate":"2024-04-15"},{"lineNumber":452,"author":{"gitId":"meenulekha"},"content":"2. System prompts for the person\u0027s name and the field to update.","lastModifiedDate":"2024-04-15"},{"lineNumber":453,"author":{"gitId":"meenulekha"},"content":"3. User provides valid information.","lastModifiedDate":"2024-03-07"},{"lineNumber":454,"author":{"gitId":"meenulekha"},"content":"4. System validates input and updates the contact details.","lastModifiedDate":"2024-03-07"},{"lineNumber":455,"author":{"gitId":"meenulekha"},"content":"5. System displays a success message.","lastModifiedDate":"2024-03-07"},{"lineNumber":456,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":457,"author":{"gitId":"meenulekha"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":458,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":459,"author":{"gitId":"meenulekha"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":460,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":461,"author":{"gitId":"meenulekha"},"content":"3a. Invalid input provided.","lastModifiedDate":"2024-03-07"},{"lineNumber":462,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":463,"author":{"gitId":"meenulekha"},"content":"- System displays an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":464,"author":{"gitId":"meenulekha"},"content":"- Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":465,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":466,"author":{"gitId":"dhlee03"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":467,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":468,"author":{"gitId":"dhlee03"},"content":"**Use case: Add a Comment to person with index**","lastModifiedDate":"2024-04-15"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":470,"author":{"gitId":"meenulekha"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":471,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":472,"author":{"gitId":"dhlee03"},"content":"1. User requests to add comments to a person by providing the person\u0027s index and the comment.","lastModifiedDate":"2024-04-15"},{"lineNumber":473,"author":{"gitId":"meenulekha"},"content":"2. System replace the old comment data of the person\u0027s into a new comment.","lastModifiedDate":"2024-04-15"},{"lineNumber":474,"author":{"gitId":"dhlee03"},"content":"3. System displays a success message.","lastModifiedDate":"2024-04-15"},{"lineNumber":475,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":476,"author":{"gitId":"meenulekha"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":477,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":478,"author":{"gitId":"meenulekha"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":479,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":480,"author":{"gitId":"dhlee03"},"content":"1a. Invalid index provided.","lastModifiedDate":"2024-04-15"},{"lineNumber":481,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":482,"author":{"gitId":"dhlee03"},"content":"- System informs that the index is invalid.","lastModifiedDate":"2024-04-15"},{"lineNumber":483,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2024-04-15"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":485,"author":{"gitId":"dhlee03"},"content":"1b. No notes provided.","lastModifiedDate":"2024-04-15"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":487,"author":{"gitId":"meenulekha"},"content":"- System displays an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":488,"author":{"gitId":"dhlee03"},"content":"  Use case resumes at step 1.","lastModifiedDate":"2024-04-15"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":490,"author":{"gitId":"bachletuankhai"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":492,"author":{"gitId":"meenulekha"},"content":"**Use case: Remove Person**","lastModifiedDate":"2024-04-15"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":494,"author":{"gitId":"meenulekha"},"content":"**MSS**","lastModifiedDate":"2024-03-07"},{"lineNumber":495,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":496,"author":{"gitId":"meenulekha"},"content":"1. User requests to remove a specific person.","lastModifiedDate":"2024-04-15"},{"lineNumber":497,"author":{"gitId":"meenulekha"},"content":"2. System prompts for the person\u0027s ID.","lastModifiedDate":"2024-04-15"},{"lineNumber":498,"author":{"gitId":"meenulekha"},"content":"3. User provides the ID.","lastModifiedDate":"2024-03-07"},{"lineNumber":499,"author":{"gitId":"meenulekha"},"content":"4. System deletes the person.","lastModifiedDate":"2024-04-15"},{"lineNumber":500,"author":{"gitId":"meenulekha"},"content":"5. System displays a success message.","lastModifiedDate":"2024-03-07"},{"lineNumber":501,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":502,"author":{"gitId":"meenulekha"},"content":"   Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":503,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":504,"author":{"gitId":"meenulekha"},"content":"**Extensions**","lastModifiedDate":"2024-03-07"},{"lineNumber":505,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":506,"author":{"gitId":"meenulekha"},"content":"3a. Person not found.","lastModifiedDate":"2024-04-15"},{"lineNumber":507,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":508,"author":{"gitId":"meenulekha"},"content":"- System displays an error message.","lastModifiedDate":"2024-03-07"},{"lineNumber":509,"author":{"gitId":"meenulekha"},"content":"- Use case ends.","lastModifiedDate":"2024-03-07"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"dhlee03"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":512,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":513,"author":{"gitId":"meenulekha"},"content":"**Use case: Find Person by keywords**","lastModifiedDate":"2024-04-15"},{"lineNumber":514,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":515,"author":{"gitId":"dhlee03"},"content":"**MSS**","lastModifiedDate":"2024-04-15"},{"lineNumber":516,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":517,"author":{"gitId":"dhlee03"},"content":"1. User requests to find a person by providing keywords.","lastModifiedDate":"2024-04-15"},{"lineNumber":518,"author":{"gitId":"dhlee03"},"content":"2. System searches and filters for the keywords in the information of people.","lastModifiedDate":"2024-04-15"},{"lineNumber":519,"author":{"gitId":"dhlee03"},"content":"3. System shows the filtered list of people with success message containing number of people found to the user.","lastModifiedDate":"2024-04-15"},{"lineNumber":520,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":521,"author":{"gitId":"dhlee03"},"content":"   Use case ends.","lastModifiedDate":"2024-04-15"},{"lineNumber":522,"author":{"gitId":"dhlee03"},"content":"   ","lastModifiedDate":"2024-04-15"},{"lineNumber":523,"author":{"gitId":"dhlee03"},"content":" **Extensions**","lastModifiedDate":"2024-04-15"},{"lineNumber":524,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":525,"author":{"gitId":"dhlee03"},"content":"2a. No one\u0027s information contain the keyword.","lastModifiedDate":"2024-04-15"},{"lineNumber":526,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":527,"author":{"gitId":"dhlee03"},"content":"- System displays an empty list.","lastModifiedDate":"2024-04-15"},{"lineNumber":528,"author":{"gitId":"dhlee03"},"content":"- Use case ends.","lastModifiedDate":"2024-04-15"},{"lineNumber":529,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":530,"author":{"gitId":"dhlee03"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":531,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":532,"author":{"gitId":"dhlee03"},"content":"**Use case: Export specific people by indexes**","lastModifiedDate":"2024-04-15"},{"lineNumber":533,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":534,"author":{"gitId":"dhlee03"},"content":"**MSS**","lastModifiedDate":"2024-04-15"},{"lineNumber":535,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":536,"author":{"gitId":"dhlee03"},"content":"1. User requests to export specific contact details to a CSV file by providing the indexes of the people.","lastModifiedDate":"2024-04-15"},{"lineNumber":537,"author":{"gitId":"dhlee03"},"content":"2. System reads and exports the contact details to a CSV file.","lastModifiedDate":"2024-04-15"},{"lineNumber":538,"author":{"gitId":"dhlee03"},"content":"3. System displays a success message to the user.","lastModifiedDate":"2024-04-15"},{"lineNumber":539,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":540,"author":{"gitId":"dhlee03"},"content":"**Extensions**","lastModifiedDate":"2024-04-15"},{"lineNumber":541,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":542,"author":{"gitId":"dhlee03"},"content":"1a. Invalid index(es) provided.","lastModifiedDate":"2024-04-15"},{"lineNumber":543,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":544,"author":{"gitId":"dhlee03"},"content":"- System displays an error message.","lastModifiedDate":"2024-04-15"},{"lineNumber":545,"author":{"gitId":"dhlee03"},"content":"- Use case ends.","lastModifiedDate":"2024-04-15"},{"lineNumber":546,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":547,"author":{"gitId":"bachletuankhai"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":548,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":549,"author":{"gitId":"meenulekha"},"content":"**Use case: Group A Participant or Staff**","lastModifiedDate":"2024-04-15"},{"lineNumber":550,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":551,"author":{"gitId":"julia-cp"},"content":"**MSS**","lastModifiedDate":"2024-04-15"},{"lineNumber":552,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":553,"author":{"gitId":"meenulekha"},"content":"1. User requests to group a specific participant or staff to a specific group.","lastModifiedDate":"2024-04-15"},{"lineNumber":554,"author":{"gitId":"meenulekha"},"content":"2. User provides valid information: participant/staff\u0027s ID and group number.","lastModifiedDate":"2024-04-15"},{"lineNumber":555,"author":{"gitId":"meenulekha"},"content":"3. System groups the participant/staff into the group number.","lastModifiedDate":"2024-04-15"},{"lineNumber":556,"author":{"gitId":"julia-cp"},"content":"4. System displays a success message.","lastModifiedDate":"2024-04-15"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":558,"author":{"gitId":"dhlee03"},"content":"   Use case ends.","lastModifiedDate":"2024-04-15"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":560,"author":{"gitId":"dhlee03"},"content":"**Extensions**","lastModifiedDate":"2024-04-15"},{"lineNumber":561,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":562,"author":{"gitId":"julia-cp"},"content":"2a. Invalid input provided.","lastModifiedDate":"2024-04-15"},{"lineNumber":563,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":564,"author":{"gitId":"dhlee03"},"content":"- System displays an error message.","lastModifiedDate":"2024-04-15"},{"lineNumber":565,"author":{"gitId":"dhlee03"},"content":"- Use case ends.","lastModifiedDate":"2024-04-15"},{"lineNumber":566,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":567,"author":{"gitId":"bachletuankhai"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":568,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":569,"author":{"gitId":"dhlee03"},"content":"**Use case: View comment of a specific person**","lastModifiedDate":"2024-04-15"},{"lineNumber":570,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":571,"author":{"gitId":"dhlee03"},"content":"**MSS**","lastModifiedDate":"2024-04-15"},{"lineNumber":572,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":573,"author":{"gitId":"dhlee03"},"content":"1. User requests to view the comment of a specific person by providing the index of the person.","lastModifiedDate":"2024-04-15"},{"lineNumber":574,"author":{"gitId":"dhlee03"},"content":"2. System displays the comment of the person.","lastModifiedDate":"2024-04-15"},{"lineNumber":575,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":576,"author":{"gitId":"dhlee03"},"content":"    Use case ends.","lastModifiedDate":"2024-04-15"},{"lineNumber":577,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":578,"author":{"gitId":"dhlee03"},"content":"**Extensions**","lastModifiedDate":"2024-04-15"},{"lineNumber":579,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":580,"author":{"gitId":"dhlee03"},"content":"1a. Invalid index provided.","lastModifiedDate":"2024-04-15"},{"lineNumber":581,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":582,"author":{"gitId":"dhlee03"},"content":"- System displays an error message.","lastModifiedDate":"2024-04-15"},{"lineNumber":583,"author":{"gitId":"dhlee03"},"content":"- Use case ends.","lastModifiedDate":"2024-04-15"},{"lineNumber":584,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":585,"author":{"gitId":"dhlee03"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":586,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":587,"author":{"gitId":"meenulekha"},"content":"**Use case: Randomly Group All Participants/Staff**","lastModifiedDate":"2024-04-15"},{"lineNumber":588,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":589,"author":{"gitId":"julia-cp"},"content":"**MSS**","lastModifiedDate":"2024-04-15"},{"lineNumber":590,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":591,"author":{"gitId":"meenulekha"},"content":"1. User requests to find participant/staff in the current list.","lastModifiedDate":"2024-04-15"},{"lineNumber":592,"author":{"gitId":"meenulekha"},"content":"2. User requests to group randomly all participants/staff in the current list.","lastModifiedDate":"2024-04-15"},{"lineNumber":593,"author":{"gitId":"julia-cp"},"content":"3. User provides valid maximum group size.","lastModifiedDate":"2024-04-15"},{"lineNumber":594,"author":{"gitId":"meenulekha"},"content":"4. System assigns randomly all participants/staff into a group, where each group","lastModifiedDate":"2024-04-15"},{"lineNumber":595,"author":{"gitId":"julia-cp"},"content":"   size is less than or equal to the maximum group size.","lastModifiedDate":"2024-04-15"},{"lineNumber":596,"author":{"gitId":"julia-cp"},"content":"5. System displays a success message.","lastModifiedDate":"2024-04-15"},{"lineNumber":597,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":598,"author":{"gitId":"julia-cp"},"content":"   Use case ends.","lastModifiedDate":"2024-04-15"},{"lineNumber":599,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":600,"author":{"gitId":"julia-cp"},"content":"**Extensions**","lastModifiedDate":"2024-04-15"},{"lineNumber":601,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":602,"author":{"gitId":"julia-cp"},"content":"3a. Invalid maximum group size provided.","lastModifiedDate":"2024-04-15"},{"lineNumber":603,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":604,"author":{"gitId":"julia-cp"},"content":"- System displays an error message.","lastModifiedDate":"2024-04-15"},{"lineNumber":605,"author":{"gitId":"julia-cp"},"content":"- Use case ends.","lastModifiedDate":"2024-04-15"},{"lineNumber":606,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":607,"author":{"gitId":"bachletuankhai"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":608,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":609,"author":{"gitId":"meenulekha"},"content":"**Use case: Add Events**","lastModifiedDate":"2024-04-14"},{"lineNumber":610,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":611,"author":{"gitId":"meenulekha"},"content":"**MSS**","lastModifiedDate":"2024-04-14"},{"lineNumber":612,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":613,"author":{"gitId":"julia-cp"},"content":"1. User requests to add a new event.","lastModifiedDate":"2024-04-15"},{"lineNumber":614,"author":{"gitId":"meenulekha"},"content":"2. User provides valid information for contact details: name, date, and category.","lastModifiedDate":"2024-04-14"},{"lineNumber":615,"author":{"gitId":"meenulekha"},"content":"3. System validates input and adds the event to the list.","lastModifiedDate":"2024-04-14"},{"lineNumber":616,"author":{"gitId":"meenulekha"},"content":"4. System displays a success message.","lastModifiedDate":"2024-04-14"},{"lineNumber":617,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":618,"author":{"gitId":"meenulekha"},"content":"   Use case ends.","lastModifiedDate":"2024-04-14"},{"lineNumber":619,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":620,"author":{"gitId":"meenulekha"},"content":"**Extensions**","lastModifiedDate":"2024-04-14"},{"lineNumber":621,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":622,"author":{"gitId":"meenulekha"},"content":"2a. Invalid input provided.","lastModifiedDate":"2024-04-14"},{"lineNumber":623,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":624,"author":{"gitId":"meenulekha"},"content":"- System displays an error message.","lastModifiedDate":"2024-04-14"},{"lineNumber":625,"author":{"gitId":"meenulekha"},"content":"- Use case ends.","lastModifiedDate":"2024-04-14"},{"lineNumber":626,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":627,"author":{"gitId":"bachletuankhai"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":628,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":629,"author":{"gitId":"meenulekha"},"content":"**Use case: Remove Event**","lastModifiedDate":"2024-04-14"},{"lineNumber":630,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":631,"author":{"gitId":"meenulekha"},"content":"**MSS**","lastModifiedDate":"2024-04-14"},{"lineNumber":632,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":633,"author":{"gitId":"julia-cp"},"content":"1. User requests to remove a specific event.","lastModifiedDate":"2024-04-15"},{"lineNumber":634,"author":{"gitId":"meenulekha"},"content":"2. User provides the ID of event to be removed.","lastModifiedDate":"2024-04-14"},{"lineNumber":635,"author":{"gitId":"meenulekha"},"content":"3. System deletes the event.","lastModifiedDate":"2024-04-14"},{"lineNumber":636,"author":{"gitId":"meenulekha"},"content":"4. System displays a success message.","lastModifiedDate":"2024-04-14"},{"lineNumber":637,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":638,"author":{"gitId":"meenulekha"},"content":"   Use case ends.","lastModifiedDate":"2024-04-14"},{"lineNumber":639,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":640,"author":{"gitId":"meenulekha"},"content":"**Extensions**","lastModifiedDate":"2024-04-14"},{"lineNumber":641,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":642,"author":{"gitId":"meenulekha"},"content":"2a. Event not found.","lastModifiedDate":"2024-04-14"},{"lineNumber":643,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":644,"author":{"gitId":"meenulekha"},"content":"- System displays an error message.","lastModifiedDate":"2024-04-14"},{"lineNumber":645,"author":{"gitId":"meenulekha"},"content":"- Use case ends.","lastModifiedDate":"2024-04-14"},{"lineNumber":646,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":647,"author":{"gitId":"bachletuankhai"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":648,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":649,"author":{"gitId":"meenulekha"},"content":"**Use case: View Events List**","lastModifiedDate":"2024-04-14"},{"lineNumber":650,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":651,"author":{"gitId":"meenulekha"},"content":"**MSS**","lastModifiedDate":"2024-04-14"},{"lineNumber":652,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":653,"author":{"gitId":"meenulekha"},"content":"1. User requests to view the list of all events.","lastModifiedDate":"2024-04-14"},{"lineNumber":654,"author":{"gitId":"meenulekha"},"content":"2. System displays the list with relevant information.","lastModifiedDate":"2024-04-14"},{"lineNumber":655,"author":{"gitId":"meenulekha"},"content":"   Use case ends.","lastModifiedDate":"2024-04-14"},{"lineNumber":656,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":657,"author":{"gitId":"bachletuankhai"},"content":"\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":658,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":659,"author":{"gitId":"bachletuankhai"},"content":"**Use case: Revert last change**","lastModifiedDate":"2024-04-15"},{"lineNumber":660,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":661,"author":{"gitId":"bachletuankhai"},"content":"**MSS**","lastModifiedDate":"2024-04-15"},{"lineNumber":662,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":663,"author":{"gitId":"bachletuankhai"},"content":"1. User requests to revert the last change made to the database.","lastModifiedDate":"2024-04-15"},{"lineNumber":664,"author":{"gitId":"bachletuankhai"},"content":"2. System reverts the last change made to the database.","lastModifiedDate":"2024-04-15"},{"lineNumber":665,"author":{"gitId":"bachletuankhai"},"content":"3. System displays a success message.","lastModifiedDate":"2024-04-15"},{"lineNumber":666,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":667,"author":{"gitId":"bachletuankhai"},"content":"   Use case ends.","lastModifiedDate":"2024-04-15"},{"lineNumber":668,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":669,"author":{"gitId":"bachletuankhai"},"content":"**Extensions**","lastModifiedDate":"2024-04-15"},{"lineNumber":670,"author":{"gitId":"bachletuankhai"},"content":"1a. No changes to revert.","lastModifiedDate":"2024-04-15"},{"lineNumber":671,"author":{"gitId":"bachletuankhai"},"content":"   1a1. System displays an error message.","lastModifiedDate":"2024-04-15"},{"lineNumber":672,"author":{"gitId":"bachletuankhai"},"content":"   Use case ends.","lastModifiedDate":"2024-04-15"},{"lineNumber":673,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":674,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":675,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":679,"author":{"gitId":"meenulekha"},"content":"3. The application should be designed to scale gracefully, accommodating an increase in the number of persons or","lastModifiedDate":"2024-04-15"},{"lineNumber":680,"author":{"gitId":"bachletuankhai"},"content":"   contacts without significant degradation in performance.","lastModifiedDate":"2024-04-15"},{"lineNumber":681,"author":{"gitId":"bachletuankhai"},"content":"4. The codebase should follow best practices and be well-documented to facilitate future maintenance and updates by","lastModifiedDate":"2024-04-15"},{"lineNumber":682,"author":{"gitId":"bachletuankhai"},"content":"   developers.","lastModifiedDate":"2024-04-15"},{"lineNumber":683,"author":{"gitId":"bachletuankhai"},"content":"5. The system should provide clear and user-friendly error messages for invalid inputs or failed operations, aiding","lastModifiedDate":"2024-04-15"},{"lineNumber":684,"author":{"gitId":"bachletuankhai"},"content":"   users in understanding and resolving issues.","lastModifiedDate":"2024-04-15"},{"lineNumber":685,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"bachletuankhai"},"content":"- **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-03-12"},{"lineNumber":689,"author":{"gitId":"bachletuankhai"},"content":"- **Java 11**: A version of the Java programming language and runtime environment, required for running the application","lastModifiedDate":"2024-04-15"},{"lineNumber":690,"author":{"gitId":"bachletuankhai"},"content":"- **Participant**: An individual registered to participate in the hackathon","lastModifiedDate":"2024-04-15"},{"lineNumber":691,"author":{"gitId":"meenulekha"},"content":"- **Staff**: An individual working at/overseeing the hackathon","lastModifiedDate":"2024-04-15"},{"lineNumber":692,"author":{"gitId":"meenulekha"},"content":"- **Sponsor**: An individual who is a sponsor for the hackathon","lastModifiedDate":"2024-04-15"},{"lineNumber":693,"author":{"gitId":"meenulekha"},"content":"- **ID**: A unique identifier assigned to each person in the system","lastModifiedDate":"2024-04-15"},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-03-12"},{"lineNumber":696,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":697,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":698,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":699,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":700,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":701,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":702,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":703,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":704,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":705,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":707,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":710,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"bachletuankhai"},"content":"    2. Ensure that the current Java version is 11 by running `java -v` in the terminal","lastModifiedDate":"2024-04-15"},{"lineNumber":713,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":714,"author":{"gitId":"bachletuankhai"},"content":"    3. After verifying the Java version, open a terminal in the same directory as the jar file and run the jar file by running `java -jar hacklink.jar` in the terminal. `hacklink.jar` is the name of the jar file.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":715,"author":{"gitId":"bachletuankhai"},"content":"    Expected: The app launches successfully and the main window is displayed with sample data.","lastModifiedDate":"2024-04-15"},{"lineNumber":716,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":717,"author":{"gitId":"bachletuankhai"},"content":"2. Saving window preferences","lastModifiedDate":"2024-04-15"},{"lineNumber":718,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":719,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":720,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"bachletuankhai"},"content":"    2. Re-launch the app as instructed in step 1.3.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":722,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":724,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":725,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":726,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":728,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":729,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"julia-cp"},"content":"    2. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":731,"author":{"gitId":"bachletuankhai"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2024-04-15"},{"lineNumber":732,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":733,"author":{"gitId":"julia-cp"},"content":"    3. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":734,"author":{"gitId":"bachletuankhai"},"content":"       Expected: No person is deleted. Error details shown in the status message.","lastModifiedDate":"2024-04-15"},{"lineNumber":735,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":736,"author":{"gitId":"julia-cp"},"content":"    4. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":737,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":738,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":739,"author":{"gitId":"julia-cp"},"content":"2. Deleting a person while a filtered list is being shown","lastModifiedDate":"2024-04-15"},{"lineNumber":740,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":741,"author":{"gitId":"bachletuankhai"},"content":"   1. Prerequisites: Filter the list using the `find` command (e.g., `find alex`). Multiple persons in the filtered list.","lastModifiedDate":"2024-04-15"},{"lineNumber":742,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":743,"author":{"gitId":"julia-cp"},"content":"   2. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":744,"author":{"gitId":"bachletuankhai"},"content":"      Expected: First contact in the filtered list is deleted. Details of the deleted contact shown in the status message. No change in the contacts that are not in the filtered list.","lastModifiedDate":"2024-04-15"},{"lineNumber":745,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":746,"author":{"gitId":"julia-cp"},"content":"   3. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":747,"author":{"gitId":"bachletuankhai"},"content":"      Expected: No person is deleted. Error details shown in the status message. No change in the contacts that are not in the filtered list.","lastModifiedDate":"2024-04-15"},{"lineNumber":748,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":749,"author":{"gitId":"julia-cp"},"content":"   4. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the filtered list size)\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":750,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2024-04-15"},{"lineNumber":751,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":752,"author":{"gitId":"dhlee03"},"content":"### Commenting/Viewing a person","lastModifiedDate":"2024-04-15"},{"lineNumber":753,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":754,"author":{"gitId":"dhlee03"},"content":"1. Commenting","lastModifiedDate":"2024-04-15"},{"lineNumber":755,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":756,"author":{"gitId":"dhlee03"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2024-04-15"},{"lineNumber":757,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":758,"author":{"gitId":"dhlee03"},"content":"   2. Test case: `comment 1 This is a comment`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":759,"author":{"gitId":"dhlee03"},"content":"     Expected: Comment is added to the first person in the list. The dialog mark is displayed next to the person\u0027s name.","lastModifiedDate":"2024-04-15"},{"lineNumber":760,"author":{"gitId":"dhlee03"},"content":"   ","lastModifiedDate":"2024-04-15"},{"lineNumber":761,"author":{"gitId":"dhlee03"},"content":"   3. Test case: `comment 0 This is a comment`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":762,"author":{"gitId":"dhlee03"},"content":"      Expected: No comment is added. Comment command should fail with an error message.","lastModifiedDate":"2024-04-15"},{"lineNumber":763,"author":{"gitId":"dhlee03"},"content":"   ","lastModifiedDate":"2024-04-15"},{"lineNumber":764,"author":{"gitId":"dhlee03"},"content":"   4. Other incorrect comment commands to try: `comment`, `comment x another comment` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":765,"author":{"gitId":"dhlee03"},"content":"      Expected: No comment is added. The comment command should fail with an error message.","lastModifiedDate":"2024-04-15"},{"lineNumber":766,"author":{"gitId":"dhlee03"},"content":"   ","lastModifiedDate":"2024-04-15"},{"lineNumber":767,"author":{"gitId":"dhlee03"},"content":"2. Viewing a comment","lastModifiedDate":"2024-04-15"},{"lineNumber":768,"author":{"gitId":"dhlee03"},"content":"   1. Prerequisites: Comment added to the first person in the list using the `comment` command. Comment is not added to the second person in the list.","lastModifiedDate":"2024-04-15"},{"lineNumber":769,"author":{"gitId":"dhlee03"},"content":"   ","lastModifiedDate":"2024-04-15"},{"lineNumber":770,"author":{"gitId":"dhlee03"},"content":"   2. Test case: `view 1`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":771,"author":{"gitId":"dhlee03"},"content":"     Expected: The comment added to the first person in the list is displayed with other information.","lastModifiedDate":"2024-04-15"},{"lineNumber":772,"author":{"gitId":"dhlee03"},"content":"   ","lastModifiedDate":"2024-04-15"},{"lineNumber":773,"author":{"gitId":"dhlee03"},"content":"   3. Test case: `view 2`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":774,"author":{"gitId":"dhlee03"},"content":"     Expected: The view command should work without any error message. With other information, the comment is displayed as \"No comment provided.\".","lastModifiedDate":"2024-04-15"},{"lineNumber":775,"author":{"gitId":"dhlee03"},"content":"   ","lastModifiedDate":"2024-04-15"},{"lineNumber":776,"author":{"gitId":"dhlee03"},"content":"   4.  Other incorrect view commands to try: `view`, `view x` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":777,"author":{"gitId":"dhlee03"},"content":"      Expected: The view command should fail with an error message.","lastModifiedDate":"2024-04-15"},{"lineNumber":778,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":779,"author":{"gitId":"dhlee03"},"content":"3. Link(Exporting a selected list of people to a CSV file to send to sponsors)","lastModifiedDate":"2024-04-15"},{"lineNumber":780,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":781,"author":{"gitId":"dhlee03"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2024-04-15"},{"lineNumber":782,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":783,"author":{"gitId":"dhlee03"},"content":"   2. Test case: `link 1 2 3`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":784,"author":{"gitId":"dhlee03"},"content":"      Expected: The details(name, email, phone, comment) of the first three persons in the list are exported to a CSV file. The file should be saved in the selectedPeople folder with name list.csv.","lastModifiedDate":"2024-04-15"},{"lineNumber":785,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":786,"author":{"gitId":"dhlee03"},"content":"   3. Test case: `link 0 2`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":787,"author":{"gitId":"dhlee03"},"content":"      Expected: No person is exported. Error details shown in the status message.","lastModifiedDate":"2024-04-15"},{"lineNumber":788,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":789,"author":{"gitId":"dhlee03"},"content":"   4. Other incorrect link commands to try: `link`, `link x` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":790,"author":{"gitId":"dhlee03"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2024-04-15"},{"lineNumber":791,"author":{"gitId":"dhlee03"},"content":"   ","lastModifiedDate":"2024-04-15"},{"lineNumber":792,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":793,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":794,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":795,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":796,"author":{"gitId":"bachletuankhai"},"content":"    1. Delete the data file (e.g., `HackLinkData.json`) from the data directory.","lastModifiedDate":"2024-04-15"},{"lineNumber":797,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":798,"author":{"gitId":"bachletuankhai"},"content":"    2. Relaunch the app.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":799,"author":{"gitId":"bachletuankhai"},"content":"       Expected: The app should create a new data file and load with sample data.","lastModifiedDate":"2024-04-15"},{"lineNumber":800,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":801,"author":{"gitId":"bachletuankhai"},"content":"### Undo/Redo","lastModifiedDate":"2024-04-15"},{"lineNumber":802,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":803,"author":{"gitId":"bachletuankhai"},"content":"1. Undoing a command","lastModifiedDate":"2024-04-15"},{"lineNumber":804,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":805,"author":{"gitId":"bachletuankhai"},"content":"    1. Prerequisites: Add a new person using the `add` command.","lastModifiedDate":"2024-04-15"},{"lineNumber":806,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":807,"author":{"gitId":"bachletuankhai"},"content":"    2. Test case: `undo`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":808,"author":{"gitId":"bachletuankhai"},"content":"       Expected: The last command (add) is undone. The person added should be removed from the list.","lastModifiedDate":"2024-04-15"},{"lineNumber":809,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":810,"author":{"gitId":"bachletuankhai"},"content":"    3. Other commands with extraneous parameters: `undo x`, `undo add`, `undo delete`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":811,"author":{"gitId":"bachletuankhai"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2024-04-15"},{"lineNumber":812,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":813,"author":{"gitId":"julia-cp"},"content":"2. Redoing a command","lastModifiedDate":"2024-04-15"},{"lineNumber":814,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":815,"author":{"gitId":"bachletuankhai"},"content":"   1. Prerequisites: Undo the last command (add).","lastModifiedDate":"2024-04-15"},{"lineNumber":816,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":817,"author":{"gitId":"bachletuankhai"},"content":"   2. Test case: `redo`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":818,"author":{"gitId":"bachletuankhai"},"content":"      Expected: The last undone command (add) is redone. The person added should be re-added to the list.","lastModifiedDate":"2024-04-15"},{"lineNumber":819,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":820,"author":{"gitId":"bachletuankhai"},"content":"   3. Other commands with extraneous parameters: `redo x`, `redo add`, `redo delete`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":821,"author":{"gitId":"bachletuankhai"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2024-04-15"},{"lineNumber":822,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":823,"author":{"gitId":"julia-cp"},"content":"3. Redoing after new changes are made","lastModifiedDate":"2024-04-15"},{"lineNumber":824,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":825,"author":{"gitId":"bachletuankhai"},"content":"   1. Prerequisites: Undo the last command (add).","lastModifiedDate":"2024-04-15"},{"lineNumber":826,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":827,"author":{"gitId":"bachletuankhai"},"content":"   2. Test case: ","lastModifiedDate":"2024-04-15"},{"lineNumber":828,"author":{"gitId":"bachletuankhai"},"content":"   - Add new person: `add n/John p/98765432 e/john@email.com c/participant`","lastModifiedDate":"2024-04-15"},{"lineNumber":829,"author":{"gitId":"bachletuankhai"},"content":"   - Redo the last undone command: `redo`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":830,"author":{"gitId":"bachletuankhai"},"content":"     Expected: The redo command should fail with an error message.","lastModifiedDate":"2024-04-15"},{"lineNumber":831,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":832,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":833,"author":{"gitId":"julia-cp"},"content":"### Grouping a person","lastModifiedDate":"2024-04-15"},{"lineNumber":834,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":835,"author":{"gitId":"julia-cp"},"content":"1. **Randomly grouping a participant or staff without prior existing groups**","lastModifiedDate":"2024-04-15"},{"lineNumber":836,"author":{"gitId":"julia-cp"},"content":"   1. Prerequisites: Delete addressbook.json in the data folder.","lastModifiedDate":"2024-04-15"},{"lineNumber":837,"author":{"gitId":"julia-cp"},"content":"   2. Test case: `group x` (where x is the index of a participant or staff)\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":838,"author":{"gitId":"julia-cp"},"content":"      Expected: No person is grouped. Error details shown in the status message.","lastModifiedDate":"2024-04-15"},{"lineNumber":839,"author":{"gitId":"julia-cp"},"content":"2. **Group a person into a participant or staff into a specific group number.**","lastModifiedDate":"2024-04-15"},{"lineNumber":840,"author":{"gitId":"julia-cp"},"content":"   1. Prerequisites: A participant or a staff is in the list.","lastModifiedDate":"2024-04-15"},{"lineNumber":841,"author":{"gitId":"julia-cp"},"content":"   2. Test case: `group x 1` (where x is the index of a participant or staff)\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":842,"author":{"gitId":"julia-cp"},"content":"      Expected: First contact is assigned into group 1. Details of the grouped contact shown in the status message.","lastModifiedDate":"2024-04-15"},{"lineNumber":843,"author":{"gitId":"julia-cp"},"content":"   3. Test case: `group x -1` (where x is the index of a participant or staff)\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":844,"author":{"gitId":"julia-cp"},"content":"      Expected: No person is grouped. Error details shown in the status message.","lastModifiedDate":"2024-04-15"},{"lineNumber":845,"author":{"gitId":"julia-cp"},"content":"3. **Randomly grouping a participant into an existing groups**","lastModifiedDate":"2024-04-15"},{"lineNumber":846,"author":{"gitId":"julia-cp"},"content":"   1. Prerequisites: There exist a positive (non-zero) group number in the list.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":847,"author":{"gitId":"julia-cp"},"content":"      If they don\u0027t exist, input `group x 5` (where x is the index of a participant or staff)","lastModifiedDate":"2024-04-15"},{"lineNumber":848,"author":{"gitId":"julia-cp"},"content":"   2. Test case: `group x` (where x is the index of a participant or staff)\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":849,"author":{"gitId":"julia-cp"},"content":"      Expected: First person is assigned into a random existing group.","lastModifiedDate":"2024-04-15"},{"lineNumber":850,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":851,"author":{"gitId":"julia-cp"},"content":"### Group randomly all persons","lastModifiedDate":"2024-04-15"},{"lineNumber":852,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":853,"author":{"gitId":"meenulekha"},"content":"1. **Randomly grouping all participants and staff in the list**","lastModifiedDate":"2024-04-15"},{"lineNumber":854,"author":{"gitId":"julia-cp"},"content":"   1. Prerequisites: Multiple persons in the list.","lastModifiedDate":"2024-04-15"},{"lineNumber":855,"author":{"gitId":"julia-cp"},"content":"   2. Test case: `grouprandom 3`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":856,"author":{"gitId":"meenulekha"},"content":"      Expected: All participants and staff are assigned into a random group number.","lastModifiedDate":"2024-04-15"},{"lineNumber":857,"author":{"gitId":"julia-cp"},"content":"      Each group have less than or equal to 3 members.","lastModifiedDate":"2024-04-15"},{"lineNumber":858,"author":{"gitId":"julia-cp"},"content":"   3. Test case: `grouprandom x` (where x is larger than the list size) \u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":859,"author":{"gitId":"julia-cp"},"content":"      Expected: All participants and staffs are assigned into group 1.","lastModifiedDate":"2024-04-15"},{"lineNumber":860,"author":{"gitId":"julia-cp"},"content":"   4. Test case: `grouprandom 0`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":861,"author":{"gitId":"julia-cp"},"content":"      Expected: No person is grouped. Error details shown in the status message.","lastModifiedDate":"2024-04-15"},{"lineNumber":862,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":863,"author":{"gitId":"meenulekha"},"content":"### Adding events","lastModifiedDate":"2024-04-14"},{"lineNumber":864,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":865,"author":{"gitId":"meenulekha"},"content":"1. **Access the \"Add Event\" Functionality**:","lastModifiedDate":"2024-04-14"},{"lineNumber":866,"author":{"gitId":"bachletuankhai"},"content":"    - Navigate to the events window by clicking on Events in the top menu bar and followed by show Events, where you","lastModifiedDate":"2024-04-15"},{"lineNumber":867,"author":{"gitId":"bachletuankhai"},"content":"      will be brought to the events window.","lastModifiedDate":"2024-04-15"},{"lineNumber":868,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":869,"author":{"gitId":"meenulekha"},"content":"2. **Input Form**:","lastModifiedDate":"2024-04-14"},{"lineNumber":870,"author":{"gitId":"meenulekha"},"content":"    - Input the correct addevent command including name, date, and category following the appropriate format.","lastModifiedDate":"2024-04-14"},{"lineNumber":871,"author":{"gitId":"bachletuankhai"},"content":"    - Validate that the command handles various data types and formats correctly (e.g., date format (dd-MM-YYYY) should","lastModifiedDate":"2024-04-15"},{"lineNumber":872,"author":{"gitId":"bachletuankhai"},"content":"      be enforced).","lastModifiedDate":"2024-04-15"},{"lineNumber":873,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":874,"author":{"gitId":"meenulekha"},"content":"3. **Submit Event**:","lastModifiedDate":"2024-04-14"},{"lineNumber":875,"author":{"gitId":"meenulekha"},"content":"    - Press enter submit the event.","lastModifiedDate":"2024-04-14"},{"lineNumber":876,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":877,"author":{"gitId":"meenulekha"},"content":"4. **Verification**:","lastModifiedDate":"2024-04-14"},{"lineNumber":878,"author":{"gitId":"meenulekha"},"content":"    - Verify that the event is successfully added to the event list.","lastModifiedDate":"2024-04-14"},{"lineNumber":879,"author":{"gitId":"meenulekha"},"content":"    - Confirm that the details provided during input match the details displayed for the newly added event.","lastModifiedDate":"2024-04-14"},{"lineNumber":880,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":881,"author":{"gitId":"meenulekha"},"content":"### Deleting Event","lastModifiedDate":"2024-04-14"},{"lineNumber":882,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":883,"author":{"gitId":"meenulekha"},"content":"1. **Access the \"Delete Event\" Functionality**:","lastModifiedDate":"2024-04-14"},{"lineNumber":884,"author":{"gitId":"bachletuankhai"},"content":"    - Navigate to the events window by clicking on Events in the top menu bar and followed by show Events, where you","lastModifiedDate":"2024-04-15"},{"lineNumber":885,"author":{"gitId":"bachletuankhai"},"content":"      will be brought to the events window.","lastModifiedDate":"2024-04-15"},{"lineNumber":886,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":887,"author":{"gitId":"meenulekha"},"content":"2. **Select Event to Delete**:","lastModifiedDate":"2024-04-14"},{"lineNumber":888,"author":{"gitId":"meenulekha"},"content":"    - Identify an event and its index from the list that you want to delete.","lastModifiedDate":"2024-04-14"},{"lineNumber":889,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":890,"author":{"gitId":"meenulekha"},"content":"3. **Deletion**:","lastModifiedDate":"2024-04-14"},{"lineNumber":891,"author":{"gitId":"meenulekha"},"content":"    - Input the delete event command to delete the event.","lastModifiedDate":"2024-04-14"},{"lineNumber":892,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":893,"author":{"gitId":"meenulekha"},"content":"4. **Verification**:","lastModifiedDate":"2024-04-14"},{"lineNumber":894,"author":{"gitId":"meenulekha"},"content":"    - Ensure that the event you selected for deletion is no longer present in the event list.","lastModifiedDate":"2024-04-14"},{"lineNumber":895,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":896,"author":{"gitId":"meenulekha"},"content":"### Finding an event","lastModifiedDate":"2024-04-14"},{"lineNumber":897,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":898,"author":{"gitId":"meenulekha"},"content":"1. **Input Search Query**:","lastModifiedDate":"2024-04-14"},{"lineNumber":899,"author":{"gitId":"meenulekha"},"content":"    - Enter findevent followed by the keyword related to the event you want to find.","lastModifiedDate":"2024-04-14"},{"lineNumber":900,"author":{"gitId":"meenulekha"},"content":"    - Try different search terms and variations to test the search functionality comprehensively.","lastModifiedDate":"2024-04-14"},{"lineNumber":901,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":902,"author":{"gitId":"meenulekha"},"content":"2. **Initiate Search**:","lastModifiedDate":"2024-04-14"},{"lineNumber":903,"author":{"gitId":"meenulekha"},"content":"    - Press Enter to execute the search.","lastModifiedDate":"2024-04-14"},{"lineNumber":904,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":905,"author":{"gitId":"meenulekha"},"content":"3. **Review Results**:","lastModifiedDate":"2024-04-14"},{"lineNumber":906,"author":{"gitId":"meenulekha"},"content":"    - Check the search results to ensure they match the criteria you specified.","lastModifiedDate":"2024-04-14"},{"lineNumber":907,"author":{"gitId":"meenulekha"},"content":"    - Verify that the search results include relevant events based on your input.","lastModifiedDate":"2024-04-14"},{"lineNumber":908,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":909,"author":{"gitId":"meenulekha"},"content":"### Listing events","lastModifiedDate":"2024-04-14"},{"lineNumber":910,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":911,"author":{"gitId":"meenulekha"},"content":"1. **View Event List**:","lastModifiedDate":"2024-04-14"},{"lineNumber":912,"author":{"gitId":"meenulekha"},"content":"    - Confirm that the list displays all events currently available in the system.","lastModifiedDate":"2024-04-14"},{"lineNumber":913,"author":{"gitId":"meenulekha"},"content":"    - Verify that the events are listed in a clear and organized manner.","lastModifiedDate":"2024-04-14"},{"lineNumber":914,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":915,"author":{"gitId":"meenulekha"},"content":"2. **Scrolling and Pagination**:","lastModifiedDate":"2024-04-14"},{"lineNumber":916,"author":{"gitId":"meenulekha"},"content":"    - If the event list is extensive, test scrolling and pagination features to navigate through the list effectively.","lastModifiedDate":"2024-04-14"},{"lineNumber":917,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":918,"author":{"gitId":"meenulekha"},"content":"### Clearing events","lastModifiedDate":"2024-04-14"},{"lineNumber":919,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":920,"author":{"gitId":"julia-cp"},"content":"1. **Initiate Clearing**:","lastModifiedDate":"2024-04-15"},{"lineNumber":921,"author":{"gitId":"meenulekha"},"content":"    - Input the clear command to clear all events from the system.","lastModifiedDate":"2024-04-14"},{"lineNumber":922,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":923,"author":{"gitId":"julia-cp"},"content":"2. **Verification**:","lastModifiedDate":"2024-04-15"},{"lineNumber":924,"author":{"gitId":"meenulekha"},"content":"    - Ensure that all events are removed from the event list.","lastModifiedDate":"2024-04-14"},{"lineNumber":925,"author":{"gitId":"meenulekha"},"content":"    - Verify that the event list is empty after clearing.","lastModifiedDate":"2024-04-14"},{"lineNumber":926,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":927,"author":{"gitId":"julia-cp"},"content":"3. **Check Impact**:","lastModifiedDate":"2024-04-15"},{"lineNumber":928,"author":{"gitId":"bachletuankhai"},"content":"    - If the application has related functionalities or features affected by event clearing (e.g., statistics, reports),","lastModifiedDate":"2024-04-15"},{"lineNumber":929,"author":{"gitId":"bachletuankhai"},"content":"      verify that they are updated accordingly.","lastModifiedDate":"2024-04-15"},{"lineNumber":930,"author":{"gitId":"meenulekha"},"content":"    - Confirm that there are no unintended side effects or data inconsistencies caused by clearing events.","lastModifiedDate":"2024-04-14"},{"lineNumber":931,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":932,"author":{"gitId":"meenulekha"},"content":"## **Appendix: Planned Enhancements**","lastModifiedDate":"2024-04-15"},{"lineNumber":933,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":934,"author":{"gitId":"meenulekha"},"content":"Team size: 4","lastModifiedDate":"2024-04-15"},{"lineNumber":935,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":936,"author":{"gitId":"meenulekha"},"content":"1. **Add Confirmation Dialog for Delete Event**:","lastModifiedDate":"2024-04-15"},{"lineNumber":937,"author":{"gitId":"bachletuankhai"},"content":"    - **Feature Flaw**: Currently, when a user executes the \"delete event\" command, the event is immediately removed","lastModifiedDate":"2024-04-15"},{"lineNumber":938,"author":{"gitId":"bachletuankhai"},"content":"      without any confirmation. This can lead to accidental deletions.","lastModifiedDate":"2024-04-15"},{"lineNumber":939,"author":{"gitId":"bachletuankhai"},"content":"    - **Proposed Fix**: Implement a confirmation dialog that prompts the user to confirm the deletion before proceeding.","lastModifiedDate":"2024-04-15"},{"lineNumber":940,"author":{"gitId":"bachletuankhai"},"content":"      The dialog should display details of the event to be deleted and provide options to confirm or cancel the","lastModifiedDate":"2024-04-15"},{"lineNumber":941,"author":{"gitId":"bachletuankhai"},"content":"      deletion.","lastModifiedDate":"2024-04-15"},{"lineNumber":942,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":943,"author":{"gitId":"meenulekha"},"content":"2. **Implement restriction that events can only be added for the future for Add Event**:","lastModifiedDate":"2024-04-15"},{"lineNumber":944,"author":{"gitId":"bachletuankhai"},"content":"    - **Feature Flaw**: Adding events with dates in the past might not be accurate as ideally hackathon organisers would","lastModifiedDate":"2024-04-15"},{"lineNumber":945,"author":{"gitId":"bachletuankhai"},"content":"      want to schedule events in the future.","lastModifiedDate":"2024-04-15"},{"lineNumber":946,"author":{"gitId":"meenulekha"},"content":"    - **Proposed Fix**: Introduce restrictions for the event date that can be specified in the add event command","lastModifiedDate":"2024-04-15"},{"lineNumber":947,"author":{"gitId":"meenulekha"},"content":"    - **Example**: addevent en/meeting ed/30-12-2023 ec/staff will be considered invalid","lastModifiedDate":"2024-04-15"},{"lineNumber":948,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":949,"author":{"gitId":"bachletuankhai"},"content":"3. **Proper undoing of deletion**:","lastModifiedDate":"2024-04-15"},{"lineNumber":950,"author":{"gitId":"bachletuankhai"},"content":"   Currently, undoing a delete command adds the deleted person to the end of the contact list instead of their original","lastModifiedDate":"2024-04-15"},{"lineNumber":951,"author":{"gitId":"julia-cp"},"content":"   position. This can be confusing for users who expect the undo operation to truly revert the deletion. We plan to","lastModifiedDate":"2024-04-15"},{"lineNumber":952,"author":{"gitId":"julia-cp"},"content":"   re-implement the undo feature of the delete command to restore the deleted person to their original position in the","lastModifiedDate":"2024-04-15"},{"lineNumber":953,"author":{"gitId":"bachletuankhai"},"content":"   contact list.","lastModifiedDate":"2024-04-15"},{"lineNumber":954,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":955,"author":{"gitId":"bachletuankhai"},"content":"4. **Allow more flexible name for contact**:","lastModifiedDate":"2024-04-15"},{"lineNumber":956,"author":{"gitId":"bachletuankhai"},"content":"   Currently, the name of a contact can only contain alphanumeric characters and spaces. We plan to allow more characters such as","lastModifiedDate":"2024-04-15"},{"lineNumber":957,"author":{"gitId":"bachletuankhai"},"content":"   hyphens, periods, apostrophes, slashes, and commas in the name of a contact.","lastModifiedDate":"2024-04-15"},{"lineNumber":958,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":959,"author":{"gitId":"bachletuankhai"},"content":"5. **Implement priority system when assigning a person into a random group with Group Command**:","lastModifiedDate":"2024-04-15"},{"lineNumber":960,"author":{"gitId":"julia-cp"},"content":"   - **Feature Flaw**: Assigning a person to a totally random group might not be accurate as ideally hackathon would need groups with similar group sizes.","lastModifiedDate":"2024-04-15"},{"lineNumber":961,"author":{"gitId":"julia-cp"},"content":"   - **Proposed Fix**: Implement a priority system where the group that have fewer members have higher priority","lastModifiedDate":"2024-04-15"},{"lineNumber":962,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":963,"author":{"gitId":"bachletuankhai"},"content":"6. **Add an option to not include existing groups for GroupRandom Command**:","lastModifiedDate":"2024-04-15"},{"lineNumber":964,"author":{"gitId":"julia-cp"},"content":"   - **Feature Flaw**: Currently, GroupRandom Command will be randomly assigning group numbers, that ranges from 1 to a certain number. This is not ideal for when a hackathon organiser wants to randomize a subset of the contacts without changing the existing groups.","lastModifiedDate":"2024-04-15"},{"lineNumber":965,"author":{"gitId":"julia-cp"},"content":"   - **Proposed Fix**: Introduce an option to randomly assigning groups without modifying the existing group members.","lastModifiedDate":"2024-04-15"},{"lineNumber":966,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":967,"author":{"gitId":"dhlee03"},"content":"7. **Add a way to reset comments for a person**:","lastModifiedDate":"2024-04-15"},{"lineNumber":968,"author":{"gitId":"dhlee03"},"content":"   Currently, it is possible to remove the dialog mark for a person by setting the comment to default command \"No comment provided.\"","lastModifiedDate":"2024-04-15"},{"lineNumber":969,"author":{"gitId":"dhlee03"},"content":"   However, there is no way to remove the comment by commands. We plan to add a command to reset the comment for a person.","lastModifiedDate":"2024-04-15"},{"lineNumber":970,"author":{"gitId":"dhlee03"},"content":"     ","lastModifiedDate":"2024-04-15"},{"lineNumber":971,"author":{"gitId":"meenulekha"},"content":"## **Appendix: Effort**","lastModifiedDate":"2024-04-15"},{"lineNumber":972,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":973,"author":{"gitId":"bachletuankhai"},"content":"Our project involved the development of a comprehensive event management system, which presented several challenges and","lastModifiedDate":"2024-04-15"},{"lineNumber":974,"author":{"gitId":"bachletuankhai"},"content":"required significant effort. Unlike AB3, which deals with only one entity type (persons), our project dealt with","lastModifiedDate":"2024-04-15"},{"lineNumber":975,"author":{"gitId":"bachletuankhai"},"content":"multiple entity types (events, persons: participants, staffs, sponsors), making it more complex.","lastModifiedDate":"2024-04-15"},{"lineNumber":976,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":977,"author":{"gitId":"meenulekha"},"content":"**Difficulty Level:**","lastModifiedDate":"2024-04-15"},{"lineNumber":978,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":979,"author":{"gitId":"bachletuankhai"},"content":"- The project\u0027s difficulty level was moderate to high due to the need to handle multiple entity types and implement","lastModifiedDate":"2024-04-15"},{"lineNumber":980,"author":{"gitId":"bachletuankhai"},"content":"  various features such as grouping, undoing/redoing and event commands.","lastModifiedDate":"2024-04-15"},{"lineNumber":981,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":982,"author":{"gitId":"meenulekha"},"content":"**Challenges Faced:**","lastModifiedDate":"2024-04-15"},{"lineNumber":983,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":984,"author":{"gitId":"bachletuankhai"},"content":"- One challenge was ensuring the system\u0027s robustness and reliability, especially when handling complex data interactions","lastModifiedDate":"2024-04-15"},{"lineNumber":985,"author":{"gitId":"bachletuankhai"},"content":"  and user inputs.","lastModifiedDate":"2024-04-15"},{"lineNumber":986,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":987,"author":{"gitId":"meenulekha"},"content":"- We had to consider various scenarios that could result in a not so friendly user-friendly experience.","lastModifiedDate":"2024-04-15"},{"lineNumber":988,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":989,"author":{"gitId":"meenulekha"},"content":"**Effort Required:**","lastModifiedDate":"2024-04-15"},{"lineNumber":990,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":991,"author":{"gitId":"bachletuankhai"},"content":"- The project required a significant amount of effort from both development and testing perspectives. Development","lastModifiedDate":"2024-04-15"},{"lineNumber":992,"author":{"gitId":"bachletuankhai"},"content":"  involved designing and implementing features, handling data storage and retrieval, and ensuring smooth system","lastModifiedDate":"2024-04-15"},{"lineNumber":993,"author":{"gitId":"bachletuankhai"},"content":"  operations.","lastModifiedDate":"2024-04-15"},{"lineNumber":994,"author":{"gitId":"bachletuankhai"},"content":"- Testing efforts were extensive to ensure the system\u0027s functionality and reliability.","lastModifiedDate":"2024-04-15"},{"lineNumber":995,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":996,"author":{"gitId":"meenulekha"},"content":"**Achievements:**","lastModifiedDate":"2024-04-15"},{"lineNumber":997,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":998,"author":{"gitId":"bachletuankhai"},"content":"- Despite the challenges, we successfully developed a functional and robust event management system that meets the","lastModifiedDate":"2024-04-15"},{"lineNumber":999,"author":{"gitId":"bachletuankhai"},"content":"  project requirements and provides a seamless user experience.","lastModifiedDate":"2024-04-15"},{"lineNumber":1000,"author":{"gitId":"bachletuankhai"},"content":"- Our achievements include implementing key features such as grouping, undo/redo commands, creating CSV file and event","lastModifiedDate":"2024-04-15"},{"lineNumber":1001,"author":{"gitId":"bachletuankhai"},"content":"  commands, as well as ensuring data integrity and system stability.","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"dhlee03":147,"julia-cp":75,"meenulekha":205,"bachletuankhai":317,"-":257}},{"path":"docs/Documentation.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Documentation guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"**Setting up and maintaining the project website:**","lastModifiedDate":"2020-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"- We use [**Jekyll**](https://jekyllrb.com/) to manage documentation.","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"- The `docs/` folder is used for documentation.","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"- To learn how set it up and maintain the project website, follow the guide [_[se-edu/guides] **Using Jekyll for project documentation**_](https://se-education.org/guides/tutorials/jekyll.html).","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"- Note these points when adapting the documentation to a different project/product:","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"  - The \u0027Site-wide settings\u0027 section of the page linked above has information on how to update site-wide elements such as the top navigation bar.","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"  - :bulb: In addition to updating content files, you might have to update the config files `docs\\_config.yml` and `docs\\_sass\\minima\\_base.scss` (which contains a reference to `HackLink` that comes into play when converting documentation pages to PDF format).","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"- If you are using Intellij for editing documentation files, you can consider enabling \u0027soft wrapping\u0027 for `*.md` files, as explained in [_[se-edu/guides] **Intellij IDEA: Useful settings**_](https://se-education.org/guides/tutorials/intellijUsefulSettings.html#enabling-soft-wrapping)","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Style guidance:**","lastModifiedDate":"2020-06-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"- Follow the [**_Google developer documentation style guide_**](https://developers.google.com/style).","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"- Also relevant is the [_[se-edu/guides] **Markdown coding standard**_](https://se-education.org/guides/conventions/markdown.html)","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"**Diagrams:**","lastModifiedDate":"2020-06-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"- See the [_[se-edu/guides] **Using PlantUML**_](https://se-education.org/guides/tutorials/plantUml.html)","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"**Converting a document to the PDF format:**","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"- See the guide [_[se-edu/guides] **Saving web documents as PDF files**_](https://se-education.org/guides/tutorials/savingPdf.html)","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"bachletuankhai":11,"-":17}},{"path":"docs/UserGuide-2101.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"layout: page","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"title: User Guide","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"WELCOME TO HACKLINK!","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"## Introduction","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"Again, Welcome to HackLink! This user guide is designed to help you navigate and utilize this HackLink app to its full","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"potential. HackLink is a Hackathon Participant Management Application, designed to help organizers efficiently manage","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"contact information for hackathons. This app is aimed at simplifying the management of participant, staff, and sponsor\u0027s","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"information. With this user guide, you will easily and quickly learn to make use of important features, such as adding,","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"deleting, finding, and commenting contacts. you can streamline the complex process of organizing and coordinating your","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"hackathon event.","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"### Target Audience","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"This user guide is intended for hackathon organizers and coordinators who are looking for a simple and efficient way to","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"manage their hackathons. We assume that you have a basic understanding of hackathon event management and are familiar","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"with digital tools and CLI-based applications. However, even if you are new to hackathon management, this user guide","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"will help you get started with HackLink. No prior experience is required, as this guide will cover all the necessary","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"fundamentals to help you get started with HackLink.","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"### Purpose of this User Guide","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"The purpose of this user guide is to equip you with a thorough understanding of HackLink. This guide will provide a","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"comprehensive overview of the features and functionalities of HackLink. It will guide you through the process of","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"installing the application, understanding the UI(user interface), and using the various commands to manage your","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"hackathon event. This guide will also provide you with good examples and cautions to help you avoid errors and make the","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"best use of the application. By the end of this guide, you will be able to efficiently manage your hackathon","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"event using HackLink.","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"## Table of Contents","lastModifiedDate":"2024-04-15"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"1. [Introduction](#introduction)","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"2. [Product Information Overview](#product-information-overview)","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"3. [Quick start](#quick-start)","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"4. [User Interface Basics](#user-interface-basics)","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"5. [Main features](#main-features)","lastModifiedDate":"2024-04-15"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"    - [Viewing help](#viewing-help--help)","lastModifiedDate":"2024-04-15"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"    - [Adding a person](#adding-a-person--add)","lastModifiedDate":"2024-04-15"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"    - [Listing all persons](#listing-all-persons--list)","lastModifiedDate":"2024-04-15"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"    - [Editing a person](#editing-a-person--edit)","lastModifiedDate":"2024-04-15"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"    - [Grouping a person](#grouping-a-person--group)","lastModifiedDate":"2024-04-15"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"    - [Grouping randomly listed persons](#grouping-randomly-listed-persons--grouprandom)","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"    - [Commenting a person](#commenting-a-person--comment)","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"    - [Viewing comments](#viewing-comments--view)","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"    - [Locating persons by keywords](#locating-persons-by-keywords--find)","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"    - [Exporting selected people](#exporting-selected-people--link)","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"    - [Removing a person](#removing-a-person--delete)","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"6. [Event features](#event-features)","lastModifiedDate":"2024-04-15"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"    - [Adding an event](#adding-an-event--addevent)","lastModifiedDate":"2024-04-15"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"    - [Listing all events](#listing-all-events--listevent)","lastModifiedDate":"2024-04-15"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"    - [Removing an event](#removing-an-event--deleteevent)","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"    - [Locating events by keywords](#locating-events-by-keywords--findevent)","lastModifiedDate":"2024-04-15"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"    - [Clearing all entries](#clearing-all-entries--clear)","lastModifiedDate":"2024-04-15"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"    - [Exiting the program](#exiting-the-program--exit)","lastModifiedDate":"2024-04-15"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"7. [Utility features](#utility-features)","lastModifiedDate":"2024-04-15"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"    - [Saving the data](#saving-the-data)","lastModifiedDate":"2024-04-15"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"    - [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2024-04-15"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"    - [Navigating to older commands](#navigating-to-older-commands)","lastModifiedDate":"2024-04-15"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"    - [Aliases](#aliases)","lastModifiedDate":"2024-04-15"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"    - [Shortcuts](#shortcuts)","lastModifiedDate":"2024-04-15"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"    - [Undo](#undo)","lastModifiedDate":"2024-04-15"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"    - [Redo](#redo)","lastModifiedDate":"2024-04-15"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":72,"author":{"gitId":"meenulekha"},"content":"8. [Event window](#event-window)","lastModifiedDate":"2024-04-15"},{"lineNumber":73,"author":{"gitId":"meenulekha"},"content":"9. [FAQ](#faq)","lastModifiedDate":"2024-04-15"},{"lineNumber":74,"author":{"gitId":"meenulekha"},"content":"10. [Warnings](#warnings)","lastModifiedDate":"2024-04-15"},{"lineNumber":75,"author":{"gitId":"meenulekha"},"content":"11. [Known issues](#known-issues)","lastModifiedDate":"2024-04-15"},{"lineNumber":76,"author":{"gitId":"meenulekha"},"content":"12. [Tips](#tips)","lastModifiedDate":"2024-04-15"},{"lineNumber":77,"author":{"gitId":"meenulekha"},"content":"13. [Command summary](#command-summary)","lastModifiedDate":"2024-04-15"},{"lineNumber":78,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":79,"author":{"gitId":"meenulekha"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":80,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":81,"author":{"gitId":"meenulekha"},"content":"## Product Information Overview","lastModifiedDate":"2024-04-15"},{"lineNumber":82,"author":{"gitId":"meenulekha"},"content":"HackLink allows you to manage your hackathon event efficiently by providing following features:","lastModifiedDate":"2024-04-15"},{"lineNumber":83,"author":{"gitId":"meenulekha"},"content":"- Adding/Deleting a person","lastModifiedDate":"2024-04-15"},{"lineNumber":84,"author":{"gitId":"meenulekha"},"content":"- Editing/List/Grouping/Commenting a person","lastModifiedDate":"2024-04-15"},{"lineNumber":85,"author":{"gitId":"meenulekha"},"content":"- Finding a person by keywords","lastModifiedDate":"2024-04-15"},{"lineNumber":86,"author":{"gitId":"meenulekha"},"content":"- Exporting selected people","lastModifiedDate":"2024-04-15"},{"lineNumber":87,"author":{"gitId":"meenulekha"},"content":"- Managing events","lastModifiedDate":"2024-04-15"},{"lineNumber":88,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":89,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":90,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":91,"author":{"gitId":"bachletuankhai"},"content":"## Quick start","lastModifiedDate":"2024-04-15"},{"lineNumber":92,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":93,"author":{"gitId":"meenulekha"},"content":"To begin using HackLink, please follow these steps:","lastModifiedDate":"2024-04-15"},{"lineNumber":94,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":95,"author":{"gitId":"bachletuankhai"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2024-04-15"},{"lineNumber":96,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":97,"author":{"gitId":"bachletuankhai"},"content":"2. Download the latest `HackLink.jar` from [here](https://github.com/AY2324S2-CS2103T-F12-4/tp/releases).","lastModifiedDate":"2024-04-15"},{"lineNumber":98,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":99,"author":{"gitId":"bachletuankhai"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your HackLink application.","lastModifiedDate":"2024-04-15"},{"lineNumber":100,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":101,"author":{"gitId":"bachletuankhai"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar HackLink.jar` command","lastModifiedDate":"2024-04-15"},{"lineNumber":102,"author":{"gitId":"bachletuankhai"},"content":"   to run the application.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":103,"author":{"gitId":"bachletuankhai"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":104,"author":{"gitId":"julia-cp"},"content":"   ![img.png](images/Ui.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":105,"author":{"gitId":"bachletuankhai"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will","lastModifiedDate":"2024-04-15"},{"lineNumber":106,"author":{"gitId":"bachletuankhai"},"content":"   open the help window.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":107,"author":{"gitId":"bachletuankhai"},"content":"   Some example commands you can try:","lastModifiedDate":"2024-04-15"},{"lineNumber":108,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":109,"author":{"gitId":"bachletuankhai"},"content":"    - `list` : Lists all contacts.","lastModifiedDate":"2024-04-15"},{"lineNumber":110,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":111,"author":{"gitId":"bachletuankhai"},"content":"    - `add n/John Doe p/98765432 e/johndoe@gmail.com c/participant` : Adds a person named `John Doe` to HackLink.","lastModifiedDate":"2024-04-15"},{"lineNumber":112,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":113,"author":{"gitId":"bachletuankhai"},"content":"    - `delete 3` : Deletes the 3rd person shown in the current list.","lastModifiedDate":"2024-04-15"},{"lineNumber":114,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":115,"author":{"gitId":"bachletuankhai"},"content":"    - `edit 1 p/89898989` : Updates the information of the person at index 1.","lastModifiedDate":"2024-04-15"},{"lineNumber":116,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":117,"author":{"gitId":"bachletuankhai"},"content":"    - `comment 1 He is good at Java`: Adds a comment to the person at index 1.","lastModifiedDate":"2024-04-15"},{"lineNumber":118,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":119,"author":{"gitId":"bachletuankhai"},"content":"    - `exit` : Exits the app.","lastModifiedDate":"2024-04-15"},{"lineNumber":120,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":121,"author":{"gitId":"bachletuankhai"},"content":"6. Navigate to the Event Window by clicking on Events in the menubar. Refer to the [Event window](#event-window) section","lastModifiedDate":"2024-04-15"},{"lineNumber":122,"author":{"gitId":"bachletuankhai"},"content":"   for more details.","lastModifiedDate":"2024-04-15"},{"lineNumber":123,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":124,"author":{"gitId":"bachletuankhai"},"content":"7. Type the commands in the command box and press Enter to execute them.","lastModifiedDate":"2024-04-15"},{"lineNumber":125,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":126,"author":{"gitId":"bachletuankhai"},"content":"    - `addevent en/Meeting ed/11-06-2024 ec/staff` : Adds an event named `meeting`.","lastModifiedDate":"2024-04-15"},{"lineNumber":127,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":128,"author":{"gitId":"bachletuankhai"},"content":"    - `deleteevent 8` : Deletes the 8th event shown in the list.","lastModifiedDate":"2024-04-15"},{"lineNumber":129,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":130,"author":{"gitId":"bachletuankhai"},"content":"    - `findevent meeting` : Finds events which names contain \"meeting\".","lastModifiedDate":"2024-04-15"},{"lineNumber":131,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":132,"author":{"gitId":"bachletuankhai"},"content":"    - `listevent` : Lists all events.","lastModifiedDate":"2024-04-15"},{"lineNumber":133,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":134,"author":{"gitId":"bachletuankhai"},"content":"    - `clear` : Clears all events","lastModifiedDate":"2024-04-15"},{"lineNumber":135,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":136,"author":{"gitId":"bachletuankhai"},"content":"8. Refer to the [Main features](#main-features) below for details of each command.","lastModifiedDate":"2024-04-15"},{"lineNumber":137,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":138,"author":{"gitId":"meenulekha"},"content":"### Navigating this User Guide","lastModifiedDate":"2024-04-15"},{"lineNumber":139,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":140,"author":{"gitId":"meenulekha"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":141,"author":{"gitId":"meenulekha"},"content":"## User Interface Basics","lastModifiedDate":"2024-04-15"},{"lineNumber":142,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":143,"author":{"gitId":"meenulekha"},"content":"Let\u0027s take a look at the basic components of the User Interface(UI)!","lastModifiedDate":"2024-04-15"},{"lineNumber":144,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":145,"author":{"gitId":"meenulekha"},"content":"![annotatedmainwindow](images/annotatedmainwindow.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":146,"author":{"gitId":"meenulekha"},"content":"![annotatedpersoncard](images/annotatedpersoncard.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":147,"author":{"gitId":"meenulekha"},"content":"![annotatedeventwindow](images/annotatedeventwindow.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":148,"author":{"gitId":"meenulekha"},"content":"![annotatedeventcard](images/annotatedeventcard.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":149,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":150,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":151,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":152,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":153,"author":{"gitId":"bachletuankhai"},"content":"## Main features","lastModifiedDate":"2024-04-15"},{"lineNumber":154,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":155,"author":{"gitId":"bachletuankhai"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":156,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":157,"author":{"gitId":"bachletuankhai"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":158,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":159,"author":{"gitId":"bachletuankhai"},"content":"- Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":160,"author":{"gitId":"bachletuankhai"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2024-04-15"},{"lineNumber":161,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":162,"author":{"gitId":"bachletuankhai"},"content":"- Items in square brackets `[]` are optional.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":163,"author":{"gitId":"bachletuankhai"},"content":"  e.g. `n/NAME [g/GROUP]` can be used as `n/John Doe g/1` or as `n/John Doe`.","lastModifiedDate":"2024-04-15"},{"lineNumber":164,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":165,"author":{"gitId":"bachletuankhai"},"content":"- Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":166,"author":{"gitId":"bachletuankhai"},"content":"  e.g. `[c/CATEGORY​]…` can be used as ` ` (i.e. 0 times), `c/staff`, `c/sponsor` etc.","lastModifiedDate":"2024-04-15"},{"lineNumber":167,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":168,"author":{"gitId":"bachletuankhai"},"content":"- Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":169,"author":{"gitId":"bachletuankhai"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2024-04-15"},{"lineNumber":170,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":171,"author":{"gitId":"bachletuankhai"},"content":"- Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be","lastModifiedDate":"2024-04-15"},{"lineNumber":172,"author":{"gitId":"bachletuankhai"},"content":"  ignored.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":173,"author":{"gitId":"bachletuankhai"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2024-04-15"},{"lineNumber":174,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":175,"author":{"gitId":"bachletuankhai"},"content":"- Some commands have aliases. Please refer to [Aliases](#aliases) for more","lastModifiedDate":"2024-04-15"},{"lineNumber":176,"author":{"gitId":"bachletuankhai"},"content":"  information.","lastModifiedDate":"2024-04-15"},{"lineNumber":177,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":178,"author":{"gitId":"bachletuankhai"},"content":"- If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines","lastModifiedDate":"2024-04-15"},{"lineNumber":179,"author":{"gitId":"bachletuankhai"},"content":"  as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2024-04-15"},{"lineNumber":180,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":181,"author":{"gitId":"bachletuankhai"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":182,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":183,"author":{"gitId":"bachletuankhai"},"content":"### Viewing help : `help`","lastModifiedDate":"2024-04-15"},{"lineNumber":184,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":185,"author":{"gitId":"bachletuankhai"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2024-04-15"},{"lineNumber":186,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":187,"author":{"gitId":"bachletuankhai"},"content":"![help message](images/helpMessageHackLink.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":188,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":189,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `help`","lastModifiedDate":"2024-04-15"},{"lineNumber":190,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":191,"author":{"gitId":"bachletuankhai"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":192,"author":{"gitId":"bachletuankhai"},"content":":information_source: **Notes:**","lastModifiedDate":"2024-04-15"},{"lineNumber":193,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":194,"author":{"gitId":"bachletuankhai"},"content":"`help` cannot be used in event window","lastModifiedDate":"2024-04-15"},{"lineNumber":195,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":196,"author":{"gitId":"bachletuankhai"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":197,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":198,"author":{"gitId":"bachletuankhai"},"content":"### Adding a person : `add`","lastModifiedDate":"2024-04-15"},{"lineNumber":199,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":200,"author":{"gitId":"bachletuankhai"},"content":"Adds a person to HackLink.","lastModifiedDate":"2024-04-15"},{"lineNumber":201,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":202,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `add n/NAME p/PHONE e/EMAIL c/CATEGORY [g/GROUP]`","lastModifiedDate":"2024-04-15"},{"lineNumber":203,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":204,"author":{"gitId":"bachletuankhai"},"content":"**Parameters:**","lastModifiedDate":"2024-04-15"},{"lineNumber":205,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":206,"author":{"gitId":"bachletuankhai"},"content":"- `NAME`: Person\u0027s name. Only alphanumeric characters and spaces are allowed, and must contain at least 1 non-space","lastModifiedDate":"2024-04-15"},{"lineNumber":207,"author":{"gitId":"bachletuankhai"},"content":"  character.","lastModifiedDate":"2024-04-15"},{"lineNumber":208,"author":{"gitId":"bachletuankhai"},"content":"- `PHONE`: Person\u0027s phone number. Only digits are allowed and must be at least 3 digits long.","lastModifiedDate":"2024-04-15"},{"lineNumber":209,"author":{"gitId":"bachletuankhai"},"content":"- `EMAIL`: Person\u0027s email.","lastModifiedDate":"2024-04-15"},{"lineNumber":210,"author":{"gitId":"bachletuankhai"},"content":"- `CATEGORY`: Either Participant, Sponsor, or Staff.","lastModifiedDate":"2024-04-15"},{"lineNumber":211,"author":{"gitId":"bachletuankhai"},"content":"- `GROUP` _(optional)_: Person\u0027s group number. Must be a **positive integer**.","lastModifiedDate":"2024-04-15"},{"lineNumber":212,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":213,"author":{"gitId":"bachletuankhai"},"content":"**Aliases:**","lastModifiedDate":"2024-04-15"},{"lineNumber":214,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":215,"author":{"gitId":"bachletuankhai"},"content":"- `ap`: add participant","lastModifiedDate":"2024-04-15"},{"lineNumber":216,"author":{"gitId":"bachletuankhai"},"content":"- `as`: add sponsor","lastModifiedDate":"2024-04-15"},{"lineNumber":217,"author":{"gitId":"bachletuankhai"},"content":"- `at`: add staff","lastModifiedDate":"2024-04-15"},{"lineNumber":218,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":219,"author":{"gitId":"bachletuankhai"},"content":"  You can skip the `CATEGORY` parameter and the application will automatically assign the category based on the alias","lastModifiedDate":"2024-04-15"},{"lineNumber":220,"author":{"gitId":"bachletuankhai"},"content":"  used.","lastModifiedDate":"2024-04-15"},{"lineNumber":221,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":222,"author":{"gitId":"bachletuankhai"},"content":"**Examples:**","lastModifiedDate":"2024-04-15"},{"lineNumber":223,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":224,"author":{"gitId":"bachletuankhai"},"content":"- `add n/John Doe e/johnd@example.com p/98765432 c/participant g/1`","lastModifiedDate":"2024-04-15"},{"lineNumber":225,"author":{"gitId":"bachletuankhai"},"content":"- `add n/Betsy Crowe e/betsycrowe@example.com p/1234567 c/sponsor g/3`","lastModifiedDate":"2024-04-15"},{"lineNumber":226,"author":{"gitId":"bachletuankhai"},"content":"- `ap n/John Doe e/johnd@example.com p/98765432`","lastModifiedDate":"2024-04-15"},{"lineNumber":227,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":228,"author":{"gitId":"bachletuankhai"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":229,"author":{"gitId":"bachletuankhai"},"content":":information_source: **Notes about parameter format and behavior:**","lastModifiedDate":"2024-04-15"},{"lineNumber":230,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":231,"author":{"gitId":"bachletuankhai"},"content":"- There should be no “/” in each parameter.","lastModifiedDate":"2024-04-15"},{"lineNumber":232,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":233,"author":{"gitId":"bachletuankhai"},"content":"- There should be no contacts with the same information. 2 contacts are considered the same if they have the same","lastModifiedDate":"2024-04-15"},{"lineNumber":234,"author":{"gitId":"bachletuankhai"},"content":"  **name** and any match in **phone number** or **email**. Names are case-sensitive, e.g. \"Jason\" and \"jason\" does not","lastModifiedDate":"2024-04-15"},{"lineNumber":235,"author":{"gitId":"bachletuankhai"},"content":"  match.","lastModifiedDate":"2024-04-15"},{"lineNumber":236,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":237,"author":{"gitId":"bachletuankhai"},"content":"- As `NAME` only allow alphanumeric characters and spaces, names like \"Dr. Jean-Paul O\u0027Brien\" cannot be inserted. You","lastModifiedDate":"2024-04-15"},{"lineNumber":238,"author":{"gitId":"bachletuankhai"},"content":"  can work around this by either removing them or replacing them with space, e.g. \"Dr. Jean-Paul O\u0027Brien\" can be","lastModifiedDate":"2024-04-15"},{"lineNumber":239,"author":{"gitId":"bachletuankhai"},"content":"  inserted as \"Dr JeanPaul OBrien\". For abbreviations like \"s/o\", you can use the full word \"son of\" instead.","lastModifiedDate":"2024-04-15"},{"lineNumber":240,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":241,"author":{"gitId":"bachletuankhai"},"content":"- `CATEGORY` is case-insensitive, e.g. `c/participant` and `c/PARTICIPANT` will set the person inserted as a","lastModifiedDate":"2024-04-15"},{"lineNumber":242,"author":{"gitId":"bachletuankhai"},"content":"  participant.","lastModifiedDate":"2024-04-15"},{"lineNumber":243,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":244,"author":{"gitId":"bachletuankhai"},"content":"- If no `g/GROUP` is provided, the person will be assigned to default group 0 in the list.","lastModifiedDate":"2024-04-15"},{"lineNumber":245,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":246,"author":{"gitId":"bachletuankhai"},"content":"- This app is designed for small hackathons, with around 500 participants. However, the maximum number of entries in the","lastModifiedDate":"2024-04-15"},{"lineNumber":247,"author":{"gitId":"bachletuankhai"},"content":"  contact list is 2147483647. Please delete some contacts to add a new person if you reach the limit.","lastModifiedDate":"2024-04-15"},{"lineNumber":248,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":249,"author":{"gitId":"bachletuankhai"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":250,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":251,"author":{"gitId":"bachletuankhai"},"content":"### Listing all persons : `list`","lastModifiedDate":"2024-04-15"},{"lineNumber":252,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":253,"author":{"gitId":"bachletuankhai"},"content":"Shows a list of all persons in HackLink.","lastModifiedDate":"2024-04-15"},{"lineNumber":254,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":255,"author":{"gitId":"bachletuankhai"},"content":"The table will show all people\u0027s name, email, phone, category, and group.","lastModifiedDate":"2024-04-15"},{"lineNumber":256,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":257,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `list`","lastModifiedDate":"2024-04-15"},{"lineNumber":258,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":259,"author":{"gitId":"bachletuankhai"},"content":"### Editing a person : `edit`","lastModifiedDate":"2024-04-15"},{"lineNumber":260,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":261,"author":{"gitId":"bachletuankhai"},"content":"Update and edit participant contact details.","lastModifiedDate":"2024-04-15"},{"lineNumber":262,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":263,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `edit ID [n/NAME] [p/PHONE] [e/EMAIL] [g/GROUP]`","lastModifiedDate":"2024-04-15"},{"lineNumber":264,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":265,"author":{"gitId":"bachletuankhai"},"content":"**Parameters:**","lastModifiedDate":"2024-04-15"},{"lineNumber":266,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":267,"author":{"gitId":"bachletuankhai"},"content":"- `ID`: the index of the contact in the list. It should be a positive integer smaller than 2147483648.","lastModifiedDate":"2024-04-15"},{"lineNumber":268,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":269,"author":{"gitId":"bachletuankhai"},"content":"**Aliases:** `ed`","lastModifiedDate":"2024-04-15"},{"lineNumber":270,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":271,"author":{"gitId":"bachletuankhai"},"content":"**Example:** `edit 1 n/John Doe p/98765432`","lastModifiedDate":"2024-04-15"},{"lineNumber":272,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":273,"author":{"gitId":"bachletuankhai"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":274,"author":{"gitId":"bachletuankhai"},"content":":information_source: **Notes about parameter format and command constraints:**","lastModifiedDate":"2024-04-15"},{"lineNumber":275,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":276,"author":{"gitId":"bachletuankhai"},"content":"- The constraint for each parameter is the same as in [`add` command](#adding-a-person--add).","lastModifiedDate":"2024-04-15"},{"lineNumber":277,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":278,"author":{"gitId":"bachletuankhai"},"content":"- There should be at least one field to edit. (`edit 1` is invalid, `edit 1 n/John Doe` is valid)","lastModifiedDate":"2024-04-15"},{"lineNumber":279,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":280,"author":{"gitId":"bachletuankhai"},"content":"- The edit command only supports editing name, phone, email, and group. You _cannot_ change a person\u0027s category with","lastModifiedDate":"2024-04-15"},{"lineNumber":281,"author":{"gitId":"bachletuankhai"},"content":"  `edit` command. Change of role should be done by deleting the person and adding them again with the new role. This is","lastModifiedDate":"2024-04-15"},{"lineNumber":282,"author":{"gitId":"bachletuankhai"},"content":"  to prevent accidental changes in the person\u0027s role.(e.g. changing a participant to a sponsor by mistake)","lastModifiedDate":"2024-04-15"},{"lineNumber":283,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":284,"author":{"gitId":"bachletuankhai"},"content":"- As the maximum number of entries in the contact list is 2147483647, `ID` should be a positive integer smaller than","lastModifiedDate":"2024-04-15"},{"lineNumber":285,"author":{"gitId":"bachletuankhai"},"content":"  2147483648.","lastModifiedDate":"2024-04-15"},{"lineNumber":286,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":287,"author":{"gitId":"bachletuankhai"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":288,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":289,"author":{"gitId":"bachletuankhai"},"content":"### Grouping a person : `group`","lastModifiedDate":"2024-04-15"},{"lineNumber":290,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":291,"author":{"gitId":"bachletuankhai"},"content":"Assigns a participant or a staff to a group.","lastModifiedDate":"2024-04-15"},{"lineNumber":292,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":293,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `group ID [GROUP_NUMBER]`","lastModifiedDate":"2024-04-15"},{"lineNumber":294,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":295,"author":{"gitId":"bachletuankhai"},"content":"**Parameters:**","lastModifiedDate":"2024-04-15"},{"lineNumber":296,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":297,"author":{"gitId":"bachletuankhai"},"content":"- `ID`: the index number of the person in the list.","lastModifiedDate":"2024-04-15"},{"lineNumber":298,"author":{"gitId":"bachletuankhai"},"content":"- `GROUP_NUMBER` _(optional)_: the group number. Can be any positive integer. When none is provided, the selected person","lastModifiedDate":"2024-04-15"},{"lineNumber":299,"author":{"gitId":"julia-cp"},"content":"  will be randomly assigned to an **existing** group. If there is no existing valid group in the list (non-zero), the group number must be provided.","lastModifiedDate":"2024-04-15"},{"lineNumber":300,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":301,"author":{"gitId":"bachletuankhai"},"content":"**Examples:**","lastModifiedDate":"2024-04-15"},{"lineNumber":302,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":303,"author":{"gitId":"julia-cp"},"content":"- `group 1` (Note: This will produce an error if no groups exist yet.)","lastModifiedDate":"2024-04-15"},{"lineNumber":304,"author":{"gitId":"bachletuankhai"},"content":"- `group 1 3`","lastModifiedDate":"2024-04-15"},{"lineNumber":305,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":306,"author":{"gitId":"julia-cp"},"content":"- Before\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":307,"author":{"gitId":"bachletuankhai"},"content":"  ![before group](images/beforeGroup.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":308,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":309,"author":{"gitId":"julia-cp"},"content":"- After executing `group 1 3`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":310,"author":{"gitId":"bachletuankhai"},"content":"  ![img.png](images/afterGroup13.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":311,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":312,"author":{"gitId":"bachletuankhai"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":313,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":314,"author":{"gitId":"bachletuankhai"},"content":":information_source: **Notes about command constraints:**","lastModifiedDate":"2024-04-15"},{"lineNumber":315,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":316,"author":{"gitId":"bachletuankhai"},"content":"- You can only randomly assign a person to an **existing group**.","lastModifiedDate":"2024-04-15"},{"lineNumber":317,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":318,"author":{"gitId":"julia-cp"},"content":"- When no group exist you _cannot_ randomly assign a person into a group.","lastModifiedDate":"2024-04-15"},{"lineNumber":319,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":320,"author":{"gitId":"bachletuankhai"},"content":"- You can only group staff and participant, sponsor cannot be grouped.","lastModifiedDate":"2024-04-15"},{"lineNumber":321,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":322,"author":{"gitId":"bachletuankhai"},"content":"- As the maximum number of entries in the contact list is 2147483647, the id should be a positive integer smaller than","lastModifiedDate":"2024-04-15"},{"lineNumber":323,"author":{"gitId":"bachletuankhai"},"content":"  2147483648.","lastModifiedDate":"2024-04-15"},{"lineNumber":324,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":325,"author":{"gitId":"bachletuankhai"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":326,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":327,"author":{"gitId":"bachletuankhai"},"content":"### Grouping randomly listed persons : `grouprandom`","lastModifiedDate":"2024-04-15"},{"lineNumber":328,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":329,"author":{"gitId":"bachletuankhai"},"content":"Assigns a random group to each participant and staff that are currently listed.","lastModifiedDate":"2024-04-15"},{"lineNumber":330,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":331,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `grouprandom MAXIMUM_GROUP_SIZE`","lastModifiedDate":"2024-04-15"},{"lineNumber":332,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":333,"author":{"gitId":"bachletuankhai"},"content":"**Parameters:**","lastModifiedDate":"2024-04-15"},{"lineNumber":334,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":335,"author":{"gitId":"bachletuankhai"},"content":"- `MAXIMUM_GROUP_SIZE`: the maximum number of people in a group. Can be any positive integer smaller than 2147483648.","lastModifiedDate":"2024-04-15"},{"lineNumber":336,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":337,"author":{"gitId":"bachletuankhai"},"content":"**Example:**","lastModifiedDate":"2024-04-15"},{"lineNumber":338,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":339,"author":{"gitId":"bachletuankhai"},"content":"- `grouprandom 2`","lastModifiedDate":"2024-04-15"},{"lineNumber":340,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":341,"author":{"gitId":"julia-cp"},"content":"- Before\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":342,"author":{"gitId":"bachletuankhai"},"content":"  ![img.png](images/beforeGrouprandom.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":343,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":344,"author":{"gitId":"julia-cp"},"content":"- After executing `grouprandom 2`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":345,"author":{"gitId":"bachletuankhai"},"content":"  ![img.png](images/afterGroupRandom.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":346,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":347,"author":{"gitId":"bachletuankhai"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":348,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":349,"author":{"gitId":"bachletuankhai"},"content":":information_source: **Note:** Like `group` command, you can only group staff and participant, sponsor cannot be","lastModifiedDate":"2024-04-15"},{"lineNumber":350,"author":{"gitId":"bachletuankhai"},"content":"grouped.","lastModifiedDate":"2024-04-15"},{"lineNumber":351,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":352,"author":{"gitId":"bachletuankhai"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":353,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":354,"author":{"gitId":"bachletuankhai"},"content":"### Commenting a person : `comment`","lastModifiedDate":"2024-04-15"},{"lineNumber":355,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":356,"author":{"gitId":"bachletuankhai"},"content":"Add notes or comments to contacts.","lastModifiedDate":"2024-04-15"},{"lineNumber":357,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":358,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `comment ID NOTES`","lastModifiedDate":"2024-04-15"},{"lineNumber":359,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":360,"author":{"gitId":"bachletuankhai"},"content":"**Parameters:**","lastModifiedDate":"2024-04-15"},{"lineNumber":361,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":362,"author":{"gitId":"bachletuankhai"},"content":"- `ID`: the id of the person to comment on","lastModifiedDate":"2024-04-15"},{"lineNumber":363,"author":{"gitId":"bachletuankhai"},"content":"- `NOTES`: the comment to give","lastModifiedDate":"2024-04-15"},{"lineNumber":364,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":365,"author":{"gitId":"bachletuankhai"},"content":"**Example:**","lastModifiedDate":"2024-04-15"},{"lineNumber":366,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":367,"author":{"gitId":"bachletuankhai"},"content":"- `comment 1 Allergic to peanuts`","lastModifiedDate":"2024-04-15"},{"lineNumber":368,"author":{"gitId":"bachletuankhai"},"content":"  ![img.png](images/comment.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":369,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":370,"author":{"gitId":"bachletuankhai"},"content":"  The dialog icon appearing next to the person name indicates that they have a comment.","lastModifiedDate":"2024-04-15"},{"lineNumber":371,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":372,"author":{"gitId":"bachletuankhai"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":373,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":374,"author":{"gitId":"bachletuankhai"},"content":":information_source: **Note:**","lastModifiedDate":"2024-04-15"},{"lineNumber":375,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":376,"author":{"gitId":"bachletuankhai"},"content":"- **Adding a new comment on a person will replace any comments they have.** The comment is not appended to the existing","lastModifiedDate":"2024-04-15"},{"lineNumber":377,"author":{"gitId":"bachletuankhai"},"content":"  comment. This is to prevent the comment from becoming too long and unreadable. Also it ensures that the comment is","lastModifiedDate":"2024-04-15"},{"lineNumber":378,"author":{"gitId":"bachletuankhai"},"content":"  up-to-date. Please write the overall comment in current state by considering the previous comments.","lastModifiedDate":"2024-04-15"},{"lineNumber":379,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":380,"author":{"gitId":"bachletuankhai"},"content":"- **All commas in your comment will be automatically removed** when it is inserted into the application for","lastModifiedDate":"2024-04-15"},{"lineNumber":381,"author":{"gitId":"bachletuankhai"},"content":"  compatibility with link command(csv exporting).","lastModifiedDate":"2024-04-15"},{"lineNumber":382,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":383,"author":{"gitId":"bachletuankhai"},"content":"- The comment format does not restrict the use of special characters. However, some special characters that are not","lastModifiedDate":"2024-04-15"},{"lineNumber":384,"author":{"gitId":"bachletuankhai"},"content":"  supported by the system might be displayed differently in the application. It is recommended to use only alphanumeric","lastModifiedDate":"2024-04-15"},{"lineNumber":385,"author":{"gitId":"bachletuankhai"},"content":"  characters and common punctuation marks. Use of special characters is at your own risk.","lastModifiedDate":"2024-04-15"},{"lineNumber":386,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":387,"author":{"gitId":"bachletuankhai"},"content":"- The comment is a section for taking your important notes about the person. It is not meant to be used as a","lastModifiedDate":"2024-04-15"},{"lineNumber":388,"author":{"gitId":"bachletuankhai"},"content":"  full-detailed description or review of the person. If you need to store more information, consider using a separate","lastModifiedDate":"2024-04-15"},{"lineNumber":389,"author":{"gitId":"bachletuankhai"},"content":"  document.","lastModifiedDate":"2024-04-15"},{"lineNumber":390,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":391,"author":{"gitId":"bachletuankhai"},"content":"- As the maximum number of entries in the contact list is 2147483647, the id should be a positive integer smaller than","lastModifiedDate":"2024-04-15"},{"lineNumber":392,"author":{"gitId":"bachletuankhai"},"content":"  2147483648.","lastModifiedDate":"2024-04-15"},{"lineNumber":393,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":394,"author":{"gitId":"bachletuankhai"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":395,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":396,"author":{"gitId":"bachletuankhai"},"content":"### Viewing comments : `view`","lastModifiedDate":"2024-04-15"},{"lineNumber":397,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":398,"author":{"gitId":"bachletuankhai"},"content":"View comment of a specific contact","lastModifiedDate":"2024-04-15"},{"lineNumber":399,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":400,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `view ID`","lastModifiedDate":"2024-04-15"},{"lineNumber":401,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":402,"author":{"gitId":"bachletuankhai"},"content":"**Parameter:**","lastModifiedDate":"2024-04-15"},{"lineNumber":403,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":404,"author":{"gitId":"bachletuankhai"},"content":"- `ID`: the index of the contact in the list","lastModifiedDate":"2024-04-15"},{"lineNumber":405,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":406,"author":{"gitId":"bachletuankhai"},"content":"**Example:** `view 1`","lastModifiedDate":"2024-04-15"},{"lineNumber":407,"author":{"gitId":"bachletuankhai"},"content":"![img.png](images/viewComment.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":408,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":409,"author":{"gitId":"bachletuankhai"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":410,"author":{"gitId":"bachletuankhai"},"content":":information_source: **Note:**","lastModifiedDate":"2024-04-15"},{"lineNumber":411,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":412,"author":{"gitId":"bachletuankhai"},"content":"- As the maximum number of entries in the contact list is 2147483647, the id should be a positive integer smaller than","lastModifiedDate":"2024-04-15"},{"lineNumber":413,"author":{"gitId":"bachletuankhai"},"content":"  2147483648.","lastModifiedDate":"2024-04-15"},{"lineNumber":414,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":415,"author":{"gitId":"bachletuankhai"},"content":"- If the person does not have a comment, you can still use the `view` command to check if they have a comment or not.","lastModifiedDate":"2024-04-15"},{"lineNumber":416,"author":{"gitId":"bachletuankhai"},"content":"  The application will display that \"No comment provided.\".","lastModifiedDate":"2024-04-15"},{"lineNumber":417,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":418,"author":{"gitId":"bachletuankhai"},"content":"- As mentioned in comment command, commas in the comment might cause the csv file to be corrupted, so they are removed","lastModifiedDate":"2024-04-15"},{"lineNumber":419,"author":{"gitId":"bachletuankhai"},"content":"  from your input.","lastModifiedDate":"2024-04-15"},{"lineNumber":420,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":421,"author":{"gitId":"bachletuankhai"},"content":"- As mentioned in comment command, some special characters that are not supported by the system might be displayed","lastModifiedDate":"2024-04-15"},{"lineNumber":422,"author":{"gitId":"bachletuankhai"},"content":"  differently in the application. It is recommended to use only alphanumeric characters and common punctuation marks","lastModifiedDate":"2024-04-15"},{"lineNumber":423,"author":{"gitId":"bachletuankhai"},"content":"  when making comment. Use of special characters is at your own risk.","lastModifiedDate":"2024-04-15"},{"lineNumber":424,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":425,"author":{"gitId":"bachletuankhai"},"content":"### Locating persons by keywords : `find`","lastModifiedDate":"2024-04-15"},{"lineNumber":426,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":427,"author":{"gitId":"bachletuankhai"},"content":"Finds persons who contain any of the given keywords.","lastModifiedDate":"2024-04-15"},{"lineNumber":428,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":429,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `find KEYWORD [MORE_KEYWORDS]…`","lastModifiedDate":"2024-04-15"},{"lineNumber":430,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":431,"author":{"gitId":"bachletuankhai"},"content":"- The search is case-insensitive. e.g. `hans` will match `Hans`","lastModifiedDate":"2024-04-15"},{"lineNumber":432,"author":{"gitId":"bachletuankhai"},"content":"- The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2024-04-15"},{"lineNumber":433,"author":{"gitId":"bachletuankhai"},"content":"- Full text of a person is searched, i.e. their name, email, phone number, group number, category and comments if any.","lastModifiedDate":"2024-04-15"},{"lineNumber":434,"author":{"gitId":"bachletuankhai"},"content":"- Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2024-04-15"},{"lineNumber":435,"author":{"gitId":"bachletuankhai"},"content":"- Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2024-04-15"},{"lineNumber":436,"author":{"gitId":"bachletuankhai"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2024-04-15"},{"lineNumber":437,"author":{"gitId":"bachletuankhai"},"content":"- Comment is also searched. e.g. `peanuts` will match `Allergic to peanuts`","lastModifiedDate":"2024-04-15"},{"lineNumber":438,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":439,"author":{"gitId":"bachletuankhai"},"content":"**Aliases:** `f`","lastModifiedDate":"2024-04-15"},{"lineNumber":440,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":441,"author":{"gitId":"bachletuankhai"},"content":"**Examples:**","lastModifiedDate":"2024-04-15"},{"lineNumber":442,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":443,"author":{"gitId":"bachletuankhai"},"content":"- `find John` returns a list that includes `john` and `John Doe`","lastModifiedDate":"2024-04-15"},{"lineNumber":444,"author":{"gitId":"bachletuankhai"},"content":"- `find alex david` returns a list that includes `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":445,"author":{"gitId":"bachletuankhai"},"content":"  ![img.png](images/findAlexDavid.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":446,"author":{"gitId":"bachletuankhai"},"content":"- `find participant` returns a list that includes all participants in the list","lastModifiedDate":"2024-04-15"},{"lineNumber":447,"author":{"gitId":"bachletuankhai"},"content":"- `find 1` returns a list that includes the person with group number 1","lastModifiedDate":"2024-04-15"},{"lineNumber":448,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":449,"author":{"gitId":"meenulekha"},"content":"### Exporting selected people : `link`","lastModifiedDate":"2024-04-15"},{"lineNumber":450,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":451,"author":{"gitId":"bachletuankhai"},"content":"Produce a csv file with selected contacts\u0027 information.","lastModifiedDate":"2024-04-15"},{"lineNumber":452,"author":{"gitId":"bachletuankhai"},"content":"The csv file will be saved in the `selectedPeople` folder with the name `list.csv`.","lastModifiedDate":"2024-04-15"},{"lineNumber":453,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":454,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `link ID [MORE_ID]…`","lastModifiedDate":"2024-04-15"},{"lineNumber":455,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":456,"author":{"gitId":"bachletuankhai"},"content":"**Parameters:**","lastModifiedDate":"2024-04-15"},{"lineNumber":457,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":458,"author":{"gitId":"bachletuankhai"},"content":"- `ID`, `MORE_ID`: index(es) of the selected contact(s)","lastModifiedDate":"2024-04-15"},{"lineNumber":459,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":460,"author":{"gitId":"bachletuankhai"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":461,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":462,"author":{"gitId":"bachletuankhai"},"content":":information_source: **Notes on parameter constraints:**","lastModifiedDate":"2024-04-15"},{"lineNumber":463,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":464,"author":{"gitId":"bachletuankhai"},"content":"- The order of the ids does not matter.","lastModifiedDate":"2024-04-15"},{"lineNumber":465,"author":{"gitId":"bachletuankhai"},"content":"- The ids should be positive integers and valid and in the list.","lastModifiedDate":"2024-04-15"},{"lineNumber":466,"author":{"gitId":"bachletuankhai"},"content":"- The ids should be separated by a space.","lastModifiedDate":"2024-04-15"},{"lineNumber":467,"author":{"gitId":"bachletuankhai"},"content":"- There should be no duplicate ids.","lastModifiedDate":"2024-04-15"},{"lineNumber":468,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":469,"author":{"gitId":"bachletuankhai"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":470,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":471,"author":{"gitId":"bachletuankhai"},"content":"**Examples:**","lastModifiedDate":"2024-04-15"},{"lineNumber":472,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":473,"author":{"gitId":"bachletuankhai"},"content":"- `link 1 2 3` returns a csv file with the information of people with index 1, 2, and 3","lastModifiedDate":"2024-04-15"},{"lineNumber":474,"author":{"gitId":"bachletuankhai"},"content":"- `link 1` returns a csv file with the information of person with index 1","lastModifiedDate":"2024-04-15"},{"lineNumber":475,"author":{"gitId":"bachletuankhai"},"content":"- `link 1 2 3 4 5` returns a csv file with the information of people 1, 2, 3, 4, and 5","lastModifiedDate":"2024-04-15"},{"lineNumber":476,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":477,"author":{"gitId":"bachletuankhai"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":478,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":479,"author":{"gitId":"bachletuankhai"},"content":":exclamation: **Caution:**","lastModifiedDate":"2024-04-15"},{"lineNumber":480,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":481,"author":{"gitId":"bachletuankhai"},"content":"- As mentioned in [`comment` command](#commenting-a-person--comment), commas in the comment might cause the csv file to","lastModifiedDate":"2024-04-15"},{"lineNumber":482,"author":{"gitId":"bachletuankhai"},"content":"  be corrupted, so they are removed from your input. Avoid using commas.","lastModifiedDate":"2024-04-15"},{"lineNumber":483,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":484,"author":{"gitId":"bachletuankhai"},"content":"- Do not open the `list.csv` file while the application is running. The file should be closed to write to it. Opening","lastModifiedDate":"2024-04-15"},{"lineNumber":485,"author":{"gitId":"bachletuankhai"},"content":"  the file while the application is running may cause errors.","lastModifiedDate":"2024-04-15"},{"lineNumber":486,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":487,"author":{"gitId":"bachletuankhai"},"content":"- As the maximum number of entries in the contact list is 2147483647, the id should be a positive integer smaller than","lastModifiedDate":"2024-04-15"},{"lineNumber":488,"author":{"gitId":"bachletuankhai"},"content":"  2147483648.","lastModifiedDate":"2024-04-15"},{"lineNumber":489,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":490,"author":{"gitId":"bachletuankhai"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":491,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":492,"author":{"gitId":"bachletuankhai"},"content":"### Removing a person : `delete`","lastModifiedDate":"2024-04-15"},{"lineNumber":493,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":494,"author":{"gitId":"bachletuankhai"},"content":"Deletes the person identified by the index shown in the displayed person list.","lastModifiedDate":"2024-04-15"},{"lineNumber":495,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":496,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `delete ID`","lastModifiedDate":"2024-04-15"},{"lineNumber":497,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":498,"author":{"gitId":"bachletuankhai"},"content":"**Parameters:** `ID`: the id of the person to be deleted. Must exist in the list shown in the app.","lastModifiedDate":"2024-04-15"},{"lineNumber":499,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":500,"author":{"gitId":"bachletuankhai"},"content":"**Aliases:** `d`","lastModifiedDate":"2024-04-15"},{"lineNumber":501,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":502,"author":{"gitId":"bachletuankhai"},"content":"**Examples:**","lastModifiedDate":"2024-04-15"},{"lineNumber":503,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":504,"author":{"gitId":"bachletuankhai"},"content":"- `delete 1` deletes the first person in the list.","lastModifiedDate":"2024-04-15"},{"lineNumber":505,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":506,"author":{"gitId":"bachletuankhai"},"content":"## Event features","lastModifiedDate":"2024-04-15"},{"lineNumber":507,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":508,"author":{"gitId":"bachletuankhai"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":509,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":510,"author":{"gitId":"bachletuankhai"},"content":":information_source: **Note**: For event features, you need to navigate to the event window by clicking on the Events","lastModifiedDate":"2024-04-15"},{"lineNumber":511,"author":{"gitId":"bachletuankhai"},"content":"menu in the menubar.","lastModifiedDate":"2024-04-15"},{"lineNumber":512,"author":{"gitId":"bachletuankhai"},"content":"Refer to the [Event Window](#event-window) section for more details.","lastModifiedDate":"2024-04-15"},{"lineNumber":513,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":514,"author":{"gitId":"bachletuankhai"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":515,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":516,"author":{"gitId":"bachletuankhai"},"content":"### Adding an event : `addevent`","lastModifiedDate":"2024-04-15"},{"lineNumber":517,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":518,"author":{"gitId":"bachletuankhai"},"content":"Adds an event to HackLink with a name, date and category where the category represents who the event involves.","lastModifiedDate":"2024-04-15"},{"lineNumber":519,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":520,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `addevent en/EVENTNAME ed/EVENTDATE ec/EVENTCATEGORY`","lastModifiedDate":"2024-04-15"},{"lineNumber":521,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":522,"author":{"gitId":"bachletuankhai"},"content":"**Parameters:**","lastModifiedDate":"2024-04-15"},{"lineNumber":523,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":524,"author":{"gitId":"bachletuankhai"},"content":"- `EVENTNAME`: Name of the event. Only alphanumeric characters and spaces are allowed.","lastModifiedDate":"2024-04-15"},{"lineNumber":525,"author":{"gitId":"bachletuankhai"},"content":"- `EVENTDATE`: Date of the event in format dd-MM-yyyy (e.g. 20-06-2024)","lastModifiedDate":"2024-04-15"},{"lineNumber":526,"author":{"gitId":"bachletuankhai"},"content":"- `EVENTCATEGORY`: Type of the event. Either Participant, Sponsor, or Staff","lastModifiedDate":"2024-04-15"},{"lineNumber":527,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":528,"author":{"gitId":"bachletuankhai"},"content":"**Examples:**","lastModifiedDate":"2024-04-15"},{"lineNumber":529,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":530,"author":{"gitId":"bachletuankhai"},"content":"- `addevent en/conference ed/22-06-2024 ec/participant`","lastModifiedDate":"2024-04-15"},{"lineNumber":531,"author":{"gitId":"bachletuankhai"},"content":"- `addevent en/meeting ed/11-06-2024 ec/staff`","lastModifiedDate":"2024-04-15"},{"lineNumber":532,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":533,"author":{"gitId":"bachletuankhai"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":534,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":535,"author":{"gitId":"bachletuankhai"},"content":":information_source: **Note:** This app is designed for small hackathons. However, the maximum number of events entries","lastModifiedDate":"2024-04-15"},{"lineNumber":536,"author":{"gitId":"bachletuankhai"},"content":"is 2147483647. Please delete some events to add a new event if you reach the limit.","lastModifiedDate":"2024-04-15"},{"lineNumber":537,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":538,"author":{"gitId":"bachletuankhai"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":539,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":540,"author":{"gitId":"bachletuankhai"},"content":"### Listing all events : `listevent`","lastModifiedDate":"2024-04-15"},{"lineNumber":541,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":542,"author":{"gitId":"bachletuankhai"},"content":"Shows a list of all events in HackLink.","lastModifiedDate":"2024-04-15"},{"lineNumber":543,"author":{"gitId":"bachletuankhai"},"content":"The table will show all the data","lastModifiedDate":"2024-04-15"},{"lineNumber":544,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":545,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `listevent`","lastModifiedDate":"2024-04-15"},{"lineNumber":546,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":547,"author":{"gitId":"bachletuankhai"},"content":"### Removing an event : `deleteevent`","lastModifiedDate":"2024-04-15"},{"lineNumber":548,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":549,"author":{"gitId":"bachletuankhai"},"content":"Remove specific events from the database.","lastModifiedDate":"2024-04-15"},{"lineNumber":550,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":551,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `deleteevent ID`","lastModifiedDate":"2024-04-15"},{"lineNumber":552,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":553,"author":{"gitId":"bachletuankhai"},"content":"**Parameters:**","lastModifiedDate":"2024-04-15"},{"lineNumber":554,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":555,"author":{"gitId":"bachletuankhai"},"content":"- `ID`: the id of the event in the list (positive integer smaller than 2147483648)","lastModifiedDate":"2024-04-15"},{"lineNumber":556,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":557,"author":{"gitId":"bachletuankhai"},"content":"**Example:**","lastModifiedDate":"2024-04-15"},{"lineNumber":558,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":559,"author":{"gitId":"bachletuankhai"},"content":"- `deleteevent 1`","lastModifiedDate":"2024-04-15"},{"lineNumber":560,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":561,"author":{"gitId":"bachletuankhai"},"content":"### Locating events by keywords : `findevent`","lastModifiedDate":"2024-04-15"},{"lineNumber":562,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":563,"author":{"gitId":"bachletuankhai"},"content":"Finds events which contain any of the given keywords.","lastModifiedDate":"2024-04-15"},{"lineNumber":564,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":565,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `findevent KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2024-04-15"},{"lineNumber":566,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":567,"author":{"gitId":"bachletuankhai"},"content":"- The search is case-insensitive. e.g. `meeting` will match `Meeting`","lastModifiedDate":"2024-04-15"},{"lineNumber":568,"author":{"gitId":"bachletuankhai"},"content":"- The order of the keywords does not matter. e.g. `Lecture git` will match `git Lecture`","lastModifiedDate":"2024-04-15"},{"lineNumber":569,"author":{"gitId":"bachletuankhai"},"content":"- Full text of an event is searched.","lastModifiedDate":"2024-04-15"},{"lineNumber":570,"author":{"gitId":"bachletuankhai"},"content":"- Only full words will be matched e.g. `Seminar` will not match `Seminars`","lastModifiedDate":"2024-04-15"},{"lineNumber":571,"author":{"gitId":"bachletuankhai"},"content":"- Events matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2024-04-15"},{"lineNumber":572,"author":{"gitId":"bachletuankhai"},"content":"  e.g. `Lecture 1` will return `Lecture 2`, `Lecture 3`","lastModifiedDate":"2024-04-15"},{"lineNumber":573,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":574,"author":{"gitId":"bachletuankhai"},"content":"**Examples:**","lastModifiedDate":"2024-04-15"},{"lineNumber":575,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":576,"author":{"gitId":"bachletuankhai"},"content":"- `findevent meeting` returns `meeting 1` and `meeting 2`","lastModifiedDate":"2024-04-15"},{"lineNumber":577,"author":{"gitId":"bachletuankhai"},"content":"- `findevent lecture` returns `AI lecture`, `OS lecture`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":578,"author":{"gitId":"bachletuankhai"},"content":"- `findevent participant` returns all events for participants in the list","lastModifiedDate":"2024-04-15"},{"lineNumber":579,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":580,"author":{"gitId":"bachletuankhai"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2024-04-15"},{"lineNumber":581,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":582,"author":{"gitId":"bachletuankhai"},"content":"Clears all entries from the database, either the persons or events.","lastModifiedDate":"2024-04-15"},{"lineNumber":583,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":584,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `clear`","lastModifiedDate":"2024-04-15"},{"lineNumber":585,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":586,"author":{"gitId":"bachletuankhai"},"content":"- Inputting the clear command in the **main window** clears all **persons**.","lastModifiedDate":"2024-04-15"},{"lineNumber":587,"author":{"gitId":"bachletuankhai"},"content":"- Inputting the clear command in the **events window** clears all **events**.","lastModifiedDate":"2024-04-15"},{"lineNumber":588,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":589,"author":{"gitId":"bachletuankhai"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2024-04-15"},{"lineNumber":590,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":591,"author":{"gitId":"bachletuankhai"},"content":"Exits the program.","lastModifiedDate":"2024-04-15"},{"lineNumber":592,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":593,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `exit`","lastModifiedDate":"2024-04-15"},{"lineNumber":594,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":595,"author":{"gitId":"bachletuankhai"},"content":"**Aliases:** `ex`","lastModifiedDate":"2024-04-15"},{"lineNumber":596,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":597,"author":{"gitId":"bachletuankhai"},"content":"**Note**: `exit` cannot be used in event window","lastModifiedDate":"2024-04-15"},{"lineNumber":598,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":599,"author":{"gitId":"bachletuankhai"},"content":"## Utility features","lastModifiedDate":"2024-04-15"},{"lineNumber":600,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":601,"author":{"gitId":"bachletuankhai"},"content":"### Saving the data","lastModifiedDate":"2024-04-15"},{"lineNumber":602,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":603,"author":{"gitId":"bachletuankhai"},"content":"HackLink data are saved in the hard disk automatically after any command that changes the data. There is no need to save","lastModifiedDate":"2024-04-15"},{"lineNumber":604,"author":{"gitId":"bachletuankhai"},"content":"manually.","lastModifiedDate":"2024-04-15"},{"lineNumber":605,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":606,"author":{"gitId":"bachletuankhai"},"content":"### Editing the data file","lastModifiedDate":"2024-04-15"},{"lineNumber":607,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":608,"author":{"gitId":"bachletuankhai"},"content":"HackLink data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are","lastModifiedDate":"2024-04-15"},{"lineNumber":609,"author":{"gitId":"bachletuankhai"},"content":"welcome to update data directly by editing that data file.","lastModifiedDate":"2024-04-15"},{"lineNumber":610,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":611,"author":{"gitId":"bachletuankhai"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":612,"author":{"gitId":"bachletuankhai"},"content":"If your changes to the data file makes its format invalid, HackLink will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":613,"author":{"gitId":"bachletuankhai"},"content":"Furthermore, certain edits can cause the HackLink to behave in unexpected ways (e.g., if the value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-04-15"},{"lineNumber":614,"author":{"gitId":"bachletuankhai"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":615,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":616,"author":{"gitId":"bachletuankhai"},"content":"### Undo","lastModifiedDate":"2024-04-15"},{"lineNumber":617,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":618,"author":{"gitId":"bachletuankhai"},"content":"You can undo the last **changes made to the contact list** by using `undo` command. This will revert the last command","lastModifiedDate":"2024-04-15"},{"lineNumber":619,"author":{"gitId":"bachletuankhai"},"content":"that changed the data.","lastModifiedDate":"2024-04-15"},{"lineNumber":620,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":621,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `undo`","lastModifiedDate":"2024-04-15"},{"lineNumber":622,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":623,"author":{"gitId":"bachletuankhai"},"content":"**Aliases:** `ud`","lastModifiedDate":"2024-04-15"},{"lineNumber":624,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":625,"author":{"gitId":"bachletuankhai"},"content":"### Redo","lastModifiedDate":"2024-04-15"},{"lineNumber":626,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":627,"author":{"gitId":"bachletuankhai"},"content":"You can redo the last command that was undone by using `redo` command.","lastModifiedDate":"2024-04-15"},{"lineNumber":628,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":629,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `redo`","lastModifiedDate":"2024-04-15"},{"lineNumber":630,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":631,"author":{"gitId":"bachletuankhai"},"content":"**Aliases:** `rd`","lastModifiedDate":"2024-04-15"},{"lineNumber":632,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":633,"author":{"gitId":"bachletuankhai"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":634,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":635,"author":{"gitId":"bachletuankhai"},"content":":information_source: **Note:** `undo` and `redo` currently are **not supported on event window**. This means that you","lastModifiedDate":"2024-04-15"},{"lineNumber":636,"author":{"gitId":"bachletuankhai"},"content":"cannot use these commands to revert the changes made to the event list.","lastModifiedDate":"2024-04-15"},{"lineNumber":637,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":638,"author":{"gitId":"bachletuankhai"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":639,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":640,"author":{"gitId":"bachletuankhai"},"content":"### Navigating to older commands","lastModifiedDate":"2024-04-15"},{"lineNumber":641,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":642,"author":{"gitId":"bachletuankhai"},"content":"HackLink allows you to navigate to older commands using the up and down arrow keys. This feature is useful when you want","lastModifiedDate":"2024-04-15"},{"lineNumber":643,"author":{"gitId":"bachletuankhai"},"content":"to repeat a command you have previously entered.","lastModifiedDate":"2024-04-15"},{"lineNumber":644,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":645,"author":{"gitId":"bachletuankhai"},"content":"### Aliases","lastModifiedDate":"2024-04-15"},{"lineNumber":646,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":647,"author":{"gitId":"bachletuankhai"},"content":"Aliases are shortcuts for commands. In each command, you can use the alias in place of the command word, unless","lastModifiedDate":"2024-04-15"},{"lineNumber":648,"author":{"gitId":"bachletuankhai"},"content":"specified otherwise by the command. Please refer to each command details for the alias.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":649,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":650,"author":{"gitId":"bachletuankhai"},"content":"**Example:**","lastModifiedDate":"2024-04-15"},{"lineNumber":651,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":652,"author":{"gitId":"bachletuankhai"},"content":"- [Delete command](#removing-a-person--delete) has command word `delete` and alias `d`. `d 1` and `delete 1` both","lastModifiedDate":"2024-04-15"},{"lineNumber":653,"author":{"gitId":"bachletuankhai"},"content":"  deletes the person at index 1.","lastModifiedDate":"2024-04-15"},{"lineNumber":654,"author":{"gitId":"bachletuankhai"},"content":"- [Adding command](#adding-a-person--add) has command word `add` and alias `ap` for adding participant. You don\u0027t need","lastModifiedDate":"2024-04-15"},{"lineNumber":655,"author":{"gitId":"bachletuankhai"},"content":"  to include participant parameter when using this alias for `add` command.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":656,"author":{"gitId":"bachletuankhai"},"content":"  `add n/John e/john@mail.com p/84831193 c/participant` and `ap n/John e/john@mail.com p/84831193` both adds new","lastModifiedDate":"2024-04-15"},{"lineNumber":657,"author":{"gitId":"bachletuankhai"},"content":"  participant","lastModifiedDate":"2024-04-15"},{"lineNumber":658,"author":{"gitId":"bachletuankhai"},"content":"  named \"John\" with given information to the contact list.","lastModifiedDate":"2024-04-15"},{"lineNumber":659,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":660,"author":{"gitId":"bachletuankhai"},"content":"### Shortcuts","lastModifiedDate":"2024-04-15"},{"lineNumber":661,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":662,"author":{"gitId":"bachletuankhai"},"content":"Shortcuts are a way to quickly perform action from the keyboard. The available shortcuts are:","lastModifiedDate":"2024-04-15"},{"lineNumber":663,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":664,"author":{"gitId":"bachletuankhai"},"content":"- `F1` : Opens the help window","lastModifiedDate":"2024-04-15"},{"lineNumber":665,"author":{"gitId":"bachletuankhai"},"content":"- `F2` : Focus on the command box","lastModifiedDate":"2024-04-15"},{"lineNumber":666,"author":{"gitId":"bachletuankhai"},"content":"- `F3` : Focus on the result box (to scroll up and down in case of overflow)","lastModifiedDate":"2024-04-15"},{"lineNumber":667,"author":{"gitId":"bachletuankhai"},"content":"- `F4` : Focus on the list of contacts (to scroll up and down in case of overflow)","lastModifiedDate":"2024-04-15"},{"lineNumber":668,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":669,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":670,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":671,"author":{"gitId":"bachletuankhai"},"content":"## Event window","lastModifiedDate":"2024-04-15"},{"lineNumber":672,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":673,"author":{"gitId":"bachletuankhai"},"content":"Events are shown in a separate window. You can navigate to the event window by clicking on the Events menu in the","lastModifiedDate":"2024-04-15"},{"lineNumber":674,"author":{"gitId":"bachletuankhai"},"content":"menubar.","lastModifiedDate":"2024-04-15"},{"lineNumber":675,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":676,"author":{"gitId":"bachletuankhai"},"content":"An event window will appear with a list of events. You can add, delete, and find events in the event window. Note how","lastModifiedDate":"2024-04-15"},{"lineNumber":677,"author":{"gitId":"bachletuankhai"},"content":"the app contains some sample data for the events.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":678,"author":{"gitId":"bachletuankhai"},"content":"![Ui](images/toEventsWindowUpdated.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":679,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":680,"author":{"gitId":"bachletuankhai"},"content":"You can get back to the main window by clicking on the Back to Main on the menubar.\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":681,"author":{"gitId":"bachletuankhai"},"content":"![Ui](images/backToMain.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":682,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":683,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":684,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":685,"author":{"gitId":"bachletuankhai"},"content":"## FAQ","lastModifiedDate":"2024-04-15"},{"lineNumber":686,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":687,"author":{"gitId":"bachletuankhai"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":688,"author":{"gitId":"bachletuankhai"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains","lastModifiedDate":"2024-04-15"},{"lineNumber":689,"author":{"gitId":"bachletuankhai"},"content":"the data of your previous HackLink home folder.","lastModifiedDate":"2024-04-15"},{"lineNumber":690,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":691,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":692,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":693,"author":{"gitId":"bachletuankhai"},"content":"## Warnings","lastModifiedDate":"2024-04-15"},{"lineNumber":694,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":695,"author":{"gitId":"bachletuankhai"},"content":"1. **Invalid Command** : When a command format is incorrect or parameters are missing, the application will prompt the","lastModifiedDate":"2024-04-15"},{"lineNumber":696,"author":{"gitId":"bachletuankhai"},"content":"   user with a warning message.","lastModifiedDate":"2024-04-15"},{"lineNumber":697,"author":{"gitId":"bachletuankhai"},"content":"2. **Command Failure** : If the person specified for editing or removing does not exist in the database, the application","lastModifiedDate":"2024-04-15"},{"lineNumber":698,"author":{"gitId":"bachletuankhai"},"content":"   should display a warning message indicating the failure.","lastModifiedDate":"2024-04-15"},{"lineNumber":699,"author":{"gitId":"bachletuankhai"},"content":"3. **Invalid input for update** : If the input for editing a person\u0027s information is invalid, the application should","lastModifiedDate":"2024-04-15"},{"lineNumber":700,"author":{"gitId":"bachletuankhai"},"content":"   display a warning message indicating the failure and provide guidance on the correct format.","lastModifiedDate":"2024-04-15"},{"lineNumber":701,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":702,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":703,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":704,"author":{"gitId":"bachletuankhai"},"content":"## Known issues","lastModifiedDate":"2024-04-15"},{"lineNumber":705,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":706,"author":{"gitId":"bachletuankhai"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only","lastModifiedDate":"2024-04-15"},{"lineNumber":707,"author":{"gitId":"bachletuankhai"},"content":"   the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the","lastModifiedDate":"2024-04-15"},{"lineNumber":708,"author":{"gitId":"bachletuankhai"},"content":"   application before running the application again.","lastModifiedDate":"2024-04-15"},{"lineNumber":709,"author":{"gitId":"bachletuankhai"},"content":"2. When **undoing a deletion** by `undo` command after a `delete` command, the restored contact may not appear at the","lastModifiedDate":"2024-04-15"},{"lineNumber":710,"author":{"gitId":"bachletuankhai"},"content":"   same row and/or having the same ID as the original contact. Refer to the example below: \u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":711,"author":{"gitId":"bachletuankhai"},"content":"   ![img.png](images/knownIssues_undo_pic1.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":712,"author":{"gitId":"bachletuankhai"},"content":"    - `delete 2` deletes the person with ID 2 (\"Bernice Yu\") in the contact list","lastModifiedDate":"2024-04-15"},{"lineNumber":713,"author":{"gitId":"bachletuankhai"},"content":"      ![img.png](images/knownIssues_undo_pic2.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":714,"author":{"gitId":"bachletuankhai"},"content":"    - `undo` re-adds this person back to the list, but with a different ID (4 instead of 2)","lastModifiedDate":"2024-04-15"},{"lineNumber":715,"author":{"gitId":"bachletuankhai"},"content":"      ![img.png](images/knownIssues_undo_pic3.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":716,"author":{"gitId":"bachletuankhai"},"content":"    - `delete 2` does not guarantee to delete the same person again \u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":717,"author":{"gitId":"bachletuankhai"},"content":"      The suggested workaround is to use [`redo` command](#redo) to delete the same person again, or to search for that","lastModifiedDate":"2024-04-15"},{"lineNumber":718,"author":{"gitId":"bachletuankhai"},"content":"      exact person using [`find` command](#locating-persons-by-keywords--find) and delete them.","lastModifiedDate":"2024-04-15"},{"lineNumber":719,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":720,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":721,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":722,"author":{"gitId":"bachletuankhai"},"content":"## Tips","lastModifiedDate":"2024-04-15"},{"lineNumber":723,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":724,"author":{"gitId":"bachletuankhai"},"content":"1. **Use Descriptive Command Names**: You are encouraged to use descriptive names when adding, updating, or removing","lastModifiedDate":"2024-04-15"},{"lineNumber":725,"author":{"gitId":"bachletuankhai"},"content":"   participants. This makes it easier to identify and manage individuals within the application.","lastModifiedDate":"2024-04-15"},{"lineNumber":726,"author":{"gitId":"bachletuankhai"},"content":"2. **Utilize the utility features**: The application provides utility features such as navigating to older commands,","lastModifiedDate":"2024-04-15"},{"lineNumber":727,"author":{"gitId":"bachletuankhai"},"content":"   aliases, and shortcuts. These features can help you manage your data more efficiently.","lastModifiedDate":"2024-04-15"},{"lineNumber":728,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":729,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":730,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":731,"author":{"gitId":"bachletuankhai"},"content":"## Command summary","lastModifiedDate":"2024-04-15"},{"lineNumber":732,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":733,"author":{"gitId":"bachletuankhai"},"content":"| Action             | Format, Examples                                                                                                                         |","lastModifiedDate":"2024-04-15"},{"lineNumber":734,"author":{"gitId":"bachletuankhai"},"content":"|--------------------|------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-15"},{"lineNumber":735,"author":{"gitId":"bachletuankhai"},"content":"| **Add**            | `add n/NAME p/PHONE_NUMBER e/EMAIL c/CATEGORY [g/GROUP]​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com c/participant g/3` |","lastModifiedDate":"2024-04-15"},{"lineNumber":736,"author":{"gitId":"bachletuankhai"},"content":"| **Clear**          | `clear`                                                                                                                                  |","lastModifiedDate":"2024-04-15"},{"lineNumber":737,"author":{"gitId":"bachletuankhai"},"content":"| **Remove**         | `delete ID`\u003cbr\u003e e.g., `delete 3`                                                                                                         |","lastModifiedDate":"2024-04-15"},{"lineNumber":738,"author":{"gitId":"bachletuankhai"},"content":"| **Edit**           | `edit ID [n/NAME] [p/PHONE] [e/EMAIL] [g/GROUP]​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                   |","lastModifiedDate":"2024-04-15"},{"lineNumber":739,"author":{"gitId":"bachletuankhai"},"content":"| **Group**          | `group ID [GROUP_NUMBER]`\u003cbr\u003e e.g., `group 1 3`                                                                                          |","lastModifiedDate":"2024-04-15"},{"lineNumber":740,"author":{"gitId":"bachletuankhai"},"content":"| **Group Randomly** | `grouprandom MAXIMUM_GROUP_SIZE`\u003cbr\u003e e.g., `grouprandom 3`                                                                               |","lastModifiedDate":"2024-04-15"},{"lineNumber":741,"author":{"gitId":"bachletuankhai"},"content":"| **Find**           | `find KEYWORD [MORE_KEYWORDS]...`\u003cbr\u003e e.g., `find James Jake`                                                                            |","lastModifiedDate":"2024-04-15"},{"lineNumber":742,"author":{"gitId":"bachletuankhai"},"content":"| **List**           | `list`                                                                                                                                   |","lastModifiedDate":"2024-04-15"},{"lineNumber":743,"author":{"gitId":"bachletuankhai"},"content":"| **Link**           | `link ID [MORE_ID]...`\u003cbr\u003e e.g., `link 1 2 3`                                                                                            |","lastModifiedDate":"2024-04-15"},{"lineNumber":744,"author":{"gitId":"bachletuankhai"},"content":"| **Comment**        | `comment ID NOTES`\u003cbr\u003e e.g., `comment 1 Allergic to peanuts`                                                                             |","lastModifiedDate":"2024-04-15"},{"lineNumber":745,"author":{"gitId":"bachletuankhai"},"content":"| **View**           | `view ID` \u003cbr\u003e e.g., `view 1`                                                                                                            |","lastModifiedDate":"2024-04-15"},{"lineNumber":746,"author":{"gitId":"bachletuankhai"},"content":"| **AddEvent**       | `addevent en/EVENTNAME ed/EVENTDATE ec/EVENTCATEGORY`\u003cbr\u003e e.g., `addevent en/meeting3 ed/11-06-2024 ec/staff`                            |","lastModifiedDate":"2024-04-15"},{"lineNumber":747,"author":{"gitId":"bachletuankhai"},"content":"| **ListEvent**      | `listevent`                                                                                                                              |","lastModifiedDate":"2024-04-15"},{"lineNumber":748,"author":{"gitId":"bachletuankhai"},"content":"| **DeleteEvent**    | `deleteevent ID`\u003cbr\u003e e.g., `deleteevent 8`                                                                                               |","lastModifiedDate":"2024-04-15"},{"lineNumber":749,"author":{"gitId":"bachletuankhai"},"content":"| **FindEvent**      | `findevent KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `findevent meeting`                                                                        |","lastModifiedDate":"2024-04-15"},{"lineNumber":750,"author":{"gitId":"bachletuankhai"},"content":"| **Help**           | `help`                                                                                                                                   |","lastModifiedDate":"2024-04-15"},{"lineNumber":751,"author":{"gitId":"bachletuankhai"},"content":"| **Exit**           | `exit`                                                                                                                                   | ","lastModifiedDate":"2024-04-15"},{"lineNumber":752,"author":{"gitId":"bachletuankhai"},"content":"| **Undo**           | `undo`                                                                                                                                   |","lastModifiedDate":"2024-04-15"},{"lineNumber":753,"author":{"gitId":"bachletuankhai"},"content":"| **Redo**           | `redo`                                                                                                                                   |","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"julia-cp":9,"meenulekha":67,"bachletuankhai":677}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2024-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2024-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"WELCOME TO HACKLINK!","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"## Introduction","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"Again, Welcome to HackLink! This user guide is designed to help you navigate and utilize this HackLink app to its full","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"potential. HackLink is a Hackathon Participant Management Application, designed to help organizers efficiently manage","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"contact information for hackathons. This app is aimed at simplifying the management of participant, staff, and sponsor\u0027s","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"information. With this user guide, you will easily and quickly learn to make use of important features, such as adding,","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"deleting, finding, and commenting contacts. you can streamline the complex process of organizing and coordinating your","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"hackathon event.","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"### Target Audience","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"This user guide is intended for hackathon organizers and coordinators who are looking for a simple and efficient way to","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"manage their hackathons. We assume that you have a basic understanding of hackathon event management and are familiar","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"with digital tools and CLI-based applications. However, even if you are new to hackathon management, this user guide","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"will help you get started with HackLink. No prior experience is required, as this guide will cover all the necessary","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"fundamentals to help you get started with HackLink.","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"### Purpose of this User Guide","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"The purpose of this user guide is to equip you with a thorough understanding of HackLink. This guide will provide a","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"comprehensive overview of the features and functionalities of HackLink. It will guide you through the process of","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"installing the application, understanding the UI(user interface), and using the various commands to manage your","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"hackathon event. This guide will also provide you with good examples and cautions to help you avoid errors and make the","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"best use of the application. By the end of this guide, you will be able to efficiently manage your hackathon","lastModifiedDate":"2024-04-15"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"event using HackLink.","lastModifiedDate":"2024-04-15"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"## Table of Contents","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"1. [Introduction](#introduction)","lastModifiedDate":"2024-04-15"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"2. [Product Information Overview](#product-information-overview)","lastModifiedDate":"2024-04-15"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"3. [Quick start](#quick-start)","lastModifiedDate":"2024-04-15"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"4. [Main features](#main-features)","lastModifiedDate":"2024-04-15"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"    - [Viewing help](#viewing-help--help)","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"    - [Adding a person](#adding-a-person--add)","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"    - [Listing all persons](#listing-all-persons--list)","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"    - [Editing a person](#editing-a-person--edit)","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"julia-cp"},"content":"    - [Grouping a person](#grouping-a-person--group)","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"julia-cp"},"content":"    - [Grouping randomly listed persons](#grouping-randomly-listed-persons--grouprandom)","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"    - [Commenting a person](#commenting-a-person--comment)","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"    - [Viewing comments](#viewing-comments--view)","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"    - [Locating persons by keywords](#locating-persons-by-keywords--find)","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"    - [Exporting selected people](#exporting-selected-people--link)","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"    - [Removing a person](#removing-a-person--delete)","lastModifiedDate":"2024-04-11"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"dhlee03"},"content":"5. [Event features](#event-features)","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"    - [Adding an event](#adding-an-event--addevent)","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"    - [Listing all events](#listing-all-events--listevent)","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"    - [Removing an event](#removing-an-event--deleteevent)","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"    - [Locating events by keywords](#locating-events-by-keywords--findevent)","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"    - [Clearing all entries](#clearing-all-entries--clear)","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"    - [Exiting the program](#exiting-the-program--exit)","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":62,"author":{"gitId":"dhlee03"},"content":"6. [Utility features](#utility-features)","lastModifiedDate":"2024-04-15"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"    - [Saving the data](#saving-the-data)","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"    - [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"    - [Navigating to older commands](#navigating-to-older-commands)","lastModifiedDate":"2024-04-04"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"    - [Aliases](#aliases)","lastModifiedDate":"2024-04-04"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"    - [Shortcuts](#shortcuts)","lastModifiedDate":"2024-04-04"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"    - [Undo](#undo)","lastModifiedDate":"2024-04-05"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"    - [Redo](#redo)","lastModifiedDate":"2024-04-05"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":71,"author":{"gitId":"dhlee03"},"content":"7. [Event window](#event-window)","lastModifiedDate":"2024-04-15"},{"lineNumber":72,"author":{"gitId":"dhlee03"},"content":"8. [FAQ](#faq)","lastModifiedDate":"2024-04-15"},{"lineNumber":73,"author":{"gitId":"dhlee03"},"content":"9. [Warnings](#warnings)","lastModifiedDate":"2024-04-15"},{"lineNumber":74,"author":{"gitId":"dhlee03"},"content":"10. [Known issues](#known-issues)","lastModifiedDate":"2024-04-15"},{"lineNumber":75,"author":{"gitId":"dhlee03"},"content":"11. [Tips](#tips)","lastModifiedDate":"2024-04-15"},{"lineNumber":76,"author":{"gitId":"dhlee03"},"content":"12. [Command summary](#command-summary)","lastModifiedDate":"2024-04-15"},{"lineNumber":77,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":78,"author":{"gitId":"dhlee03"},"content":"---","lastModifiedDate":"2024-04-15"},{"lineNumber":79,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":80,"author":{"gitId":"dhlee03"},"content":"## Product Information Overview","lastModifiedDate":"2024-04-15"},{"lineNumber":81,"author":{"gitId":"dhlee03"},"content":"HackLink allows you to manage your hackathon event efficiently by providing following features:","lastModifiedDate":"2024-04-15"},{"lineNumber":82,"author":{"gitId":"dhlee03"},"content":"- Adding/Deleting a person","lastModifiedDate":"2024-04-15"},{"lineNumber":83,"author":{"gitId":"dhlee03"},"content":"- Editing/List/Grouping/Commenting a person","lastModifiedDate":"2024-04-15"},{"lineNumber":84,"author":{"gitId":"dhlee03"},"content":"- Finding a person by keywords","lastModifiedDate":"2024-04-15"},{"lineNumber":85,"author":{"gitId":"dhlee03"},"content":"- Exporting selected people","lastModifiedDate":"2024-04-15"},{"lineNumber":86,"author":{"gitId":"dhlee03"},"content":"- Managing events","lastModifiedDate":"2024-04-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2024-04-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"dhlee03"},"content":"To begin using HackLink, please follow these steps:","lastModifiedDate":"2024-04-15"},{"lineNumber":93,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"bachletuankhai"},"content":"2. Download the latest `HackLink.jar` from [here](https://github.com/AY2324S2-CS2103T-F12-4/tp/releases).","lastModifiedDate":"2024-04-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"bachletuankhai"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your HackLink application.","lastModifiedDate":"2024-04-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"bachletuankhai"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar HackLink.jar` command","lastModifiedDate":"2024-04-11"},{"lineNumber":101,"author":{"gitId":"bachletuankhai"},"content":"   to run the application.\u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":103,"author":{"gitId":"julia-cp"},"content":"   ![img.png](images/Ui.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":104,"author":{"gitId":"bachletuankhai"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will","lastModifiedDate":"2024-04-11"},{"lineNumber":105,"author":{"gitId":"bachletuankhai"},"content":"   open the help window.\u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"bachletuankhai"},"content":"    - `list` : Lists all contacts.","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"bachletuankhai"},"content":"    - `add n/John Doe p/98765432 e/johndoe@gmail.com c/participant` : Adds a person named `John Doe` to HackLink.","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"bachletuankhai"},"content":"    - `delete 3` : Deletes the 3rd person shown in the current list.","lastModifiedDate":"2024-04-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"bachletuankhai"},"content":"    - `edit 1 p/89898989` : Updates the information of the person at index 1.","lastModifiedDate":"2024-04-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"bachletuankhai"},"content":"    - `comment 1 He is good at Java`: Adds a comment to the person at index 1.","lastModifiedDate":"2024-04-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":118,"author":{"gitId":"meenulekha"},"content":"    - `exit` : Exits the app.","lastModifiedDate":"2024-04-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":120,"author":{"gitId":"bachletuankhai"},"content":"6. Navigate to the Event Window by clicking on Events in the menubar. Refer to the [Event window](#event-window) section","lastModifiedDate":"2024-04-11"},{"lineNumber":121,"author":{"gitId":"bachletuankhai"},"content":"   for more details.","lastModifiedDate":"2024-04-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":123,"author":{"gitId":"meenulekha"},"content":"7. Type the commands in the command box and press Enter to execute them.","lastModifiedDate":"2024-04-14"},{"lineNumber":124,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":125,"author":{"gitId":"bachletuankhai"},"content":"    - `addevent en/Meeting ed/11-06-2024 ec/staff` : Adds an event named `meeting`.","lastModifiedDate":"2024-04-05"},{"lineNumber":126,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":127,"author":{"gitId":"bachletuankhai"},"content":"    - `deleteevent 8` : Deletes the 8th event shown in the list.","lastModifiedDate":"2024-04-05"},{"lineNumber":128,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":129,"author":{"gitId":"bachletuankhai"},"content":"    - `findevent meeting` : Finds events which names contain \"meeting\".","lastModifiedDate":"2024-04-05"},{"lineNumber":130,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":131,"author":{"gitId":"bachletuankhai"},"content":"    - `listevent` : Lists all events.","lastModifiedDate":"2024-04-05"},{"lineNumber":132,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":133,"author":{"gitId":"meenulekha"},"content":"    - `clear` : Clears all events","lastModifiedDate":"2024-04-14"},{"lineNumber":134,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":135,"author":{"gitId":"bachletuankhai"},"content":"8. Refer to the [Main features](#main-features) below for details of each command.","lastModifiedDate":"2024-04-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-04-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"bachletuankhai"},"content":"## Main features","lastModifiedDate":"2024-04-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"bachletuankhai"},"content":"- Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"bachletuankhai"},"content":"- Items in square brackets `[]` are optional.\u003cbr\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":149,"author":{"gitId":"bachletuankhai"},"content":"  e.g. `n/NAME [g/GROUP]` can be used as `n/John Doe g/1` or as `n/John Doe`.","lastModifiedDate":"2024-04-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":151,"author":{"gitId":"bachletuankhai"},"content":"- Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":152,"author":{"gitId":"bachletuankhai"},"content":"  e.g. `[c/CATEGORY​]…` can be used as ` ` (i.e. 0 times), `c/staff`, `c/sponsor` etc.","lastModifiedDate":"2024-04-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"bachletuankhai"},"content":"- Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"bachletuankhai"},"content":"- Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be","lastModifiedDate":"2024-04-11"},{"lineNumber":158,"author":{"gitId":"bachletuankhai"},"content":"  ignored.\u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":161,"author":{"gitId":"bachletuankhai"},"content":"- Some commands have aliases. Please refer to [Aliases](#aliases) for more","lastModifiedDate":"2024-04-13"},{"lineNumber":162,"author":{"gitId":"bachletuankhai"},"content":"  information.","lastModifiedDate":"2024-04-11"},{"lineNumber":163,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":164,"author":{"gitId":"bachletuankhai"},"content":"- If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines","lastModifiedDate":"2024-04-11"},{"lineNumber":165,"author":{"gitId":"bachletuankhai"},"content":"  as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2024-04-11"},{"lineNumber":166,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"bachletuankhai"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2024-04-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"meenulekha"},"content":"![help message](images/helpMessageHackLink.png)","lastModifiedDate":"2024-03-20"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `help`","lastModifiedDate":"2024-04-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":177,"author":{"gitId":"bachletuankhai"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":178,"author":{"gitId":"bachletuankhai"},"content":":information_source: **Notes:**","lastModifiedDate":"2024-04-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":180,"author":{"gitId":"bachletuankhai"},"content":"`help` cannot be used in event window","lastModifiedDate":"2024-04-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"bachletuankhai"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"### Adding a person : `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"meenulekha"},"content":"Adds a person to HackLink.","lastModifiedDate":"2024-03-20"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `add n/NAME p/PHONE e/EMAIL c/CATEGORY [g/GROUP]`","lastModifiedDate":"2024-04-15"},{"lineNumber":189,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":190,"author":{"gitId":"bachletuankhai"},"content":"**Parameters:**","lastModifiedDate":"2024-04-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"bachletuankhai"},"content":"- `NAME`: Person\u0027s name. Only alphanumeric characters and spaces are allowed, and must contain at least 1 non-space","lastModifiedDate":"2024-04-15"},{"lineNumber":193,"author":{"gitId":"bachletuankhai"},"content":"  character.","lastModifiedDate":"2024-04-15"},{"lineNumber":194,"author":{"gitId":"bachletuankhai"},"content":"- `PHONE`: Person\u0027s phone number. Only digits are allowed and must be at least 3 digits long.","lastModifiedDate":"2024-04-15"},{"lineNumber":195,"author":{"gitId":"bachletuankhai"},"content":"- `EMAIL`: Person\u0027s email.","lastModifiedDate":"2024-04-15"},{"lineNumber":196,"author":{"gitId":"bachletuankhai"},"content":"- `CATEGORY`: Either Participant, Sponsor, or Staff.","lastModifiedDate":"2024-04-15"},{"lineNumber":197,"author":{"gitId":"bachletuankhai"},"content":"- `GROUP` _(optional)_: Person\u0027s group number. Must be a **positive integer**.","lastModifiedDate":"2024-04-15"},{"lineNumber":198,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":199,"author":{"gitId":"bachletuankhai"},"content":"**Aliases:**","lastModifiedDate":"2024-04-15"},{"lineNumber":200,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":201,"author":{"gitId":"bachletuankhai"},"content":"- `ap`: add participant","lastModifiedDate":"2024-04-04"},{"lineNumber":202,"author":{"gitId":"bachletuankhai"},"content":"- `as`: add sponsor","lastModifiedDate":"2024-04-04"},{"lineNumber":203,"author":{"gitId":"bachletuankhai"},"content":"- `at`: add staff","lastModifiedDate":"2024-04-04"},{"lineNumber":204,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":205,"author":{"gitId":"bachletuankhai"},"content":"  You can skip the `CATEGORY` parameter and the application will automatically assign the category based on the alias","lastModifiedDate":"2024-04-12"},{"lineNumber":206,"author":{"gitId":"bachletuankhai"},"content":"  used.","lastModifiedDate":"2024-04-11"},{"lineNumber":207,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":208,"author":{"gitId":"bachletuankhai"},"content":"**Examples:**","lastModifiedDate":"2024-04-15"},{"lineNumber":209,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":210,"author":{"gitId":"bachletuankhai"},"content":"- `add n/John Doe e/johnd@example.com p/98765432 c/participant g/1`","lastModifiedDate":"2024-04-04"},{"lineNumber":211,"author":{"gitId":"bachletuankhai"},"content":"- `add n/Betsy Crowe e/betsycrowe@example.com p/1234567 c/sponsor g/3`","lastModifiedDate":"2024-04-04"},{"lineNumber":212,"author":{"gitId":"bachletuankhai"},"content":"- `ap n/John Doe e/johnd@example.com p/98765432`","lastModifiedDate":"2024-04-04"},{"lineNumber":213,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":214,"author":{"gitId":"bachletuankhai"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":215,"author":{"gitId":"bachletuankhai"},"content":":information_source: **Notes about parameter format and behavior:**","lastModifiedDate":"2024-04-15"},{"lineNumber":216,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":217,"author":{"gitId":"bachletuankhai"},"content":"- There should be no “/” in each parameter.","lastModifiedDate":"2024-04-12"},{"lineNumber":218,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":219,"author":{"gitId":"bachletuankhai"},"content":"- There should be no contacts with the same information. 2 contacts are considered the same if they have the same","lastModifiedDate":"2024-04-12"},{"lineNumber":220,"author":{"gitId":"dhlee03"},"content":"  **name** and any match in **phone number** or **email**. Names are case-sensitive, e.g. \"Jason\" and \"jason\" does not","lastModifiedDate":"2024-04-15"},{"lineNumber":221,"author":{"gitId":"dhlee03"},"content":"  match.","lastModifiedDate":"2024-04-15"},{"lineNumber":222,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":223,"author":{"gitId":"bachletuankhai"},"content":"- As `NAME` only allow alphanumeric characters and spaces, names like \"Dr. Jean-Paul O\u0027Brien\" cannot be inserted. You","lastModifiedDate":"2024-04-15"},{"lineNumber":224,"author":{"gitId":"bachletuankhai"},"content":"  can work around this by either removing them or replacing them with space, e.g. \"Dr. Jean-Paul O\u0027Brien\" can be","lastModifiedDate":"2024-04-15"},{"lineNumber":225,"author":{"gitId":"bachletuankhai"},"content":"  inserted as \"Dr JeanPaul OBrien\". For abbreviations like \"s/o\", you can use the full word \"son of\" instead.","lastModifiedDate":"2024-04-15"},{"lineNumber":226,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":227,"author":{"gitId":"bachletuankhai"},"content":"- `CATEGORY` is case-insensitive, e.g. `c/participant` and `c/PARTICIPANT` will set the person inserted as a","lastModifiedDate":"2024-04-15"},{"lineNumber":228,"author":{"gitId":"bachletuankhai"},"content":"  participant.","lastModifiedDate":"2024-04-15"},{"lineNumber":229,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":230,"author":{"gitId":"dhlee03"},"content":"- If no `g/GROUP` is provided, the person who is not sponsor will be assigned to default group 0 in the list.","lastModifiedDate":"2024-04-15"},{"lineNumber":231,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":232,"author":{"gitId":"bachletuankhai"},"content":"- This app is designed for small hackathons, with around 500 participants. However, the maximum number of entries in the","lastModifiedDate":"2024-04-11"},{"lineNumber":233,"author":{"gitId":"bachletuankhai"},"content":"  contact list is 2147483647. Please delete some contacts to add a new person if you reach the limit.","lastModifiedDate":"2024-04-14"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"bachletuankhai"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"meenulekha"},"content":"Shows a list of all persons in HackLink.","lastModifiedDate":"2024-03-20"},{"lineNumber":240,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":241,"author":{"gitId":"dhlee03"},"content":"The table will show all people\u0027s name, email, phone, category, and group.","lastModifiedDate":"2024-04-15"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `list`","lastModifiedDate":"2024-04-15"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2024-04-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"meenulekha"},"content":"Update and edit participant contact details.","lastModifiedDate":"2024-03-18"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `edit ID [n/NAME] [p/PHONE] [e/EMAIL] [g/GROUP]`","lastModifiedDate":"2024-04-15"},{"lineNumber":250,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":251,"author":{"gitId":"bachletuankhai"},"content":"**Parameters:**","lastModifiedDate":"2024-04-15"},{"lineNumber":252,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":253,"author":{"gitId":"bachletuankhai"},"content":"- `ID`: the index of the contact in the list. It should be a positive integer smaller than 2147483648.","lastModifiedDate":"2024-04-13"},{"lineNumber":254,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":255,"author":{"gitId":"bachletuankhai"},"content":"**Aliases:** `ed`","lastModifiedDate":"2024-04-15"},{"lineNumber":256,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":257,"author":{"gitId":"bachletuankhai"},"content":"**Example:** `edit 1 n/John Doe p/98765432`","lastModifiedDate":"2024-04-15"},{"lineNumber":258,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":259,"author":{"gitId":"bachletuankhai"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":260,"author":{"gitId":"bachletuankhai"},"content":":information_source: **Notes about parameter format and command constraints:**","lastModifiedDate":"2024-04-15"},{"lineNumber":261,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":262,"author":{"gitId":"bachletuankhai"},"content":"- The constraint for each parameter is the same as in [`add` command](#adding-a-person--add).","lastModifiedDate":"2024-04-15"},{"lineNumber":263,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":264,"author":{"gitId":"bachletuankhai"},"content":"- There should be at least one field to edit. (`edit 1` is invalid, `edit 1 n/John Doe` is valid)","lastModifiedDate":"2024-04-13"},{"lineNumber":265,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":266,"author":{"gitId":"bachletuankhai"},"content":"- The edit command only supports editing name, phone, email, and group. You _cannot_ change a person\u0027s category with","lastModifiedDate":"2024-04-15"},{"lineNumber":267,"author":{"gitId":"dhlee03"},"content":"  `edit` command. Change of role should be done by deleting the person and adding them again with the new role. This is","lastModifiedDate":"2024-04-15"},{"lineNumber":268,"author":{"gitId":"dhlee03"},"content":"  to prevent accidental changes in the person\u0027s role.(e.g. changing a participant to a sponsor by mistake)","lastModifiedDate":"2024-04-15"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":270,"author":{"gitId":"bachletuankhai"},"content":"- As the maximum number of entries in the contact list is 2147483647, `ID` should be a positive integer smaller than","lastModifiedDate":"2024-04-15"},{"lineNumber":271,"author":{"gitId":"bachletuankhai"},"content":"  2147483648.","lastModifiedDate":"2024-04-12"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":273,"author":{"gitId":"bachletuankhai"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":274,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":275,"author":{"gitId":"julia-cp"},"content":"### Grouping a person : `group`","lastModifiedDate":"2024-04-04"},{"lineNumber":276,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":277,"author":{"gitId":"bachletuankhai"},"content":"Assigns a participant or a staff to a group.","lastModifiedDate":"2024-04-15"},{"lineNumber":278,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":279,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `group ID [GROUP_NUMBER]`","lastModifiedDate":"2024-04-15"},{"lineNumber":280,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":281,"author":{"gitId":"bachletuankhai"},"content":"**Parameters:**","lastModifiedDate":"2024-04-15"},{"lineNumber":282,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":283,"author":{"gitId":"bachletuankhai"},"content":"- `ID`: the index number of the person in the list.","lastModifiedDate":"2024-04-15"},{"lineNumber":284,"author":{"gitId":"bachletuankhai"},"content":"- `GROUP_NUMBER` _(optional)_: the group number. Can be any positive integer. When none is provided, the selected person","lastModifiedDate":"2024-04-15"},{"lineNumber":285,"author":{"gitId":"julia-cp"},"content":"  will be randomly assigned to an **existing** group. If there is no existing valid group in the list (non-zero), the group number must be provided.","lastModifiedDate":"2024-04-15"},{"lineNumber":286,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":287,"author":{"gitId":"bachletuankhai"},"content":"**Examples:**","lastModifiedDate":"2024-04-15"},{"lineNumber":288,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":289,"author":{"gitId":"julia-cp"},"content":"- `group 1` (Note: This will produce an error if no groups exist yet.)","lastModifiedDate":"2024-04-15"},{"lineNumber":290,"author":{"gitId":"bachletuankhai"},"content":"- `group 1 3`","lastModifiedDate":"2024-04-04"},{"lineNumber":291,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":292,"author":{"gitId":"julia-cp"},"content":"- Before\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":293,"author":{"gitId":"bachletuankhai"},"content":"  ![before group](images/beforeGroup.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":294,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":295,"author":{"gitId":"julia-cp"},"content":"- After executing `group 1 3`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":296,"author":{"gitId":"bachletuankhai"},"content":"  ![img.png](images/afterGroup13.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":297,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":298,"author":{"gitId":"bachletuankhai"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":299,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":300,"author":{"gitId":"bachletuankhai"},"content":":information_source: **Notes about command constraints:**","lastModifiedDate":"2024-04-15"},{"lineNumber":301,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":302,"author":{"gitId":"bachletuankhai"},"content":"- You can only randomly assign a person to an **existing group**.","lastModifiedDate":"2024-04-15"},{"lineNumber":303,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":304,"author":{"gitId":"julia-cp"},"content":"- When no group exist you _cannot_ randomly assign a person into a group.","lastModifiedDate":"2024-04-15"},{"lineNumber":305,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":306,"author":{"gitId":"bachletuankhai"},"content":"- You can only group staff and participant, sponsor cannot be grouped.","lastModifiedDate":"2024-04-15"},{"lineNumber":307,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":308,"author":{"gitId":"bachletuankhai"},"content":"- As the maximum number of entries in the contact list is 2147483647, the id should be a positive integer smaller than","lastModifiedDate":"2024-04-15"},{"lineNumber":309,"author":{"gitId":"bachletuankhai"},"content":"  2147483648.","lastModifiedDate":"2024-04-15"},{"lineNumber":310,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":311,"author":{"gitId":"bachletuankhai"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":312,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":313,"author":{"gitId":"julia-cp"},"content":"### Grouping randomly listed persons : `grouprandom`","lastModifiedDate":"2024-04-04"},{"lineNumber":314,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":315,"author":{"gitId":"julia-cp"},"content":"Assigns a random group to each participant and staff that are currently listed.","lastModifiedDate":"2024-04-04"},{"lineNumber":316,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":317,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `grouprandom MAXIMUM_GROUP_SIZE`","lastModifiedDate":"2024-04-15"},{"lineNumber":318,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":319,"author":{"gitId":"bachletuankhai"},"content":"**Parameters:**","lastModifiedDate":"2024-04-15"},{"lineNumber":320,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":321,"author":{"gitId":"bachletuankhai"},"content":"- `MAXIMUM_GROUP_SIZE`: the maximum number of people in a group. Can be any positive integer smaller than 2147483648.","lastModifiedDate":"2024-04-15"},{"lineNumber":322,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":323,"author":{"gitId":"bachletuankhai"},"content":"**Example:**","lastModifiedDate":"2024-04-15"},{"lineNumber":324,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":325,"author":{"gitId":"bachletuankhai"},"content":"- `grouprandom 2`","lastModifiedDate":"2024-04-15"},{"lineNumber":326,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":327,"author":{"gitId":"julia-cp"},"content":"- Before\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":328,"author":{"gitId":"bachletuankhai"},"content":"  ![img.png](images/beforeGrouprandom.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":329,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":330,"author":{"gitId":"julia-cp"},"content":"- After executing `grouprandom 2`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":331,"author":{"gitId":"bachletuankhai"},"content":"  ![img.png](images/afterGroupRandom.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":333,"author":{"gitId":"bachletuankhai"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":334,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":335,"author":{"gitId":"bachletuankhai"},"content":":information_source: **Note:** Like `group` command, you can only group staff and participant, sponsor cannot be","lastModifiedDate":"2024-04-15"},{"lineNumber":336,"author":{"gitId":"bachletuankhai"},"content":"grouped.","lastModifiedDate":"2024-04-15"},{"lineNumber":337,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":338,"author":{"gitId":"bachletuankhai"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":339,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":340,"author":{"gitId":"bachletuankhai"},"content":"### Commenting a person : `comment`","lastModifiedDate":"2024-04-15"},{"lineNumber":341,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":342,"author":{"gitId":"bachletuankhai"},"content":"Add notes or comments to contacts.","lastModifiedDate":"2024-04-15"},{"lineNumber":343,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":344,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `comment ID NOTES`","lastModifiedDate":"2024-04-15"},{"lineNumber":345,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":346,"author":{"gitId":"bachletuankhai"},"content":"**Parameters:**","lastModifiedDate":"2024-04-15"},{"lineNumber":347,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":348,"author":{"gitId":"bachletuankhai"},"content":"- `ID`: the id of the person to comment on","lastModifiedDate":"2024-04-15"},{"lineNumber":349,"author":{"gitId":"bachletuankhai"},"content":"- `NOTES`: the comment to give","lastModifiedDate":"2024-04-15"},{"lineNumber":350,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":351,"author":{"gitId":"bachletuankhai"},"content":"**Example:**","lastModifiedDate":"2024-04-15"},{"lineNumber":352,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":353,"author":{"gitId":"bachletuankhai"},"content":"- `comment 1 Allergic to peanuts`","lastModifiedDate":"2024-04-15"},{"lineNumber":354,"author":{"gitId":"bachletuankhai"},"content":"  ![img.png](images/comment.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":355,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":356,"author":{"gitId":"dhlee03"},"content":"  The dialog icon appearing next to the person name indicates that they have a comment.","lastModifiedDate":"2024-04-15"},{"lineNumber":357,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":358,"author":{"gitId":"bachletuankhai"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":360,"author":{"gitId":"bachletuankhai"},"content":":information_source: **Note:**","lastModifiedDate":"2024-04-15"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":362,"author":{"gitId":"dhlee03"},"content":"- **Adding a new comment on a person will replace any comments they have.** The comment is not appended to the existing","lastModifiedDate":"2024-04-15"},{"lineNumber":363,"author":{"gitId":"dhlee03"},"content":"  comment. This is to prevent the comment from becoming too long and unreadable. Also it ensures that the comment is","lastModifiedDate":"2024-04-15"},{"lineNumber":364,"author":{"gitId":"dhlee03"},"content":"  up-to-date. Please write the overall comment in current state by considering the previous comments.","lastModifiedDate":"2024-04-15"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":366,"author":{"gitId":"dhlee03"},"content":"- **All commas in your comment will be automatically removed** when it is inserted into the application for","lastModifiedDate":"2024-04-15"},{"lineNumber":367,"author":{"gitId":"dhlee03"},"content":"  compatibility with link command(csv exporting).","lastModifiedDate":"2024-04-15"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":369,"author":{"gitId":"dhlee03"},"content":"- The comment format does not restrict the use of special characters. However, some special characters that are not","lastModifiedDate":"2024-04-15"},{"lineNumber":370,"author":{"gitId":"dhlee03"},"content":"  supported by the system might be displayed differently in the application. It is recommended to use only alphanumeric","lastModifiedDate":"2024-04-15"},{"lineNumber":371,"author":{"gitId":"dhlee03"},"content":"  characters and common punctuation marks. Use of special characters is at your own risk.","lastModifiedDate":"2024-04-15"},{"lineNumber":372,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":373,"author":{"gitId":"dhlee03"},"content":"- The comment is a section for taking your important notes about the person. It is not meant to be used as a","lastModifiedDate":"2024-04-15"},{"lineNumber":374,"author":{"gitId":"dhlee03"},"content":"  full-detailed description or review of the person. If you need to store more information, consider using a separate","lastModifiedDate":"2024-04-15"},{"lineNumber":375,"author":{"gitId":"dhlee03"},"content":"  document.","lastModifiedDate":"2024-04-15"},{"lineNumber":376,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":377,"author":{"gitId":"dhlee03"},"content":"- As the maximum number of entries in the contact list is 2147483647, the id should be a positive integer smaller than","lastModifiedDate":"2024-04-15"},{"lineNumber":378,"author":{"gitId":"dhlee03"},"content":"  2147483648.","lastModifiedDate":"2024-04-15"},{"lineNumber":379,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":380,"author":{"gitId":"dhlee03"},"content":"- The default comment for a person without any assigned comment is `No comment provided.`","lastModifiedDate":"2024-04-15"},{"lineNumber":381,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":382,"author":{"gitId":"dhlee03"},"content":"- There is no separate command to reset or delete a comment. You can always replace the existing comment with a new one","lastModifiedDate":"2024-04-15"},{"lineNumber":383,"author":{"gitId":"dhlee03"},"content":"  by using the `comment` command, but if you still want to remove the dialog icon, you can manually remove it by setting","lastModifiedDate":"2024-04-15"},{"lineNumber":384,"author":{"gitId":"dhlee03"},"content":"the comment to default comment `No comment provided.`","lastModifiedDate":"2024-04-15"},{"lineNumber":385,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":386,"author":{"gitId":"bachletuankhai"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":387,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":388,"author":{"gitId":"bachletuankhai"},"content":"### Viewing comments : `view`","lastModifiedDate":"2024-04-15"},{"lineNumber":389,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":390,"author":{"gitId":"dhlee03"},"content":"View comment of a specific contact","lastModifiedDate":"2024-04-15"},{"lineNumber":391,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":392,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `view ID`","lastModifiedDate":"2024-04-15"},{"lineNumber":393,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":394,"author":{"gitId":"bachletuankhai"},"content":"**Parameter:**","lastModifiedDate":"2024-04-15"},{"lineNumber":395,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":396,"author":{"gitId":"bachletuankhai"},"content":"- `ID`: the index of the contact in the list","lastModifiedDate":"2024-04-15"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"bachletuankhai"},"content":"**Example:** `view 1`","lastModifiedDate":"2024-04-15"},{"lineNumber":399,"author":{"gitId":"bachletuankhai"},"content":"![img.png](images/viewComment.png)","lastModifiedDate":"2024-04-15"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"dhlee03"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":402,"author":{"gitId":"dhlee03"},"content":":information_source: **Note:**","lastModifiedDate":"2024-04-15"},{"lineNumber":403,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":404,"author":{"gitId":"dhlee03"},"content":"- As the maximum number of entries in the contact list is 2147483647, the id should be a positive integer smaller than","lastModifiedDate":"2024-04-15"},{"lineNumber":405,"author":{"gitId":"dhlee03"},"content":"  2147483648.","lastModifiedDate":"2024-04-15"},{"lineNumber":406,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":407,"author":{"gitId":"dhlee03"},"content":"- If the person does not have a comment, you can still use the `view` command to check if they have a comment or not.","lastModifiedDate":"2024-04-15"},{"lineNumber":408,"author":{"gitId":"dhlee03"},"content":"  The application will display the default comment \u0027No comment provided.\u0027.","lastModifiedDate":"2024-04-15"},{"lineNumber":409,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":410,"author":{"gitId":"dhlee03"},"content":"- As mentioned in comment command, commas in the comment might cause the csv file to be corrupted, so they are removed","lastModifiedDate":"2024-04-15"},{"lineNumber":411,"author":{"gitId":"dhlee03"},"content":"  from your input.","lastModifiedDate":"2024-04-15"},{"lineNumber":412,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":413,"author":{"gitId":"dhlee03"},"content":"- As mentioned in comment command, some special characters that are not supported by the system might be displayed","lastModifiedDate":"2024-04-15"},{"lineNumber":414,"author":{"gitId":"dhlee03"},"content":"  differently in the application. It is recommended to use only alphanumeric characters and common punctuation marks","lastModifiedDate":"2024-04-15"},{"lineNumber":415,"author":{"gitId":"dhlee03"},"content":"  when making comment. Use of special characters is at your own risk.","lastModifiedDate":"2024-04-15"},{"lineNumber":416,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":417,"author":{"gitId":"dhlee03"},"content":"- `Redo` and `Undo` commands are not supported for `view` command.","lastModifiedDate":"2024-04-15"},{"lineNumber":418,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":419,"author":{"gitId":"julia-cp"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":420,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":421,"author":{"gitId":"dhlee03"},"content":"### Locating persons by keywords : `find`","lastModifiedDate":"2024-04-04"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"dhlee03"},"content":"Finds persons who contain any of the given keywords.","lastModifiedDate":"2024-04-04"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `find KEYWORD [MORE_KEYWORDS]…`","lastModifiedDate":"2024-04-15"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"bachletuankhai"},"content":"- The search is case-insensitive. e.g. `hans` will match `Hans`","lastModifiedDate":"2024-04-13"},{"lineNumber":428,"author":{"gitId":"bachletuankhai"},"content":"- The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2024-04-04"},{"lineNumber":429,"author":{"gitId":"bachletuankhai"},"content":"- Full text of a person is searched, i.e. their name, email, phone number, group number, category and comments if any.","lastModifiedDate":"2024-04-15"},{"lineNumber":430,"author":{"gitId":"bachletuankhai"},"content":"- Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2024-04-04"},{"lineNumber":431,"author":{"gitId":"bachletuankhai"},"content":"- Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2024-04-04"},{"lineNumber":432,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"dhlee03"},"content":"- Comment is also searched. e.g. `peanuts` will match `Allergic to peanuts`","lastModifiedDate":"2024-04-15"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"bachletuankhai"},"content":"**Aliases:** `f`","lastModifiedDate":"2024-04-15"},{"lineNumber":436,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":437,"author":{"gitId":"bachletuankhai"},"content":"**Examples:**","lastModifiedDate":"2024-04-15"},{"lineNumber":438,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":439,"author":{"gitId":"dhlee03"},"content":"- `find John` returns a list that includes `john` and `John Doe`","lastModifiedDate":"2024-04-15"},{"lineNumber":440,"author":{"gitId":"dhlee03"},"content":"- `find alex david` returns a list that includes `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":441,"author":{"gitId":"bachletuankhai"},"content":"  ![img.png](images/findAlexDavid.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":442,"author":{"gitId":"dhlee03"},"content":"- `find participant` returns a list that includes all participants in the list","lastModifiedDate":"2024-04-15"},{"lineNumber":443,"author":{"gitId":"dhlee03"},"content":"- `find 1` returns a list that includes the person with group number 1","lastModifiedDate":"2024-04-15"},{"lineNumber":444,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":445,"author":{"gitId":"dhlee03"},"content":"### Exporting selected people : `link`","lastModifiedDate":"2024-04-15"},{"lineNumber":446,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":447,"author":{"gitId":"dhlee03"},"content":"Produce a csv file with selected contacts\u0027 information.(name, phone, email, and comment)","lastModifiedDate":"2024-04-15"},{"lineNumber":448,"author":{"gitId":"dhlee03"},"content":"The csv file will be saved in the `selectedPeople` folder in the same directory as the `HackLink.jar` file, with the name","lastModifiedDate":"2024-04-15"},{"lineNumber":449,"author":{"gitId":"dhlee03"},"content":"`list.csv`. If the folder does not exist, it will be created. If the file already exists, it will be overwritten.","lastModifiedDate":"2024-04-15"},{"lineNumber":450,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":451,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `link ID [MORE_ID]…`","lastModifiedDate":"2024-04-15"},{"lineNumber":452,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":453,"author":{"gitId":"bachletuankhai"},"content":"**Parameters:**","lastModifiedDate":"2024-04-15"},{"lineNumber":454,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":455,"author":{"gitId":"dhlee03"},"content":"- `ID`, `MORE_ID`: index(es) of the selected contact(s)","lastModifiedDate":"2024-04-15"},{"lineNumber":456,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":457,"author":{"gitId":"bachletuankhai"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":458,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":459,"author":{"gitId":"bachletuankhai"},"content":":information_source: **Notes on parameter constraints:**","lastModifiedDate":"2024-04-15"},{"lineNumber":460,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":461,"author":{"gitId":"dhlee03"},"content":"- The order of the ids does not matter.","lastModifiedDate":"2024-04-11"},{"lineNumber":462,"author":{"gitId":"dhlee03"},"content":"- The ids should be positive integers and valid and in the list.","lastModifiedDate":"2024-04-15"},{"lineNumber":463,"author":{"gitId":"dhlee03"},"content":"- The ids should be separated by a space.","lastModifiedDate":"2024-04-11"},{"lineNumber":464,"author":{"gitId":"dhlee03"},"content":"- There should be no duplicate ids.","lastModifiedDate":"2024-04-11"},{"lineNumber":465,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":466,"author":{"gitId":"bachletuankhai"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":467,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":468,"author":{"gitId":"bachletuankhai"},"content":"**Examples:**","lastModifiedDate":"2024-04-15"},{"lineNumber":469,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":470,"author":{"gitId":"dhlee03"},"content":"- `link 1 2 3` returns a csv file with the information of people with index 1, 2, and 3","lastModifiedDate":"2024-04-15"},{"lineNumber":471,"author":{"gitId":"dhlee03"},"content":"- `link 1` returns a csv file with the information of person with index 1","lastModifiedDate":"2024-04-15"},{"lineNumber":472,"author":{"gitId":"dhlee03"},"content":"- `link 1 2 3 4 5` returns a csv file with the information of people 1, 2, 3, 4, and 5","lastModifiedDate":"2024-04-15"},{"lineNumber":473,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":474,"author":{"gitId":"bachletuankhai"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":476,"author":{"gitId":"bachletuankhai"},"content":":exclamation: **Caution:**","lastModifiedDate":"2024-04-15"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":478,"author":{"gitId":"bachletuankhai"},"content":"- As mentioned in [`comment` command](#commenting-a-person--comment), commas in the comment might cause the csv file to","lastModifiedDate":"2024-04-15"},{"lineNumber":479,"author":{"gitId":"bachletuankhai"},"content":"  be corrupted, so they are removed from your input. Avoid using commas.","lastModifiedDate":"2024-04-15"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":481,"author":{"gitId":"dhlee03"},"content":"- As mentioned in [`comment` command](#commenting-a-person--comment), some special characters that are not supported by","lastModifiedDate":"2024-04-15"},{"lineNumber":482,"author":{"gitId":"dhlee03"},"content":"  the system might be displayed differently in the application. Some special characters and emojis might be displayed as","lastModifiedDate":"2024-04-15"},{"lineNumber":483,"author":{"gitId":"dhlee03"},"content":"`??` in the csv file. It is recommended to use only alphanumeric characters and common punctuation marks when making comment. Use of special characters is at your own risk.","lastModifiedDate":"2024-04-15"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":485,"author":{"gitId":"dhlee03"},"content":"- Do not open the `list.csv` file while the application is running. The file should be closed to write to it. Opening","lastModifiedDate":"2024-04-15"},{"lineNumber":486,"author":{"gitId":"dhlee03"},"content":"  the file while the application is running may cause errors.","lastModifiedDate":"2024-04-15"},{"lineNumber":487,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":488,"author":{"gitId":"bachletuankhai"},"content":"- As the maximum number of entries in the contact list is 2147483647, the id should be a positive integer smaller than","lastModifiedDate":"2024-04-12"},{"lineNumber":489,"author":{"gitId":"bachletuankhai"},"content":"  2147483648.","lastModifiedDate":"2024-04-12"},{"lineNumber":490,"author":{"gitId":"dhlee03"},"content":"- The `link` command does not support `undo` and `redo` commands.","lastModifiedDate":"2024-04-15"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"bachletuankhai"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":493,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":494,"author":{"gitId":"bachletuankhai"},"content":"### Removing a person : `delete`","lastModifiedDate":"2024-04-04"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"bachletuankhai"},"content":"Deletes the person identified by the index shown in the displayed person list.","lastModifiedDate":"2024-04-04"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `delete ID`","lastModifiedDate":"2024-04-15"},{"lineNumber":499,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":500,"author":{"gitId":"bachletuankhai"},"content":"**Parameters:** `ID`: the id of the person to be deleted. Must exist in the list shown in the app.","lastModifiedDate":"2024-04-15"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"bachletuankhai"},"content":"**Aliases:** `d`","lastModifiedDate":"2024-04-15"},{"lineNumber":503,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":504,"author":{"gitId":"bachletuankhai"},"content":"**Examples:**","lastModifiedDate":"2024-04-15"},{"lineNumber":505,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":506,"author":{"gitId":"bachletuankhai"},"content":"- `delete 1` deletes the first person in the list.","lastModifiedDate":"2024-04-04"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"bachletuankhai"},"content":"## Event features","lastModifiedDate":"2024-04-15"},{"lineNumber":509,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":510,"author":{"gitId":"bachletuankhai"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":511,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":512,"author":{"gitId":"bachletuankhai"},"content":":information_source: **Note**: For event features, you need to navigate to the event window by clicking on the Events","lastModifiedDate":"2024-04-15"},{"lineNumber":513,"author":{"gitId":"bachletuankhai"},"content":"menu in the menubar.","lastModifiedDate":"2024-04-15"},{"lineNumber":514,"author":{"gitId":"bachletuankhai"},"content":"Refer to the [Event Window](#event-window) section for more details.","lastModifiedDate":"2024-04-11"},{"lineNumber":515,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":516,"author":{"gitId":"bachletuankhai"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":517,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":518,"author":{"gitId":"bachletuankhai"},"content":"### Adding an event : `addevent`","lastModifiedDate":"2024-04-15"},{"lineNumber":519,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":520,"author":{"gitId":"meenulekha"},"content":"Adds an event to HackLink with a name, date and category where the category represents who the event involves.","lastModifiedDate":"2024-04-14"},{"lineNumber":521,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":522,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `addevent en/EVENTNAME ed/EVENTDATE ec/EVENTCATEGORY`","lastModifiedDate":"2024-04-15"},{"lineNumber":523,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":524,"author":{"gitId":"bachletuankhai"},"content":"**Parameters:**","lastModifiedDate":"2024-04-15"},{"lineNumber":525,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":526,"author":{"gitId":"bachletuankhai"},"content":"- `EVENTNAME`: Name of the event. Only alphanumeric characters and spaces are allowed.","lastModifiedDate":"2024-04-15"},{"lineNumber":527,"author":{"gitId":"bachletuankhai"},"content":"- `EVENTDATE`: Date of the event in format dd-MM-yyyy (e.g. 20-06-2024)","lastModifiedDate":"2024-04-15"},{"lineNumber":528,"author":{"gitId":"bachletuankhai"},"content":"- `EVENTCATEGORY`: Type of the event. Either Participant, Sponsor, or Staff","lastModifiedDate":"2024-04-15"},{"lineNumber":529,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":530,"author":{"gitId":"bachletuankhai"},"content":"**Examples:**","lastModifiedDate":"2024-04-15"},{"lineNumber":531,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":532,"author":{"gitId":"meenulekha"},"content":"- `addevent en/conference ed/22-06-2024 ec/participant`","lastModifiedDate":"2024-04-14"},{"lineNumber":533,"author":{"gitId":"bachletuankhai"},"content":"- `addevent en/meeting ed/11-06-2024 ec/staff`","lastModifiedDate":"2024-04-15"},{"lineNumber":534,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":535,"author":{"gitId":"bachletuankhai"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":536,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":537,"author":{"gitId":"bachletuankhai"},"content":":information_source: **Note:** This app is designed for small hackathons. However, the maximum number of events entries","lastModifiedDate":"2024-04-15"},{"lineNumber":538,"author":{"gitId":"bachletuankhai"},"content":"is 2147483647. Please delete some events to add a new event if you reach the limit.","lastModifiedDate":"2024-04-15"},{"lineNumber":539,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":540,"author":{"gitId":"bachletuankhai"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":542,"author":{"gitId":"meenulekha"},"content":"### Listing all events : `listevent`","lastModifiedDate":"2024-04-04"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":544,"author":{"gitId":"meenulekha"},"content":"Shows a list of all events in HackLink.","lastModifiedDate":"2024-04-04"},{"lineNumber":545,"author":{"gitId":"meenulekha"},"content":"The table will show all the data","lastModifiedDate":"2024-04-04"},{"lineNumber":546,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":547,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `listevent`","lastModifiedDate":"2024-04-15"},{"lineNumber":548,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":549,"author":{"gitId":"meenulekha"},"content":"### Removing an event : `deleteevent`","lastModifiedDate":"2024-04-04"},{"lineNumber":550,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":551,"author":{"gitId":"meenulekha"},"content":"Remove specific events from the database.","lastModifiedDate":"2024-04-04"},{"lineNumber":552,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":553,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `deleteevent ID`","lastModifiedDate":"2024-04-15"},{"lineNumber":554,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":555,"author":{"gitId":"bachletuankhai"},"content":"**Parameters:**","lastModifiedDate":"2024-04-15"},{"lineNumber":556,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":557,"author":{"gitId":"bachletuankhai"},"content":"- `ID`: the id of the event in the list (positive integer smaller than 2147483648)","lastModifiedDate":"2024-04-13"},{"lineNumber":558,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":559,"author":{"gitId":"bachletuankhai"},"content":"**Example:**","lastModifiedDate":"2024-04-15"},{"lineNumber":560,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":561,"author":{"gitId":"bachletuankhai"},"content":"- `deleteevent 1`","lastModifiedDate":"2024-04-15"},{"lineNumber":562,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":563,"author":{"gitId":"meenulekha"},"content":"### Locating events by keywords : `findevent`","lastModifiedDate":"2024-04-04"},{"lineNumber":564,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":565,"author":{"gitId":"meenulekha"},"content":"Finds events which contain any of the given keywords.","lastModifiedDate":"2024-04-04"},{"lineNumber":566,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":567,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `findevent KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2024-04-15"},{"lineNumber":568,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":569,"author":{"gitId":"bachletuankhai"},"content":"- The search is case-insensitive. e.g. `meeting` will match `Meeting`","lastModifiedDate":"2024-04-13"},{"lineNumber":570,"author":{"gitId":"bachletuankhai"},"content":"- The order of the keywords does not matter. e.g. `Lecture git` will match `git Lecture`","lastModifiedDate":"2024-04-05"},{"lineNumber":571,"author":{"gitId":"bachletuankhai"},"content":"- Full text of an event is searched.","lastModifiedDate":"2024-04-13"},{"lineNumber":572,"author":{"gitId":"bachletuankhai"},"content":"- Only full words will be matched e.g. `Seminar` will not match `Seminars`","lastModifiedDate":"2024-04-04"},{"lineNumber":573,"author":{"gitId":"bachletuankhai"},"content":"- Events matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2024-04-04"},{"lineNumber":574,"author":{"gitId":"meenulekha"},"content":"  e.g. `Lecture 1` will return `Lecture 2`, `Lecture 3`","lastModifiedDate":"2024-04-04"},{"lineNumber":575,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":576,"author":{"gitId":"bachletuankhai"},"content":"**Examples:**","lastModifiedDate":"2024-04-15"},{"lineNumber":577,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":578,"author":{"gitId":"bachletuankhai"},"content":"- `findevent meeting` returns `meeting 1` and `meeting 2`","lastModifiedDate":"2024-04-04"},{"lineNumber":579,"author":{"gitId":"bachletuankhai"},"content":"- `findevent lecture` returns `AI lecture`, `OS lecture`\u003cbr\u003e","lastModifiedDate":"2024-04-04"},{"lineNumber":580,"author":{"gitId":"bachletuankhai"},"content":"- `findevent participant` returns all events for participants in the list","lastModifiedDate":"2024-04-04"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":582,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"meenulekha"},"content":"Clears all entries from the database, either the persons or events.","lastModifiedDate":"2024-04-14"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `clear`","lastModifiedDate":"2024-04-15"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"meenulekha"},"content":"- Inputting the clear command in the **main window** clears all **persons**.","lastModifiedDate":"2024-04-14"},{"lineNumber":589,"author":{"gitId":"meenulekha"},"content":"- Inputting the clear command in the **events window** clears all **events**.","lastModifiedDate":"2024-04-14"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":591,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `exit`","lastModifiedDate":"2024-04-15"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"bachletuankhai"},"content":"**Aliases:** `ex`","lastModifiedDate":"2024-04-15"},{"lineNumber":598,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":599,"author":{"gitId":"meenulekha"},"content":"**Note**: `exit` cannot be used in event window","lastModifiedDate":"2024-04-14"},{"lineNumber":600,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":601,"author":{"gitId":"bachletuankhai"},"content":"## Utility features","lastModifiedDate":"2024-04-04"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":603,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"bachletuankhai"},"content":"HackLink data are saved in the hard disk automatically after any command that changes the data. There is no need to save","lastModifiedDate":"2024-04-11"},{"lineNumber":606,"author":{"gitId":"bachletuankhai"},"content":"manually.","lastModifiedDate":"2024-04-11"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":610,"author":{"gitId":"bachletuankhai"},"content":"HackLink data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are","lastModifiedDate":"2024-04-11"},{"lineNumber":611,"author":{"gitId":"bachletuankhai"},"content":"welcome to update data directly by editing that data file.","lastModifiedDate":"2024-04-11"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":613,"author":{"gitId":"bachletuankhai"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**\u003cbr\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":614,"author":{"gitId":"meenulekha"},"content":"If your changes to the data file makes its format invalid, HackLink will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":615,"author":{"gitId":"bachletuankhai"},"content":"Furthermore, certain edits can cause the HackLink to behave in unexpected ways (e.g., if the value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-04-13"},{"lineNumber":616,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":618,"author":{"gitId":"bachletuankhai"},"content":"### Undo","lastModifiedDate":"2024-04-05"},{"lineNumber":619,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":620,"author":{"gitId":"bachletuankhai"},"content":"You can undo the last **changes made to the contact list** by using `undo` command. This will revert the last command","lastModifiedDate":"2024-04-15"},{"lineNumber":621,"author":{"gitId":"bachletuankhai"},"content":"that changed the data.","lastModifiedDate":"2024-04-15"},{"lineNumber":622,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":623,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `undo`","lastModifiedDate":"2024-04-15"},{"lineNumber":624,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":625,"author":{"gitId":"bachletuankhai"},"content":"**Aliases:** `ud`","lastModifiedDate":"2024-04-15"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":627,"author":{"gitId":"bachletuankhai"},"content":"### Redo","lastModifiedDate":"2024-04-05"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":629,"author":{"gitId":"bachletuankhai"},"content":"You can redo the last command that was undone by using `redo` command.","lastModifiedDate":"2024-04-15"},{"lineNumber":630,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":631,"author":{"gitId":"bachletuankhai"},"content":"**Format:** `redo`","lastModifiedDate":"2024-04-15"},{"lineNumber":632,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":633,"author":{"gitId":"bachletuankhai"},"content":"**Aliases:** `rd`","lastModifiedDate":"2024-04-15"},{"lineNumber":634,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":635,"author":{"gitId":"bachletuankhai"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":636,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":637,"author":{"gitId":"bachletuankhai"},"content":":information_source: **Note:** `undo` and `redo` currently are **not supported on event window**. This means that you","lastModifiedDate":"2024-04-15"},{"lineNumber":638,"author":{"gitId":"bachletuankhai"},"content":"cannot use these commands to revert the changes made to the event list.","lastModifiedDate":"2024-04-15"},{"lineNumber":639,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":640,"author":{"gitId":"bachletuankhai"},"content":"\u003c/div\u003e","lastModifiedDate":"2024-04-15"},{"lineNumber":641,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":642,"author":{"gitId":"bachletuankhai"},"content":"### Navigating to older commands","lastModifiedDate":"2024-04-04"},{"lineNumber":643,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":644,"author":{"gitId":"bachletuankhai"},"content":"HackLink allows you to navigate to older commands using the up and down arrow keys. This feature is useful when you want","lastModifiedDate":"2024-04-11"},{"lineNumber":645,"author":{"gitId":"bachletuankhai"},"content":"to repeat a command you have previously entered.","lastModifiedDate":"2024-04-11"},{"lineNumber":646,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":647,"author":{"gitId":"bachletuankhai"},"content":"### Aliases","lastModifiedDate":"2024-04-04"},{"lineNumber":648,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":649,"author":{"gitId":"bachletuankhai"},"content":"Aliases are shortcuts for commands. In each command, you can use the alias in place of the command word, unless","lastModifiedDate":"2024-04-13"},{"lineNumber":650,"author":{"gitId":"bachletuankhai"},"content":"specified otherwise by the command. Please refer to each command details for the alias.\u003cbr\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":651,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":652,"author":{"gitId":"bachletuankhai"},"content":"**Example:**","lastModifiedDate":"2024-04-15"},{"lineNumber":653,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":654,"author":{"gitId":"bachletuankhai"},"content":"- [Delete command](#removing-a-person--delete) has command word `delete` and alias `d`. `d 1` and `delete 1` both","lastModifiedDate":"2024-04-13"},{"lineNumber":655,"author":{"gitId":"bachletuankhai"},"content":"  deletes the person at index 1.","lastModifiedDate":"2024-04-13"},{"lineNumber":656,"author":{"gitId":"bachletuankhai"},"content":"- [Adding command](#adding-a-person--add) has command word `add` and alias `ap` for adding participant. You don\u0027t need","lastModifiedDate":"2024-04-13"},{"lineNumber":657,"author":{"gitId":"bachletuankhai"},"content":"  to include participant parameter when using this alias for `add` command.\u003cbr\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":658,"author":{"gitId":"bachletuankhai"},"content":"  `add n/John e/john@mail.com p/84831193 c/participant` and `ap n/John e/john@mail.com p/84831193` both adds new","lastModifiedDate":"2024-04-15"},{"lineNumber":659,"author":{"gitId":"bachletuankhai"},"content":"  participant","lastModifiedDate":"2024-04-15"},{"lineNumber":660,"author":{"gitId":"bachletuankhai"},"content":"  named \"John\" with given information to the contact list.","lastModifiedDate":"2024-04-13"},{"lineNumber":661,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":662,"author":{"gitId":"bachletuankhai"},"content":"### Shortcuts","lastModifiedDate":"2024-04-04"},{"lineNumber":663,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":664,"author":{"gitId":"bachletuankhai"},"content":"Shortcuts are a way to quickly perform action from the keyboard. The available shortcuts are:","lastModifiedDate":"2024-04-04"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"bachletuankhai"},"content":"- `F1` : Opens the help window","lastModifiedDate":"2024-04-04"},{"lineNumber":667,"author":{"gitId":"bachletuankhai"},"content":"- `F2` : Focus on the command box","lastModifiedDate":"2024-04-04"},{"lineNumber":668,"author":{"gitId":"bachletuankhai"},"content":"- `F3` : Focus on the result box (to scroll up and down in case of overflow)","lastModifiedDate":"2024-04-04"},{"lineNumber":669,"author":{"gitId":"bachletuankhai"},"content":"- `F4` : Focus on the list of contacts (to scroll up and down in case of overflow)","lastModifiedDate":"2024-04-04"},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-04-04"},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"bachletuankhai"},"content":"## Event window","lastModifiedDate":"2024-04-05"},{"lineNumber":674,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":675,"author":{"gitId":"bachletuankhai"},"content":"Events are shown in a separate window. You can navigate to the event window by clicking on the Events menu in the","lastModifiedDate":"2024-04-11"},{"lineNumber":676,"author":{"gitId":"bachletuankhai"},"content":"menubar.","lastModifiedDate":"2024-04-11"},{"lineNumber":677,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":678,"author":{"gitId":"bachletuankhai"},"content":"An event window will appear with a list of events. You can add, delete, and find events in the event window. Note how","lastModifiedDate":"2024-04-11"},{"lineNumber":679,"author":{"gitId":"bachletuankhai"},"content":"the app contains some sample data for the events.\u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":680,"author":{"gitId":"meenulekha"},"content":"![Ui](images/toEventsWindowUpdated.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":681,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":682,"author":{"gitId":"bachletuankhai"},"content":"You can get back to the main window by clicking on the Back to Main on the menubar.\u003cbr\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":683,"author":{"gitId":"bachletuankhai"},"content":"![Ui](images/backToMain.png)","lastModifiedDate":"2024-04-05"},{"lineNumber":684,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":685,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-04-05"},{"lineNumber":686,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":687,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":690,"author":{"gitId":"bachletuankhai"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains","lastModifiedDate":"2024-04-11"},{"lineNumber":691,"author":{"gitId":"bachletuankhai"},"content":"the data of your previous HackLink home folder.","lastModifiedDate":"2024-04-15"},{"lineNumber":692,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-04-04"},{"lineNumber":694,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"meenulekha"},"content":"## Warnings","lastModifiedDate":"2024-03-20"},{"lineNumber":696,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":697,"author":{"gitId":"bachletuankhai"},"content":"1. **Invalid Command** : When a command format is incorrect or parameters are missing, the application will prompt the","lastModifiedDate":"2024-04-11"},{"lineNumber":698,"author":{"gitId":"bachletuankhai"},"content":"   user with a warning message.","lastModifiedDate":"2024-04-11"},{"lineNumber":699,"author":{"gitId":"bachletuankhai"},"content":"2. **Command Failure** : If the person specified for editing or removing does not exist in the database, the application","lastModifiedDate":"2024-04-11"},{"lineNumber":700,"author":{"gitId":"bachletuankhai"},"content":"   should display a warning message indicating the failure.","lastModifiedDate":"2024-04-11"},{"lineNumber":701,"author":{"gitId":"bachletuankhai"},"content":"3. **Invalid input for update** : If the input for editing a person\u0027s information is invalid, the application should","lastModifiedDate":"2024-04-11"},{"lineNumber":702,"author":{"gitId":"bachletuankhai"},"content":"   display a warning message indicating the failure and provide guidance on the correct format.","lastModifiedDate":"2024-04-11"},{"lineNumber":703,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":704,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-04-04"},{"lineNumber":705,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":706,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":707,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":708,"author":{"gitId":"bachletuankhai"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only","lastModifiedDate":"2024-04-11"},{"lineNumber":709,"author":{"gitId":"bachletuankhai"},"content":"   the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the","lastModifiedDate":"2024-04-11"},{"lineNumber":710,"author":{"gitId":"bachletuankhai"},"content":"   application before running the application again.","lastModifiedDate":"2024-04-11"},{"lineNumber":711,"author":{"gitId":"bachletuankhai"},"content":"2. When **undoing a deletion** by `undo` command after a `delete` command, the restored contact may not appear at the","lastModifiedDate":"2024-04-14"},{"lineNumber":712,"author":{"gitId":"bachletuankhai"},"content":"   same row and/or having the same ID as the original contact. Refer to the example below: \u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":713,"author":{"gitId":"bachletuankhai"},"content":"   ![img.png](images/knownIssues_undo_pic1.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":714,"author":{"gitId":"bachletuankhai"},"content":"    - `delete 2` deletes the person with ID 2 (\"Bernice Yu\") in the contact list","lastModifiedDate":"2024-04-14"},{"lineNumber":715,"author":{"gitId":"bachletuankhai"},"content":"      ![img.png](images/knownIssues_undo_pic2.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":716,"author":{"gitId":"bachletuankhai"},"content":"    - `undo` re-adds this person back to the list, but with a different ID (4 instead of 2)","lastModifiedDate":"2024-04-14"},{"lineNumber":717,"author":{"gitId":"bachletuankhai"},"content":"      ![img.png](images/knownIssues_undo_pic3.png)","lastModifiedDate":"2024-04-14"},{"lineNumber":718,"author":{"gitId":"bachletuankhai"},"content":"    - `delete 2` does not guarantee to delete the same person again \u003cbr\u003e","lastModifiedDate":"2024-04-14"},{"lineNumber":719,"author":{"gitId":"bachletuankhai"},"content":"      The suggested workaround is to use [`redo` command](#redo) to delete the same person again, or to search for that","lastModifiedDate":"2024-04-14"},{"lineNumber":720,"author":{"gitId":"bachletuankhai"},"content":"      exact person using [`find` command](#locating-persons-by-keywords--find) and delete them.","lastModifiedDate":"2024-04-14"},{"lineNumber":721,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":722,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-04-04"},{"lineNumber":723,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":724,"author":{"gitId":"meenulekha"},"content":"## Tips","lastModifiedDate":"2024-03-20"},{"lineNumber":725,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":726,"author":{"gitId":"bachletuankhai"},"content":"1. **Use Descriptive Command Names**: You are encouraged to use descriptive names when adding, updating, or removing","lastModifiedDate":"2024-04-11"},{"lineNumber":727,"author":{"gitId":"bachletuankhai"},"content":"   participants. This makes it easier to identify and manage individuals within the application.","lastModifiedDate":"2024-04-11"},{"lineNumber":728,"author":{"gitId":"bachletuankhai"},"content":"2. **Utilize the utility features**: The application provides utility features such as navigating to older commands,","lastModifiedDate":"2024-04-11"},{"lineNumber":729,"author":{"gitId":"bachletuankhai"},"content":"   aliases, and shortcuts. These features can help you manage your data more efficiently.","lastModifiedDate":"2024-04-11"},{"lineNumber":730,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":731,"author":{"gitId":"bachletuankhai"},"content":"---","lastModifiedDate":"2024-04-04"},{"lineNumber":732,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":733,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":735,"author":{"gitId":"bachletuankhai"},"content":"| Action             | Format, Examples                                                                                                                         |","lastModifiedDate":"2024-04-05"},{"lineNumber":736,"author":{"gitId":"bachletuankhai"},"content":"|--------------------|------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-04-13"},{"lineNumber":737,"author":{"gitId":"bachletuankhai"},"content":"| **Add**            | `add n/NAME p/PHONE_NUMBER e/EMAIL c/CATEGORY [g/GROUP]​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com c/participant g/3` |","lastModifiedDate":"2024-04-13"},{"lineNumber":738,"author":{"gitId":"bachletuankhai"},"content":"| **Clear**          | `clear`                                                                                                                                  |","lastModifiedDate":"2024-04-05"},{"lineNumber":739,"author":{"gitId":"bachletuankhai"},"content":"| **Remove**         | `delete ID`\u003cbr\u003e e.g., `delete 3`                                                                                                         |","lastModifiedDate":"2024-04-13"},{"lineNumber":740,"author":{"gitId":"bachletuankhai"},"content":"| **Edit**           | `edit ID [n/NAME] [p/PHONE] [e/EMAIL] [g/GROUP]​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                   |","lastModifiedDate":"2024-04-15"},{"lineNumber":741,"author":{"gitId":"bachletuankhai"},"content":"| **Group**          | `group ID [GROUP_NUMBER]`\u003cbr\u003e e.g., `group 1 3`                                                                                          |","lastModifiedDate":"2024-04-13"},{"lineNumber":742,"author":{"gitId":"bachletuankhai"},"content":"| **Group Randomly** | `grouprandom MAXIMUM_GROUP_SIZE`\u003cbr\u003e e.g., `grouprandom 3`                                                                               |","lastModifiedDate":"2024-04-15"},{"lineNumber":743,"author":{"gitId":"bachletuankhai"},"content":"| **Find**           | `find KEYWORD [MORE_KEYWORDS]...`\u003cbr\u003e e.g., `find James Jake`                                                                            |","lastModifiedDate":"2024-04-15"},{"lineNumber":744,"author":{"gitId":"bachletuankhai"},"content":"| **List**           | `list`                                                                                                                                   |","lastModifiedDate":"2024-04-05"},{"lineNumber":745,"author":{"gitId":"bachletuankhai"},"content":"| **Link**           | `link ID [MORE_ID]...`\u003cbr\u003e e.g., `link 1 2 3`                                                                                            |","lastModifiedDate":"2024-04-13"},{"lineNumber":746,"author":{"gitId":"bachletuankhai"},"content":"| **Comment**        | `comment ID NOTES`\u003cbr\u003e e.g., `comment 1 Allergic to peanuts`                                                                             |","lastModifiedDate":"2024-04-13"},{"lineNumber":747,"author":{"gitId":"bachletuankhai"},"content":"| **View**           | `view ID` \u003cbr\u003e e.g., `view 1`                                                                                                            |","lastModifiedDate":"2024-04-13"},{"lineNumber":748,"author":{"gitId":"bachletuankhai"},"content":"| **AddEvent**       | `addevent en/EVENTNAME ed/EVENTDATE ec/EVENTCATEGORY`\u003cbr\u003e e.g., `addevent en/meeting3 ed/11-06-2024 ec/staff`                            |","lastModifiedDate":"2024-04-05"},{"lineNumber":749,"author":{"gitId":"bachletuankhai"},"content":"| **ListEvent**      | `listevent`                                                                                                                              |","lastModifiedDate":"2024-04-05"},{"lineNumber":750,"author":{"gitId":"bachletuankhai"},"content":"| **DeleteEvent**    | `deleteevent ID`\u003cbr\u003e e.g., `deleteevent 8`                                                                                               |","lastModifiedDate":"2024-04-13"},{"lineNumber":751,"author":{"gitId":"bachletuankhai"},"content":"| **FindEvent**      | `findevent KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `findevent meeting`                                                                        |","lastModifiedDate":"2024-04-05"},{"lineNumber":752,"author":{"gitId":"bachletuankhai"},"content":"| **Help**           | `help`                                                                                                                                   |","lastModifiedDate":"2024-04-05"},{"lineNumber":753,"author":{"gitId":"bachletuankhai"},"content":"| **Exit**           | `exit`                                                                                                                                   | ","lastModifiedDate":"2024-04-13"},{"lineNumber":754,"author":{"gitId":"bachletuankhai"},"content":"| **Undo**           | `undo`                                                                                                                                   |","lastModifiedDate":"2024-04-13"},{"lineNumber":755,"author":{"gitId":"bachletuankhai"},"content":"| **Redo**           | `redo`                                                                                                                                   |","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"dhlee03":142,"julia-cp":29,"meenulekha":56,"bachletuankhai":400,"-":128}},{"path":"docs/_config.yml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"title: \"HackLink\"","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"theme: minima","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"header_pages:","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  - UserGuide.md","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  - DeveloperGuide.md","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  - AboutUs.md","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"markdown: kramdown","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"repository: \"AY2324S2-CS2103T-F12-4/tp\"","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"github_icon: \"images/github-icon.png\"","lastModifiedDate":"2020-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"plugins:","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  - jemoji","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"bachletuankhai":2,"-":13}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"body,","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"h1,","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"h2,","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"h3,","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"h4,","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"h5,","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"h6,","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"p,","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"blockquote,","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"pre,","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"hr,","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"dl,","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"dd,","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"ol,","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"ul,","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"figure {","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height}","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"    $base-font-family;","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"h1,","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"h2,","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"h3,","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"h4,","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"h5,","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"h6,","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"p,","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"blockquote,","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"pre,","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"ul,","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"ol,","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"dl,","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"figure,","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"bachletuankhai"},"content":"ul,","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"bachletuankhai"},"content":"ol {","lastModifiedDate":"2024-03-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"bachletuankhai"},"content":"h1,","lastModifiedDate":"2024-03-12"},{"lineNumber":118,"author":{"gitId":"bachletuankhai"},"content":"h2,","lastModifiedDate":"2024-03-12"},{"lineNumber":119,"author":{"gitId":"bachletuankhai"},"content":"h3,","lastModifiedDate":"2024-03-12"},{"lineNumber":120,"author":{"gitId":"bachletuankhai"},"content":"h4,","lastModifiedDate":"2024-03-12"},{"lineNumber":121,"author":{"gitId":"bachletuankhai"},"content":"h5,","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"bachletuankhai"},"content":"h6 {","lastModifiedDate":"2024-03-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"bachletuankhai"},"content":"  i,","lastModifiedDate":"2024-03-12"},{"lineNumber":166,"author":{"gitId":"bachletuankhai"},"content":"  em {","lastModifiedDate":"2024-03-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"bachletuankhai"},"content":"  th,","lastModifiedDate":"2024-03-12"},{"lineNumber":263,"author":{"gitId":"bachletuankhai"},"content":"  td {","lastModifiedDate":"2024-03-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":282,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":288,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":292,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":297,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":298,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":299,"author":{"gitId":"bachletuankhai"},"content":"    content: \"HackLink\";","lastModifiedDate":"2024-03-12"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":301,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"bachletuankhai":44,"-":258}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"logic -[LOGIC_COLOR]\u003e model : addCommand(this)","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"deactivate model","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"bachletuankhai":6,"-":39}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"Person *--\u003e \"1\"Phone","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"Person *--\u003e \"1\"Email","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"Person *--\u003e \"1\"Address","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"Person *--\u003e \"1\" Category","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"dhlee03":5,"-":17}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"skin rose","lastModifiedDate":"2023-07-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ActivityFontSize 15","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ArrowFontSize 12","lastModifiedDate":"2023-07-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"if () then ([command adds","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"itself to history])","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"    :Clear \"future\" list (all saved","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"     undone commands);","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    :Save command to the","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"    end of the history list;","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"bachletuankhai":6,"-":14}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser :","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute(m)","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"DeleteCommand -\u003e Model : addCommand(this)","lastModifiedDate":"2024-04-15"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"activate Model","lastModifiedDate":"2024-04-15"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2024-04-15"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"deactivate Model","lastModifiedDate":"2024-04-15"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : r","lastModifiedDate":"2024-02-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"bachletuankhai":6,"-":70}},{"path":"docs/diagrams/LinkCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"@startuml","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"start","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":":Read one or more indexes(integers) from keyboard(user input);","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"if () then ([All indexes are valid and no duplicate])","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"  :Create a new CSV file;","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"  :Read people\u0027s information(of given indexes) from the current list;","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"  :Export(Write) those people\u0027s information to the CSV file;","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"  :Notify user of success;","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"else ([else])","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"  :Notify user of error (Invalid index);","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"endif","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"stop","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"@enduml","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"dhlee03":16}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"Class \"{abstract}\\nPerson\" as Person","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"Class Participant","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"Class Sponsor","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"Class Staff","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"Class J #FFFFFF","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"Person *--\u003e \"1\" Phone","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"Person *--\u003e \"1\" Email","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"Participant --|\u003e Person","lastModifiedDate":"2024-04-15"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"Staff --|\u003e Person","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"Sponsor --|\u003e Person","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"Staff -[hidden]left--\u003e Sponsor","lastModifiedDate":"2024-04-15"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"Sponsor -[hidden]left--\u003e Participant","lastModifiedDate":"2024-04-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"Phone -[hidden]right-\u003e Email","lastModifiedDate":"2024-04-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"dhlee03":3,"bachletuankhai":16,"-":44}},{"path":"docs/diagrams/UndoRedoAddCommandObjectDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"@startuml","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"!include style.puml","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"class Delete as \"\u003cu\u003ed5:DeleteCommand\u003c/u\u003e\"","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"class Manager as \"\u003cu\u003emng:CommandHistoryManager\u003c/u\u003e\"","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"class History as \"\u003cu\u003ehistory:Deque\u003cReversibleCommand\u003e\u003c/u\u003e\"","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"class Future as \"\u003cu\u003efuture:Deque\u003cReversibleCommand\u003e\u003c/u\u003e\"","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"class Model as \"\u003cu\u003e:Model\u003c/u\u003e\"","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"Model --\u003e Manager","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"Manager --\u003e History","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"Manager --\u003e Future","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"History -[hidden]right-\u003e Future","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"History --\u003e Delete","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"@enduml","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"bachletuankhai":21}},{"path":"docs/diagrams/UndoRedoAddCommandObjectDiagram2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"@startuml","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"!include style.puml","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"class Delete as \"\u003cu\u003ed5:DeleteCommand\u003c/u\u003e\"","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"class Manager as \"\u003cu\u003emng:CommandHistoryManager\u003c/u\u003e\"","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"class History as \"\u003cu\u003ehistory:Deque\u003cReversibleCommand\u003e\u003c/u\u003e\"","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"class Future as \"\u003cu\u003efuture:Deque\u003cReversibleCommand\u003e\u003c/u\u003e\"","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"class Model as \"\u003cu\u003e:Model\u003c/u\u003e\"","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"class Add as \"\u003cu\u003eaddDavid:AddCommand\u003c/u\u003e\"","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"Model --\u003e Manager","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"Manager --\u003e History","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"Manager --\u003e Future","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"History -[hidden]right-\u003e Future","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"History --\u003e Delete","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"History --\u003e Add","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"@enduml","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"bachletuankhai":22}},{"path":"docs/diagrams/UndoRedoAddCommandObjectDiagram3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"@startuml","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"!include style.puml","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"class Delete as \"\u003cu\u003ed5:DeleteCommand\u003c/u\u003e\"","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"class Manager as \"\u003cu\u003emng:CommandHistoryManager\u003c/u\u003e\"","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"class History as \"\u003cu\u003ehistory:Deque\u003cReversibleCommand\u003e\u003c/u\u003e\"","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"class Future as \"\u003cu\u003efuture:Deque\u003cReversibleCommand\u003e\u003c/u\u003e\"","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"class Model as \"\u003cu\u003e:Model\u003c/u\u003e\"","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"class Delete2 as \"\u003cu\u003ed1:DeleteCommand\u003c/u\u003e\"","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"Model --\u003e Manager","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"Manager --\u003e History","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"Manager --\u003e Future","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"History -[hidden]right-\u003e Future","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"History --\u003e Delete","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"History --\u003e Delete2","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"@enduml","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"bachletuankhai":22}},{"path":"docs/diagrams/UndoRedoUndoCommandObjectDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"@startuml","lastModifiedDate":"2024-04-15"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"!include style.puml","lastModifiedDate":"2024-04-15"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2024-04-15"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2024-04-15"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"skinparam ClassBackgroundColor #FFFFAA","lastModifiedDate":"2024-04-15"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"class Delete as \"\u003cu\u003ed5:DeleteCommand\u003c/u\u003e\"","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"class Manager as \"\u003cu\u003emng:CommandHistoryManager\u003c/u\u003e\"","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"class History as \"\u003cu\u003ehistory:Deque\u003cReversibleCommand\u003e\u003c/u\u003e\"","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"class Future as \"\u003cu\u003efuture:Deque\u003cReversibleCommand\u003e\u003c/u\u003e\"","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"class Model as \"\u003cu\u003e:Model\u003c/u\u003e\"","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"class Add as \"\u003cu\u003eaddDavid:AddCommand\u003c/u\u003e\"","lastModifiedDate":"2024-04-15"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"Model --\u003e Manager","lastModifiedDate":"2024-04-15"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"Manager --\u003e History","lastModifiedDate":"2024-04-15"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"Manager --\u003e Future","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"History -[hidden]right-\u003e Future","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"History --\u003e Delete","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"Future --\u003e Add","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"@enduml","lastModifiedDate":"2024-04-15"}],"authorContributionMap":{"bachletuankhai":22}},{"path":"docs/diagrams/UndoSequenceDiagram-Model.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2024-02-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2024-02-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-02-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-02-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"end box","lastModifiedDate":"2024-04-15"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-04-15"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"participant \":CommandHistoryManager\" as HistoryManager LOGIC_COLOR","lastModifiedDate":"2024-04-15"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"participant \"c:ReversibleCommand\" as Command LOGIC_COLOR","lastModifiedDate":"2024-04-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2024-02-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e Model : undoAddressBook()","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2024-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"Model -\u003e HistoryManager : getCommandToUndo()","lastModifiedDate":"2024-04-15"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"activate HistoryManager","lastModifiedDate":"2024-04-15"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"HistoryManager --\u003e Model : c","lastModifiedDate":"2024-04-15"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"deactivate HistoryManager","lastModifiedDate":"2024-04-15"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"Model --\u003e Command : undo()","lastModifiedDate":"2024-04-15"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"activate Command","lastModifiedDate":"2024-04-15"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-15"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"Command --\u003e Model","lastModifiedDate":"2024-04-15"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"deactivate Command","lastModifiedDate":"2024-04-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"[\u003c-- Model","lastModifiedDate":"2024-02-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2024-02-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2024-02-09"}],"authorContributionMap":{"bachletuankhai":16,"-":17}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"title: HackLink","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-F12-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-F12-4/tp/actions)","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-F12-4/tp/graph/badge.svg?token\u003dGBDKPFRKM5)](https://codecov.io/gh/AY2324S2-CS2103T-F12-4/tp)","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"HackLink is a Hackathon Participant Management Application, designed to help organizers efficiently manage participant information for hackathons through commands. With features such as finding, sorting, adding, and deleting participants, you can streamline the process of organizing and coordinating your hackathon event.","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"- If you are interested in using HackLink, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"- If you are interested about developing HackLink, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"- Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"- This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"bachletuankhai":8,"-":11}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"import seedu.address.storage.EventBookStorage;","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"import seedu.address.storage.JsonEventBookStorage;","lastModifiedDate":"2024-04-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-04-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2024-04-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"    public static final Version VERSION \u003d new Version(1, 4, 0, true);","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing HackLink ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-04-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"        EventBookStorage eventBookStorage \u003d new JsonEventBookStorage(userPrefs.getEventBookFilePath());","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"        storage \u003d new StorageManager(addressBookStorage, eventBookStorage, userPrefsStorage);","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"bachletuankhai"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address","lastModifiedDate":"2024-04-11"},{"lineNumber":77,"author":{"gitId":"bachletuankhai"},"content":"     * book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":78,"author":{"gitId":"bachletuankhai"},"content":"     * The data from the sample address book will be used instead if","lastModifiedDate":"2024-04-11"},{"lineNumber":79,"author":{"gitId":"bachletuankhai"},"content":"     * {@code storage}\u0027s address book is not found, or an empty address book will be","lastModifiedDate":"2024-04-11"},{"lineNumber":80,"author":{"gitId":"bachletuankhai"},"content":"     * used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2024-04-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":96,"author":{"gitId":"bachletuankhai"},"content":"                    + \" Will be starting with an empty data file.\");","lastModifiedDate":"2024-04-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"meenulekha"},"content":"        // read only event book","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"meenulekha"},"content":"        logger.info(\"Using data file : \" + storage.getEventBookFilePath());","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"meenulekha"},"content":"        Optional\u003cReadOnlyEventBook\u003e eventBookOptional;","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"meenulekha"},"content":"        ReadOnlyEventBook initialDataTwo;","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"meenulekha"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"meenulekha"},"content":"            eventBookOptional \u003d storage.readEventBook();","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"meenulekha"},"content":"            if (!eventBookOptional.isPresent()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"meenulekha"},"content":"                logger.info(\"Creating a new data file \" + storage.getEventBookFilePath()","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"meenulekha"},"content":"                        + \" populated with a sample EventBook.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"meenulekha"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"meenulekha"},"content":"            initialDataTwo \u003d eventBookOptional.orElseGet(SampleDataUtil::getSampleEventBook);","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"meenulekha"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"meenulekha"},"content":"            logger.warning(\"Data file at \" + storage.getEventBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"meenulekha"},"content":"                    + \" Will be starting with an empty EventBook.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"meenulekha"},"content":"            initialDataTwo \u003d new EventBook();","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"meenulekha"},"content":"        return new ModelManager(initialData, initialDataTwo, userPrefs);","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"bachletuankhai"},"content":"        // Update config file in case it was missing to begin with or there are","lastModifiedDate":"2024-04-11"},{"lineNumber":155,"author":{"gitId":"bachletuankhai"},"content":"        // new/unused fields","lastModifiedDate":"2024-04-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":165,"author":{"gitId":"bachletuankhai"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs","lastModifiedDate":"2024-04-11"},{"lineNumber":166,"author":{"gitId":"bachletuankhai"},"content":"     * file path, or a new {@code UserPrefs} with default configuration if errors","lastModifiedDate":"2024-04-11"},{"lineNumber":167,"author":{"gitId":"bachletuankhai"},"content":"     * occur when reading from the file.","lastModifiedDate":"2024-04-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":181,"author":{"gitId":"bachletuankhai"},"content":"            logger.warning(","lastModifiedDate":"2024-04-11"},{"lineNumber":182,"author":{"gitId":"bachletuankhai"},"content":"                    \"Preference file at \" + prefsFilePath + \" could not be loaded.\" + \" Using default preferences.\");","lastModifiedDate":"2024-04-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"bachletuankhai"},"content":"        // Update prefs file in case it was missing to begin with or there are","lastModifiedDate":"2024-04-11"},{"lineNumber":187,"author":{"gitId":"bachletuankhai"},"content":"        // new/unused fields","lastModifiedDate":"2024-04-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"bachletuankhai"},"content":"        logger.info(\"Starting HackLink \" + MainApp.VERSION);","lastModifiedDate":"2024-04-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"bachletuankhai"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping HackLink ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-04-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dhlee03":1,"meenulekha":24,"bachletuankhai":18,"-":169}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-05-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-05-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":" * These loggers have been configured to output messages to the console and a","lastModifiedDate":"2024-04-11"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":" * {@code .log} file by default, at the {@code INFO} level. A new {@code .log}","lastModifiedDate":"2024-04-11"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":" * file with a new numbering will be created after the log file reaches 5MB big,","lastModifiedDate":"2024-04-11"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":" * up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2024-04-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"    private static final String LOG_FILE \u003d \"hacklink.log\";","lastModifiedDate":"2024-04-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger; // logger for this class","lastModifiedDate":"2023-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static Logger baseLogger; // to be used as the parent of all other loggers created by this class.","lastModifiedDate":"2023-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    // This static block ensures essential loggers are created early","lastModifiedDate":"2023-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        setBaseLogger();","lastModifiedDate":"2023-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"     * Initializes loggers with the log level specified in the {@code config}","lastModifiedDate":"2024-04-11"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"     * object. Applies to all loggers created using {@link #getLogger(String)} and","lastModifiedDate":"2024-04-11"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"     * {@link #getLogger(Class)} methods except for those that are manually set.","lastModifiedDate":"2024-04-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"Log level will be set as: \" + currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // set the level of the baseLogger which will be inherited by other loggers","lastModifiedDate":"2023-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        baseLogger.setLevel(currentLogLevel);","lastModifiedDate":"2023-07-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"     * Creates a logger with the given name prefixed by the {@code baseLogger}\u0027s","lastModifiedDate":"2024-04-11"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"     * name so that the created logger becomes a descendant of the","lastModifiedDate":"2024-04-11"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"     * {@code baseLogger}. Furthermore, the returned logger will have the same log","lastModifiedDate":"2024-04-11"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"     * handlers as the {@code baseLogger}.","lastModifiedDate":"2024-04-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"        // Java organizes loggers into a hierarchy based on their names (using \u0027.\u0027 as a","lastModifiedDate":"2024-04-11"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"        // separator, similar to how Java","lastModifiedDate":"2024-04-11"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"        // packages form a hierarchy). Furthermore, loggers without a level inherit the","lastModifiedDate":"2024-04-11"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"        // level of their parent logger.","lastModifiedDate":"2024-04-11"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"        // By prefixing names of all loggers with baseLogger\u0027s name + \".\", we make the","lastModifiedDate":"2024-04-11"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"        // baseLogger the parent of all","lastModifiedDate":"2024-04-11"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"        // loggers. This allows us to change the level of all loggers simply by changing","lastModifiedDate":"2024-04-11"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"        // the baseLogger level.","lastModifiedDate":"2024-04-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(baseLogger.getName() + \".\" + name);","lastModifiedDate":"2023-07-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(true);","lastModifiedDate":"2023-07-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return logger;","lastModifiedDate":"2023-07-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(clazz);","lastModifiedDate":"2023-05-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Removes all handlers from the {@code logger}.","lastModifiedDate":"2023-07-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"bachletuankhai"},"content":"        Arrays.stream(logger.getHandlers()).forEach(logger::removeHandler);","lastModifiedDate":"2024-04-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"bachletuankhai"},"content":"     * Creates a logger named \u0027ab3\u0027, containing a {@code ConsoleHandler} and a","lastModifiedDate":"2024-04-11"},{"lineNumber":85,"author":{"gitId":"bachletuankhai"},"content":"     * {@code FileHandler}. Sets it as the {@code baseLogger}, to be used as the","lastModifiedDate":"2024-04-11"},{"lineNumber":86,"author":{"gitId":"bachletuankhai"},"content":"     * parent logger of all other loggers.","lastModifiedDate":"2024-04-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private static void setBaseLogger() {","lastModifiedDate":"2023-07-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        baseLogger \u003d Logger.getLogger(\"ab3\");","lastModifiedDate":"2023-07-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        baseLogger.setUseParentHandlers(false);","lastModifiedDate":"2023-07-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        removeHandlers(baseLogger);","lastModifiedDate":"2023-07-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":93,"author":{"gitId":"bachletuankhai"},"content":"        // Level.ALL is used as the level for the handlers because the baseLogger","lastModifiedDate":"2024-04-11"},{"lineNumber":94,"author":{"gitId":"bachletuankhai"},"content":"        // filters the log messages by level","lastModifiedDate":"2024-04-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // already; there is no need to control log message level of the handlers.","lastModifiedDate":"2023-07-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // add a ConsoleHandler to log to the console","lastModifiedDate":"2023-07-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2023-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        baseLogger.addHandler(consoleHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // add a FileHandler to log to a file","lastModifiedDate":"2023-07-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2023-07-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2023-07-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            fileHandler.setLevel(Level.ALL);","lastModifiedDate":"2023-07-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            baseLogger.addHandler(fileHandler);","lastModifiedDate":"2023-07-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bachletuankhai":26,"-":87}},{"path":"src/main/java/seedu/address/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"dhlee03"},"content":"     * Creates a csv file with header for the given path if it does not exist.","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"dhlee03"},"content":"     * @param file The path to the file. Cannot be null.","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"dhlee03"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"dhlee03"},"content":"    public static void createCsvFile(Path file, String header) throws IOException {","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"dhlee03"},"content":"        createFile(file);","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"dhlee03"},"content":"        writeToFile(file, header);","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"dhlee03"},"content":"     * Appends given string to a file.","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"dhlee03"},"content":"    public static void appendToFile(Path filePath, String csvString) throws IOException {","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"dhlee03"},"content":"        Files.write(filePath, csvString.getBytes(), java.nio.file.StandardOpenOption.APPEND);","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dhlee03":19,"-":83}},{"path":"src/main/java/seedu/address/commons/util/QueueUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":" * Represents a queue that allows random access to its elements.","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":" *","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":" * @param \u003cE\u003e the type of elements in the queue","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"public class QueueUtil\u003cE\u003e implements RandomAccessQueue\u003cE\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"    private final int capacity;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"    private final E[] elements;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"    private int head;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"    private int tail;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"    private int size;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"     * Current traversal index. By default, it is at the tail of the queue.","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"    private int cur;","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"     * Constructs a {@code QueueUtil} with the given capacity.","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"    public QueueUtil(int capacity) {","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"        this.capacity \u003d capacity;","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"        E[] temp \u003d (E[]) new Object[capacity];","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"        this.elements \u003d temp;","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"        this.head \u003d 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"        this.tail \u003d 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"        this.size \u003d 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"        this.cur \u003d 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"    public void addLast(E e) {","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"        if (size \u003d\u003d capacity) {","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"            head \u003d (head + 1) % capacity;","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"        } else {","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"            size++;","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"        elements[tail] \u003d e;","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"        tail \u003d (tail + 1) % capacity;","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"        cur \u003d tail;","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"    public E pollFirst() {","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"            return null;","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"        E result \u003d elements[head];","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"        head \u003d (head + 1) % capacity;","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"        size--;","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"        return result;","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"    public E get(int index) {","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"        if (index \u003c 0 || index \u003e\u003d size) {","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"            throw new IndexOutOfBoundsException(\"Index: \" + index + \", Size: \" + size);","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"        return elements[(head + index) % capacity];","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"    public int size() {","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"        return size;","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"    public E traverseUp() {","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"bachletuankhai"},"content":"        if (cur \u003d\u003d head) {","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"bachletuankhai"},"content":"            return null;","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"bachletuankhai"},"content":"        cur \u003d (cur - 1 + capacity) % capacity;","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"bachletuankhai"},"content":"        return elements[cur];","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"bachletuankhai"},"content":"    public E traverseDown() {","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"bachletuankhai"},"content":"        if (cur \u003d\u003d tail) {","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"bachletuankhai"},"content":"            return null;","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"bachletuankhai"},"content":"        cur \u003d (cur + 1) % capacity;","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"bachletuankhai"},"content":"        return elements[cur];","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"bachletuankhai"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"bachletuankhai"},"content":"        return size \u003d\u003d 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"bachletuankhai":92}},{"path":"src/main/java/seedu/address/commons/util/RandomAccessQueue.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":" * Represents a queue that allows random access to its elements.","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":" *","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":" * @param \u003cE\u003e the type of elements in the queue","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"public interface RandomAccessQueue\u003cE\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"     * Adds the specified element to the tail of the queue. If the queue is full,","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"     * the oldest element will be removed from the head of the queue. Behavior is","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"     * undefined if the queue has maximum capacity of 0.","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"     * @param e the element to add","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    public void addLast(E e);","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"     * Retrieves and removes the head of this queue, or returns null if this queue","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"     * is empty.","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"     * @return the first element in the queue, or null if the queue is empty","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"    public E pollFirst();","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"     * Returns the element at the specified index in the queue. The element at index","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"     * 0 is the head of the queue, the element at index 1 is the next element in the","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"     * queue, and so on.","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"     * @param index the index of the element to return","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"     * @return the element at the specified index","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"    public E get(int index);","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"     * Returns the number of elements in the queue.","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"     * @return the number of elements in the queue","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"    public int size();","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"     * Traverses one step up towards the head to the next element in the queue and","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"     * returns it. If the head of the queue is reached, returns null.","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"     * @return the next element in the queue, or null if the head of the queue is","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"     *         reached","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"    public E traverseUp();","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"     * Traverses one step down towards the tail to the next element in the queue and","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"     * returns it. If the tail of the queue is reached, returns null.","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"     * @return the next element in the queue, or null if the tail of the queue is","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"     *         reached","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"    public E traverseDown();","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"     * Returns whether the queue is empty.","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"     * @return true if the queue is empty, false otherwise","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"    public boolean isEmpty();","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"bachletuankhai":68}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.commands.EventCommandResult;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.inputhistory.UserInputHistory;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"    EventCommandResult executeEvent(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"     * Returns the user input history.","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"    UserInputHistory\u003cString\u003e getUserInputHistory();","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"     * Returns the EventBook.","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"     * @see seedu.address.model.Model#getEventBook()","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"    ReadOnlyEventBook getEventBook();","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"meenulekha"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"meenulekha"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"meenulekha"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"meenulekha"},"content":"    Path getEventBookFilePath();","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"meenulekha":24,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.commands.EventCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.commands.EventCommandResult;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.inputhistory.UserInputHistory;","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.inputhistory.UserInputHistoryManager;","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.parser.EventBookParser;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"    private final EventBookParser eventBookParser;","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"    private final UserInputHistory\u003cString\u003e userInputHistory;","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"        eventBookParser \u003d new EventBookParser();","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"        userInputHistory \u003d new UserInputHistoryManager();","lastModifiedDate":"2024-04-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"meenulekha"},"content":"    public EventCommandResult executeEvent(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"meenulekha"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"meenulekha"},"content":"        EventCommandResult eventCommandResult;","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"meenulekha"},"content":"        EventCommand command \u003d eventBookParser.parseCommand(commandText);","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"meenulekha"},"content":"        eventCommandResult \u003d command.execute(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"meenulekha"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"meenulekha"},"content":"            storage.saveEventBook(model.getEventBook());","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"meenulekha"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"meenulekha"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"meenulekha"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"meenulekha"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"meenulekha"},"content":"        return eventCommandResult;","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"meenulekha"},"content":"    public Path getEventBookFilePath() {","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"meenulekha"},"content":"        return model.getEventBookFilePath();","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"meenulekha"},"content":"    public ReadOnlyEventBook getEventBook() {","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"meenulekha"},"content":"        return model.getEventBook();","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"meenulekha"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"meenulekha"},"content":"        return model.getFilteredEventList();","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":132,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-04"},{"lineNumber":133,"author":{"gitId":"meenulekha"},"content":"    public UserInputHistory\u003cString\u003e getUserInputHistory() {","lastModifiedDate":"2024-04-04"},{"lineNumber":134,"author":{"gitId":"meenulekha"},"content":"        return userInputHistory;","lastModifiedDate":"2024-04-04"},{"lineNumber":135,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"meenulekha":48,"-":88}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"    public static final String MESSAGE_INVALID_EVENT_DISPLAYED_INDEX \u003d \"The event index provided in invalid\";","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"    public static final String MESSAGE_EVENTS_LISTED_OVERVIEW \u003d \"%1$d events listed!\";","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"    public static final String MESSAGE_DUPLICATE_INDEX \u003d \"Duplicate index detected\";","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"    public static final String MESSAGE_IO_ERROR \u003d \"An error occurred while writing to the file\";","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"                .append(\"; Category: \")","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"                .append(person.getCategory());","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"     * Formats the {@code Event} for display to the user.","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"     * @param toAdd The event to be formatted.","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"     * @return A string representation of the event, including its name and category.","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"    public static String formatEvent(Event toAdd) {","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"        builder.append(\"eventName\u003d\")","lastModifiedDate":"2024-04-12"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"                .append(toAdd.getEventName())","lastModifiedDate":"2024-04-12"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"                .append(\", eventDate\u003d\")","lastModifiedDate":"2024-04-12"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"                .append(toAdd.getEventDate())","lastModifiedDate":"2024-04-11"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"                .append(\", eventCategory\u003d\")","lastModifiedDate":"2024-04-12"},{"lineNumber":67,"author":{"gitId":"meenulekha"},"content":"                .append(toAdd.getEventCategory());","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dhlee03":4,"meenulekha":17,"-":50}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"julia-cp"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.exceptions.UndoException;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Group;","lastModifiedDate":"2024-04-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Sponsor;","lastModifiedDate":"2024-04-10"},{"lineNumber":20,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.exceptions.GroupSponsorException;","lastModifiedDate":"2024-04-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"public class AddCommand extends Command implements ReversibleCommand {","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the contact list. \\n\"","lastModifiedDate":"2024-04-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"            + PREFIX_CATEGORY + \"CATEGORY \"","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"            + \"[\" + PREFIX_GROUP + \"GROUP]\\n\"","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"            + PREFIX_CATEGORY + \"participant \"","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"            + PREFIX_GROUP + \"3 \";","lastModifiedDate":"2024-04-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MESSAGE_SUCCESS_UNDO \u003d \"Person deleted: %1$s\";","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MESSAGE_UNDO_NONEXISTENT_PERSON \u003d \"Undo failed:\"","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"            + \"Person does not exist in the contact list\";","lastModifiedDate":"2024-04-11"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the contact list\";","lastModifiedDate":"2024-04-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"julia-cp"},"content":"    private final Optional\u003cGroup\u003e group;","lastModifiedDate":"2024-04-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"julia-cp"},"content":"        group \u003d Optional.empty();","lastModifiedDate":"2024-04-10"},{"lineNumber":58,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":59,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":60,"author":{"gitId":"julia-cp"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"     * Creates an AddCommand to add the specified {@code Person} with specified {@code group}","lastModifiedDate":"2024-04-12"},{"lineNumber":62,"author":{"gitId":"julia-cp"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":63,"author":{"gitId":"julia-cp"},"content":"    public AddCommand(Person person, Group group) {","lastModifiedDate":"2024-04-10"},{"lineNumber":64,"author":{"gitId":"julia-cp"},"content":"        requireNonNull(person);","lastModifiedDate":"2024-04-10"},{"lineNumber":65,"author":{"gitId":"julia-cp"},"content":"        toAdd \u003d person;","lastModifiedDate":"2024-04-10"},{"lineNumber":66,"author":{"gitId":"julia-cp"},"content":"        this.group \u003d Optional.ofNullable(group);","lastModifiedDate":"2024-04-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"julia-cp"},"content":"        if (group.isPresent()) {","lastModifiedDate":"2024-04-10"},{"lineNumber":78,"author":{"gitId":"julia-cp"},"content":"            try {","lastModifiedDate":"2024-04-10"},{"lineNumber":79,"author":{"gitId":"julia-cp"},"content":"                toAdd.setGroup(group.get());","lastModifiedDate":"2024-04-10"},{"lineNumber":80,"author":{"gitId":"julia-cp"},"content":"            } catch (GroupSponsorException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":81,"author":{"gitId":"julia-cp"},"content":"                throw new CommandException(e.getMessage());","lastModifiedDate":"2024-04-10"},{"lineNumber":82,"author":{"gitId":"julia-cp"},"content":"            }","lastModifiedDate":"2024-04-10"},{"lineNumber":83,"author":{"gitId":"julia-cp"},"content":"        } else if (!(toAdd instanceof Sponsor)) {","lastModifiedDate":"2024-04-10"},{"lineNumber":84,"author":{"gitId":"julia-cp"},"content":"            toAdd.setGroupNumber(0);","lastModifiedDate":"2024-04-10"},{"lineNumber":85,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":86,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"bachletuankhai"},"content":"        model.addCommand(this);","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"bachletuankhai"},"content":"    public CommandResult undo(Model model) throws UndoException {","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"bachletuankhai"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"bachletuankhai"},"content":"        if (!model.hasPerson(toAdd)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"bachletuankhai"},"content":"            throw new UndoException(MESSAGE_UNDO_NONEXISTENT_PERSON);","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"bachletuankhai"},"content":"        model.deletePerson(toAdd);","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"bachletuankhai"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS_UNDO, Messages.format(toAdd)));","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"bachletuankhai"},"content":"    public CommandResult redo(Model model) throws UndoException, CommandException {","lastModifiedDate":"2024-03-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"bachletuankhai"},"content":"        return new ToStringBuilder(this).add(\"toAdd\", toAdd).toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dhlee03":1,"julia-cp":25,"bachletuankhai":27,"-":75}},{"path":"src/main/java/seedu/address/logic/commands/AddEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENTCATEGORY;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENTDATE;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENTNAME;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.commands.exceptions.UndoException;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":" * Adds an event to the event book.","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"public class AddEventCommand extends EventCommand implements ReversibleCommand {","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"    public static final String COMMAND_WORD \u003d \"addevent\";","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an event to the address book. \"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"            + PREFIX_EVENTNAME + \"EVENT_NAME \"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"            + PREFIX_EVENTDATE + \"EVENT_DATE \"","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"            + PREFIX_EVENTCATEGORY + \"EVENT_CATEGORY\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"            + PREFIX_EVENTNAME + \"Meeting \" + PREFIX_EVENTDATE + \"10-10-2024 \" + PREFIX_EVENTCATEGORY + \"staff\";","lastModifiedDate":"2024-04-11"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in the address book\";","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New event added: %1$s\";","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"    public static final String MESSAGE_SUCCESS_UNDO \u003d \"event deleted: %1$s\";","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"    public static final String MESSAGE_UNDO_NONEXISTENT_EVENT \u003d \"Undo failed:\"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"            + \"Person does not exist in the address book\";","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"    private final Event toAdd;","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"     * Creates an AddEventCommand to add the specified {@code event}","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"    public AddEventCommand(Event event) {","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(event);","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"        toAdd \u003d event;","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"    public EventCommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"        if (model.hasEvent(toAdd)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"        model.addEvent(toAdd);","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"        model.addCommand(this);","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"        //String formattedMessage \u003d String.format(MESSAGE_SUCCESS, toAdd.getEventName(), toAdd.getEventDate(),","lastModifiedDate":"2024-04-12"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"        //      toAdd.getEventCategory());","lastModifiedDate":"2024-04-12"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"        return new EventCommandResult(String.format(MESSAGE_SUCCESS, Messages.formatEvent(toAdd)));","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"        //return new EventCommandResult(formattedMessage);","lastModifiedDate":"2024-04-12"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"    public CommandResult undo(Model model) throws UndoException {","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"        if (!model.hasEvent(toAdd)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"            throw new UndoException(MESSAGE_UNDO_NONEXISTENT_EVENT);","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"meenulekha"},"content":"        model.deleteEvent(toAdd);","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"meenulekha"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS_UNDO, Messages.formatEvent(toAdd)));","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"meenulekha"},"content":"    public CommandResult redo(Model model) throws UndoException, CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-12"},{"lineNumber":75,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":76,"author":{"gitId":"meenulekha"},"content":"        if (model.hasEvent(toAdd)) {","lastModifiedDate":"2024-04-12"},{"lineNumber":77,"author":{"gitId":"meenulekha"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2024-04-12"},{"lineNumber":78,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":79,"author":{"gitId":"meenulekha"},"content":"        model.addEvent(toAdd);","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"meenulekha"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.formatEvent(toAdd)));","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"meenulekha"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"meenulekha"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"meenulekha"},"content":"            return true;","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"meenulekha"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"meenulekha"},"content":"        if (!(other instanceof AddEventCommand)) {","lastModifiedDate":"2024-04-12"},{"lineNumber":91,"author":{"gitId":"meenulekha"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"meenulekha"},"content":"        AddEventCommand otherAddCommand \u003d (AddEventCommand) other;","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"meenulekha"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"meenulekha"},"content":"    public String toString() {","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"meenulekha"},"content":"        return new ToStringBuilder(this).add(\"toAdd\", toAdd).toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":105}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Database has been cleared!\";","lastModifiedDate":"2024-04-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bachletuankhai":1,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/ClearEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":" * Clears the list of events.","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"public class ClearEventCommand extends EventCommand {","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Events have been cleared!\";","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"    public EventCommandResult execute(Model model) {","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"        model.setEventBook(new EventBook());","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"        return new EventCommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"meenulekha":23}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"meenulekha":1,"-":82}},{"path":"src/main/java/seedu/address/logic/commands/CommentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import java.util.List;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Category;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Group;","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.PersonFactory;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":" * Comments an existing person in the address book.","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"public class CommentCommand extends Command implements ReversibleCommand {","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"    public static final String COMMAND_WORD \u003d \"comment\";","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the comment of the person identified \"","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"            + \"Parameters: INDEX (must be a positive integer) \" + \"COMMENT\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + \"This is a comment.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"    public static final String MESSAGE_COMMENT_PERSON_SUCCESS \u003d \"Commented Person: %1$s\";","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"    public static final String MESSAGE_SUCCESS_UNDO \u003d \"Changes reverted: %1$s\";","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"    private final Index index;","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"    private final Comment editComment;","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"    private Person originalPerson;","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"    private Person editedPerson;","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"     * @param index       of the person in the filtered person list to comment","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"     * @param editComment comment to the person","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"    public CommentCommand(Index index, Comment editComment) {","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"        requireNonNull(editComment);","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"        this.editComment \u003d editComment;","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"dhlee03"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"dhlee03"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"dhlee03"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"dhlee03"},"content":"        validateIndex(index, lastShownList);","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"dhlee03"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"dhlee03"},"content":"        Person editedPerson \u003d createCommentedPerson(personToEdit, editComment);","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"dhlee03"},"content":"        updateModelPerson(model, personToEdit, editedPerson);","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"dhlee03"},"content":"        recordEdit(model, personToEdit, editedPerson);","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"dhlee03"},"content":"        return new CommandResult(String.format(MESSAGE_COMMENT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"dhlee03"},"content":"    private void validateIndex(Index index, List\u003cPerson\u003e list) throws CommandException {","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"dhlee03"},"content":"        boolean isLargerThanListSize \u003d index.getZeroBased() \u003e\u003d list.size();","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"dhlee03"},"content":"        if (isLargerThanListSize) {","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"dhlee03"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-13"},{"lineNumber":74,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":75,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":76,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"dhlee03"},"content":"    private void updateModelPerson(Model model, Person originalPerson, Person editedPerson) {","lastModifiedDate":"2024-04-13"},{"lineNumber":78,"author":{"gitId":"dhlee03"},"content":"        model.setPerson(originalPerson, editedPerson);","lastModifiedDate":"2024-04-13"},{"lineNumber":79,"author":{"gitId":"dhlee03"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":81,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"dhlee03"},"content":"    private void recordEdit(Model model, Person originalPerson, Person editedPerson) {","lastModifiedDate":"2024-04-13"},{"lineNumber":83,"author":{"gitId":"dhlee03"},"content":"        this.originalPerson \u003d originalPerson;","lastModifiedDate":"2024-04-13"},{"lineNumber":84,"author":{"gitId":"dhlee03"},"content":"        this.editedPerson \u003d editedPerson;","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"dhlee03"},"content":"        model.addCommand(this);","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"dhlee03"},"content":"    public CommandResult undo(Model model) {","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"dhlee03"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"dhlee03"},"content":"        updateModelPerson(model, editedPerson, originalPerson);","lastModifiedDate":"2024-04-13"},{"lineNumber":92,"author":{"gitId":"dhlee03"},"content":"        return new CommandResult(String.format(CommentCommand.MESSAGE_SUCCESS_UNDO, Messages.format(originalPerson)));","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"dhlee03"},"content":"    public CommandResult redo(Model model) throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"dhlee03"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"dhlee03"},"content":"        updateModelPerson(model, originalPerson, editedPerson);","lastModifiedDate":"2024-04-13"},{"lineNumber":99,"author":{"gitId":"dhlee03"},"content":"        return new CommandResult(String.format(MESSAGE_COMMENT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"dhlee03"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"dhlee03"},"content":"    private static Person createCommentedPerson(Person personToEdit, Comment comment) {","lastModifiedDate":"2024-04-13"},{"lineNumber":106,"author":{"gitId":"dhlee03"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"dhlee03"},"content":"        Name name \u003d personToEdit.getName();","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"dhlee03"},"content":"        Phone phone \u003d personToEdit.getPhone();","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"dhlee03"},"content":"        Email email \u003d personToEdit.getEmail();","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"dhlee03"},"content":"        Category category \u003d personToEdit.getCategory();","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"dhlee03"},"content":"        Group group \u003d personToEdit.getGroup();","lastModifiedDate":"2024-04-13"},{"lineNumber":113,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"dhlee03"},"content":"        return PersonFactory.createPerson(name, phone, email, category, comment, group);","lastModifiedDate":"2024-04-14"},{"lineNumber":115,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"dhlee03"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"dhlee03"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"dhlee03"},"content":"            return true;","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"dhlee03"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"dhlee03"},"content":"        if (!(other instanceof CommentCommand)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"dhlee03"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"dhlee03"},"content":"        CommentCommand otherCommentCommand \u003d (CommentCommand) other;","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"dhlee03"},"content":"        return index.equals(otherCommentCommand.index)","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"dhlee03"},"content":"                \u0026\u0026 editComment.equals(otherCommentCommand.editComment);","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"dhlee03"},"content":"    public String toString() {","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"dhlee03"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-04-13"},{"lineNumber":136,"author":{"gitId":"dhlee03"},"content":"                .add(\"index\", index)","lastModifiedDate":"2024-04-13"},{"lineNumber":137,"author":{"gitId":"dhlee03"},"content":"                .add(\"editComment\", editComment).toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"dhlee03":139}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"public class DeleteCommand extends Command implements ReversibleCommand {","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\" + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MESSAGE_SUCCESS_UNDO \u003d \"Undo deleting: Person added: %1$s\";","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"    private Person personToDelete;","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"        this.personToDelete \u003d personToDelete;","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"        model.addCommand(this);","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"    public CommandResult undo(Model model) {","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"        model.addPerson(personToDelete);","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS_UNDO, Messages.format(personToDelete)));","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"    public CommandResult redo(Model model) {","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"bachletuankhai"},"content":"        return new ToStringBuilder(this).add(\"targetIndex\", targetIndex).toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bachletuankhai":21,"-":63}},{"path":"src/main/java/seedu/address/logic/commands/DeleteEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import java.util.List;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":" * Deletes an event identified using it\u0027s displayed index from the event book.","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"public class DeleteEventCommand extends EventCommand implements ReversibleCommand {","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"    public static final String COMMAND_WORD \u003d \"deleteevent\";","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"            + \": Deletes the event identified by the index number used in the displayed event list.\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\" + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"    public static final String MESSAGE_DELETE_EVENT_SUCCESS \u003d \"Deleted event: %1$s\";","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"    public static final String MESSAGE_SUCCESS_UNDO \u003d \"Undo deleting: event added: %1$s\";","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"    private Event eventToDelete;","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"    public DeleteEventCommand(Index targetIndex) {","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"    public EventCommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"        Event eventToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"        this.eventToDelete \u003d eventToDelete;","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"        model.deleteEvent(eventToDelete);","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"        model.addCommand(this);","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"        return new EventCommandResult(String.format(MESSAGE_DELETE_EVENT_SUCCESS, Messages.formatEvent(eventToDelete)));","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"    public CommandResult undo(Model model) {","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"        model.addEvent(eventToDelete);","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS_UNDO, Messages.formatEvent(eventToDelete)));","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"    public CommandResult redo(Model model) {","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"        model.deleteEvent(eventToDelete);","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_EVENT_SUCCESS, Messages.formatEvent(eventToDelete)));","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"            return true;","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"meenulekha"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"meenulekha"},"content":"        if (!(other instanceof DeleteEventCommand)) {","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"meenulekha"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"meenulekha"},"content":"        DeleteEventCommand otherDeleteEventCommand \u003d (DeleteEventCommand) other;","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"meenulekha"},"content":"        return targetIndex.equals(otherDeleteEventCommand.targetIndex);","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"meenulekha"},"content":"    public String toString() {","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"meenulekha"},"content":"        return new ToStringBuilder(this).add(\"targetIndex\", targetIndex).toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":81}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Category;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Group;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Participant;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.PersonFactory;","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"public class EditCommand extends Command implements ReversibleCommand {","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-04-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2024-04-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2024-04-12"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"            + \"[\" + PREFIX_GROUP + \"GROUP]\\n\"","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-04-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2024-04-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the contact list.\";","lastModifiedDate":"2024-04-11"},{"lineNumber":52,"author":{"gitId":"julia-cp"},"content":"    public static final String MESSAGE_SPONSOR_HAS_NO_GROUP \u003d \"A sponsor doesn\u0027t have a group.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MESSAGE_SUCCESS_UNDO \u003d \"Changes reverted: %1$s\";","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"    private Person originalPerson;","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"    private Person editedPerson;","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param index                of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"dhlee03"},"content":"        if (!personToEdit.isSameIdentity(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2024-04-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"bachletuankhai"},"content":"        this.originalPerson \u003d personToEdit;","lastModifiedDate":"2024-03-30"},{"lineNumber":93,"author":{"gitId":"bachletuankhai"},"content":"        this.editedPerson \u003d editedPerson;","lastModifiedDate":"2024-03-30"},{"lineNumber":94,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"bachletuankhai"},"content":"        model.addCommand(this);","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"bachletuankhai"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2024-03-30"},{"lineNumber":97,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"bachletuankhai"},"content":"    public CommandResult undo(Model model) {","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"bachletuankhai"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-30"},{"lineNumber":102,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"bachletuankhai"},"content":"        model.setPerson(editedPerson, originalPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"bachletuankhai"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"bachletuankhai"},"content":"        return new CommandResult(String.format(EditCommand.MESSAGE_SUCCESS_UNDO, Messages.format(originalPerson)));","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":109,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":110,"author":{"gitId":"bachletuankhai"},"content":"    public CommandResult redo(Model model) throws CommandException {","lastModifiedDate":"2024-03-30"},{"lineNumber":111,"author":{"gitId":"bachletuankhai"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-30"},{"lineNumber":112,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":113,"author":{"gitId":"bachletuankhai"},"content":"        model.setPerson(originalPerson, editedPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":114,"author":{"gitId":"bachletuankhai"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":120,"author":{"gitId":"bachletuankhai"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit} edited with","lastModifiedDate":"2024-04-12"},{"lineNumber":121,"author":{"gitId":"bachletuankhai"},"content":"     * {@code editPersonDescriptor}.","lastModifiedDate":"2024-04-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"julia-cp"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor)","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"julia-cp"},"content":"            throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"dhlee03"},"content":"        Category updatedCategory \u003d editPersonDescriptor.getCategory().orElse(personToEdit.getCategory());","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"julia-cp"},"content":"        Person editedPerson \u003d PersonFactory.createPerson(updatedName, updatedPhone, updatedEmail, updatedCategory);","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"julia-cp"},"content":"        if (editedPerson instanceof Staff) {","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"julia-cp"},"content":"            Staff editedStaff \u003d (Staff) editedPerson;","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"julia-cp"},"content":"            Group updatedGroup \u003d editPersonDescriptor.getGroup().orElse(new Group(editedStaff.getGroupNumber()));","lastModifiedDate":"2024-04-03"},{"lineNumber":136,"author":{"gitId":"julia-cp"},"content":"            editedStaff.setGroupNumber(updatedGroup.getGroupNumber());","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"julia-cp"},"content":"            return editedStaff;","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"julia-cp"},"content":"        } else if (editedPerson instanceof Participant) {","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"julia-cp"},"content":"            Participant editedParticipant \u003d (Participant) editedPerson;","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"bachletuankhai"},"content":"            Group updatedGroup \u003d editPersonDescriptor.getGroup()","lastModifiedDate":"2024-04-11"},{"lineNumber":141,"author":{"gitId":"bachletuankhai"},"content":"                                                     .orElse(new Group(editedParticipant.getGroupNumber()));","lastModifiedDate":"2024-04-11"},{"lineNumber":142,"author":{"gitId":"julia-cp"},"content":"            editedParticipant.setGroupNumber(updatedGroup.getGroupNumber());","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"julia-cp"},"content":"            return editedParticipant;","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"julia-cp"},"content":"        } else if (editPersonDescriptor.getGroup().isPresent()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"julia-cp"},"content":"            throw new CommandException(MESSAGE_SPONSOR_HAS_NO_GROUP);","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"julia-cp"},"content":"        return editedPerson;","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":169,"author":{"gitId":"bachletuankhai"},"content":"        return new ToStringBuilder(this).add(\"index\", index).add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2024-04-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                                        .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"bachletuankhai"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the corresponding field value","lastModifiedDate":"2024-04-12"},{"lineNumber":175,"author":{"gitId":"bachletuankhai"},"content":"     * of the person.","lastModifiedDate":"2024-04-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"dhlee03"},"content":"        private Category category;","lastModifiedDate":"2024-03-17"},{"lineNumber":182,"author":{"gitId":"julia-cp"},"content":"        private Group group;","lastModifiedDate":"2024-04-03"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"dhlee03"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2024-03-17"},{"lineNumber":185,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":188,"author":{"gitId":"bachletuankhai"},"content":"         * Copy constructor. A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":194,"author":{"gitId":"dhlee03"},"content":"            setCategory(toCopy.category);","lastModifiedDate":"2024-03-17"},{"lineNumber":195,"author":{"gitId":"julia-cp"},"content":"            setGroup(toCopy.group);","lastModifiedDate":"2024-04-03"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"julia-cp"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, category, group);","lastModifiedDate":"2024-04-03"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"dhlee03"},"content":"        public void setCategory(Category category) {","lastModifiedDate":"2024-03-17"},{"lineNumber":230,"author":{"gitId":"dhlee03"},"content":"            this.category \u003d category;","lastModifiedDate":"2024-03-17"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":233,"author":{"gitId":"dhlee03"},"content":"        public Optional\u003cCategory\u003e getCategory() {","lastModifiedDate":"2024-03-17"},{"lineNumber":234,"author":{"gitId":"dhlee03"},"content":"            return Optional.ofNullable(category);","lastModifiedDate":"2024-03-17"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":237,"author":{"gitId":"julia-cp"},"content":"        public void setGroup(Group group) {","lastModifiedDate":"2024-04-03"},{"lineNumber":238,"author":{"gitId":"julia-cp"},"content":"            this.group \u003d group;","lastModifiedDate":"2024-04-03"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":241,"author":{"gitId":"julia-cp"},"content":"        public Optional\u003cGroup\u003e getGroup() {","lastModifiedDate":"2024-04-03"},{"lineNumber":242,"author":{"gitId":"julia-cp"},"content":"            return Optional.ofNullable(group);","lastModifiedDate":"2024-04-03"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":260,"author":{"gitId":"julia-cp"},"content":"                    \u0026\u0026 Objects.equals(group, otherEditPersonDescriptor.group);","lastModifiedDate":"2024-04-03"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2024-04-14"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2024-04-14"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2024-04-13"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2024-04-13"},{"lineNumber":269,"author":{"gitId":"dhlee03"},"content":"                    .add(\"category\", category)","lastModifiedDate":"2024-04-14"},{"lineNumber":270,"author":{"gitId":"bachletuankhai"},"content":"                    .add(\"group\", group).toString();","lastModifiedDate":"2024-04-11"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"dhlee03":11,"julia-cp":32,"bachletuankhai":41,"-":189}},{"path":"src/main/java/seedu/address/logic/commands/EventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":" * Represents an event command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"public abstract class EventCommand {","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"    public abstract EventCommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":20}},{"path":"src/main/java/seedu/address/logic/commands/EventCommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import java.util.Objects;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"public class EventCommandResult {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"    private final boolean showHelp;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"    /** The application should exit. */","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"    private final boolean exit;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"    private final boolean back;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"    public EventCommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean back) {","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"        this.back \u003d back;","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"    public EventCommandResult(String feedbackToUser) {","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"        this(feedbackToUser, false, false, false);","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"        return feedbackToUser;","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"        return showHelp;","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"    public boolean isExit() {","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"        return exit;","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"    public boolean isBack() {","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"        return back;","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"            return true;","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"meenulekha"},"content":"        EventCommandResult otherEventCommandResult \u003d (EventCommandResult) other;","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"meenulekha"},"content":"        return feedbackToUser.equals(otherEventCommandResult.feedbackToUser)","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"meenulekha"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherEventCommandResult.showHelp","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"meenulekha"},"content":"                \u0026\u0026 exit \u003d\u003d otherEventCommandResult.exit","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"meenulekha"},"content":"                \u0026\u0026 back \u003d\u003d otherEventCommandResult.back;","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"meenulekha"},"content":"    public int hashCode() {","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"meenulekha"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, back);","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"meenulekha"},"content":"    public String toString() {","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"meenulekha"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"meenulekha"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"meenulekha"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"meenulekha"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"meenulekha"},"content":"                .add(\"back\", back)","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"meenulekha"},"content":"                .toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":89}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting HackLink as requested ...\";","lastModifiedDate":"2024-04-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"        return o instanceof ExitCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"bachletuankhai":5,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.person.ContactContainsKeywordsPredicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":" * Finds and lists all persons in address book whose name contains any of the","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":" * argument keywords. Keyword matching is case insensitive.","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\" + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"    private final Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"    public FindCommand(ContactContainsKeywordsPredicate predicate) {","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"        return new ToStringBuilder(this).add(\"predicate\", predicate).toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"dhlee03":1,"bachletuankhai":9,"-":48}},{"path":"src/main/java/seedu/address/logic/commands/FindEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.EventNameContainsKeywordsPredicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":" * Finds and lists all events in event book whose name contains any of the argument keywords.","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"public class FindEventCommand extends EventCommand {","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"    public static final String COMMAND_WORD \u003d \"findevent\";","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all events whose names contain any of \"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"            + \"Example: \" + COMMAND_WORD + \" meeting\";","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"    private final EventNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"    public FindEventCommand(EventNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"    public EventCommandResult execute(Model model) {","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"        model.updateFilteredEventList(predicate);","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"        return new EventCommandResult(","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"                String.format(Messages.MESSAGE_EVENTS_LISTED_OVERVIEW, model.getFilteredEventList().size()));","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"            return true;","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"        if (!(other instanceof FindEventCommand)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"        FindEventCommand otherFindEventCommand \u003d (FindEventCommand) other;","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"        return predicate.equals(otherFindEventCommand.predicate);","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"    public String toString() {","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"                .toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":55}},{"path":"src/main/java/seedu/address/logic/commands/GroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"julia-cp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"julia-cp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"julia-cp"},"content":"import java.util.List;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"julia-cp"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-11"},{"lineNumber":8,"author":{"gitId":"julia-cp"},"content":"import java.util.Random;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"julia-cp"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"julia-cp"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"julia-cp"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"julia-cp"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Group;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Sponsor;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"julia-cp"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"julia-cp"},"content":" * Changes the group of a person identified by the index number used in the displayed person list.","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"julia-cp"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"julia-cp"},"content":"public class GroupCommand extends Command implements ReversibleCommand {","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"julia-cp"},"content":"    public static final String COMMAND_WORD \u003d \"group\";","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"julia-cp"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"julia-cp"},"content":"            + \": Changes the group of a person identified by the index number used in the displayed person list.\"","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"julia-cp"},"content":"            + \"Existing values will be overwritten by the input values. \\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"julia-cp"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"julia-cp"},"content":"            + \"NEW_GROUP (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"julia-cp"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\" + \" 3\";","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"julia-cp"},"content":"    public static final String MESSAGE_GROUP_PERSON_SUCCESS \u003d \"Grouped Person: %1$s\";","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"julia-cp"},"content":"    public static final String MESSAGE_PERSON_WITHOUT_GROUP \u003d \"Sponsor doesn\u0027t have a group\";","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"julia-cp"},"content":"    public static final String MESSAGE_NO_EXISTING_GROUP \u003d","lastModifiedDate":"2024-04-11"},{"lineNumber":37,"author":{"gitId":"julia-cp"},"content":"            \"Cannot group without a group number when there is no existing group\";","lastModifiedDate":"2024-04-11"},{"lineNumber":38,"author":{"gitId":"julia-cp"},"content":"    public static final String MESSAGE_INVALID_GROUP_NUMBER \u003d \"Group number must be a positive integer.\";","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"julia-cp"},"content":"    public static final String MESSAGE_SUCCESS_UNDO \u003d \"Changes reverted: %1$s\";","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"julia-cp"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"julia-cp"},"content":"    private final Optional\u003cInteger\u003e targetGroupNumber;","lastModifiedDate":"2024-04-11"},{"lineNumber":44,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"julia-cp"},"content":"    private int originalGroupNumber;","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"julia-cp"},"content":"    private int finalGroupNumber;","lastModifiedDate":"2024-04-11"},{"lineNumber":47,"author":{"gitId":"julia-cp"},"content":"    private Person groupedPerson;","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"julia-cp"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"julia-cp"},"content":"     * Groups person with index {@code targetIndex} into random available groups.","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"julia-cp"},"content":"     * @param targetIndex of the person in the filtered person list to group.","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"julia-cp"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"julia-cp"},"content":"    public GroupCommand(Index targetIndex) {","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"julia-cp"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"julia-cp"},"content":"        this.targetGroupNumber \u003d Optional.empty();","lastModifiedDate":"2024-04-11"},{"lineNumber":56,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"julia-cp"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"julia-cp"},"content":"     * Groups person with index {@code targetIndex} into {@code targetGroupNumber}.","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"julia-cp"},"content":"     * @param targetIndex of the person in the filtered person list to group","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"julia-cp"},"content":"     * @param targetGroupNumber number to group the person into","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"julia-cp"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"julia-cp"},"content":"    public GroupCommand(Index targetIndex, int targetGroupNumber) {","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"julia-cp"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"julia-cp"},"content":"        this.targetGroupNumber \u003d Optional.of(targetGroupNumber);","lastModifiedDate":"2024-04-11"},{"lineNumber":67,"author":{"gitId":"julia-cp"},"content":"        finalGroupNumber \u003d targetGroupNumber;","lastModifiedDate":"2024-04-11"},{"lineNumber":68,"author":{"gitId":"julia-cp"},"content":"        Group.setTotalGroupNumber(Math.max(targetGroupNumber, Group.getTotalGroupNumber()));","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"julia-cp"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"julia-cp"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"julia-cp"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"julia-cp"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"julia-cp"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"julia-cp"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"julia-cp"},"content":"        if (targetGroupNumber.isPresent() \u0026\u0026 (targetGroupNumber.get() \u003c 0)) {","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"julia-cp"},"content":"            throw new CommandException(MESSAGE_INVALID_GROUP_NUMBER);","lastModifiedDate":"2024-04-14"},{"lineNumber":82,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":83,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"julia-cp"},"content":"        Person personToGroup \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"julia-cp"},"content":"        if (personToGroup instanceof Sponsor) {","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"julia-cp"},"content":"            throw new CommandException(MESSAGE_PERSON_WITHOUT_GROUP);","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":90,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":91,"author":{"gitId":"julia-cp"},"content":"        originalGroupNumber \u003d personToGroup.getGroupNumber();","lastModifiedDate":"2024-04-10"},{"lineNumber":92,"author":{"gitId":"julia-cp"},"content":"        groupedPerson \u003d personToGroup;","lastModifiedDate":"2024-04-10"},{"lineNumber":93,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":94,"author":{"gitId":"julia-cp"},"content":"        if (targetGroupNumber.isPresent()) {","lastModifiedDate":"2024-04-11"},{"lineNumber":95,"author":{"gitId":"julia-cp"},"content":"            groupedPerson.setGroupNumber(targetGroupNumber.get());","lastModifiedDate":"2024-04-11"},{"lineNumber":96,"author":{"gitId":"julia-cp"},"content":"        } else if (Group.getTotalGroupNumber() \u003c\u003d 0) {","lastModifiedDate":"2024-04-11"},{"lineNumber":97,"author":{"gitId":"julia-cp"},"content":"            throw new CommandException(MESSAGE_NO_EXISTING_GROUP);","lastModifiedDate":"2024-04-11"},{"lineNumber":98,"author":{"gitId":"julia-cp"},"content":"        } else {","lastModifiedDate":"2024-04-11"},{"lineNumber":99,"author":{"gitId":"julia-cp"},"content":"            Random random \u003d new Random();","lastModifiedDate":"2024-04-11"},{"lineNumber":100,"author":{"gitId":"julia-cp"},"content":"            finalGroupNumber \u003d random.nextInt(Group.getTotalGroupNumber()) + 1;","lastModifiedDate":"2024-04-11"},{"lineNumber":101,"author":{"gitId":"julia-cp"},"content":"            groupedPerson.setGroupNumber(finalGroupNumber);","lastModifiedDate":"2024-04-11"},{"lineNumber":102,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"julia-cp"},"content":"        model.setPerson(personToGroup, groupedPerson);","lastModifiedDate":"2024-04-11"},{"lineNumber":105,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":106,"author":{"gitId":"julia-cp"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"julia-cp"},"content":"        model.addCommand(this);","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"julia-cp"},"content":"        return new CommandResult(String.format(MESSAGE_GROUP_PERSON_SUCCESS, Messages.format(personToGroup)));","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"julia-cp"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"julia-cp"},"content":"    public CommandResult undo(Model model) {","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"julia-cp"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"julia-cp"},"content":"        model.groupPerson(groupedPerson, originalGroupNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"julia-cp"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"julia-cp"},"content":"        return new CommandResult(String.format(GroupCommand.MESSAGE_SUCCESS_UNDO, Messages.format(groupedPerson)));","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"julia-cp"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"julia-cp"},"content":"    public CommandResult redo(Model model) throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"julia-cp"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"julia-cp"},"content":"        model.groupPerson(groupedPerson, finalGroupNumber);","lastModifiedDate":"2024-04-11"},{"lineNumber":126,"author":{"gitId":"julia-cp"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"julia-cp"},"content":"        return new CommandResult(String.format(MESSAGE_GROUP_PERSON_SUCCESS, Messages.format(groupedPerson)));","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"julia-cp"},"content":"    @Override public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"julia-cp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"julia-cp"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"julia-cp"},"content":"        if (!(other instanceof GroupCommand)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"julia-cp"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"julia-cp"},"content":"        GroupCommand otherGroupCommand \u003d (GroupCommand) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"julia-cp"},"content":"        return targetIndex.equals(otherGroupCommand.targetIndex)","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"julia-cp"},"content":"                \u0026\u0026 (targetGroupNumber.equals(otherGroupCommand.targetGroupNumber));","lastModifiedDate":"2024-04-11"},{"lineNumber":143,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"julia-cp"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"julia-cp"},"content":"    public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"julia-cp"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"julia-cp"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"julia-cp"},"content":"                .add(\"targetGroup\", finalGroupNumber)","lastModifiedDate":"2024-04-11"},{"lineNumber":150,"author":{"gitId":"julia-cp"},"content":"                .toString();","lastModifiedDate":"2024-03-29"},{"lineNumber":151,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":152,"author":{"gitId":"julia-cp"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"julia-cp":152}},{"path":"src/main/java/seedu/address/logic/commands/GroupRandomCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"julia-cp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"julia-cp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"julia-cp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"julia-cp"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-02"},{"lineNumber":8,"author":{"gitId":"julia-cp"},"content":"import java.util.List;","lastModifiedDate":"2024-04-02"},{"lineNumber":9,"author":{"gitId":"julia-cp"},"content":"import java.util.Random;","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"julia-cp"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"julia-cp"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"julia-cp"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Category;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Group;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Participant;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"julia-cp"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"julia-cp"},"content":" * Sets randomly the group of every person displayed on the list.","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"julia-cp"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"julia-cp"},"content":"public class GroupRandomCommand extends Command implements ReversibleCommand {","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"julia-cp"},"content":"    public static final String COMMAND_WORD \u003d \"grouprandom\";","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"julia-cp"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"julia-cp"},"content":"            + \": Sets randomly the group of every person displayed on the list.\"","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"julia-cp"},"content":"            + \"Existing values will be overwritten by the input values. \\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"julia-cp"},"content":"            + \"Parameters: MAX_GROUP_SIZE (must be a positive integer)\\n\"","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"julia-cp"},"content":"            + \"Example: \" + COMMAND_WORD + \" 4\";","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"julia-cp"},"content":"    public static final String MESSAGE_GROUP_RANDOM_SUCCESS \u003d \"Grouped every person on the list\";","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"julia-cp"},"content":"    public static final String MESSAGE_INVALID_MAX_GROUP_SIZE \u003d \"MAX_GROUP_SIZE must be a positive integer\";","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"julia-cp"},"content":"    public static final String MESSAGE_SUCCESS_UNDO \u003d \"Changes reverted.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"julia-cp"},"content":"    private final int maxGroupSize;","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":41,"author":{"gitId":"julia-cp"},"content":"    private List\u003cInteger\u003e originalGroups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"julia-cp"},"content":"    private List\u003cInteger\u003e randomGroups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"julia-cp"},"content":"    private List\u003cPerson\u003e noSponsorList;","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"julia-cp"},"content":"    public GroupRandomCommand(int maxGroupSize) {","lastModifiedDate":"2024-04-02"},{"lineNumber":46,"author":{"gitId":"julia-cp"},"content":"        this.maxGroupSize \u003d maxGroupSize;","lastModifiedDate":"2024-04-02"},{"lineNumber":47,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":48,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":49,"author":{"gitId":"julia-cp"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":50,"author":{"gitId":"julia-cp"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-02"},{"lineNumber":51,"author":{"gitId":"julia-cp"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-02"},{"lineNumber":52,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":53,"author":{"gitId":"julia-cp"},"content":"        if (maxGroupSize \u003c 1) {","lastModifiedDate":"2024-04-02"},{"lineNumber":54,"author":{"gitId":"julia-cp"},"content":"            throw new CommandException(MESSAGE_INVALID_MAX_GROUP_SIZE);","lastModifiedDate":"2024-04-02"},{"lineNumber":55,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":56,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":57,"author":{"gitId":"julia-cp"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-04-02"},{"lineNumber":58,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":59,"author":{"gitId":"julia-cp"},"content":"        noSponsorList \u003d lastShownList.stream()","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"julia-cp"},"content":"                .filter(person -\u003e !person.getCategory().equals(new Category(\"SPONSOR\")))","lastModifiedDate":"2024-04-02"},{"lineNumber":61,"author":{"gitId":"julia-cp"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2024-04-02"},{"lineNumber":62,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":63,"author":{"gitId":"julia-cp"},"content":"        int numberOfGroup \u003d (int) Math.ceil((double) noSponsorList.size() / maxGroupSize);","lastModifiedDate":"2024-04-02"},{"lineNumber":64,"author":{"gitId":"julia-cp"},"content":"        Group.setTotalGroupNumber(Math.max(numberOfGroup, Group.getTotalGroupNumber()));","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":66,"author":{"gitId":"julia-cp"},"content":"        int[] groupSizes \u003d new int[numberOfGroup];","lastModifiedDate":"2024-04-02"},{"lineNumber":67,"author":{"gitId":"julia-cp"},"content":"        Arrays.fill(groupSizes, 0);","lastModifiedDate":"2024-04-02"},{"lineNumber":68,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":69,"author":{"gitId":"julia-cp"},"content":"        Random random \u003d new Random();","lastModifiedDate":"2024-04-02"},{"lineNumber":70,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":71,"author":{"gitId":"julia-cp"},"content":"        for (Person personToGroup : noSponsorList) {","lastModifiedDate":"2024-04-02"},{"lineNumber":72,"author":{"gitId":"julia-cp"},"content":"            int targetGroupNumber \u003d random.nextInt(numberOfGroup) + 1;","lastModifiedDate":"2024-04-02"},{"lineNumber":73,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":74,"author":{"gitId":"julia-cp"},"content":"            while (groupSizes[targetGroupNumber - 1] \u003e\u003d maxGroupSize) {","lastModifiedDate":"2024-04-02"},{"lineNumber":75,"author":{"gitId":"julia-cp"},"content":"                targetGroupNumber \u003d random.nextInt(numberOfGroup) + 1;","lastModifiedDate":"2024-04-02"},{"lineNumber":76,"author":{"gitId":"julia-cp"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":77,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":78,"author":{"gitId":"julia-cp"},"content":"            groupSizes[targetGroupNumber - 1] +\u003d 1;","lastModifiedDate":"2024-04-02"},{"lineNumber":79,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":80,"author":{"gitId":"julia-cp"},"content":"            if (personToGroup instanceof Staff) {","lastModifiedDate":"2024-04-02"},{"lineNumber":81,"author":{"gitId":"julia-cp"},"content":"                Staff staffToGroup \u003d (Staff) personToGroup;","lastModifiedDate":"2024-04-02"},{"lineNumber":82,"author":{"gitId":"julia-cp"},"content":"                originalGroups.add(staffToGroup.getGroupNumber());","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"julia-cp"},"content":"                staffToGroup.setGroupNumber(targetGroupNumber);","lastModifiedDate":"2024-04-02"},{"lineNumber":84,"author":{"gitId":"julia-cp"},"content":"                model.setPerson(personToGroup, staffToGroup);","lastModifiedDate":"2024-04-02"},{"lineNumber":85,"author":{"gitId":"julia-cp"},"content":"            } else if (personToGroup instanceof Participant) {","lastModifiedDate":"2024-04-02"},{"lineNumber":86,"author":{"gitId":"julia-cp"},"content":"                Participant participantToGroup \u003d (Participant) personToGroup;","lastModifiedDate":"2024-04-02"},{"lineNumber":87,"author":{"gitId":"julia-cp"},"content":"                originalGroups.add(participantToGroup.getGroupNumber());","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"julia-cp"},"content":"                participantToGroup.setGroupNumber(targetGroupNumber);","lastModifiedDate":"2024-04-02"},{"lineNumber":89,"author":{"gitId":"julia-cp"},"content":"                model.setPerson(personToGroup, participantToGroup);","lastModifiedDate":"2024-04-02"},{"lineNumber":90,"author":{"gitId":"julia-cp"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":91,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"julia-cp"},"content":"            randomGroups.add(targetGroupNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"julia-cp"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"julia-cp"},"content":"        model.addCommand(this);","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"julia-cp"},"content":"        return new CommandResult(String.format(MESSAGE_GROUP_RANDOM_SUCCESS));","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"julia-cp"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"julia-cp"},"content":"    public CommandResult undo(Model model) {","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"julia-cp"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"julia-cp"},"content":"        for (int i \u003d 0; i \u003c noSponsorList.size(); i++) {","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"julia-cp"},"content":"            Person groupedPerson \u003d noSponsorList.get(i);","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"julia-cp"},"content":"            int originalGroupNumber \u003d originalGroups.get(i);","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"julia-cp"},"content":"            model.groupPerson(groupedPerson, originalGroupNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"julia-cp"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"julia-cp"},"content":"        return new CommandResult(String.format(GroupRandomCommand.MESSAGE_SUCCESS_UNDO));","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"julia-cp"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"julia-cp"},"content":"    public CommandResult redo(Model model) throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"julia-cp"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"julia-cp"},"content":"        for (int i \u003d 0; i \u003c noSponsorList.size(); i++) {","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"julia-cp"},"content":"            Person groupedPerson \u003d noSponsorList.get(i);","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"julia-cp"},"content":"            int randomGroupNumber \u003d randomGroups.get(i);","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"julia-cp"},"content":"            model.groupPerson(groupedPerson, randomGroupNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"julia-cp"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-04-02"},{"lineNumber":125,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":126,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":127,"author":{"gitId":"julia-cp"},"content":"        return new CommandResult(String.format(MESSAGE_GROUP_RANDOM_SUCCESS));","lastModifiedDate":"2024-04-02"},{"lineNumber":128,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":129,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":130,"author":{"gitId":"julia-cp"},"content":"    @Override public boolean equals(Object other) {","lastModifiedDate":"2024-04-02"},{"lineNumber":131,"author":{"gitId":"julia-cp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-02"},{"lineNumber":132,"author":{"gitId":"julia-cp"},"content":"            return true;","lastModifiedDate":"2024-04-02"},{"lineNumber":133,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":134,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":135,"author":{"gitId":"julia-cp"},"content":"        if (!(other instanceof GroupRandomCommand)) {","lastModifiedDate":"2024-04-02"},{"lineNumber":136,"author":{"gitId":"julia-cp"},"content":"            return false;","lastModifiedDate":"2024-04-02"},{"lineNumber":137,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":138,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":139,"author":{"gitId":"julia-cp"},"content":"        GroupRandomCommand otherGroupCommand \u003d (GroupRandomCommand) other;","lastModifiedDate":"2024-04-02"},{"lineNumber":140,"author":{"gitId":"julia-cp"},"content":"        return maxGroupSize \u003d\u003d otherGroupCommand.maxGroupSize;","lastModifiedDate":"2024-04-02"},{"lineNumber":141,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":142,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":143,"author":{"gitId":"julia-cp"},"content":"    @Override","lastModifiedDate":"2024-04-02"},{"lineNumber":144,"author":{"gitId":"julia-cp"},"content":"    public String toString() {","lastModifiedDate":"2024-04-02"},{"lineNumber":145,"author":{"gitId":"julia-cp"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-04-02"},{"lineNumber":146,"author":{"gitId":"julia-cp"},"content":"                .add(\"maxGroupSize\", maxGroupSize)","lastModifiedDate":"2024-04-02"},{"lineNumber":147,"author":{"gitId":"julia-cp"},"content":"                .toString();","lastModifiedDate":"2024-04-02"},{"lineNumber":148,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":149,"author":{"gitId":"julia-cp"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"julia-cp":149}},{"path":"src/main/java/seedu/address/logic/commands/LinkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import java.util.List;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"import java.util.logging.Level;","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-14"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":" * Exports all selected participants to the event.","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"public class LinkCommand extends Command {","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"    public static final String COMMAND_WORD \u003d \"link\";","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Links all selected people to sponsors by \"","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"            + \"exporting into a csv file. \"","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"            + \"Parameters: one or multiple index (must be a positive integer)\\n\"","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 2 3\";","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Exported all selected people\";","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"    private static Logger logger \u003d Logger.getLogger(\"LinkCommandLogger\");","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"    private final List\u003cIndex\u003e indexes;","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"     * Creates a LinkCommand to send information of the specified {@code Person} using a csv file.","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"     * @param indexes the indexes of the selected people","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"    public LinkCommand(Index[] indexes) {","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"        requireNonNull(indexes);","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"        this.indexes \u003d Arrays.asList(indexes);","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"dhlee03"},"content":"        validateIndexes(indexes, lastShownList);","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":55,"author":{"gitId":"dhlee03"},"content":"        Path filePath \u003d Path.of(\"./selectedPeople/list.csv\");","lastModifiedDate":"2024-04-14"},{"lineNumber":56,"author":{"gitId":"dhlee03"},"content":"        createFile(filePath);","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"dhlee03"},"content":"        writeToFile(filePath, model);","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"dhlee03"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"dhlee03"},"content":"     * Validates the indexes of the selected people.","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"dhlee03"},"content":"     * @param indexes the indexes of the selected people","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"dhlee03"},"content":"     * @param persons the list of all people","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"dhlee03"},"content":"     * @throws CommandException if the indexes are invalid","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"dhlee03"},"content":"    private void validateIndexes(List\u003cIndex\u003e indexes, List\u003cPerson\u003e persons) throws CommandException {","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"dhlee03"},"content":"        for (Index index : indexes) {","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"dhlee03"},"content":"            boolean isNegative \u003d index.getZeroBased() \u003c 0;","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"dhlee03"},"content":"            boolean isOver \u003d index.getZeroBased() \u003e\u003d persons.size();","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"dhlee03"},"content":"            if (isNegative || isOver) {","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"dhlee03"},"content":"                //checks if the user input is a valid index","lastModifiedDate":"2024-04-14"},{"lineNumber":75,"author":{"gitId":"dhlee03"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"dhlee03"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":78,"author":{"gitId":"dhlee03"},"content":"        checkDuplicateIndexes(indexes);","lastModifiedDate":"2024-04-14"},{"lineNumber":79,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":82,"author":{"gitId":"dhlee03"},"content":"     * Checks if the user input has duplicate indexes.","lastModifiedDate":"2024-04-14"},{"lineNumber":83,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"dhlee03"},"content":"     * @param indexes all indexes of the selected people","lastModifiedDate":"2024-04-14"},{"lineNumber":85,"author":{"gitId":"dhlee03"},"content":"     * @throws CommandException if there are duplicate indexes.","lastModifiedDate":"2024-04-14"},{"lineNumber":86,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":87,"author":{"gitId":"dhlee03"},"content":"    private void checkDuplicateIndexes(List\u003cIndex\u003e indexes) throws CommandException {","lastModifiedDate":"2024-04-14"},{"lineNumber":88,"author":{"gitId":"dhlee03"},"content":"        for (int i \u003d 0; i \u003c indexes.size(); i++) {","lastModifiedDate":"2024-04-14"},{"lineNumber":89,"author":{"gitId":"dhlee03"},"content":"            for (int j \u003d i + 1; j \u003c indexes.size(); j++) {","lastModifiedDate":"2024-04-14"},{"lineNumber":90,"author":{"gitId":"dhlee03"},"content":"                if (indexes.get(i).equals(indexes.get(j))) {","lastModifiedDate":"2024-04-14"},{"lineNumber":91,"author":{"gitId":"dhlee03"},"content":"                    //checks if the user input has duplicate indexes","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"dhlee03"},"content":"                    throw new CommandException(Messages.MESSAGE_DUPLICATE_INDEX);","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"dhlee03"},"content":"                }","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"dhlee03"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":98,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":99,"author":{"gitId":"dhlee03"},"content":"     * Creates a empty csv file with header for the selected people.","lastModifiedDate":"2024-04-14"},{"lineNumber":100,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":101,"author":{"gitId":"dhlee03"},"content":"     * @param filePath the path of the csv file","lastModifiedDate":"2024-04-14"},{"lineNumber":102,"author":{"gitId":"dhlee03"},"content":"     * @throws CommandException if there is an error creating the file","lastModifiedDate":"2024-04-14"},{"lineNumber":103,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":104,"author":{"gitId":"dhlee03"},"content":"    private void createFile(Path filePath) throws CommandException {","lastModifiedDate":"2024-04-14"},{"lineNumber":105,"author":{"gitId":"dhlee03"},"content":"        logger.log(Level.INFO, \"Creating csv file for selected people\");","lastModifiedDate":"2024-04-14"},{"lineNumber":106,"author":{"gitId":"dhlee03"},"content":"        String header \u003d \"Name, Phone, Email, Comment\\n\";","lastModifiedDate":"2024-04-14"},{"lineNumber":107,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":108,"author":{"gitId":"dhlee03"},"content":"        try {","lastModifiedDate":"2024-04-14"},{"lineNumber":109,"author":{"gitId":"dhlee03"},"content":"            FileUtil.createCsvFile(filePath, header);","lastModifiedDate":"2024-04-14"},{"lineNumber":110,"author":{"gitId":"dhlee03"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-04-14"},{"lineNumber":111,"author":{"gitId":"dhlee03"},"content":"            logger.log(Level.WARNING, \"Error creating a csv file\");","lastModifiedDate":"2024-04-14"},{"lineNumber":112,"author":{"gitId":"dhlee03"},"content":"            throw new CommandException(Messages.MESSAGE_IO_ERROR);","lastModifiedDate":"2024-04-14"},{"lineNumber":113,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":114,"author":{"gitId":"dhlee03"},"content":"        logger.log(Level.INFO, \"Created csv file for selected people\");","lastModifiedDate":"2024-04-14"},{"lineNumber":115,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":116,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":117,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":118,"author":{"gitId":"dhlee03"},"content":"     * Writes the selected people to the csv file.","lastModifiedDate":"2024-04-14"},{"lineNumber":119,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":120,"author":{"gitId":"dhlee03"},"content":"     * @param filePath the path of the csv file","lastModifiedDate":"2024-04-14"},{"lineNumber":121,"author":{"gitId":"dhlee03"},"content":"     * @param model    the model of the hacklink","lastModifiedDate":"2024-04-14"},{"lineNumber":122,"author":{"gitId":"dhlee03"},"content":"     * @throws CommandException if there is an error writing to the file","lastModifiedDate":"2024-04-14"},{"lineNumber":123,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":124,"author":{"gitId":"dhlee03"},"content":"    private void writeToFile(Path filePath, Model model) throws CommandException {","lastModifiedDate":"2024-04-14"},{"lineNumber":125,"author":{"gitId":"dhlee03"},"content":"        logger.log(Level.INFO, \"Writing selected people to csv file\");","lastModifiedDate":"2024-04-14"},{"lineNumber":126,"author":{"gitId":"dhlee03"},"content":"        for (Index index : indexes) {","lastModifiedDate":"2024-04-14"},{"lineNumber":127,"author":{"gitId":"dhlee03"},"content":"            Person person \u003d model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2024-04-14"},{"lineNumber":128,"author":{"gitId":"dhlee03"},"content":"            try {","lastModifiedDate":"2024-04-14"},{"lineNumber":129,"author":{"gitId":"dhlee03"},"content":"                FileUtil.appendToFile(filePath, person.toCsvString());","lastModifiedDate":"2024-04-14"},{"lineNumber":130,"author":{"gitId":"dhlee03"},"content":"            } catch (IOException e) {","lastModifiedDate":"2024-04-14"},{"lineNumber":131,"author":{"gitId":"dhlee03"},"content":"                logger.log(Level.WARNING, \"Error writing to a csv file\");","lastModifiedDate":"2024-04-14"},{"lineNumber":132,"author":{"gitId":"dhlee03"},"content":"                throw new CommandException(Messages.MESSAGE_IO_ERROR);","lastModifiedDate":"2024-04-14"},{"lineNumber":133,"author":{"gitId":"dhlee03"},"content":"            }","lastModifiedDate":"2024-04-14"},{"lineNumber":134,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":135,"author":{"gitId":"dhlee03"},"content":"        logger.log(Level.INFO, \"Wrote selected people to csv file\");","lastModifiedDate":"2024-04-14"},{"lineNumber":136,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":137,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":138,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":139,"author":{"gitId":"dhlee03"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-31"},{"lineNumber":140,"author":{"gitId":"dhlee03"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-31"},{"lineNumber":141,"author":{"gitId":"dhlee03"},"content":"            return true;","lastModifiedDate":"2024-03-31"},{"lineNumber":142,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":143,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":144,"author":{"gitId":"dhlee03"},"content":"        if (!(other instanceof LinkCommand)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":145,"author":{"gitId":"dhlee03"},"content":"            return false;","lastModifiedDate":"2024-03-31"},{"lineNumber":146,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":147,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":148,"author":{"gitId":"dhlee03"},"content":"        LinkCommand otherLinkCommand \u003d (LinkCommand) other;","lastModifiedDate":"2024-03-31"},{"lineNumber":149,"author":{"gitId":"dhlee03"},"content":"        return indexes.equals(otherLinkCommand.indexes);","lastModifiedDate":"2024-04-14"},{"lineNumber":150,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":151,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":152,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":153,"author":{"gitId":"dhlee03"},"content":"    public String toString() {","lastModifiedDate":"2024-03-31"},{"lineNumber":154,"author":{"gitId":"dhlee03"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-31"},{"lineNumber":155,"author":{"gitId":"dhlee03"},"content":"                .add(\"indexes\", indexes)","lastModifiedDate":"2024-03-31"},{"lineNumber":156,"author":{"gitId":"dhlee03"},"content":"                .toString();","lastModifiedDate":"2024-03-31"},{"lineNumber":157,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":158,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"dhlee03":158}},{"path":"src/main/java/seedu/address/logic/commands/ListEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":" * Lists all events in the event book to the user.","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"public class ListEventCommand extends EventCommand {","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"    public static final String COMMAND_WORD \u003d \"listevent\";","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all events\";","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"    public EventCommandResult execute(Model model) {","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"        return new EventCommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":23}},{"path":"src/main/java/seedu/address/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.exceptions.UndoException;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":" * Redoes the most recent undone command that modifies the address book.","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-04-11"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"            + \": Redoes the most recent undone command that modifies the database.\";","lastModifiedDate":"2024-04-11"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MESSAGE_FAILURE_NO_COMMAND_TO_REDO \u003d \"There is no command to redo.\";","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    public RedoCommand() {","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"        if (!model.canRedoAddressBook()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"            throw new CommandException(MESSAGE_FAILURE_NO_COMMAND_TO_REDO);","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"        try {","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"            return model.redoAddressBook();","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"        } catch (UndoException e) {","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"        return o instanceof RedoCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"bachletuankhai":40}},{"path":"src/main/java/seedu/address/logic/commands/ReversibleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.exceptions.UndoException;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" * Represents a command that can be undone and redone. For a command to be","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":" * reversible, {@link Command#execute(Model)} must add the command to the","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":" * command history in the model.","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"public interface ReversibleCommand {","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"     * Undoes the effects of this command. The command should be added to the","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"     * command history in the model before this method is called. The command must","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"     * not be manually removed from the history in this method.","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"    public CommandResult undo(Model model) throws UndoException;","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"     * Executes the command again after undoing it. The command must not be manually","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"     * added to the history in this method.","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"    public CommandResult redo(Model model) throws UndoException, CommandException;","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"bachletuankhai":33}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.exceptions.UndoException;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":" * Undoes the most recent command that modifies the address book.","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"            + \": Undoes the most recent command that modifies the database.\\n\" + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2024-04-11"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MESSAGE_FAILURE_NO_COMMAND_TO_UNDO \u003d \"There\u0027s no command to undo.\";","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"    public UndoCommand() {","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"        if (!model.canUndoAddressBook()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"            throw new CommandException(MESSAGE_FAILURE_NO_COMMAND_TO_UNDO);","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"        try {","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"            return model.undoAddressBook();","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"        } catch (UndoException e) {","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"        return o instanceof UndoCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"bachletuankhai":40}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import java.util.List;","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":" * Views the comment of the person selected by the index number used in the displayed person list.","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Views the comment of the person selected \"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"            + \"by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"    public static final String MESSAGE_VIEW_COMMENT_SUCCESS \u003d \"Viewing comment of Person: %1$s\\n\";","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"    private final Index index;","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"     * Creates a ViewCommand to view the comment of the person at the specified {@code Index}.","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"     * @param index of the person in the filtered person list to view","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"    public ViewCommand(Index index) {","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"     * Executes the ViewCommand to view the comment of the person at the specified {@code Index}.","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"     * @return the CommandResult of the execution","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"     * @throws CommandException if the index is invalid","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"        validateIndex(index, lastShownList);","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"        Person personToView \u003d model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"        String comment \u003d personToView.getComment().toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"dhlee03"},"content":"        String result \u003d formatSuccessMessage(personToView) + comment;","lastModifiedDate":"2024-04-14"},{"lineNumber":54,"author":{"gitId":"dhlee03"},"content":"        return new CommandResult(result);","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"dhlee03"},"content":"     * Validates the index of the person to view.","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"dhlee03"},"content":"     * @param index of the person to view","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"dhlee03"},"content":"     * @param lastShownList the list of persons to view from","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"dhlee03"},"content":"     * @throws CommandException if the index is invalid","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"dhlee03"},"content":"    public void validateIndex(Index index, List\u003cPerson\u003e lastShownList) throws CommandException {","lastModifiedDate":"2024-04-14"},{"lineNumber":65,"author":{"gitId":"dhlee03"},"content":"        boolean isLargerThanListSize \u003d index.getZeroBased() \u003e\u003d lastShownList.size();","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"dhlee03"},"content":"        if (isLargerThanListSize) {","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"dhlee03"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":69,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":71,"author":{"gitId":"dhlee03"},"content":"    private String formatSuccessMessage(Person personToView) {","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"dhlee03"},"content":"        return String.format(MESSAGE_VIEW_COMMENT_SUCCESS, Messages.format(personToView));","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":74,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":75,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"dhlee03"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"dhlee03"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"dhlee03"},"content":"            return true;","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"dhlee03"},"content":"        if (!(other instanceof ViewCommand)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"dhlee03"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"dhlee03"},"content":"        ViewCommand otherViewCommand \u003d (ViewCommand) other;","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"dhlee03"},"content":"        return index.equals(otherViewCommand.index);","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"dhlee03"},"content":"    public String toString() {","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"dhlee03"},"content":"        return \"Viewing comment of Person: \" + index.getOneBased();","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"dhlee03":93}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/UndoException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":" * Represents an error which occurs during undoing a {@link Command}.","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"public class UndoException extends Exception {","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"    public UndoException(String message) {","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"        super(message);","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"bachletuankhai":10}},{"path":"src/main/java/seedu/address/logic/commands/history/CommandHistoryManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.commands.history;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import java.util.ArrayDeque;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import java.util.Deque;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.ReversibleCommand;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.exceptions.UndoException;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":" * Represents a history of reversible commands. This class is responsible for","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":" * managing the history of commands that can be undone and redone.","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"public class CommandHistoryManager implements ReversibleCommandHistory {","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"    private static final int MAX_SIZE \u003d 100;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    private final Deque\u003cReversibleCommand\u003e history;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"    private final Deque\u003cReversibleCommand\u003e future;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"     * Creates a new instance of CommandHistoryManager.","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    public CommandHistoryManager() {","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"        history \u003d new ArrayDeque\u003c\u003e(MAX_SIZE);","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"        future \u003d new ArrayDeque\u003c\u003e(MAX_SIZE);","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"    public void addCommand(ReversibleCommand command) {","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"        if (history.size() \u003d\u003d MAX_SIZE) {","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"            history.pollLast();","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"        history.addFirst(command);","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"    public ReversibleCommand getCommandToUndo() throws UndoException {","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"        if (history.isEmpty()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"            throw new UndoException(\"No command to undo\");","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"        ReversibleCommand command \u003d history.pollFirst();","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"        future.addFirst(command);","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"        return command;","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"    public ReversibleCommand getCommandToRedo() throws UndoException {","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"        if (future.isEmpty()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"            throw new UndoException(\"No command to redo\");","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"        ReversibleCommand command \u003d future.pollFirst();","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"        history.addFirst(command);","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"        return command;","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"    public boolean canUndo() {","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"        return !history.isEmpty();","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"    public boolean canRedo() {","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"        return !future.isEmpty();","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"bachletuankhai":63}},{"path":"src/main/java/seedu/address/logic/commands/history/ReversibleCommandHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.commands.history;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.ReversibleCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.exceptions.UndoException;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":" * Represents a history of reversible commands.","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"public interface ReversibleCommandHistory {","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"     * Adds a command to the history.","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"     * @param command The command to add.","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    void addCommand(ReversibleCommand command);","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"     * Returns the most recently executed reversible command in the history.","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"     * @return The most recently executed reversible command.","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"     * @throws UndoException If an error occurs during history retrieval.","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"    ReversibleCommand getCommandToUndo() throws UndoException;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"     * Returns the most recently undone command in the history.","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"     * @return The most recently undone command.","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"     * @throws UndoException If an error occurs during history retrieval.","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"    ReversibleCommand getCommandToRedo() throws UndoException;","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"     * Checks if there are commands that can be undone.","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"     * @return True if there are commands that can be undone, false otherwise.","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"    boolean canUndo();","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"     * Checks if there are commands that can be redone.","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"     * @return True if there are commands that can be redone, false otherwise.","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"    boolean canRedo();","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"bachletuankhai":46}},{"path":"src/main/java/seedu/address/logic/inputhistory/UserInputHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.inputhistory;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":" * Represents the history of user input.","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":" *","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":" * @param \u003cT\u003e The type of the user input.","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"public interface UserInputHistory\u003cT\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"     * Adds the given chat message to the chat history.","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"     * @param chatMessage The chat message to be added to the chat history.","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"    public void addChatToHistory(String chatMessage);","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"     * Returns true if there are chat messages in the chat history.","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"     * @return True if there are chat messages in the chat history, false otherwise.","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    public boolean hasHistory();","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"     * Returns the previous chat message in the chat history.","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"     * @return The previous chat message in the chat history.","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"    public T getPreviousChat();","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"     * Returns the next chat message in the chat history.","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"     * @return The next chat message in the chat history.","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"    public T getNextChat();","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"bachletuankhai":36}},{"path":"src/main/java/seedu/address/logic/inputhistory/UserInputHistoryManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.inputhistory;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.commons.util.QueueUtil;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.commons.util.RandomAccessQueue;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":" * Represents the history of user input.","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"public class UserInputHistoryManager implements UserInputHistory\u003cString\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"    private static final int MAX_HISTORY_SIZE \u003d 100;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"     * The history of user input.","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    private final RandomAccessQueue\u003cString\u003e history; // not sure if String should be used","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    public UserInputHistoryManager() {","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"        history \u003d new QueueUtil\u003c\u003e(MAX_HISTORY_SIZE);","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"    public void addChatToHistory(String chatMessage) {","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"        history.addLast(chatMessage);","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"    public boolean hasHistory() {","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"        return !history.isEmpty();","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"    int size() {","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"        return history.size();","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"    public String getPreviousChat() {","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"        return history.traverseUp();","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"    public String getNextChat() {","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"        return history.traverseDown();","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"bachletuankhai":44}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Category;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Group;","lastModifiedDate":"2024-04-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.PersonFactory;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"julia-cp"},"content":"                        PREFIX_CATEGORY, PREFIX_GROUP);","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_CATEGORY)","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"julia-cp"},"content":"                PREFIX_CATEGORY, PREFIX_GROUP);","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"        Category category \u003d ParserUtil.parseCategory(argMultimap.getValue(PREFIX_CATEGORY).get());","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"julia-cp"},"content":"        Person person \u003d PersonFactory.createPerson(name, phone, email, category);","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"julia-cp"},"content":"        Group group \u003d ParserUtil.parseGroup(argMultimap.getValue(PREFIX_GROUP).orElse(null));","lastModifiedDate":"2024-04-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"julia-cp"},"content":"        return new AddCommand(person, group);","lastModifiedDate":"2024-04-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"dhlee03":5,"julia-cp":9,"-":48}},{"path":"src/main/java/seedu/address/logic/parser/AddEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENTCATEGORY;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENTDATE;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENTNAME;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.EventCategory;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.EventFactory;","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"public class AddEventCommandParser implements EventParser\u003cAddEventCommand\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"    public AddEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_EVENTNAME,","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"                        PREFIX_EVENTDATE, PREFIX_EVENTCATEGORY);","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_EVENTNAME, PREFIX_EVENTDATE, PREFIX_EVENTCATEGORY)","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_EVENTNAME, PREFIX_EVENTDATE, PREFIX_EVENTCATEGORY);","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"        EventName name \u003d EventParserUtil.parseEventName(argMultimap.getValue(PREFIX_EVENTNAME).get());","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"        EventDate date \u003d EventParserUtil.parseEventDate(argMultimap.getValue(PREFIX_EVENTDATE).get());","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"        EventCategory category \u003d EventParserUtil.parseEventCategory(argMultimap.getValue(PREFIX_EVENTCATEGORY).get());","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"        Event event \u003d EventFactory.createEvent(name, date, category);","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"        return new AddEventCommand(event);","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":56}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.commands.CommentCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"julia-cp"},"content":"import seedu.address.logic.commands.GroupCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"julia-cp"},"content":"import seedu.address.logic.commands.GroupRandomCommand;","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.commands.LinkCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.parser.alias.AliasParser;","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"        // Note to developers: Change the log level in config.json to enable lower level","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"        // (i.e., FINE, FINER and lower)","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"        // Match alias first","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"        Command command \u003d new AliasParser().parseAlias(commandWord, arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"        if (command !\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"            return command;","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"julia-cp"},"content":"        case GroupCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"julia-cp"},"content":"            return new GroupCommandParser().parse(arguments);","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"julia-cp"},"content":"        case GroupRandomCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-02"},{"lineNumber":93,"author":{"gitId":"julia-cp"},"content":"            return new GroupRandomCommandParser().parse(arguments);","lastModifiedDate":"2024-04-02"},{"lineNumber":94,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":101,"author":{"gitId":"bachletuankhai"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"bachletuankhai"},"content":"            return new UndoCommand();","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":104,"author":{"gitId":"bachletuankhai"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"bachletuankhai"},"content":"            return new RedoCommand();","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"dhlee03"},"content":"        case LinkCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"dhlee03"},"content":"            return new LinkCommandParser().parse(arguments);","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":110,"author":{"gitId":"dhlee03"},"content":"        case CommentCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"dhlee03"},"content":"            return new CommentCommandParser().parse(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"dhlee03"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"dhlee03"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dhlee03":12,"julia-cp":8,"bachletuankhai":17,"-":85}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"    public static final Prefix PREFIX_CATEGORY \u003d new Prefix(\"c/\");","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"    public static final Prefix PREFIX_EVENTNAME \u003d new Prefix(\"en/\");","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"    public static final Prefix PREFIX_EVENTCATEGORY \u003d new Prefix(\"ec/\");","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"    public static final Prefix PREFIX_EVENTDATE \u003d new Prefix(\"ed/\");","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"julia-cp"},"content":"    public static final Prefix PREFIX_GROUP \u003d new Prefix(\"g/\");","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"dhlee03":1,"julia-cp":1,"meenulekha":3,"-":13}},{"path":"src/main/java/seedu/address/logic/parser/CommentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.commands.CommentCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":" * Parses input arguments and creates a new CommentCommand object","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"public class CommentCommandParser implements Parser\u003cCommentCommand\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"     * Parses the given {@code String} of arguments in the context of the CommentCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"     * and returns a CommentCommand object for execution.","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"    public CommentCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"        String[] splitArgs \u003d trimmedArgs.split(\"\\\\s+\", 2);","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"        if (splitArgs.length \u003c 2) {","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CommentCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"            Index index \u003d ParserUtil.parseIndex(splitArgs[0]);","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"            Comment comment \u003d ParserUtil.parseComment(splitArgs[1]);","lastModifiedDate":"2024-04-11"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"            return new CommentCommand(index, comment);","lastModifiedDate":"2024-04-11"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"            throw new ParseException(","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, CommentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"dhlee03":37}},{"path":"src/main/java/seedu/address/logic/parser/DeleteEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":" * Parses input arguments and creates a new DeleteEventCommand object","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"public class DeleteEventCommandParser {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteEventCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"     * and returns a DeleteEventCommand object for execution.","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"    public DeleteEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"            return new DeleteEventCommand(index);","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"            throw new ParseException(","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteEventCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":27}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"julia-cp"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_GROUP);","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"julia-cp"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_GROUP);","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"julia-cp"},"content":"        if (argMultimap.getValue(PREFIX_GROUP).isPresent()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"julia-cp"},"content":"            editPersonDescriptor.setGroup(ParserUtil.parseGroup(argMultimap.getValue(PREFIX_GROUP).get()));","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"julia-cp":5,"-":54}},{"path":"src/main/java/seedu/address/logic/parser/EventBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.commands.ClearEventCommand;","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.commands.EventCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.commands.FindEventCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.commands.ListEventCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":" * Parses user input.","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"public class EventBookParser {","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"     * @param userInput full user input string","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"     * @return the command based on the user input","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"    public EventCommand parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"        // Note to developers: Change the log level in config.json to enable lower level","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"        // (i.e., FINE, FINER and lower)","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"        // log messages such as the one below.","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"        switch (commandWord) {","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"        case AddEventCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"            return new AddEventCommandParser().parse(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"        case DeleteEventCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"            return new DeleteEventCommandParser().parse(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"        case FindEventCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"            return new FindEventCommandParser().parse(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"        case ListEventCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"            return new ListEventCommand();","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"        case ClearEventCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-12"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"            return new ClearEventCommand();","lastModifiedDate":"2024-04-12"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":67,"author":{"gitId":"meenulekha"},"content":"        default:","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"meenulekha"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"meenulekha"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":72}},{"path":"src/main/java/seedu/address/logic/parser/EventParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.commands.EventCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":" * Represents a Parser that is able to parse user input into a {@code EventCommand} of type {@code T}.","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"public interface EventParser\u003cT extends EventCommand\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":16}},{"path":"src/main/java/seedu/address/logic/parser/EventParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.EventCategory;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.person.Category;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":" * Contains utility methods used for parsing strings in the various *EventParser classes.","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"public class EventParserUtil {","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"     * trimmed.","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(name);","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(phone);","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"meenulekha"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"meenulekha"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"meenulekha"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"meenulekha"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(email);","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"meenulekha"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"meenulekha"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"meenulekha"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"meenulekha"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"meenulekha"},"content":"     * Parses a {@code String category} into a {@code Category}.","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"meenulekha"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"meenulekha"},"content":"     * @throws ParseException if the given {@code category} is invalid.","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"meenulekha"},"content":"    public static Category parseCategory(String category) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(category);","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"meenulekha"},"content":"        String trimmedCategory \u003d category.trim().toUpperCase();","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"meenulekha"},"content":"        if (!Category.isValidCategory(trimmedCategory)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"meenulekha"},"content":"            throw new ParseException(Category.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"meenulekha"},"content":"        return new Category(trimmedCategory);","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"meenulekha"},"content":"     * Parses a {@code String eventname} into an {@code EventName}.","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"meenulekha"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"meenulekha"},"content":"     * @param eventname A string representing the event name to be parsed.","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"meenulekha"},"content":"     * @return The parsed EventName object.","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"meenulekha"},"content":"     * @throws ParseException if the given {@code eventname} is invalid.","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"meenulekha"},"content":"    public static EventName parseEventName(String eventname) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(eventname);","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"meenulekha"},"content":"        String trimmedName \u003d eventname.trim();","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"meenulekha"},"content":"        if (!EventName.isValidName(trimmedName)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"meenulekha"},"content":"            throw new ParseException(EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"meenulekha"},"content":"        return new EventName(trimmedName);","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":114,"author":{"gitId":"meenulekha"},"content":"     * Parses a string representation of an event date into an EventDate object.","lastModifiedDate":"2024-04-04"},{"lineNumber":115,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-04-04"},{"lineNumber":116,"author":{"gitId":"meenulekha"},"content":"     * @param date A string representing the date to be parsed.","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"meenulekha"},"content":"     * @return The parsed EventDate object.","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"meenulekha"},"content":"     * @throws ParseException If the given date string is invalid or cannot be parsed.","lastModifiedDate":"2024-04-04"},{"lineNumber":119,"author":{"gitId":"meenulekha"},"content":"     *                        The error message will contain details about the parsing constraints.","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"meenulekha"},"content":"     * @throws NullPointerException If the input date string is null.","lastModifiedDate":"2024-04-04"},{"lineNumber":121,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":122,"author":{"gitId":"meenulekha"},"content":"    public static EventDate parseEventDate(String date) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(date);","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"meenulekha"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"meenulekha"},"content":"        if (!EventDate.isValidDate(trimmedDate)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"meenulekha"},"content":"            throw new ParseException(EventDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"meenulekha"},"content":"        return new EventDate((trimmedDate));","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":132,"author":{"gitId":"meenulekha"},"content":"     * Parses a string representation of an event category into an EventCategory object.","lastModifiedDate":"2024-04-04"},{"lineNumber":133,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-04-04"},{"lineNumber":134,"author":{"gitId":"meenulekha"},"content":"     * @param eventcategory A string representing the category to be parsed.","lastModifiedDate":"2024-04-04"},{"lineNumber":135,"author":{"gitId":"meenulekha"},"content":"     * @return The parsed EventCategory object.","lastModifiedDate":"2024-04-04"},{"lineNumber":136,"author":{"gitId":"meenulekha"},"content":"     * @throws ParseException If the given category string is invalid or cannot be parsed.","lastModifiedDate":"2024-04-04"},{"lineNumber":137,"author":{"gitId":"meenulekha"},"content":"     *                        The error message will contain details about the parsing constraints.","lastModifiedDate":"2024-04-04"},{"lineNumber":138,"author":{"gitId":"meenulekha"},"content":"     * @throws NullPointerException If the input category string is null.","lastModifiedDate":"2024-04-04"},{"lineNumber":139,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":140,"author":{"gitId":"meenulekha"},"content":"    public static EventCategory parseEventCategory(String eventcategory) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(eventcategory);","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"meenulekha"},"content":"        String trimmedCategory \u003d eventcategory.trim().toUpperCase();","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"meenulekha"},"content":"        if (!Category.isValidCategory(trimmedCategory)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"meenulekha"},"content":"            throw new ParseException(Category.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"meenulekha"},"content":"        return new EventCategory(trimmedCategory);","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":148}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.ContactContainsKeywordsPredicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"        return new FindCommand(new ContactContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"dhlee03":2,"-":31}},{"path":"src/main/java/seedu/address/logic/parser/FindEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.commands.FindEventCommand;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.EventNameContainsKeywordsPredicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":" * Parses input arguments and creates a new FindEventCommand object","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"public class FindEventCommandParser implements EventParser\u003cFindEventCommand\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"    public FindEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"            throw new ParseException(","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"        return new FindEventCommand(new EventNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":31}},{"path":"src/main/java/seedu/address/logic/parser/GroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"julia-cp"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"julia-cp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"julia-cp"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"julia-cp"},"content":"import seedu.address.logic.commands.GroupCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"julia-cp"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"julia-cp"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"julia-cp"},"content":" * Parses input arguments and creates a new GroupCommand object","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"julia-cp"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"julia-cp"},"content":"public class GroupCommandParser implements Parser\u003cGroupCommand\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"julia-cp"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"julia-cp"},"content":"     * Parses tje given {@code String} of arguments in the context of the GroupCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"julia-cp"},"content":"     * and returns a GroupCommand object for execution.","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"julia-cp"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"julia-cp"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"julia-cp"},"content":"    public GroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"julia-cp"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"julia-cp"},"content":"        String[] trimmedArgs \u003d args.trim().split(\"\\\\s\");","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"julia-cp"},"content":"        Index index;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"julia-cp"},"content":"        try {","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"julia-cp"},"content":"            String trimmedIndex \u003d trimmedArgs[0];","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"julia-cp"},"content":"            index \u003d ParserUtil.parseIndex(trimmedIndex);","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"julia-cp"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"julia-cp"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"julia-cp"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"julia-cp"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"julia-cp"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"julia-cp"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"julia-cp"},"content":"        if (trimmedArgs.length \u003c 2) {","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"julia-cp"},"content":"            return new GroupCommand(index);","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"julia-cp"},"content":"        } else {","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"julia-cp"},"content":"            try {","lastModifiedDate":"2024-04-02"},{"lineNumber":40,"author":{"gitId":"julia-cp"},"content":"                return new GroupCommand(index, Integer.parseInt(trimmedArgs[1]));","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"julia-cp"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":42,"author":{"gitId":"julia-cp"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2024-04-02"},{"lineNumber":43,"author":{"gitId":"julia-cp"},"content":"            }","lastModifiedDate":"2024-04-02"},{"lineNumber":44,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"julia-cp"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"julia-cp":47}},{"path":"src/main/java/seedu/address/logic/parser/GroupRandomCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"julia-cp"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-02"},{"lineNumber":2,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":3,"author":{"gitId":"julia-cp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-02"},{"lineNumber":4,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-02"},{"lineNumber":5,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":6,"author":{"gitId":"julia-cp"},"content":"import seedu.address.logic.commands.GroupRandomCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"julia-cp"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"julia-cp"},"content":"/**","lastModifiedDate":"2024-04-02"},{"lineNumber":10,"author":{"gitId":"julia-cp"},"content":" * Parses input arguments and creates a new GroupRandomCommand object","lastModifiedDate":"2024-04-02"},{"lineNumber":11,"author":{"gitId":"julia-cp"},"content":" */","lastModifiedDate":"2024-04-02"},{"lineNumber":12,"author":{"gitId":"julia-cp"},"content":"public class GroupRandomCommandParser implements Parser\u003cGroupRandomCommand\u003e {","lastModifiedDate":"2024-04-02"},{"lineNumber":13,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":14,"author":{"gitId":"julia-cp"},"content":"    /**","lastModifiedDate":"2024-04-02"},{"lineNumber":15,"author":{"gitId":"julia-cp"},"content":"     * Parses the given {@code String} of arguments in the context of the GroupRandomCommand","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"julia-cp"},"content":"     * and returns a GroupRandomCommand object for execution.","lastModifiedDate":"2024-04-02"},{"lineNumber":17,"author":{"gitId":"julia-cp"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"julia-cp"},"content":"     */","lastModifiedDate":"2024-04-02"},{"lineNumber":19,"author":{"gitId":"julia-cp"},"content":"    public GroupRandomCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-02"},{"lineNumber":20,"author":{"gitId":"julia-cp"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-04-02"},{"lineNumber":21,"author":{"gitId":"julia-cp"},"content":"        String[] trimmedArgs \u003d args.trim().split(\"\\\\s\");","lastModifiedDate":"2024-04-02"},{"lineNumber":22,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":23,"author":{"gitId":"julia-cp"},"content":"        int maxGroupSize;","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":25,"author":{"gitId":"julia-cp"},"content":"        try {","lastModifiedDate":"2024-04-02"},{"lineNumber":26,"author":{"gitId":"julia-cp"},"content":"            String trimmedMaxGroupSize \u003d trimmedArgs[0];","lastModifiedDate":"2024-04-02"},{"lineNumber":27,"author":{"gitId":"julia-cp"},"content":"            maxGroupSize \u003d Integer.parseInt(trimmedMaxGroupSize);","lastModifiedDate":"2024-04-02"},{"lineNumber":28,"author":{"gitId":"julia-cp"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":29,"author":{"gitId":"julia-cp"},"content":"            throw new ParseException(","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"julia-cp"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupRandomCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-02"},{"lineNumber":31,"author":{"gitId":"julia-cp"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-02"},{"lineNumber":32,"author":{"gitId":"julia-cp"},"content":"            throw new ParseException(","lastModifiedDate":"2024-04-02"},{"lineNumber":33,"author":{"gitId":"julia-cp"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupRandomCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2024-04-02"},{"lineNumber":34,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-02"},{"lineNumber":35,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":36,"author":{"gitId":"julia-cp"},"content":"        return new GroupRandomCommand(maxGroupSize);","lastModifiedDate":"2024-04-02"},{"lineNumber":37,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-02"},{"lineNumber":38,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-02"},{"lineNumber":39,"author":{"gitId":"julia-cp"},"content":"}","lastModifiedDate":"2024-04-02"}],"authorContributionMap":{"julia-cp":39}},{"path":"src/main/java/seedu/address/logic/parser/LinkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-14"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import java.util.List;","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.commands.LinkCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":" * Parses input arguments and creates a new LinkCommand object","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"public class LinkCommandParser implements Parser\u003cLinkCommand\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"     * Parses the given {@code String} of arguments in the context of the LinkCommand","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"     * and returns a LinkCommand object for execution.","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"    public LinkCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"        String trimmed \u003d args.trim();","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"        Boolean isEmpty \u003d trimmed.isEmpty();","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"        String validationRegex \u003d \"\\\\d+(\\\\s+\\\\d+)*\";","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"        Boolean isInvalid \u003d !trimmed.matches(validationRegex);","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"        if (isEmpty || isInvalid) {","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"            //checks if the user input is not all integers separated by spaces or empty","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, LinkCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"        Index[] indexes \u003d parseIndexes(trimmed);","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"        return new LinkCommand(indexes);","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"     * Returns an array of Indexes from the given {@code String}.","lastModifiedDate":"2024-04-14"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"    public static Index[] parseIndexes(String trimmed) throws ParseException {","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"        List\u003cIndex\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"        for (String s : trimmed.split(\"\\\\s+\")) {","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"            try {","lastModifiedDate":"2024-04-14"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"                Index index \u003d ParserUtil.parseIndex(s);","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"                list.add(index);","lastModifiedDate":"2024-04-14"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2024-04-14"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, LinkCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"            }","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"        return list.toArray(Index[]::new);","lastModifiedDate":"2024-04-14"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"dhlee03":50}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"julia-cp"},"content":"import seedu.address.logic.commands.GroupCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.EventCategory;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Category;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2024-04-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Group;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"dhlee03"},"content":"     * Parses a {@code String category} into a {@code Category}.","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"dhlee03"},"content":"     * @throws ParseException if the given {@code category} is invalid.","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"dhlee03"},"content":"    public static Category parseCategory(String category) throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"dhlee03"},"content":"        requireNonNull(category);","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"dhlee03"},"content":"        String trimmedCategory \u003d category.trim().toUpperCase();","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"dhlee03"},"content":"        if (!Category.isValidCategory(trimmedCategory)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"dhlee03"},"content":"            throw new ParseException(Category.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"dhlee03"},"content":"        return new Category(trimmedCategory);","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-04-11"},{"lineNumber":101,"author":{"gitId":"dhlee03"},"content":"     * Parses a {@code String comment} into a {@code Comment}.","lastModifiedDate":"2024-04-11"},{"lineNumber":102,"author":{"gitId":"dhlee03"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-04-11"},{"lineNumber":103,"author":{"gitId":"dhlee03"},"content":"     * Commas will be removed.","lastModifiedDate":"2024-04-11"},{"lineNumber":104,"author":{"gitId":"dhlee03"},"content":"     * throws ParseException if the given {@code comment} is invalid.","lastModifiedDate":"2024-04-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-04-11"},{"lineNumber":106,"author":{"gitId":"dhlee03"},"content":"    public static Comment parseComment(String comment) throws ParseException {","lastModifiedDate":"2024-04-11"},{"lineNumber":107,"author":{"gitId":"dhlee03"},"content":"        requireNonNull(comment);","lastModifiedDate":"2024-04-11"},{"lineNumber":108,"author":{"gitId":"dhlee03"},"content":"        String trimmedComment \u003d comment.trim();","lastModifiedDate":"2024-04-11"},{"lineNumber":109,"author":{"gitId":"dhlee03"},"content":"        if (!Comment.isValidComment(trimmedComment)) {","lastModifiedDate":"2024-04-11"},{"lineNumber":110,"author":{"gitId":"dhlee03"},"content":"            throw new ParseException(Comment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":112,"author":{"gitId":"dhlee03"},"content":"        String result \u003d trimmedComment.replace(\",\", \"\");","lastModifiedDate":"2024-04-11"},{"lineNumber":113,"author":{"gitId":"dhlee03"},"content":"        return new Comment(result);","lastModifiedDate":"2024-04-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":115,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":117,"author":{"gitId":"meenulekha"},"content":"     * Parses a string representation of an event name into an EventName object.","lastModifiedDate":"2024-04-04"},{"lineNumber":118,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-04-04"},{"lineNumber":119,"author":{"gitId":"meenulekha"},"content":"     * @param eventname A string representing the name to be parsed.","lastModifiedDate":"2024-04-04"},{"lineNumber":120,"author":{"gitId":"meenulekha"},"content":"     * @return The parsed EventName object.","lastModifiedDate":"2024-04-04"},{"lineNumber":121,"author":{"gitId":"meenulekha"},"content":"     * @throws ParseException If the given name string is invalid or cannot be parsed.","lastModifiedDate":"2024-04-04"},{"lineNumber":122,"author":{"gitId":"meenulekha"},"content":"     *                        The error message will contain details about the parsing constraints.","lastModifiedDate":"2024-04-04"},{"lineNumber":123,"author":{"gitId":"meenulekha"},"content":"     * @throws NullPointerException If the input name string is null.","lastModifiedDate":"2024-04-04"},{"lineNumber":124,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":125,"author":{"gitId":"meenulekha"},"content":"    public static EventName parseEventName(String eventname) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(eventname);","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"meenulekha"},"content":"        String trimmedName \u003d eventname.trim();","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"meenulekha"},"content":"        if (!EventName.isValidName(trimmedName)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"meenulekha"},"content":"            throw new ParseException(EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"meenulekha"},"content":"        return new EventName(trimmedName);","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":136,"author":{"gitId":"meenulekha"},"content":"     * Parses a string representation of an event date into an EventDate object.","lastModifiedDate":"2024-04-04"},{"lineNumber":137,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-04-04"},{"lineNumber":138,"author":{"gitId":"meenulekha"},"content":"     * @param date A string representing the date to be parsed.","lastModifiedDate":"2024-04-04"},{"lineNumber":139,"author":{"gitId":"meenulekha"},"content":"     * @return The parsed EventDate object.","lastModifiedDate":"2024-04-04"},{"lineNumber":140,"author":{"gitId":"meenulekha"},"content":"     * @throws ParseException If the given date string is invalid or cannot be parsed.","lastModifiedDate":"2024-04-04"},{"lineNumber":141,"author":{"gitId":"meenulekha"},"content":"     *                        The error message will contain details about the parsing constraints.","lastModifiedDate":"2024-04-04"},{"lineNumber":142,"author":{"gitId":"meenulekha"},"content":"     * @throws NullPointerException If the input date string is null.","lastModifiedDate":"2024-04-04"},{"lineNumber":143,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":144,"author":{"gitId":"meenulekha"},"content":"    public static EventDate parseEventDate(String date) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(date);","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"meenulekha"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"meenulekha"},"content":"        if (!EventDate.isValidDate(trimmedDate)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"meenulekha"},"content":"            throw new ParseException(EventDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":150,"author":{"gitId":"meenulekha"},"content":"        return new EventDate((trimmedDate));","lastModifiedDate":"2024-04-03"},{"lineNumber":151,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":152,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":153,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":154,"author":{"gitId":"meenulekha"},"content":"     * Parses a string representation of an event category into an EventCategory object.","lastModifiedDate":"2024-04-04"},{"lineNumber":155,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-04-04"},{"lineNumber":156,"author":{"gitId":"meenulekha"},"content":"     * @param eventcategory A string representing the category to be parsed.","lastModifiedDate":"2024-04-04"},{"lineNumber":157,"author":{"gitId":"meenulekha"},"content":"     * @return The parsed EventCategory object.","lastModifiedDate":"2024-04-04"},{"lineNumber":158,"author":{"gitId":"meenulekha"},"content":"     * @throws ParseException If the given category string is invalid or cannot be parsed.","lastModifiedDate":"2024-04-04"},{"lineNumber":159,"author":{"gitId":"meenulekha"},"content":"     *                        The error message will contain details about the parsing constraints.","lastModifiedDate":"2024-04-04"},{"lineNumber":160,"author":{"gitId":"meenulekha"},"content":"     * @throws NullPointerException If the input category string is null.","lastModifiedDate":"2024-04-04"},{"lineNumber":161,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":162,"author":{"gitId":"meenulekha"},"content":"    public static EventCategory parseEventCategory(String eventcategory) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":163,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(eventcategory);","lastModifiedDate":"2024-04-03"},{"lineNumber":164,"author":{"gitId":"meenulekha"},"content":"        String trimmedCategory \u003d eventcategory.trim().toUpperCase();","lastModifiedDate":"2024-04-03"},{"lineNumber":165,"author":{"gitId":"meenulekha"},"content":"        if (!Category.isValidCategory(trimmedCategory)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":166,"author":{"gitId":"meenulekha"},"content":"            throw new ParseException(Category.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":167,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":168,"author":{"gitId":"meenulekha"},"content":"        return new EventCategory(trimmedCategory);","lastModifiedDate":"2024-04-03"},{"lineNumber":169,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":170,"author":{"gitId":"julia-cp"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":171,"author":{"gitId":"julia-cp"},"content":"     * Parses a {@code String group} into a {@code Group}.","lastModifiedDate":"2024-04-03"},{"lineNumber":172,"author":{"gitId":"julia-cp"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-04-03"},{"lineNumber":173,"author":{"gitId":"julia-cp"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":174,"author":{"gitId":"julia-cp"},"content":"     * @throws ParseException if the given {@code group} is invalid.","lastModifiedDate":"2024-04-03"},{"lineNumber":175,"author":{"gitId":"julia-cp"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":176,"author":{"gitId":"julia-cp"},"content":"    public static Group parseGroup(String group) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":177,"author":{"gitId":"julia-cp"},"content":"        if (group \u003d\u003d null) {","lastModifiedDate":"2024-04-10"},{"lineNumber":178,"author":{"gitId":"julia-cp"},"content":"            return null;","lastModifiedDate":"2024-04-10"},{"lineNumber":179,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":180,"author":{"gitId":"julia-cp"},"content":"        requireNonNull(group);","lastModifiedDate":"2024-04-03"},{"lineNumber":181,"author":{"gitId":"julia-cp"},"content":"        String trimmedGroup \u003d group.trim();","lastModifiedDate":"2024-04-03"},{"lineNumber":182,"author":{"gitId":"julia-cp"},"content":"        int groupNumber;","lastModifiedDate":"2024-04-03"},{"lineNumber":183,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":184,"author":{"gitId":"julia-cp"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":185,"author":{"gitId":"julia-cp"},"content":"            groupNumber \u003d Integer.parseInt(trimmedGroup);","lastModifiedDate":"2024-04-03"},{"lineNumber":186,"author":{"gitId":"julia-cp"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":187,"author":{"gitId":"julia-cp"},"content":"            throw new ParseException(","lastModifiedDate":"2024-04-03"},{"lineNumber":188,"author":{"gitId":"julia-cp"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":189,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":190,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":191,"author":{"gitId":"julia-cp"},"content":"        if (!Group.isValidGroup(groupNumber)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":192,"author":{"gitId":"julia-cp"},"content":"            throw new ParseException(Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":193,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":194,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":195,"author":{"gitId":"julia-cp"},"content":"        return new Group(groupNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":196,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":197,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":198,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"dhlee03":21,"julia-cp":32,"meenulekha":58,"-":88}},{"path":"src/main/java/seedu/address/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":" * Parses input arguments and creates a new ViewCommand object","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"     * and returns a ViewCommand object for execution.","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"            return new ViewCommand(index);","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"            throw new ParseException(","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"dhlee03":28}},{"path":"src/main/java/seedu/address/logic/parser/alias/AddParticipantAlias.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.parser.alias;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2024-04-11"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.parser.AddCommandParser;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":" * Parses input arguments and creates a new AddCommand object that adds a","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":" * participant to the address book.","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"public class AddParticipantAlias extends Alias\u003cAddCommand\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    public static final String ALIAS_WORD \u003d \"ap\";","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MESSAGE_USAGE \u003d ALIAS_WORD + \": Adds a participant to the contact list. \\n\"","lastModifiedDate":"2024-04-11"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"            + \"Parameters: \" + PREFIX_NAME + \"NAME \" + PREFIX_PHONE + \"PHONE \" + PREFIX_EMAIL + \"EMAIL \" + \"[\"","lastModifiedDate":"2024-04-11"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"            + PREFIX_GROUP + \"GROUP]\\n\" + \"Example: \" + ALIAS_WORD + \" \" + PREFIX_NAME + \"John Doe \" + PREFIX_PHONE","lastModifiedDate":"2024-04-11"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"            + \"98765432 \" + PREFIX_EMAIL + \"johndoe@example.com \";","lastModifiedDate":"2024-04-11"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"    private String toAddCommandInput(String input) {","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"        String paramCategory \u003d PREFIX_CATEGORY + \"participant\";","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"        return input + \" \" + paramCategory;","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"    public AddCommand parse(String input) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"        String addCommandInput \u003d toAddCommandInput(input);","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"            return new AddCommandParser().parse(addCommandInput);","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"            // Override add command usage with own usage. Temporary workaround for now","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"            String addCommandUsage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"            if (e.getMessage().equals(addCommandUsage)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"            } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"                throw e;","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"bachletuankhai":46}},{"path":"src/main/java/seedu/address/logic/parser/alias/AddSponsorAlias.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.parser.alias;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2024-04-11"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.parser.AddCommandParser;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":" * Parses input arguments and creates a new AddCommand object that adds a","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":" * sponsor to the address book.","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"public class AddSponsorAlias extends Alias\u003cAddCommand\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    public static final String ALIAS_WORD \u003d \"as\";","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MESSAGE_USAGE \u003d ALIAS_WORD + \": Adds a sponsor to the contact list. \\n\"","lastModifiedDate":"2024-04-11"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"            + \"Parameters: \" + PREFIX_NAME + \"NAME \" + PREFIX_PHONE + \"PHONE \" + PREFIX_EMAIL + \"EMAIL \" + \"[\"","lastModifiedDate":"2024-04-11"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"            + PREFIX_GROUP + \"GROUP]\\n\" + \"Example: \" + ALIAS_WORD + \" \" + PREFIX_NAME + \"John Doe \" + PREFIX_PHONE","lastModifiedDate":"2024-04-11"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"            + \"98765432 \" + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2024-04-11"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"    public static final String TYPE \u003d \"sponsor\";","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"    private String toAddCommandInput(String input) {","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"        String paramCategory \u003d PREFIX_CATEGORY + TYPE;","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"        return input + \" \" + paramCategory;","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"    public AddCommand parse(String input) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"        String addCommandInput \u003d toAddCommandInput(input);","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"            return new AddCommandParser().parse(addCommandInput);","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"            // Override add command usage with own usage. Temporary workaround for now","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"            String addCommandUsage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"            if (e.getMessage().equals(addCommandUsage)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"            } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"                throw e;","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"bachletuankhai":48}},{"path":"src/main/java/seedu/address/logic/parser/alias/AddStaffAlias.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.parser.alias;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2024-04-11"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.parser.AddCommandParser;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":" * Parses input arguments and creates a new AddCommand object that adds a staff","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":" * to the address book.","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"public class AddStaffAlias extends Alias\u003cAddCommand\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    public static final String ALIAS_WORD \u003d \"at\";","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    public static final String MESSAGE_USAGE \u003d ALIAS_WORD + \": Adds a staff to the contact list. \\n\" + \"Parameters: \"","lastModifiedDate":"2024-04-11"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"            + PREFIX_NAME + \"NAME \" + PREFIX_PHONE + \"PHONE \" + PREFIX_EMAIL + \"EMAIL \" + \"[\" + PREFIX_GROUP","lastModifiedDate":"2024-04-11"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"            + \"GROUP]\\n\" + \"Example: \" + ALIAS_WORD + \" \" + PREFIX_NAME + \"John Doe \" + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2024-04-11"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com \";","lastModifiedDate":"2024-04-11"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"    public static final String TYPE \u003d \"staff\";","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"    private String toAddCommandInput(String input) {","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"        String paramCategory \u003d PREFIX_CATEGORY + TYPE;","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"        return input + \" \" + paramCategory;","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"    public AddCommand parse(String input) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"        String addCommandInput \u003d toAddCommandInput(input);","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"            return new AddCommandParser().parse(addCommandInput);","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"            // Override add command usage with own usage. Temporary workaround for now","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"            String addCommandUsage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"            if (e.getMessage().equals(addCommandUsage)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"            } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"                throw e;","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"bachletuankhai":47}},{"path":"src/main/java/seedu/address/logic/parser/alias/Alias.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.parser.alias;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":" * Represents an alias for a command.","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"public abstract class Alias\u003cT extends Command\u003e implements Parser\u003cT\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"bachletuankhai":10}},{"path":"src/main/java/seedu/address/logic/parser/alias/AliasParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.parser.alias;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":" * Parses user input with command aliases.","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"public class AliasParser {","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"     * @param commandWord command word","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"     * @param arguments   arguments","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"     * @return the command based on the user input, or null if the command word is","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"     *         not an alias","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"     * @throws ParseException if the arguments does not conform the expected format","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"    public Command parseAlias(String commandWord, String arguments) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"        switch (commandWord) {","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"        case AddParticipantAlias.ALIAS_WORD:","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"            return new AddParticipantAlias().parse(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"        case AddStaffAlias.ALIAS_WORD:","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"            return new AddStaffAlias().parse(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"        case AddSponsorAlias.ALIAS_WORD:","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"            return new AddSponsorAlias().parse(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"        case DeleteAlias.ALIAS_WORD:","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"            return new DeleteAlias().parse(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"        case EditAlias.ALIAS_WORD:","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"            return new EditAlias().parse(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"        case ExitAlias.ALIAS_WORD:","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"            return new ExitAlias().parse(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"        case FindAlias.ALIAS_WORD:","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"            return new FindAlias().parse(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"        case UndoAlias.ALIAS_WORD:","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"            return new UndoAlias().parse(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"        case RedoAlias.ALIAS_WORD:","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"            return new RedoAlias().parse(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"        default:","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"            return null;","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"bachletuankhai":54}},{"path":"src/main/java/seedu/address/logic/parser/alias/DeleteAlias.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.parser.alias;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.parser.DeleteCommandParser;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" * Represents an alias for the \"delete\" command.","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"public class DeleteAlias extends Alias\u003cDeleteCommand\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"    public static final String ALIAS_WORD \u003d \"d\";","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"    public DeleteCommand parse(String input) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"        return new DeleteCommandParser().parse(input);","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"bachletuankhai":17}},{"path":"src/main/java/seedu/address/logic/parser/alias/EditAlias.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.parser.alias;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.parser.EditCommandParser;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" * Represents an alias for the \"edit\" command.","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"public class EditAlias extends Alias\u003cEditCommand\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"    public static final String ALIAS_WORD \u003d \"ed\";","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"    public EditCommand parse(String input) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"        return new EditCommandParser().parse(input);","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"bachletuankhai":17}},{"path":"src/main/java/seedu/address/logic/parser/alias/ExitAlias.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.parser.alias;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":" * Represents an alias for the \"exit\" command.","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"public class ExitAlias extends Alias\u003cExitCommand\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"    public static final String ALIAS_WORD \u003d \"ex\";","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"    public ExitCommand parse(String input) {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"        return new ExitCommand();","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"bachletuankhai":15}},{"path":"src/main/java/seedu/address/logic/parser/alias/FindAlias.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.parser.alias;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.parser.FindCommandParser;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":" * Represents an alias for the \"find\" command.","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"public class FindAlias extends Alias\u003cFindCommand\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"    public static final String ALIAS_WORD \u003d \"f\";","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"    public FindCommand parse(String input) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"        return new FindCommandParser().parse(input);","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"bachletuankhai":17}},{"path":"src/main/java/seedu/address/logic/parser/alias/RedoAlias.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.parser.alias;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":" * Represents an alias for the \"redo\" command.","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"public class RedoAlias extends Alias\u003cRedoCommand\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"    public static final String ALIAS_WORD \u003d \"rd\";","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"    public RedoCommand parse(String input) {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"        return new RedoCommand();","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"bachletuankhai":15}},{"path":"src/main/java/seedu/address/logic/parser/alias/UndoAlias.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.parser.alias;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":" * Represents an alias for the \"undo\" command.","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"public class UndoAlias extends Alias\u003cUndoCommand\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"    public static final String ALIAS_WORD \u003d \"ud\";","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"    public UndoCommand parse(String input) {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"        return new UndoCommand();","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"bachletuankhai":15}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"julia-cp"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"julia-cp"},"content":"     * Groups {@code target} into {@code groupNumber}.","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"julia-cp"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"julia-cp"},"content":"     * {@code groupNumber} must be a positive integer.","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"julia-cp"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"julia-cp"},"content":"    public void groupPerson(Person target, int groupNumber) {","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"julia-cp"},"content":"        requireNonNull(target);","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"julia-cp"},"content":"        persons.groupPerson(target, groupNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"julia-cp":11,"meenulekha":1,"-":130}},{"path":"src/main/java/seedu/address/model/EventBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.model;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import java.util.List;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.UniqueEventList;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"public class EventBook implements ReadOnlyEventBook {","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"    private final UniqueEventList events;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"    /*","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"     *   among constructors.","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"    {","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"        events \u003d new UniqueEventList();","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"    public EventBook() {}","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"    public EventBook(ReadOnlyEventBook toBeCopied) {","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"        this();","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"    //// list overwrite operations","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"        this.events.setEvents(events);","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"    public void resetData(ReadOnlyEventBook newData) {","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(newData);","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"        setEvents(newData.getEventList());","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"    //// person-level operations","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(event);","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"meenulekha"},"content":"        return events.contains(event);","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"meenulekha"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"meenulekha"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"meenulekha"},"content":"    public void addEvent(Event e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"meenulekha"},"content":"        events.add(e);","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":79,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"meenulekha"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"meenulekha"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"meenulekha"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"meenulekha"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(editedEvent);","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"meenulekha"},"content":"        events.setEvent(target, editedEvent);","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"meenulekha"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"meenulekha"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"meenulekha"},"content":"    public void removeEvent(Event key) {","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"meenulekha"},"content":"        events.remove(key);","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"meenulekha"},"content":"    //// util methods","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"meenulekha"},"content":"    public String toString() {","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"meenulekha"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"meenulekha"},"content":"                .add(\"events\", events)","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"meenulekha"},"content":"                .toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"meenulekha"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"meenulekha"},"content":"        return events.asUnmodifiableObservableList();","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"meenulekha"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"meenulekha"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"meenulekha"},"content":"            return true;","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"meenulekha"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"meenulekha"},"content":"        if (!(other instanceof EventBook)) {","lastModifiedDate":"2024-04-12"},{"lineNumber":120,"author":{"gitId":"meenulekha"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"meenulekha"},"content":"        EventBook otherEventBook \u003d (EventBook) other;","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"meenulekha"},"content":"        return events.equals(otherEventBook.events);","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"meenulekha"},"content":"    public int hashCode() {","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"meenulekha"},"content":"        return events.hashCode();","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":133}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.ReversibleCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.exceptions.UndoException;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"    Predicate\u003cEvent\u003e PREDICATE_SHOW_ALL_EVENTS \u003d unused -\u003e true;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"    /** Returns the EventBook */","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"    ReadOnlyEventBook getEventBook();","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"     * Returns true if a person with the same identity as {@code person} exists in","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"     * the address book.","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"     * Deletes the given person. The person must exist in the address book.","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"bachletuankhai"},"content":"     * Adds the given person. {@code person} must not already exist in the address","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"bachletuankhai"},"content":"     * book.","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":83,"author":{"gitId":"bachletuankhai"},"content":"     * {@code target} must exist in the address book. The person identity of","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"bachletuankhai"},"content":"     * {@code editedPerson} must not be the same as another existing person in the","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"bachletuankhai"},"content":"     * address book.","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"julia-cp"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"julia-cp"},"content":"     * Groups the given person {@code target} into {@code groupNumber}.","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"julia-cp"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"julia-cp"},"content":"     * {@code groupNumber} must be a positive integer.","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"julia-cp"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"julia-cp"},"content":"    void groupPerson(Person target, int groupNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":100,"author":{"gitId":"bachletuankhai"},"content":"     * Updates the filter of the filtered person list to filter by the given","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"bachletuankhai"},"content":"     * {@code predicate}.","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":107,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"bachletuankhai"},"content":"     * Returns true if the model has previous address book states to restore.","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"bachletuankhai"},"content":"     * @return True if the model has previous address book states to restore, false","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"bachletuankhai"},"content":"     *         otherwise.","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"bachletuankhai"},"content":"    boolean canUndoAddressBook();","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":117,"author":{"gitId":"bachletuankhai"},"content":"     * Returns true if the model has undone address book states to restore.","lastModifiedDate":"2024-03-29"},{"lineNumber":118,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"bachletuankhai"},"content":"     * @return True if the model has undone address book states to restore, false","lastModifiedDate":"2024-03-29"},{"lineNumber":120,"author":{"gitId":"bachletuankhai"},"content":"     *         otherwise.","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"bachletuankhai"},"content":"    boolean canRedoAddressBook();","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":124,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"bachletuankhai"},"content":"     * Restores the model\u0027s address book to its previous state.","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"bachletuankhai"},"content":"     * @return The result of the undo operation.","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"bachletuankhai"},"content":"    CommandResult undoAddressBook() throws UndoException;","lastModifiedDate":"2024-03-29"},{"lineNumber":130,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":131,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":132,"author":{"gitId":"bachletuankhai"},"content":"     * Restores the model\u0027s address book to its previously undone state.","lastModifiedDate":"2024-03-29"},{"lineNumber":133,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":134,"author":{"gitId":"bachletuankhai"},"content":"     * @return The result of the redo operation.","lastModifiedDate":"2024-03-29"},{"lineNumber":135,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":136,"author":{"gitId":"bachletuankhai"},"content":"    CommandResult redoAddressBook() throws UndoException, CommandException;","lastModifiedDate":"2024-03-29"},{"lineNumber":137,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"bachletuankhai"},"content":"     * Adds a reversible command to the history for undo/redo.","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"bachletuankhai"},"content":"    void addCommand(ReversibleCommand command);","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"meenulekha"},"content":"    void addEvent(Event event);","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"meenulekha"},"content":"    void deleteEvent(Event event);","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"meenulekha"},"content":"    boolean hasEvent(Event event);","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"meenulekha"},"content":"    void setEvent(Event target, Event editedEvent);","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"meenulekha"},"content":"    void updateFilteredEventList(Predicate\u003cEvent\u003e predicate);","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"meenulekha"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"meenulekha"},"content":"    Path getEventBookFilePath();","lastModifiedDate":"2024-04-03"},{"lineNumber":150,"author":{"gitId":"meenulekha"},"content":"    public void setEventBook(ReadOnlyEventBook eventBook);","lastModifiedDate":"2024-04-03"},{"lineNumber":151,"author":{"gitId":"meenulekha"},"content":"    public void setEventBookFilePath(Path eventBookFilePath);","lastModifiedDate":"2024-04-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"julia-cp":7,"meenulekha":16,"bachletuankhai":50,"-":79}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.ReversibleCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.exceptions.UndoException;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.history.CommandHistoryManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.history.ReversibleCommandHistory;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"    private final EventBook eventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"    private final FilteredList\u003cEvent\u003e filteredEvents;","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"    private final ReversibleCommandHistory commandHistory;","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs, and an","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"     * empty command history.","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyEventBook eventBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"        logger.fine(\"Initializing with data file: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2024-04-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"        this.eventBook \u003d new EventBook(eventBook);","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"        filteredEvents \u003d new FilteredList\u003c\u003e(this.eventBook.getEventList());","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"        commandHistory \u003d new CommandHistoryManager();","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"        this(new AddressBook(), new EventBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"bachletuankhai"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"bachletuankhai"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":130,"author":{"gitId":"julia-cp"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"julia-cp"},"content":"    public void groupPerson(Person target, int groupNumber) {","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"julia-cp"},"content":"        requireAllNonNull(target, groupNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"julia-cp"},"content":"        addressBook.groupPerson(target, groupNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":136,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"bachletuankhai"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"bachletuankhai"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":141,"author":{"gitId":"bachletuankhai"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"bachletuankhai"},"content":"     * internal list of {@code versionedAddressBook}","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":167,"author":{"gitId":"bachletuankhai"},"content":"        return addressBook.equals(otherModelManager.addressBook) \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2024-03-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"bachletuankhai"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Command History","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"bachletuankhai"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":175,"author":{"gitId":"bachletuankhai"},"content":"    public void addCommand(ReversibleCommand command) {","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"bachletuankhai"},"content":"        commandHistory.addCommand(command);","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"bachletuankhai"},"content":"    public boolean canUndoAddressBook() {","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"bachletuankhai"},"content":"        return commandHistory.canUndo();","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":183,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":184,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":185,"author":{"gitId":"bachletuankhai"},"content":"    public boolean canRedoAddressBook() {","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"bachletuankhai"},"content":"        return commandHistory.canRedo();","lastModifiedDate":"2024-03-29"},{"lineNumber":187,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":188,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":189,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":190,"author":{"gitId":"bachletuankhai"},"content":"    public CommandResult undoAddressBook() throws UndoException {","lastModifiedDate":"2024-03-29"},{"lineNumber":191,"author":{"gitId":"bachletuankhai"},"content":"        ReversibleCommand command \u003d commandHistory.getCommandToUndo();","lastModifiedDate":"2024-03-29"},{"lineNumber":192,"author":{"gitId":"bachletuankhai"},"content":"        return command.undo(this);","lastModifiedDate":"2024-03-29"},{"lineNumber":193,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":194,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":195,"author":{"gitId":"bachletuankhai"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":196,"author":{"gitId":"bachletuankhai"},"content":"    public CommandResult redoAddressBook() throws UndoException, CommandException {","lastModifiedDate":"2024-03-29"},{"lineNumber":197,"author":{"gitId":"bachletuankhai"},"content":"        ReversibleCommand command \u003d commandHistory.getCommandToRedo();","lastModifiedDate":"2024-03-29"},{"lineNumber":198,"author":{"gitId":"bachletuankhai"},"content":"        return command.redo(this);","lastModifiedDate":"2024-03-29"},{"lineNumber":199,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":200,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":201,"author":{"gitId":"meenulekha"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d event Handler","lastModifiedDate":"2024-04-04"},{"lineNumber":202,"author":{"gitId":"meenulekha"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":203,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":204,"author":{"gitId":"meenulekha"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2024-04-03"},{"lineNumber":205,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(event);","lastModifiedDate":"2024-04-03"},{"lineNumber":206,"author":{"gitId":"meenulekha"},"content":"        return eventBook.hasEvent(event);","lastModifiedDate":"2024-04-03"},{"lineNumber":207,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":208,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":209,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":210,"author":{"gitId":"meenulekha"},"content":"    public void deleteEvent(Event target) {","lastModifiedDate":"2024-04-03"},{"lineNumber":211,"author":{"gitId":"meenulekha"},"content":"        eventBook.removeEvent(target);","lastModifiedDate":"2024-04-03"},{"lineNumber":212,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":213,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":214,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":215,"author":{"gitId":"meenulekha"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2024-04-03"},{"lineNumber":216,"author":{"gitId":"meenulekha"},"content":"        eventBook.addEvent(event);","lastModifiedDate":"2024-04-03"},{"lineNumber":217,"author":{"gitId":"meenulekha"},"content":"        updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":218,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":219,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":220,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":221,"author":{"gitId":"meenulekha"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2024-04-03"},{"lineNumber":222,"author":{"gitId":"meenulekha"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2024-04-03"},{"lineNumber":223,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":224,"author":{"gitId":"meenulekha"},"content":"        eventBook.setEvent(target, editedEvent);","lastModifiedDate":"2024-04-03"},{"lineNumber":225,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":226,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":227,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":228,"author":{"gitId":"meenulekha"},"content":"    public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2024-04-03"},{"lineNumber":229,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2024-04-03"},{"lineNumber":230,"author":{"gitId":"meenulekha"},"content":"        filteredEvents.setPredicate(predicate);","lastModifiedDate":"2024-04-03"},{"lineNumber":231,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":232,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":233,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":234,"author":{"gitId":"meenulekha"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2024-04-03"},{"lineNumber":235,"author":{"gitId":"meenulekha"},"content":"        return filteredEvents;","lastModifiedDate":"2024-04-03"},{"lineNumber":236,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":237,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":238,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":239,"author":{"gitId":"meenulekha"},"content":"    public ReadOnlyEventBook getEventBook() {","lastModifiedDate":"2024-04-03"},{"lineNumber":240,"author":{"gitId":"meenulekha"},"content":"        return eventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":241,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":242,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":243,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":244,"author":{"gitId":"meenulekha"},"content":"    public Path getEventBookFilePath() {","lastModifiedDate":"2024-04-03"},{"lineNumber":245,"author":{"gitId":"meenulekha"},"content":"        return userPrefs.getEventBookFilePath();","lastModifiedDate":"2024-04-03"},{"lineNumber":246,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":247,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":248,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":249,"author":{"gitId":"meenulekha"},"content":"    public void setEventBookFilePath(Path eventBookFilePath) {","lastModifiedDate":"2024-04-03"},{"lineNumber":250,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(eventBookFilePath);","lastModifiedDate":"2024-04-03"},{"lineNumber":251,"author":{"gitId":"meenulekha"},"content":"        userPrefs.setEventBookFilePath(eventBookFilePath);","lastModifiedDate":"2024-04-03"},{"lineNumber":252,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":253,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":254,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":255,"author":{"gitId":"meenulekha"},"content":"    public void setEventBook(ReadOnlyEventBook eventBook) {","lastModifiedDate":"2024-04-03"},{"lineNumber":256,"author":{"gitId":"meenulekha"},"content":"        this.eventBook.resetData(eventBook);","lastModifiedDate":"2024-04-03"},{"lineNumber":257,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":258,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"julia-cp":7,"meenulekha":64,"bachletuankhai":51,"-":137}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"meenulekha":1,"-":17}},{"path":"src/main/java/seedu/address/model/ReadOnlyEventBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.model;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":" * Unmodifiable view of an event book","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"public interface ReadOnlyEventBook {","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":11}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"    private Path eventBookFilePath \u003d Paths.get(\"data\" , \"eventbook.json\");","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"meenulekha"},"content":"    public Path getEventBookFilePath() {","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"meenulekha"},"content":"        return eventBookFilePath;","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"meenulekha"},"content":"    public void setEventBookFilePath(Path eventBookFilePath) {","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"meenulekha"},"content":"        this.eventBookFilePath \u003d eventBookFilePath;","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"meenulekha":9,"-":88}},{"path":"src/main/java/seedu/address/model/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.model.event;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import java.util.Objects;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":" * Represents a Event in the event book.","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"public class Event {","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"    private final EventName eventName;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"    private final EventCategory eventCategory;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"    private final EventDate eventDate;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"     * Constructs an Event object with the specified name, date, and category.","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"     * @param eventName The name of the event.","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"     * @param eventDate The date of the event.","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"     * @param eventCategory The category of the event.","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"    public Event(EventName eventName, EventDate eventDate, EventCategory eventCategory) {","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"        this.eventCategory \u003d eventCategory;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"        this.eventDate \u003d eventDate;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"    public EventName getEventName() {","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"        return this.eventName;","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"    public EventCategory getEventCategory() {","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"        return this.eventCategory;","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"    public EventDate getEventDate() {","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"        return this.eventDate;","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"     * Returns true if both events have the same event name and event category.","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"     * This defines a weaker notion of equality between two events.","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"    public boolean isSameEvent(Event otherEvent) {","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"        if (otherEvent \u003d\u003d this) {","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"            return true;","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"        return otherEvent !\u003d null","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"                \u0026\u0026 (otherEvent.getEventName().equals(getEventName())","lastModifiedDate":"2024-04-12"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"                \u0026\u0026 otherEvent.getEventDate().equals(getEventDate())","lastModifiedDate":"2024-04-15"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"                \u0026\u0026 otherEvent.getEventCategory().equals(getEventCategory()));","lastModifiedDate":"2024-04-15"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"     * Returns true if both events have the same event name, event date and event category.","lastModifiedDate":"2024-04-11"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"     * This defines a stronger notion of equality between two events.","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"            return true;","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"meenulekha"},"content":"        Event otherEvent \u003d (Event) other;","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"meenulekha"},"content":"        return otherEvent !\u003d null","lastModifiedDate":"2024-04-12"},{"lineNumber":71,"author":{"gitId":"meenulekha"},"content":"                \u0026\u0026 (eventName.equals(otherEvent.eventName)","lastModifiedDate":"2024-04-12"},{"lineNumber":72,"author":{"gitId":"meenulekha"},"content":"                \u0026\u0026 eventDate.equals(otherEvent.eventDate)","lastModifiedDate":"2024-04-12"},{"lineNumber":73,"author":{"gitId":"meenulekha"},"content":"                \u0026\u0026 eventCategory.equals(otherEvent.eventCategory));","lastModifiedDate":"2024-04-12"},{"lineNumber":74,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"meenulekha"},"content":"    public int hashCode() {","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"meenulekha"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"meenulekha"},"content":"        return Objects.hash(eventName, eventDate, eventCategory);","lastModifiedDate":"2024-04-11"},{"lineNumber":80,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"meenulekha"},"content":"    public String toString() {","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"meenulekha"},"content":"        return \"eventName\u003d\"","lastModifiedDate":"2024-04-12"},{"lineNumber":85,"author":{"gitId":"meenulekha"},"content":"                + eventName","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"meenulekha"},"content":"                + \", eventDate\u003d\"","lastModifiedDate":"2024-04-11"},{"lineNumber":87,"author":{"gitId":"meenulekha"},"content":"                + eventDate","lastModifiedDate":"2024-04-11"},{"lineNumber":88,"author":{"gitId":"meenulekha"},"content":"                + \", eventCategory\u003d\"","lastModifiedDate":"2024-04-04"},{"lineNumber":89,"author":{"gitId":"meenulekha"},"content":"                + eventCategory;","lastModifiedDate":"2024-04-12"},{"lineNumber":90,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":93}},{"path":"src/main/java/seedu/address/model/event/EventCategory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.model.event;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.model.event.EventName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.CategoryType;","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":" * Represents an Event\u0027s category in the address book.","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"public class EventCategory {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"    public final String value;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"     * Constructs an EventCategory object with the specified category value.","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"     * @param eventCategory The category value of the event.","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"     * @throws NullPointerException If the given category value is null.","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"     * @throws IllegalArgumentException If the given category value is invalid.","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"     *                                  The error message will contain details about the constraints.","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"    public EventCategory(String eventCategory) {","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(eventCategory);","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"        checkArgument(isValidCategory(eventCategory), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"        value \u003d eventCategory;","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"     * Returns true if a given string is a valid Category.","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"    public static boolean isValidCategory(String test) {","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"        return CategoryType.contains(test);","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"    public String toString() {","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"        return value;","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"            return true;","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"        if (!(other instanceof EventCategory)) {","lastModifiedDate":"2024-04-15"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"        EventCategory otherCategory \u003d (EventCategory) other;","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"        return value.equals(otherCategory.value);","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"    public int hashCode() {","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"        return value.hashCode();","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"dhlee03":2,"meenulekha":60}},{"path":"src/main/java/seedu/address/model/event/EventDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.model.event;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-11"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-04-11"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-04-11"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-04-11"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2024-04-11"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":" * Represents a date for an Event in the event book.","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"public class EventDate {","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"            \"Dates of events should be in DD-MM-YYYY format, and it should not be blank. \";","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[0-3]?[0-9].[0-3]?[0-9].(?:[0-9]{2})?[0-9]{2}$\";","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"    public final String eventDate;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"     * @param eventDate A valid date.","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"    public EventDate(String eventDate) {","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(eventDate);","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"        checkArgument(isValidDate(eventDate), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"        this.eventDate \u003d eventDate;","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2024-04-11"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"        try {","lastModifiedDate":"2024-04-11"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"            LocalDate date \u003d LocalDate.parse(test, formatter);","lastModifiedDate":"2024-04-11"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"            return true;","lastModifiedDate":"2024-04-14"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2024-04-11"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"            return false;","lastModifiedDate":"2024-04-11"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-11"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-11"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-11"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-11"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"            return true;","lastModifiedDate":"2024-04-11"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-11"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"        if (!(other instanceof EventDate)) {","lastModifiedDate":"2024-04-11"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"            return false;","lastModifiedDate":"2024-04-11"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-11"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-11"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"        EventDate otherDate \u003d (EventDate) other;","lastModifiedDate":"2024-04-11"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"        return eventDate.equals(otherDate.eventDate);","lastModifiedDate":"2024-04-11"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"    public String toString() {","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"        return eventDate;","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"meenulekha"},"content":"    public int hashCode() {","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"meenulekha"},"content":"        return eventDate.hashCode();","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":76}},{"path":"src/main/java/seedu/address/model/event/EventFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.model.event;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":" * Factory class for creating Event objects.","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"public class EventFactory {","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"    public static Event createEvent(EventName name, EventDate date, EventCategory category) {","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"        return new Event(name, date, category);","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":10}},{"path":"src/main/java/seedu/address/model/event/EventName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.model.event;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import static java.util.Objects.isNull;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":" * Represents an Event\u0027s name in the event book.","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"public class EventName {","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"            \"Names of events should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"    public final String eventName;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"     * @param eventName A valid name.","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"    public EventName(String eventName) {","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(eventName);","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"        checkArgument(isValidName(eventName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"        return !isNull(test) \u0026\u0026 test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"    public String toString() {","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"        return eventName;","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"            return true;","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"        if (!(other instanceof EventName)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"        EventName otherName \u003d (EventName) other;","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"        return eventName.equals(otherName.eventName);","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"    public int hashCode() {","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"        return eventName.hashCode();","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":65}},{"path":"src/main/java/seedu/address/model/event/EventNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.model.event;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import java.util.List;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":" * Tests that a {@code Event}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"public class EventNameContainsKeywordsPredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"    public EventNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"        return keywords.stream()","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(event.getEventName().eventName, keyword));","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"            return true;","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"        if (!(other instanceof EventNameContainsKeywordsPredicate)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"        EventNameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"                (EventNameContainsKeywordsPredicate) other;","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"    public String toString() {","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":44}},{"path":"src/main/java/seedu/address/model/event/UniqueEventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.model.event;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"import java.util.List;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":" * A list of events that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":" * An event is considered unique by comparing using {@code Event#isSameEvent(Event)}. As such, adding and updating of","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":" * events uses Event#isSameEvent(Event) for equality so as to ensure that the event being added or updated is","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":" * unique in terms of identity in the UniqueEventList. However, the removal of a event uses Event#isSameEvent(Event) so","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":" * as to ensure that the event with exactly the same fields will be removed.","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":" *","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2024-04-04"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":" *","lastModifiedDate":"2024-04-04"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":" * @see Event#isSameEvent(Event)","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"public class UniqueEventList implements Iterable\u003cEvent\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"    private final ObservableList\u003cEvent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"    private final ObservableList\u003cEvent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"    public boolean contains(Event toCheck) {","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"        return internalList.stream().anyMatch(toCheck::isSameEvent);","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"     * Adds a person to the list.","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"    public void add(Event toAdd) {","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"        if (!target.isSameEvent(editedEvent) \u0026\u0026 contains(editedEvent)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"meenulekha"},"content":"        internalList.set(index, editedEvent);","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"meenulekha"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"meenulekha"},"content":"     * The person must exist in the list.","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"meenulekha"},"content":"    public void remove(Event toRemove) {","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"meenulekha"},"content":"        //requireNonNull(toRemove);","lastModifiedDate":"2024-04-11"},{"lineNumber":76,"author":{"gitId":"meenulekha"},"content":"        //if (!internalList.remove(toRemove)) {","lastModifiedDate":"2024-04-11"},{"lineNumber":77,"author":{"gitId":"meenulekha"},"content":"        //    throw new EventNotFoundException();","lastModifiedDate":"2024-04-11"},{"lineNumber":78,"author":{"gitId":"meenulekha"},"content":"        //}","lastModifiedDate":"2024-04-11"},{"lineNumber":79,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"meenulekha"},"content":"        final boolean eventWasRemoved \u003d internalList.removeIf(toRemove::isSameEvent);","lastModifiedDate":"2024-04-11"},{"lineNumber":81,"author":{"gitId":"meenulekha"},"content":"        if (!eventWasRemoved) {","lastModifiedDate":"2024-04-11"},{"lineNumber":82,"author":{"gitId":"meenulekha"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"meenulekha"},"content":"    public void setEvents(UniqueEventList replacement) {","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"meenulekha"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"meenulekha"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"meenulekha"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"meenulekha"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"meenulekha"},"content":"        requireAllNonNull(events);","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"meenulekha"},"content":"        if (!eventsAreUnique(events)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"meenulekha"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"meenulekha"},"content":"        internalList.setAll(events);","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"meenulekha"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"meenulekha"},"content":"    public ObservableList\u003cEvent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"meenulekha"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"meenulekha"},"content":"    public Iterator\u003cEvent\u003e iterator() {","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"meenulekha"},"content":"        return internalList.iterator();","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"meenulekha"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"meenulekha"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"meenulekha"},"content":"            return true;","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"meenulekha"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"meenulekha"},"content":"        if (!(other instanceof UniqueEventList)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"meenulekha"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"meenulekha"},"content":"        UniqueEventList otherUniqueEventList \u003d (UniqueEventList) other;","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"meenulekha"},"content":"        return internalList.equals(otherUniqueEventList.internalList);","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"meenulekha"},"content":"    public int hashCode() {","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"meenulekha"},"content":"        return internalList.hashCode();","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":136,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"meenulekha"},"content":"    public String toString() {","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"meenulekha"},"content":"        return internalList.toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"meenulekha"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"meenulekha"},"content":"    private boolean eventsAreUnique(List\u003cEvent\u003e events) {","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"meenulekha"},"content":"        for (int i \u003d 0; i \u003c events.size() - 1; i++) {","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"meenulekha"},"content":"            for (int j \u003d i + 1; j \u003c events.size(); j++) {","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"meenulekha"},"content":"                if (events.get(i).isSameEvent(events.get(j))) {","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"meenulekha"},"content":"                    return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"meenulekha"},"content":"                }","lastModifiedDate":"2024-04-03"},{"lineNumber":150,"author":{"gitId":"meenulekha"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":151,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":152,"author":{"gitId":"meenulekha"},"content":"        return true;","lastModifiedDate":"2024-04-03"},{"lineNumber":153,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":154,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":154}},{"path":"src/main/java/seedu/address/model/event/exceptions/DuplicateEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":" * Signals that the operation will result in duplicate Events (Events are considered duplicates if they have the same","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":" * identity).","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"public class DuplicateEventException extends RuntimeException {","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"    public DuplicateEventException() {","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"        super(\"Operation would result in duplicate events\");","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"meenulekha":11}},{"path":"src/main/java/seedu/address/model/event/exceptions/EventNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2024-04-04"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":" * Signals that the operation is unable to find the specified event.","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"public class EventNotFoundException extends RuntimeException {","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-04"}],"authorContributionMap":{"meenulekha":7}},{"path":"src/main/java/seedu/address/model/person/Category.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":" * Represents a Person\u0027s category in the HackLink.","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"public class Category {","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"            \"Category should be one of participant, staff, and sponsor.\";","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"    public final String value;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"    public final CategoryType type;","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"     * Constructs a {@code Category}.","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"     * @param category one of Participant, Staff, and Sponsors.","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"    public Category(String category) {","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"        requireNonNull(category);","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"        checkArgument(isValidCategory(category), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"        value \u003d category;","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"        type \u003d CategoryType.valueOf(category.toUpperCase());","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"     * Returns true if a given string is a valid Category.","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"    public static boolean isValidCategory(String test) {","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"        return CategoryType.contains(test);","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"    public String toString() {","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"        return value;","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"        if (!(other instanceof Category)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"        Category otherCategory \u003d (Category) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"        return type \u003d\u003d otherCategory.type;","lastModifiedDate":"2024-04-14"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"dhlee03"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"dhlee03"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"dhlee03":59}},{"path":"src/main/java/seedu/address/model/person/CategoryType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":" * Enum for three category types of contacts.","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"public enum CategoryType {","lastModifiedDate":"2024-04-14"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"    PARTICIPANT, STAFF, SPONSOR;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"     * @param test string to be tested.","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"     * @return boolean whether enum contains test.","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"    public static boolean contains(String test) {","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"        if (test \u003d\u003d null) {","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"            return false;","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"        for (CategoryType c : CategoryType.values()) {","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"            if (c.name().equals(test)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"                return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"            }","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"        return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"dhlee03":24}},{"path":"src/main/java/seedu/address/model/person/Comment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":" * Represents a Person\u0027s comment in the HackLink.","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidComment(String)}","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"public class Comment {","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Comment can take any values, and it should not be blank\";","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"     * The first character of the comment must not be a whitespace,","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"     * The parser will trim the comment before storing it.","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\S.*\";","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"    public static final String DEFAULT_COMMENT \u003d \"No comment provided.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"    public final String value;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"     * Constructs a {@code Comment} with the default comment.","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"    public Comment() {","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"        value \u003d DEFAULT_COMMENT;","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"     * Constructs an {@code Comment}.","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"     * @param comment A valid comment.","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"    public Comment(String comment) {","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"        requireNonNull(comment);","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"        checkArgument(isValidComment(comment), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"        value \u003d comment;","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"     * Returns true if a given string is a valid comment.","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"    public static boolean isValidComment(String test) {","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"    public boolean hasComment() {","lastModifiedDate":"2024-04-05"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"        return !value.equals(DEFAULT_COMMENT);","lastModifiedDate":"2024-04-05"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"dhlee03"},"content":"    public String toString() {","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"dhlee03"},"content":"        return value;","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"dhlee03"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"dhlee03"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"dhlee03"},"content":"            return true;","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"dhlee03"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"dhlee03"},"content":"        if (!(other instanceof Comment)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"dhlee03"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"dhlee03"},"content":"        Comment otherComment \u003d (Comment) other;","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"dhlee03"},"content":"        return value.equals(otherComment.value);","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"dhlee03"},"content":"    public int hashCode() {","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"dhlee03"},"content":"        return value.hashCode();","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"dhlee03":76}},{"path":"src/main/java/seedu/address/model/person/ContactContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import java.util.List;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":" * Tests that a {@code Person}\u0027s information matches any of the keywords given.","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"public class ContactContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"     * Creates a ContactContainsKeywordsPredicate with the given keywords.","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"     * @param keywords the keywords to test against","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"    public ContactContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"        requireNonNull(keywords);","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"     * Tests that a {@code Person}\u0027s information matches any of the keywords given.","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"     * @param person the input argument","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"     * @return true if the person\u0027s information contains any of the keywords given","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"        return keywords.stream()","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getInformation(), keyword));","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"    public List\u003cString\u003e getKeywords() {","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"        return keywords;","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"            return true;","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"        if (!(other instanceof ContactContainsKeywordsPredicate)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"            return false;","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"dhlee03"},"content":"        ContactContainsKeywordsPredicate otherPredicate \u003d (ContactContainsKeywordsPredicate) other;","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"dhlee03"},"content":"        return keywords.equals(otherPredicate.keywords);","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"dhlee03"},"content":"    public String toString() {","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"dhlee03"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"dhlee03":61}},{"path":"src/main/java/seedu/address/model/person/Group.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":" * Represents a Person\u0027s group in the hackathon.","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"public class Group {","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"            \"Group should be a positive integer.\";","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"    private static int totalGroupNumber \u003d 0;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":13,"author":{"gitId":"julia-cp"},"content":"    public final String value;","lastModifiedDate":"2024-04-10"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"    private final int groupNumber;","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"     * Constructs a default {@code Group} with group number 0.","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"    public Group() {","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"        this.groupNumber \u003d 0;","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"julia-cp"},"content":"        this.value \u003d String.valueOf(groupNumber);","lastModifiedDate":"2024-04-10"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"     * Constructs a {@code Group}.","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"     *","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"     * @param groupNumber a positive integer.","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"    public Group(int groupNumber) {","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"        checkArgument(isValidGroup(groupNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"        this.groupNumber \u003d groupNumber;","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"julia-cp"},"content":"        this.value \u003d String.valueOf(groupNumber);","lastModifiedDate":"2024-04-10"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"     * Returns true if a given integer is a valid Group. Includes 0 for default group.","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"    public static boolean isValidGroup(int test) {","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"        return test \u003e\u003d 0;","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"julia-cp"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":44,"author":{"gitId":"julia-cp"},"content":"     * Returns true if a given string is a valid Group.","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"julia-cp"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":46,"author":{"gitId":"julia-cp"},"content":"    public static boolean isValidGroup(String test) {","lastModifiedDate":"2024-04-10"},{"lineNumber":47,"author":{"gitId":"julia-cp"},"content":"        if (test \u003d\u003d null) {","lastModifiedDate":"2024-04-10"},{"lineNumber":48,"author":{"gitId":"julia-cp"},"content":"            return false;","lastModifiedDate":"2024-04-10"},{"lineNumber":49,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":50,"author":{"gitId":"julia-cp"},"content":"        try {","lastModifiedDate":"2024-04-10"},{"lineNumber":51,"author":{"gitId":"julia-cp"},"content":"            return Integer.parseInt(test) \u003e\u003d 0;","lastModifiedDate":"2024-04-10"},{"lineNumber":52,"author":{"gitId":"julia-cp"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-10"},{"lineNumber":53,"author":{"gitId":"julia-cp"},"content":"            return false;","lastModifiedDate":"2024-04-10"},{"lineNumber":54,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":55,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":56,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":57,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":58,"author":{"gitId":"dhlee03"},"content":"     * Sets the last group number.","lastModifiedDate":"2024-03-22"},{"lineNumber":59,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":60,"author":{"gitId":"dhlee03"},"content":"    public static void setTotalGroupNumber(int lastNumber) {","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"dhlee03"},"content":"        totalGroupNumber \u003d lastNumber;","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":63,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":64,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":65,"author":{"gitId":"dhlee03"},"content":"     * Returns the last group number.","lastModifiedDate":"2024-03-22"},{"lineNumber":66,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":67,"author":{"gitId":"dhlee03"},"content":"    public static int getTotalGroupNumber() {","lastModifiedDate":"2024-03-23"},{"lineNumber":68,"author":{"gitId":"dhlee03"},"content":"        return totalGroupNumber;","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":70,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":71,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":72,"author":{"gitId":"dhlee03"},"content":"     * Returns the group number.","lastModifiedDate":"2024-03-22"},{"lineNumber":73,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":74,"author":{"gitId":"dhlee03"},"content":"    public int getGroupNumber() {","lastModifiedDate":"2024-03-22"},{"lineNumber":75,"author":{"gitId":"dhlee03"},"content":"        return groupNumber;","lastModifiedDate":"2024-03-22"},{"lineNumber":76,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":77,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":78,"author":{"gitId":"dhlee03"},"content":"    public static Group getDefaultGroupForCategory(CategoryType categoryType) {","lastModifiedDate":"2024-04-14"},{"lineNumber":79,"author":{"gitId":"dhlee03"},"content":"        switch (categoryType) {","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"dhlee03"},"content":"        case PARTICIPANT:","lastModifiedDate":"2024-04-14"},{"lineNumber":81,"author":{"gitId":"dhlee03"},"content":"        case STAFF:","lastModifiedDate":"2024-04-14"},{"lineNumber":82,"author":{"gitId":"dhlee03"},"content":"            return new Group();","lastModifiedDate":"2024-04-14"},{"lineNumber":83,"author":{"gitId":"dhlee03"},"content":"        case SPONSOR:","lastModifiedDate":"2024-04-14"},{"lineNumber":84,"author":{"gitId":"dhlee03"},"content":"            return null;","lastModifiedDate":"2024-04-14"},{"lineNumber":85,"author":{"gitId":"dhlee03"},"content":"        default:","lastModifiedDate":"2024-04-14"},{"lineNumber":86,"author":{"gitId":"dhlee03"},"content":"            // should not reach here","lastModifiedDate":"2024-04-14"},{"lineNumber":87,"author":{"gitId":"dhlee03"},"content":"            throw new IllegalArgumentException(Category.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-14"},{"lineNumber":88,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":89,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":90,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":91,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":92,"author":{"gitId":"dhlee03"},"content":"    public String toString() {","lastModifiedDate":"2024-03-22"},{"lineNumber":93,"author":{"gitId":"dhlee03"},"content":"        return Integer.toString(groupNumber);","lastModifiedDate":"2024-03-22"},{"lineNumber":94,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":95,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":96,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-03-22"},{"lineNumber":97,"author":{"gitId":"dhlee03"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-22"},{"lineNumber":98,"author":{"gitId":"dhlee03"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-22"},{"lineNumber":99,"author":{"gitId":"dhlee03"},"content":"            return true;","lastModifiedDate":"2024-03-22"},{"lineNumber":100,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":101,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":102,"author":{"gitId":"dhlee03"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-22"},{"lineNumber":103,"author":{"gitId":"dhlee03"},"content":"        if (!(other instanceof Group)) {","lastModifiedDate":"2024-03-22"},{"lineNumber":104,"author":{"gitId":"dhlee03"},"content":"            return false;","lastModifiedDate":"2024-03-22"},{"lineNumber":105,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":106,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":107,"author":{"gitId":"dhlee03"},"content":"        Group otherCategory \u003d (Group) other;","lastModifiedDate":"2024-03-22"},{"lineNumber":108,"author":{"gitId":"dhlee03"},"content":"        return groupNumber \u003d\u003d otherCategory.groupNumber;","lastModifiedDate":"2024-03-22"},{"lineNumber":109,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":110,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"dhlee03":92,"julia-cp":18}},{"path":"src/main/java/seedu/address/model/person/Identifiable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":" * Interface for objects that have an identity.","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"public interface Identifiable {","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"    boolean isSameIdentity(Identifiable other);","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"dhlee03":8}},{"path":"src/main/java/seedu/address/model/person/Participant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"julia-cp"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":" * Represents a participants in hackathon.","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":" * Inherits interface Identifiable.","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"public class Participant extends Person {","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"    private Group group;","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"     * Constructs participants with essential information and comment.","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"    public Participant(Name name, Phone phone, Email email, Category category, Comment comment) {","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"        super(name, phone, email, category, comment);","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"        this.group \u003d new Group();","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"julia-cp"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":23,"author":{"gitId":"julia-cp"},"content":"     * Sets the group of the participant.","lastModifiedDate":"2024-04-10"},{"lineNumber":24,"author":{"gitId":"julia-cp"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":25,"author":{"gitId":"julia-cp"},"content":"    @Override","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"julia-cp"},"content":"    public void setGroup(Group group) {","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"julia-cp"},"content":"        this.group \u003d group;","lastModifiedDate":"2024-04-10"},{"lineNumber":28,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":29,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":30,"author":{"gitId":"julia-cp"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":31,"author":{"gitId":"julia-cp"},"content":"     * Returns the group of the participant.","lastModifiedDate":"2024-04-10"},{"lineNumber":32,"author":{"gitId":"julia-cp"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":33,"author":{"gitId":"julia-cp"},"content":"    @Override","lastModifiedDate":"2024-04-10"},{"lineNumber":34,"author":{"gitId":"julia-cp"},"content":"    public Group getGroup() {","lastModifiedDate":"2024-04-10"},{"lineNumber":35,"author":{"gitId":"julia-cp"},"content":"        return group;","lastModifiedDate":"2024-04-10"},{"lineNumber":36,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":37,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":38,"author":{"gitId":"julia-cp"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"julia-cp"},"content":"     * Sets the group number of the participant.","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"julia-cp"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"julia-cp"},"content":"    @Override","lastModifiedDate":"2024-04-10"},{"lineNumber":42,"author":{"gitId":"julia-cp"},"content":"    public void setGroupNumber(int groupNumber) {","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"julia-cp"},"content":"        this.group \u003d new Group(groupNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"     * Returns the group number of the participant.","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"julia-cp"},"content":"    @Override","lastModifiedDate":"2024-04-10"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"    public int getGroupNumber() {","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"        return group.getGroupNumber();","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"julia-cp"},"content":"    @Override","lastModifiedDate":"2024-04-10"},{"lineNumber":55,"author":{"gitId":"julia-cp"},"content":"    public ToStringBuilder toStringBuilder() {","lastModifiedDate":"2024-04-10"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"        return super.toStringBuilder().add(\"group\", group);","lastModifiedDate":"2024-04-12"},{"lineNumber":57,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":58,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":59,"author":{"gitId":"julia-cp"},"content":"    @Override","lastModifiedDate":"2024-04-10"},{"lineNumber":60,"author":{"gitId":"julia-cp"},"content":"    public String getInformation() {","lastModifiedDate":"2024-04-10"},{"lineNumber":61,"author":{"gitId":"dhlee03"},"content":"        return super.getInformation() + group + \"\\n\";","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":63,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"dhlee03":26,"julia-cp":35,"bachletuankhai":2}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":" * Represents a Person(Staff, Sponsor, Participant) in the hackathon.","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"public abstract class Person implements Identifiable {","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"    private final Category category;","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"    private final Comment comment;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"     * Constructs person with essential information and given comment. Every field must be present and not null.","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"    public Person(Name name, Phone phone, Email email, Category category, Comment comment) {","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"        requireAllNonNull(name, phone, email, category);","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"        this.category \u003d category;","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"        this.comment \u003d comment;","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"    public Category getCategory() {","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"        return category;","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"    public Comment getComment() {","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"dhlee03"},"content":"        return comment;","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"julia-cp"},"content":"    public abstract Group getGroup();","lastModifiedDate":"2024-04-10"},{"lineNumber":57,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":58,"author":{"gitId":"julia-cp"},"content":"    public abstract void setGroup(Group group);","lastModifiedDate":"2024-04-10"},{"lineNumber":59,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":60,"author":{"gitId":"julia-cp"},"content":"    public abstract int getGroupNumber();","lastModifiedDate":"2024-04-10"},{"lineNumber":61,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":62,"author":{"gitId":"julia-cp"},"content":"    public abstract void setGroupNumber(int groupNumber);","lastModifiedDate":"2024-04-10"},{"lineNumber":63,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-04-12"},{"lineNumber":65,"author":{"gitId":"dhlee03"},"content":"     * Returns true if both persons have the same identity.","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"dhlee03"},"content":"     * When name is the same, the person is considered the same person if the phone number or email is the same.","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"dhlee03"},"content":"     * This method is used for all participant, staff and sponsor.","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"dhlee03"},"content":"     * Note: This method ensures that the category of the person is not considered in the comparison.","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"dhlee03"},"content":"    @Override","lastModifiedDate":"2024-04-13"},{"lineNumber":72,"author":{"gitId":"dhlee03"},"content":"    public boolean isSameIdentity(Identifiable other) {","lastModifiedDate":"2024-04-13"},{"lineNumber":73,"author":{"gitId":"dhlee03"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-04-13"},{"lineNumber":74,"author":{"gitId":"dhlee03"},"content":"            // same object -\u003e returns true","lastModifiedDate":"2024-04-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"dhlee03"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2024-04-13"},{"lineNumber":78,"author":{"gitId":"dhlee03"},"content":"            // not person -\u003e returns false","lastModifiedDate":"2024-04-13"},{"lineNumber":79,"author":{"gitId":"dhlee03"},"content":"            return false;","lastModifiedDate":"2024-04-13"},{"lineNumber":80,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":81,"author":{"gitId":"dhlee03"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2024-04-13"},{"lineNumber":82,"author":{"gitId":"dhlee03"},"content":"        // check if the person has the same phone number or email","lastModifiedDate":"2024-04-13"},{"lineNumber":83,"author":{"gitId":"dhlee03"},"content":"        boolean hasMatch \u003d phone.equals(otherPerson.phone) || email.equals(otherPerson.email);","lastModifiedDate":"2024-04-13"},{"lineNumber":84,"author":{"gitId":"dhlee03"},"content":"        return name.equals(otherPerson.name) \u0026\u0026 hasMatch;","lastModifiedDate":"2024-04-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2024-04-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2024-04-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2024-04-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2024-04-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2024-04-12"},{"lineNumber":106,"author":{"gitId":"dhlee03"},"content":"                \u0026\u0026 category.equals(otherPerson.category);","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"dhlee03"},"content":"        return Objects.hash(name, phone, email);","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"julia-cp"},"content":"        return toStringBuilder().toString();","lastModifiedDate":"2024-04-10"},{"lineNumber":118,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":119,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":120,"author":{"gitId":"julia-cp"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":121,"author":{"gitId":"bachletuankhai"},"content":"     * Returns a ToStringBuilder representation of the person\u0027s details as a toString() method helper.","lastModifiedDate":"2024-04-12"},{"lineNumber":122,"author":{"gitId":"julia-cp"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":123,"author":{"gitId":"julia-cp"},"content":"    public ToStringBuilder toStringBuilder() {","lastModifiedDate":"2024-04-10"},{"lineNumber":124,"author":{"gitId":"dhlee03"},"content":"        return new ToStringBuilder(this).add(\"name\", name)","lastModifiedDate":"2024-04-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2024-04-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2024-04-14"},{"lineNumber":127,"author":{"gitId":"dhlee03"},"content":"                .add(\"category\", category)","lastModifiedDate":"2024-04-14"},{"lineNumber":128,"author":{"gitId":"dhlee03"},"content":"                .add(\"comment\", comment);","lastModifiedDate":"2024-04-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":132,"author":{"gitId":"dhlee03"},"content":"     * Returns a string representation of the person\u0027s details in CSV format.","lastModifiedDate":"2024-04-14"},{"lineNumber":133,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":134,"author":{"gitId":"dhlee03"},"content":"    public String toCsvString() {","lastModifiedDate":"2024-03-31"},{"lineNumber":135,"author":{"gitId":"dhlee03"},"content":"        return name + \",\" + phone + \",\" + email + \",\" + comment + \"\\n\";","lastModifiedDate":"2024-04-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":138,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"dhlee03"},"content":"     * Returns a string representation of the person\u0027s details for display.","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"dhlee03"},"content":"    public String getInformation() {","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"dhlee03"},"content":"        return name + \"\\n\" + phone + \"\\n\" + email + \"\\n\" + category + \"\\n\" + comment + \"\\n\";","lastModifiedDate":"2024-04-14"},{"lineNumber":143,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dhlee03":45,"julia-cp":14,"bachletuankhai":1,"-":84}},{"path":"src/main/java/seedu/address/model/person/PersonFactory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":" * Factory class for creating Person objects.","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"public class PersonFactory {","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"     * Creates a Person based on the necessary fields.","lastModifiedDate":"2024-04-14"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"    public static Person createPerson(Name name, Phone phone, Email email, Category category) {","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"        return createPerson(name, phone, email, category, new Comment());","lastModifiedDate":"2024-04-14"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"     * Creates a Person with the category and comment.","lastModifiedDate":"2024-04-14"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"    public static Person createPerson(Name name, Phone phone, Email email, Category category, Comment comment) {","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"        return createPerson(name, phone, email, category, comment, Group.getDefaultGroupForCategory(category.type));","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"     * Creates a Person with the category, comment and group.","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"    public static Person createPerson(Name name, Phone phone, Email email, Category category, Comment comment,","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"                                      Group group) {","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"        Person categoryPerson;","lastModifiedDate":"2024-04-14"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"        switch (category.type) {","lastModifiedDate":"2024-04-14"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"        case PARTICIPANT:","lastModifiedDate":"2024-04-14"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"            categoryPerson \u003d new Participant(name, phone, email, category, comment);","lastModifiedDate":"2024-04-14"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"            break;","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"        case STAFF:","lastModifiedDate":"2024-04-14"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"            categoryPerson \u003d new Staff(name, phone, email, category, comment);","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"            break;","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"        case SPONSOR:","lastModifiedDate":"2024-04-14"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"            return new Sponsor(name, phone, email, category, comment);","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"        default: // cannot happen due to category validation","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"            throw new IllegalArgumentException(Category.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-14"},{"lineNumber":38,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"        categoryPerson.setGroup(group);","lastModifiedDate":"2024-04-14"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"        return categoryPerson;","lastModifiedDate":"2024-04-14"},{"lineNumber":41,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"dhlee03":40,"julia-cp":2}},{"path":"src/main/java/seedu/address/model/person/Sponsor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.exceptions.GroupSponsorException;","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":" * Represents a sponsor in the hackathon.","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":" * Inherits interface Identifiable.","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"public class Sponsor extends Person {","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"julia-cp"},"content":"    public static final int INVALID_GROUP_NUMBER \u003d -1;","lastModifiedDate":"2024-04-10"},{"lineNumber":12,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"     * Constructs a sponsor with essential information and comment. Every field must be present and not null.","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"    public Sponsor(Name name, Phone phone, Email email, Category category, Comment comment) {","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"        super(name, phone, email, category, comment);","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"julia-cp"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":21,"author":{"gitId":"julia-cp"},"content":"     * Throws GroupSponsorException.","lastModifiedDate":"2024-04-10"},{"lineNumber":22,"author":{"gitId":"julia-cp"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":23,"author":{"gitId":"julia-cp"},"content":"    @Override","lastModifiedDate":"2024-04-10"},{"lineNumber":24,"author":{"gitId":"julia-cp"},"content":"    public void setGroup(Group group) {","lastModifiedDate":"2024-04-10"},{"lineNumber":25,"author":{"gitId":"julia-cp"},"content":"        throw new GroupSponsorException();","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":28,"author":{"gitId":"julia-cp"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":29,"author":{"gitId":"julia-cp"},"content":"     * Returns null.","lastModifiedDate":"2024-04-10"},{"lineNumber":30,"author":{"gitId":"julia-cp"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":31,"author":{"gitId":"julia-cp"},"content":"    @Override","lastModifiedDate":"2024-04-10"},{"lineNumber":32,"author":{"gitId":"julia-cp"},"content":"    public Group getGroup() {","lastModifiedDate":"2024-04-10"},{"lineNumber":33,"author":{"gitId":"julia-cp"},"content":"        return null;","lastModifiedDate":"2024-04-10"},{"lineNumber":34,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":35,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":36,"author":{"gitId":"julia-cp"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":37,"author":{"gitId":"julia-cp"},"content":"     * Throws GroupSponsorException.","lastModifiedDate":"2024-04-10"},{"lineNumber":38,"author":{"gitId":"julia-cp"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":39,"author":{"gitId":"julia-cp"},"content":"    public void setGroupNumber(int groupNumber) {","lastModifiedDate":"2024-04-10"},{"lineNumber":40,"author":{"gitId":"julia-cp"},"content":"        throw new GroupSponsorException();","lastModifiedDate":"2024-04-10"},{"lineNumber":41,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":42,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":43,"author":{"gitId":"julia-cp"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":44,"author":{"gitId":"julia-cp"},"content":"     * Returns invalid group number.","lastModifiedDate":"2024-04-10"},{"lineNumber":45,"author":{"gitId":"julia-cp"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":46,"author":{"gitId":"julia-cp"},"content":"    public int getGroupNumber() {","lastModifiedDate":"2024-04-10"},{"lineNumber":47,"author":{"gitId":"julia-cp"},"content":"        return INVALID_GROUP_NUMBER;","lastModifiedDate":"2024-04-10"},{"lineNumber":48,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"dhlee03":15,"julia-cp":34}},{"path":"src/main/java/seedu/address/model/person/Staff.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"julia-cp"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"/**","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":" * Represents a staff in the hackathon.","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":" * Inherits interface Identifiable.","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":" */","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"public class Staff extends Person {","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"    private Group group;","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"     * Constructs staff with essential information and comment. Every field must be present and not null.","lastModifiedDate":"2024-04-14"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"    public Staff(Name name, Phone phone, Email email, Category category, Comment comment) {","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"        super(name, phone, email, category, comment);","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"        this.group \u003d new Group();","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"julia-cp"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":22,"author":{"gitId":"julia-cp"},"content":"     * Sets the group of the staff.","lastModifiedDate":"2024-04-10"},{"lineNumber":23,"author":{"gitId":"julia-cp"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":24,"author":{"gitId":"julia-cp"},"content":"    @Override","lastModifiedDate":"2024-04-10"},{"lineNumber":25,"author":{"gitId":"julia-cp"},"content":"    public void setGroup(Group group) {","lastModifiedDate":"2024-04-10"},{"lineNumber":26,"author":{"gitId":"julia-cp"},"content":"        this.group \u003d group;","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":28,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":29,"author":{"gitId":"julia-cp"},"content":"    /**","lastModifiedDate":"2024-04-10"},{"lineNumber":30,"author":{"gitId":"julia-cp"},"content":"     * Returns the group of the staff.","lastModifiedDate":"2024-04-10"},{"lineNumber":31,"author":{"gitId":"julia-cp"},"content":"     */","lastModifiedDate":"2024-04-10"},{"lineNumber":32,"author":{"gitId":"julia-cp"},"content":"    @Override","lastModifiedDate":"2024-04-10"},{"lineNumber":33,"author":{"gitId":"julia-cp"},"content":"    public Group getGroup() {","lastModifiedDate":"2024-04-10"},{"lineNumber":34,"author":{"gitId":"julia-cp"},"content":"        return group;","lastModifiedDate":"2024-04-10"},{"lineNumber":35,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":36,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"     * Sets the group number of the staff.","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"julia-cp"},"content":"    @Override","lastModifiedDate":"2024-04-10"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"    public void setGroupNumber(int groupNumber) {","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"        this.group \u003d new Group(groupNumber);","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"     * Returns the group number of the staff.","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"julia-cp"},"content":"    @Override","lastModifiedDate":"2024-04-10"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"    public int getGroupNumber() {","lastModifiedDate":"2024-03-22"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"        return group.getGroupNumber();","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"julia-cp"},"content":"    @Override","lastModifiedDate":"2024-04-10"},{"lineNumber":54,"author":{"gitId":"julia-cp"},"content":"    public ToStringBuilder toStringBuilder() {","lastModifiedDate":"2024-04-10"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"        return super.toStringBuilder().add(\"group\", group);","lastModifiedDate":"2024-04-12"},{"lineNumber":56,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":57,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":58,"author":{"gitId":"julia-cp"},"content":"    @Override","lastModifiedDate":"2024-04-10"},{"lineNumber":59,"author":{"gitId":"julia-cp"},"content":"    public String getInformation() {","lastModifiedDate":"2024-04-10"},{"lineNumber":60,"author":{"gitId":"dhlee03"},"content":"        return super.getInformation() + group + \"\\n\";","lastModifiedDate":"2024-04-14"},{"lineNumber":61,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":62,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"dhlee03":32,"julia-cp":27,"bachletuankhai":3}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"        return internalList.stream().anyMatch(toCheck::isSameIdentity);","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"dhlee03"},"content":"        if (!target.isSameIdentity(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"julia-cp"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"julia-cp"},"content":"     * Groups {@code target} into {@code groupNumber}.","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"julia-cp"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"julia-cp"},"content":"     * {@code groupNumber} must be a positive integer.","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"julia-cp"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"julia-cp"},"content":"    public void groupPerson(Person target, int groupNumber) {","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"julia-cp"},"content":"        requireAllNonNull(target, groupNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"julia-cp"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"julia-cp"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"julia-cp"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"julia-cp"},"content":"        target.setGroupNumber(groupNumber);","lastModifiedDate":"2024-04-10"},{"lineNumber":114,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"julia-cp"},"content":"        internalList.set(index, target);","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"dhlee03"},"content":"                if (persons.get(i).isSameIdentity(persons.get(j))) {","lastModifiedDate":"2024-04-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dhlee03":3,"julia-cp":18,"-":147}},{"path":"src/main/java/seedu/address/model/person/exceptions/GroupSponsorException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"julia-cp"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2024-04-10"},{"lineNumber":2,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":3,"author":{"gitId":"julia-cp"},"content":"/**","lastModifiedDate":"2024-04-10"},{"lineNumber":4,"author":{"gitId":"julia-cp"},"content":" * Signals that the operation is unable to find Group of a Sponsor.","lastModifiedDate":"2024-04-10"},{"lineNumber":5,"author":{"gitId":"julia-cp"},"content":" */","lastModifiedDate":"2024-04-10"},{"lineNumber":6,"author":{"gitId":"julia-cp"},"content":"public class GroupSponsorException extends RuntimeException {","lastModifiedDate":"2024-04-10"},{"lineNumber":7,"author":{"gitId":"julia-cp"},"content":"    public GroupSponsorException() {","lastModifiedDate":"2024-04-10"},{"lineNumber":8,"author":{"gitId":"julia-cp"},"content":"        super(\"Sponsor doesn\u0027t have a group\");","lastModifiedDate":"2024-04-10"},{"lineNumber":9,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-10"},{"lineNumber":10,"author":{"gitId":"julia-cp"},"content":"}","lastModifiedDate":"2024-04-10"}],"authorContributionMap":{"julia-cp":10}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.EventCategory;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.EventFactory;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Category;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.PersonFactory;","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new Person[]{","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"                PersonFactory.createPerson(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"                        new Email(\"alexyeoh@example.com\"), new Category(\"PARTICIPANT\")),","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"                PersonFactory.createPerson(new Name(\"Bernice Yu\"), new Phone(\"99272758\"),","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"                        new Email(\"berniceyu@example.com\"), new Category(\"PARTICIPANT\")),","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"                PersonFactory.createPerson(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"),","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"                        new Email(\"charlotte@example.com\"), new Category(\"PARTICIPANT\")),","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"                PersonFactory.createPerson(new Name(\"David Li\"), new Phone(\"91031282\"),","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"                        new Email(\"lidavid@example.com\"), new Category(\"PARTICIPANT\")),","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"                PersonFactory.createPerson(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"),","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"                        new Email(\"irfan@example.com\"), new Category(\"PARTICIPANT\")),","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"                PersonFactory.createPerson(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"),","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"                        new Email(\"royb@example.com\"), new Category(\"PARTICIPANT\")),","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"                PersonFactory.createPerson(new Name(\"Gogle\"), new Phone(\"12345678\"),","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"                        new Email(\"gogle@example.com\"), new Category(\"SPONSOR\")),","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"                PersonFactory.createPerson(new Name(\"Facebok\"), new Phone(\"87654321\"),","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"                        new Email(\"facebok@example.com\"), new Category(\"SPONSOR\")),","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"                PersonFactory.createPerson(new Name(\"Twiter\"), new Phone(\"87654322\"),","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"                        new Email(\"twiter@example.com\"), new Category(\"SPONSOR\")),","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"                PersonFactory.createPerson(new Name(\"Peter Lee\"), new Phone(\"7171717\"),","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"                        new Email(\"peterlee@example.com\"), new Category(\"STAFF\"))};","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"    public static Event[] getSampleEvents() {","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"        return new Event[]{","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"                EventFactory.createEvent(new EventName(\"Meeting\"), new EventDate(\"23-05-2024\"),","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"                        new EventCategory(\"PARTICIPANT\")),","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"                EventFactory.createEvent(new EventName(\"Conference\"), new EventDate(\"24-05-2024\"),","lastModifiedDate":"2024-04-14"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"                        new EventCategory(\"STAFF\")),","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"                EventFactory.createEvent(new EventName(\"Seminar\"), new EventDate(\"25-05-2024\"),","lastModifiedDate":"2024-04-14"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"                        new EventCategory(\"SPONSOR\")),","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"                EventFactory.createEvent(new EventName(\"Workshop\"), new EventDate(\"27-05-2024\"),","lastModifiedDate":"2024-04-14"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"                        new EventCategory(\"PARTICIPANT\")),","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"                EventFactory.createEvent(new EventName(\"Training\"), new EventDate(\"01-06-2024\"),","lastModifiedDate":"2024-04-14"},{"lineNumber":68,"author":{"gitId":"meenulekha"},"content":"                        new EventCategory(\"PARTICIPANT\")),","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"                EventFactory.createEvent(new EventName(\"Lecture\"), new EventDate(\"02-06-2024\"),","lastModifiedDate":"2024-04-14"},{"lineNumber":70,"author":{"gitId":"meenulekha"},"content":"                        new EventCategory(\"PARTICIPANT\")),","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"                EventFactory.createEvent(new EventName(\"Meeting 2\"), new EventDate(\"06-06-2024\"),","lastModifiedDate":"2024-04-14"},{"lineNumber":72,"author":{"gitId":"meenulekha"},"content":"                        new EventCategory(\"STAFF\"))","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"meenulekha"},"content":"        };","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"meenulekha"},"content":"    public static ReadOnlyEventBook getSampleEventBook() {","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"meenulekha"},"content":"        EventBook sampleEb \u003d new EventBook();","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"meenulekha"},"content":"        for (Event sampleEvent : getSampleEvents()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"meenulekha"},"content":"            sampleEb.addEvent(sampleEvent);","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":82,"author":{"gitId":"meenulekha"},"content":"        return sampleEb;","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"dhlee03":23,"meenulekha":27,"bachletuankhai":7,"-":30}},{"path":"src/main/java/seedu/address/storage/EventBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":" * Represents a storage for {@link seedu.address.model.EventBook}.","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"public interface EventBookStorage {","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"    Path getEventBookFilePath();","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"     * Returns AddressBook data as a {@link ReadOnlyEventBook}.","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"    Optional\u003cReadOnlyEventBook\u003e readEventBook() throws DataLoadingException;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"     * @see #getEventBookFilePath()","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"    Optional\u003cReadOnlyEventBook\u003e readEventBook(Path filePath) throws DataLoadingException;","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"     * Saves the given {@link ReadOnlyEventBook} to the storage.","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"     * @param eventBook cannot be null.","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"    void saveEventBook(ReadOnlyEventBook eventBook) throws IOException;","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"     * @see #saveEventBook(ReadOnlyEventBook)","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"    void saveEventBook(ReadOnlyEventBook eventBook, Path filePath) throws IOException;","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":43}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.EventCategory;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2024-04-04"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.EventFactory;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.person.Category;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":" * Jackson-friendly version of {@link Event}.","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"public class JsonAdaptedEvent {","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"event\u0027s %s field is missing!\";","lastModifiedDate":"2024-04-04"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"    private final String name;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"    private final String date;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"    private final String category;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"    @JsonCreator","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"    public JsonAdaptedEvent(@JsonProperty(\"name\") String name, @JsonProperty(\"date\") String date,","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"                             @JsonProperty(\"category\") String category) {","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"        this.category \u003d category;","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"    public JsonAdaptedEvent(Event source) {","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"        name \u003d source.getEventName().eventName;","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"        date \u003d source.getEventDate().eventDate;","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"        category \u003d source.getEventCategory().value;","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"    public Event toModelType() throws IllegalValueException {","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-04-04"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"                    EventName.class.getSimpleName()));","lastModifiedDate":"2024-04-04"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"        if (!EventName.isValidName(name)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"        final EventName modelName \u003d new EventName(name);","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"                    EventDate.class.getSimpleName()));","lastModifiedDate":"2024-04-04"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"        if (!EventDate.isValidDate(date)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"meenulekha"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"meenulekha"},"content":"        final EventDate modelDate \u003d new EventDate(date);","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"meenulekha"},"content":"        if (category \u003d\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"meenulekha"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"meenulekha"},"content":"                    EventCategory.class.getSimpleName()));","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"meenulekha"},"content":"        if (!EventCategory.isValidCategory(category)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"meenulekha"},"content":"            throw new IllegalValueException(Category.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"meenulekha"},"content":"        final EventCategory modelCategory \u003d new EventCategory(category);","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"meenulekha"},"content":"        return EventFactory.createEvent(modelName, modelDate, modelCategory);","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":83}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Category;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Group;","lastModifiedDate":"2024-04-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.PersonFactory;","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"    private final String category;","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"    private final String comment;","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"julia-cp"},"content":"    private final String group;","lastModifiedDate":"2024-04-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"category\") String category,","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"julia-cp"},"content":"                             @JsonProperty(\"comment\") String comment,","lastModifiedDate":"2024-04-10"},{"lineNumber":37,"author":{"gitId":"julia-cp"},"content":"                             @JsonProperty(\"group\") String group) {","lastModifiedDate":"2024-04-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"        this.category \u003d category;","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"        this.comment \u003d comment;","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"julia-cp"},"content":"        this.group \u003d group;","lastModifiedDate":"2024-04-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"dhlee03"},"content":"        category \u003d source.getCategory().value;","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"dhlee03"},"content":"        comment \u003d source.getComment().value;","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"julia-cp"},"content":"        if (source.getGroup() \u003d\u003d null) {","lastModifiedDate":"2024-04-10"},{"lineNumber":56,"author":{"gitId":"julia-cp"},"content":"            group \u003d null;","lastModifiedDate":"2024-04-10"},{"lineNumber":57,"author":{"gitId":"julia-cp"},"content":"        } else {","lastModifiedDate":"2024-04-10"},{"lineNumber":58,"author":{"gitId":"julia-cp"},"content":"            group \u003d source.getGroup().value;","lastModifiedDate":"2024-04-10"},{"lineNumber":59,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"dhlee03"},"content":"        if (category \u003d\u003d null) {","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"dhlee03"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"dhlee03"},"content":"                    Category.class.getSimpleName()));","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"dhlee03"},"content":"        if (!Category.isValidCategory(category)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"dhlee03"},"content":"            throw new IllegalValueException(Category.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"dhlee03"},"content":"        final Category modelCategory \u003d new Category(category);","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"dhlee03"},"content":"        if (comment \u003d\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"dhlee03"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"dhlee03"},"content":"                    Comment.class.getSimpleName()));","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"dhlee03"},"content":"        if (!Comment.isValidComment(comment)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"dhlee03"},"content":"            throw new IllegalValueException(Comment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"dhlee03"},"content":"        final Comment modelComment \u003d new Comment(comment);","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"julia-cp"},"content":"        Person model \u003d PersonFactory.createPerson(modelName, modelPhone, modelEmail, modelCategory, modelComment);","lastModifiedDate":"2024-04-10"},{"lineNumber":112,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":113,"author":{"gitId":"julia-cp"},"content":"        if (Group.isValidGroup(group)) {","lastModifiedDate":"2024-04-10"},{"lineNumber":114,"author":{"gitId":"julia-cp"},"content":"            model.setGroupNumber(Integer.parseInt(group));","lastModifiedDate":"2024-04-10"},{"lineNumber":115,"author":{"gitId":"julia-cp"},"content":"            Group.setTotalGroupNumber(Math.max(Group.getTotalGroupNumber(), Integer.parseInt(group)));","lastModifiedDate":"2024-04-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-10"},{"lineNumber":118,"author":{"gitId":"julia-cp"},"content":"        return model;","lastModifiedDate":"2024-04-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"dhlee03":28,"julia-cp":16,"-":77}},{"path":"src/main/java/seedu/address/storage/JsonEventBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"import java.util.Optional;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":" * A class to access EventBook data stored as a json file on the hard disk.","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"public class JsonEventBookStorage implements EventBookStorage {","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonEventBookStorage.class);","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"    private Path filePath;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"    public JsonEventBookStorage(Path filePath) {","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"    public Path getEventBookFilePath() {","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"        return filePath;","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"    public Optional\u003cReadOnlyEventBook\u003e readEventBook() throws DataLoadingException {","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"        return readEventBook(filePath);","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"    public Optional\u003cReadOnlyEventBook\u003e readEventBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"        Optional\u003cJsonSerializableEventBook\u003e jsonEventBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"                filePath, JsonSerializableEventBook.class);","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"        if (!jsonEventBook.isPresent()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"            return Optional.empty();","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"            return Optional.of(jsonEventBook.get().toModelType());","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"    public void saveEventBook(ReadOnlyEventBook eventBook) throws IOException {","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"        saveEventBook(eventBook, filePath);","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"     * Similar to {@link #saveEventBook(ReadOnlyEventBook)}.","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"    public void saveEventBook(ReadOnlyEventBook eventBook, Path filePath) throws IOException {","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(eventBook);","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"meenulekha"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"meenulekha"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"meenulekha"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableEventBook(eventBook), filePath);","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":73}},{"path":"src/main/java/seedu/address/storage/JsonSerializableEventBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import java.util.List;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":" * An Immutable EventBook that is serializable to JSON format.","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"@JsonRootName(value \u003d \"eventbook\")","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"public class JsonSerializableEventBook {","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"Events list contains duplicate event(s).\";","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"    private final List\u003cJsonAdaptedEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"    @JsonCreator","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"    public JsonSerializableEventBook(@JsonProperty(\"events\") List\u003cJsonAdaptedEvent\u003e events) {","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"        this.events.addAll(events);","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"    public JsonSerializableEventBook(ReadOnlyEventBook source) {","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"        events.addAll(source.getEventList().stream().map(JsonAdaptedEvent::new).collect(Collectors.toList()));","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"    public EventBook toModelType() throws IllegalValueException {","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"        EventBook eventBook \u003d new EventBook();","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"        for (JsonAdaptedEvent jsonAdaptedEvent : events) {","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"            Event event \u003d jsonAdaptedEvent.toModelType();","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"            if (eventBook.hasEvent(event)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"            eventBook.addEvent(event);","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"        return eventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":60}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"public interface Storage extends AddressBookStorage, EventBookStorage, UserPrefsStorage {","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"    Path getEventBookFilePath();","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"    Optional\u003cReadOnlyEventBook\u003e readEventBook() throws DataLoadingException;","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"    void saveEventBook(ReadOnlyEventBook eventBook) throws IOException;","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"meenulekha":11,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"    private EventBookStorage eventBookStorage;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"    public StorageManager(AddressBookStorage addressBookStorage,","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"                          EventBookStorage eventBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"        this.eventBookStorage \u003d eventBookStorage;","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"meenulekha"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d EventBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"meenulekha"},"content":"    public Path getEventBookFilePath() {","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"meenulekha"},"content":"        return eventBookStorage.getEventBookFilePath();","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"meenulekha"},"content":"    public Optional\u003cReadOnlyEventBook\u003e readEventBook() throws DataLoadingException {","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"meenulekha"},"content":"        return readEventBook(eventBookStorage.getEventBookFilePath());","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"meenulekha"},"content":"    public Optional\u003cReadOnlyEventBook\u003e readEventBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"meenulekha"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"meenulekha"},"content":"        return eventBookStorage.readEventBook(filePath);","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"meenulekha"},"content":"    public void saveEventBook(ReadOnlyEventBook eventBook) throws IOException {","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"meenulekha"},"content":"        saveEventBook(eventBook, eventBookStorage.getEventBookFilePath());","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"meenulekha"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"meenulekha"},"content":"    public void saveEventBook(ReadOnlyEventBook eventBook, Path filePath) throws IOException {","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"meenulekha"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"meenulekha"},"content":"        eventBookStorage.saveEventBook(eventBook, filePath);","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"meenulekha":32,"-":77}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"    private Consumer\u003cString\u003e commandToHistorySaver \u003d (commandText) -\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"    };","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the","lastModifiedDate":"2024-04-05"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"        // command box.","lastModifiedDate":"2024-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor} and 2","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"     * suppliers for the previous and next command.","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"     * @param commandExecutor         The command executor.","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"     * @param previousCommandSupplier The supplier for the previous command.","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"     * @param nextCommandSupplier     The supplier for the next command.","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"     * @param commandToHistorySaver   The consumer for saving the command to","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"     *                                history.","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"    public CommandBox(CommandExecutor commandExecutor, Supplier\u003cString\u003e previousCommandSupplier,","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"            Supplier\u003cString\u003e nextCommandSupplier, Consumer\u003cString\u003e commandToHistorySaver) {","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"        this(commandExecutor);","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"        setArrowKeyHandler(previousCommandSupplier, nextCommandSupplier);","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"        this.commandToHistorySaver \u003d commandToHistorySaver;","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"     * Sets the action handler for arrow key events. This handler will cycle through","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"     * the command history.","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"    private void setArrowKeyHandler(Supplier\u003cString\u003e previousCommandSupplier, Supplier\u003cString\u003e nextCommandSupplier) {","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"        commandTextField.addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"            switch (event.getCode()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"            case UP:","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"                setNullableUserInput(previousCommandSupplier);","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"                event.consume();","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"                break;","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"            case DOWN:","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"                setNullableUserInput(nextCommandSupplier);","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"                event.consume();","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"bachletuankhai"},"content":"                break;","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"bachletuankhai"},"content":"            default:","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"bachletuankhai"},"content":"                // let the event pass","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"bachletuankhai"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"bachletuankhai"},"content":"        });","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":79,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":80,"author":{"gitId":"bachletuankhai"},"content":"     * Focuses on the command box.","lastModifiedDate":"2024-04-04"},{"lineNumber":81,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":82,"author":{"gitId":"bachletuankhai"},"content":"    public void focus() {","lastModifiedDate":"2024-04-04"},{"lineNumber":83,"author":{"gitId":"bachletuankhai"},"content":"        commandTextField.requestFocus();","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":85,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":86,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"bachletuankhai"},"content":"     * Sets the user input to the given supplier\u0027s result if it is not null.","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"bachletuankhai"},"content":"     * @param supplier The supplier to get the user input from.","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"bachletuankhai"},"content":"    private void setNullableUserInput(Supplier\u003cString\u003e supplier) {","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"bachletuankhai"},"content":"        String result \u003d supplier.get();","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"bachletuankhai"},"content":"        if (result \u003d\u003d null) {","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"bachletuankhai"},"content":"            return;","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"bachletuankhai"},"content":"        commandTextField.setText(result);","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"bachletuankhai"},"content":"        commandTextField.positionCaret(result.length());","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"bachletuankhai"},"content":"     * Saves the command to history.","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"bachletuankhai"},"content":"     * @param commandText The command text to be saved.","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"bachletuankhai"},"content":"    private void saveCommandToHistory(String commandText) {","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"bachletuankhai"},"content":"        commandToHistorySaver.accept(commandText);","lastModifiedDate":"2024-03-31"},{"lineNumber":107,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":118,"author":{"gitId":"bachletuankhai"},"content":"        saveCommandToHistory(commandText);","lastModifiedDate":"2024-03-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"bachletuankhai":77,"-":84}},{"path":"src/main/java/seedu/address/ui/EventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.EventCategory;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":" * An UI component that displays information of a {@code Event}.","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"public class EventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"    private static final String FXML \u003d \"EventListCard.fxml\";","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"     * keywords in JavaFX.","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"     * issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"    public final Event event;","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"    private HBox cardPane;","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"    private Label eventname;","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"    private Label eventdate;","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"    private Label eventcategory;","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"    private Label id;","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"     * Creates a {@code EventCode} with the given {@code event} and index to","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"     * display.","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"    public EventCard(Event event, int displayedIndex) {","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"        super(FXML);","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"        this.event \u003d event;","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"        id.setText(displayedIndex + \"\");","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"        eventname.setText(event.getEventName().eventName);","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"        eventdate.setText(event.getEventDate().eventDate);","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"        eventcategory.setText(event.getEventCategory().value);","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"        eventcategory.getStyleClass().add(getCategoryStyleClass(event.getEventCategory()));","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"    private String getCategoryStyleClass(EventCategory category) {","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"        return \"category-label-\" + category.value.toLowerCase();","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":58}},{"path":"src/main/java/seedu/address/ui/EventCommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2024-04-05"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import java.util.function.Supplier;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.commands.EventCommandResult;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":" * The UI component that is responsible for receiving user command inputs in","lastModifiedDate":"2024-04-05"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":" * event window.","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"public class EventCommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"    private Consumer\u003cString\u003e commandToHistorySaver \u003d (commandText) -\u003e {","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"    };","lastModifiedDate":"2024-04-05"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"    private TextField commandTextField;","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"    public EventCommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2024-04-05"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"        super(FXML);","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the","lastModifiedDate":"2024-04-05"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"        // command box.","lastModifiedDate":"2024-04-05"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-04-05"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor} and 2","lastModifiedDate":"2024-04-05"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"     * suppliers for the previous and next command.","lastModifiedDate":"2024-04-05"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-04-05"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"     * @param commandExecutor         The command executor.","lastModifiedDate":"2024-04-05"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"     * @param previousCommandSupplier The supplier for the previous command.","lastModifiedDate":"2024-04-05"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"     * @param nextCommandSupplier     The supplier for the next command.","lastModifiedDate":"2024-04-05"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"     * @param commandToHistorySaver   The consumer for saving the command to","lastModifiedDate":"2024-04-05"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"     *                                history.","lastModifiedDate":"2024-04-05"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-04-05"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"    public EventCommandBox(CommandExecutor commandExecutor, Supplier\u003cString\u003e previousCommandSupplier,","lastModifiedDate":"2024-04-05"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"            Supplier\u003cString\u003e nextCommandSupplier, Consumer\u003cString\u003e commandToHistorySaver) {","lastModifiedDate":"2024-04-05"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"        this(commandExecutor);","lastModifiedDate":"2024-04-05"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"        setArrowKeyHandler(previousCommandSupplier, nextCommandSupplier);","lastModifiedDate":"2024-04-05"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"        this.commandToHistorySaver \u003d commandToHistorySaver;","lastModifiedDate":"2024-04-05"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-04-05"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"     * Sets the action handler for arrow key events. This handler will cycle through","lastModifiedDate":"2024-04-05"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"     * the command history.","lastModifiedDate":"2024-04-05"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-04-05"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"    private void setArrowKeyHandler(Supplier\u003cString\u003e previousCommandSupplier, Supplier\u003cString\u003e nextCommandSupplier) {","lastModifiedDate":"2024-04-05"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"        commandTextField.addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2024-04-05"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"            switch (event.getCode()) {","lastModifiedDate":"2024-04-05"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"            case UP:","lastModifiedDate":"2024-04-05"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"                setNullableUserInput(previousCommandSupplier);","lastModifiedDate":"2024-04-05"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"                event.consume();","lastModifiedDate":"2024-04-05"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"                break;","lastModifiedDate":"2024-04-05"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"            case DOWN:","lastModifiedDate":"2024-04-05"},{"lineNumber":72,"author":{"gitId":"bachletuankhai"},"content":"                setNullableUserInput(nextCommandSupplier);","lastModifiedDate":"2024-04-05"},{"lineNumber":73,"author":{"gitId":"bachletuankhai"},"content":"                event.consume();","lastModifiedDate":"2024-04-05"},{"lineNumber":74,"author":{"gitId":"bachletuankhai"},"content":"                break;","lastModifiedDate":"2024-04-05"},{"lineNumber":75,"author":{"gitId":"bachletuankhai"},"content":"            default:","lastModifiedDate":"2024-04-05"},{"lineNumber":76,"author":{"gitId":"bachletuankhai"},"content":"                // let the event pass","lastModifiedDate":"2024-04-05"},{"lineNumber":77,"author":{"gitId":"bachletuankhai"},"content":"            }","lastModifiedDate":"2024-04-05"},{"lineNumber":78,"author":{"gitId":"bachletuankhai"},"content":"        });","lastModifiedDate":"2024-04-05"},{"lineNumber":79,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":80,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":81,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-04-05"},{"lineNumber":82,"author":{"gitId":"bachletuankhai"},"content":"     * Sets the user input to the given supplier\u0027s result if it is not null.","lastModifiedDate":"2024-04-05"},{"lineNumber":83,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-04-05"},{"lineNumber":84,"author":{"gitId":"bachletuankhai"},"content":"     * @param supplier The supplier to get the user input from.","lastModifiedDate":"2024-04-05"},{"lineNumber":85,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-04-05"},{"lineNumber":86,"author":{"gitId":"bachletuankhai"},"content":"    private void setNullableUserInput(Supplier\u003cString\u003e supplier) {","lastModifiedDate":"2024-04-05"},{"lineNumber":87,"author":{"gitId":"bachletuankhai"},"content":"        String result \u003d supplier.get();","lastModifiedDate":"2024-04-05"},{"lineNumber":88,"author":{"gitId":"bachletuankhai"},"content":"        if (result \u003d\u003d null) {","lastModifiedDate":"2024-04-05"},{"lineNumber":89,"author":{"gitId":"bachletuankhai"},"content":"            return;","lastModifiedDate":"2024-04-05"},{"lineNumber":90,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-04-05"},{"lineNumber":91,"author":{"gitId":"bachletuankhai"},"content":"        commandTextField.setText(result);","lastModifiedDate":"2024-04-05"},{"lineNumber":92,"author":{"gitId":"bachletuankhai"},"content":"        commandTextField.positionCaret(result.length());","lastModifiedDate":"2024-04-05"},{"lineNumber":93,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":94,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":95,"author":{"gitId":"bachletuankhai"},"content":"    private void saveCommandToHistory(String commandText) {","lastModifiedDate":"2024-04-05"},{"lineNumber":96,"author":{"gitId":"bachletuankhai"},"content":"        commandToHistorySaver.accept(commandText);","lastModifiedDate":"2024-04-05"},{"lineNumber":97,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":98,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":99,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"meenulekha"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"meenulekha"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"meenulekha"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"meenulekha"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"meenulekha"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"meenulekha"},"content":"            return;","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"bachletuankhai"},"content":"        saveCommandToHistory(commandText);","lastModifiedDate":"2024-04-05"},{"lineNumber":110,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":111,"author":{"gitId":"meenulekha"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"meenulekha"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"meenulekha"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"meenulekha"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"meenulekha"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"meenulekha"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"meenulekha"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"meenulekha"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-04-05"},{"lineNumber":127,"author":{"gitId":"bachletuankhai"},"content":"     * Focuses on the command box.","lastModifiedDate":"2024-04-05"},{"lineNumber":128,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-04-05"},{"lineNumber":129,"author":{"gitId":"bachletuankhai"},"content":"    public void focus() {","lastModifiedDate":"2024-04-05"},{"lineNumber":130,"author":{"gitId":"bachletuankhai"},"content":"        commandTextField.requestFocus();","lastModifiedDate":"2024-04-05"},{"lineNumber":131,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":132,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":133,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"meenulekha"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":136,"author":{"gitId":"meenulekha"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"meenulekha"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"meenulekha"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"meenulekha"},"content":"            return;","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"meenulekha"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"meenulekha"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"meenulekha"},"content":"    @FunctionalInterface","lastModifiedDate":"2024-04-03"},{"lineNumber":150,"author":{"gitId":"meenulekha"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2024-04-03"},{"lineNumber":151,"author":{"gitId":"meenulekha"},"content":"        /**","lastModifiedDate":"2024-04-03"},{"lineNumber":152,"author":{"gitId":"meenulekha"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2024-04-03"},{"lineNumber":153,"author":{"gitId":"meenulekha"},"content":"         *","lastModifiedDate":"2024-04-03"},{"lineNumber":154,"author":{"gitId":"meenulekha"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2024-04-03"},{"lineNumber":155,"author":{"gitId":"meenulekha"},"content":"         */","lastModifiedDate":"2024-04-03"},{"lineNumber":156,"author":{"gitId":"meenulekha"},"content":"        EventCommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":157,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":158,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":159,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":81,"bachletuankhai":78}},{"path":"src/main/java/seedu/address/ui/EventListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-04-04"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":" * Panel containing the list of events.","lastModifiedDate":"2024-04-04"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"public class EventListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"    private static final String FXML \u003d \"EventListPanel.fxml\";","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(EventListPanel.class);","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"    private ListView\u003cEvent\u003e eventListView;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"    public EventListPanel(ObservableList\u003cEvent\u003e eventList) {","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"        super(FXML);","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"        eventListView.setItems(eventList);","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"        eventListView.setCellFactory(listView -\u003e new EventListPanel.EventListViewCell());","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-04-05"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"     * Focuses on the event list.","lastModifiedDate":"2024-04-05"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-04-05"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"    public void focus() {","lastModifiedDate":"2024-04-05"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"        eventListView.requestFocus();","lastModifiedDate":"2024-04-05"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"    class EventListViewCell extends ListCell\u003cEvent\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"        protected void updateItem(Event event, boolean empty) {","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"            super.updateItem(event, empty);","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"            if (empty || event \u003d\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"                setGraphic(null);","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"                setText(null);","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"            } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"                setGraphic(new EventCard(event, getIndex() + 1).getRoot());","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":43,"bachletuankhai":8}},{"path":"src/main/java/seedu/address/ui/EventWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import java.util.List;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.commands.EventCommandResult;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.inputhistory.UserInputHistory;","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":" * The Event Window. Provides the basic application layout containing a menu bar","lastModifiedDate":"2024-04-05"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":" * and space where other JavaFX elements can be placed.","lastModifiedDate":"2024-04-05"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"public class EventWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"    private static final String FXML \u003d \"EventWindow.fxml\";","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"    private Stage primaryStage;","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"    private MenuItem backMenuItem;","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"    private ResultDisplay eventResultDisplay;","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"    private StackPane eventResultDisplayPlaceholder;","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"    private EventListPanel eventListPanel;","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"    private StackPane eventListPanelPlaceholder;","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"    private Logic logic;","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"    private List\u003cEventHandler\u003cKeyEvent\u003e\u003e keyPressHandlers;","lastModifiedDate":"2024-04-05"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"     * Constructs an EventWindow with the specified primaryStage and logic.","lastModifiedDate":"2024-04-04"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"     *","lastModifiedDate":"2024-04-04"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"     * @param primaryStage The primary stage for the EventWindow.","lastModifiedDate":"2024-04-04"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"     * @param logic        The logic component responsible for handling application","lastModifiedDate":"2024-04-05"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"     *                     logic.","lastModifiedDate":"2024-04-05"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"     * @throws IllegalArgumentException if logic is null.","lastModifiedDate":"2024-04-04"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"    public EventWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"meenulekha"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"        this.keyPressHandlers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-05"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":71,"author":{"gitId":"meenulekha"},"content":"        if (logic \u003d\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"meenulekha"},"content":"            throw new IllegalArgumentException(\"Logic cannot be null\");","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"meenulekha"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"bachletuankhai"},"content":"        this.helpWindow \u003d HelpWindow.get();","lastModifiedDate":"2024-04-05"},{"lineNumber":76,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"meenulekha"},"content":"        // Configure the UI","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"meenulekha"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"meenulekha"},"content":"        setAccelerators();","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":83,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":84,"author":{"gitId":"bachletuankhai"},"content":"     * Handles the action event triggered when the user requests help. If the help","lastModifiedDate":"2024-04-05"},{"lineNumber":85,"author":{"gitId":"bachletuankhai"},"content":"     * window is not already showing, it will be shown. If the help window is","lastModifiedDate":"2024-04-05"},{"lineNumber":86,"author":{"gitId":"bachletuankhai"},"content":"     * already showing, it will be brought to focus.","lastModifiedDate":"2024-04-05"},{"lineNumber":87,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":88,"author":{"gitId":"meenulekha"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"meenulekha"},"content":"    public void handleHelp() {","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"meenulekha"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"meenulekha"},"content":"            helpWindow.show();","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"meenulekha"},"content":"        } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"meenulekha"},"content":"            helpWindow.focus();","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":97,"author":{"gitId":"meenulekha"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"meenulekha"},"content":"    private void handleExit() {","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"meenulekha"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"meenulekha"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"meenulekha"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"meenulekha"},"content":"        helpWindow.hide();","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"meenulekha"},"content":"        primaryStage.hide();","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"meenulekha"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"meenulekha"},"content":"    private void handleBack() {","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"meenulekha"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"meenulekha"},"content":"            primaryStage.close();","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"meenulekha"},"content":"            showMainWindow();","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"meenulekha"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"meenulekha"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"meenulekha"},"content":"    private void setAccelerators() {","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"meenulekha"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"bachletuankhai"},"content":"    private void clearAccelerators() {","lastModifiedDate":"2024-04-05"},{"lineNumber":121,"author":{"gitId":"bachletuankhai"},"content":"        helpMenuItem.setAccelerator(null);","lastModifiedDate":"2024-04-05"},{"lineNumber":122,"author":{"gitId":"bachletuankhai"},"content":"        backMenuItem.setAccelerator(null);","lastModifiedDate":"2024-04-05"},{"lineNumber":123,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":124,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":125,"author":{"gitId":"meenulekha"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"meenulekha"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"meenulekha"},"content":"        /*","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"meenulekha"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"bachletuankhai"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666 is fixed in later version of","lastModifiedDate":"2024-04-05"},{"lineNumber":131,"author":{"gitId":"bachletuankhai"},"content":"         * SDK.","lastModifiedDate":"2024-04-05"},{"lineNumber":132,"author":{"gitId":"meenulekha"},"content":"         *","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"meenulekha"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"meenulekha"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"bachletuankhai"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will not","lastModifiedDate":"2024-04-05"},{"lineNumber":136,"author":{"gitId":"bachletuankhai"},"content":"         * work when the focus is in them because the key event is consumed by the","lastModifiedDate":"2024-04-05"},{"lineNumber":137,"author":{"gitId":"bachletuankhai"},"content":"         * TextInputControl(s).","lastModifiedDate":"2024-04-05"},{"lineNumber":138,"author":{"gitId":"meenulekha"},"content":"         *","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"meenulekha"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"bachletuankhai"},"content":"         * help window purposely so to support accelerators even when focus is in","lastModifiedDate":"2024-04-05"},{"lineNumber":141,"author":{"gitId":"bachletuankhai"},"content":"         * CommandBox or ResultDisplay.","lastModifiedDate":"2024-04-05"},{"lineNumber":142,"author":{"gitId":"meenulekha"},"content":"         */","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"meenulekha"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"meenulekha"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"meenulekha"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"meenulekha"},"content":"                event.consume();","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"meenulekha"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"meenulekha"},"content":"        });","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":150,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":151,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-04-05"},{"lineNumber":152,"author":{"gitId":"bachletuankhai"},"content":"     * Sets the key press handler for the given key combination. This is a","lastModifiedDate":"2024-04-05"},{"lineNumber":153,"author":{"gitId":"bachletuankhai"},"content":"     * workaround for the bug reported here","lastModifiedDate":"2024-04-05"},{"lineNumber":154,"author":{"gitId":"bachletuankhai"},"content":"     * https://bugs.openjdk.java.net/browse/JDK-8131666.","lastModifiedDate":"2024-04-05"},{"lineNumber":155,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-04-05"},{"lineNumber":156,"author":{"gitId":"bachletuankhai"},"content":"     * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2024-04-05"},{"lineNumber":157,"author":{"gitId":"bachletuankhai"},"content":"     * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2024-04-05"},{"lineNumber":158,"author":{"gitId":"bachletuankhai"},"content":"     * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will not","lastModifiedDate":"2024-04-05"},{"lineNumber":159,"author":{"gitId":"bachletuankhai"},"content":"     * work when the focus is in them because the key event is consumed by the","lastModifiedDate":"2024-04-05"},{"lineNumber":160,"author":{"gitId":"bachletuankhai"},"content":"     * TextInputControl(s).","lastModifiedDate":"2024-04-05"},{"lineNumber":161,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-04-05"},{"lineNumber":162,"author":{"gitId":"bachletuankhai"},"content":"     * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2024-04-05"},{"lineNumber":163,"author":{"gitId":"bachletuankhai"},"content":"     * help window purposely so to support accelerators even when focus is in","lastModifiedDate":"2024-04-05"},{"lineNumber":164,"author":{"gitId":"bachletuankhai"},"content":"     * CommandBox or ResultDisplay.","lastModifiedDate":"2024-04-05"},{"lineNumber":165,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-04-05"},{"lineNumber":166,"author":{"gitId":"bachletuankhai"},"content":"     * @param func    the function to be executed when the key combination is","lastModifiedDate":"2024-04-05"},{"lineNumber":167,"author":{"gitId":"bachletuankhai"},"content":"     *                pressed","lastModifiedDate":"2024-04-05"},{"lineNumber":168,"author":{"gitId":"bachletuankhai"},"content":"     * @param keyComb the key combination","lastModifiedDate":"2024-04-05"},{"lineNumber":169,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-04-05"},{"lineNumber":170,"author":{"gitId":"bachletuankhai"},"content":"    private void setKeyPressHandler(Runnable func, KeyCombination keyComb) {","lastModifiedDate":"2024-04-05"},{"lineNumber":171,"author":{"gitId":"bachletuankhai"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2024-04-05"},{"lineNumber":172,"author":{"gitId":"bachletuankhai"},"content":"            if (keyComb.match(event)) {","lastModifiedDate":"2024-04-05"},{"lineNumber":173,"author":{"gitId":"bachletuankhai"},"content":"                if (event.getTarget() instanceof TextInputControl) {","lastModifiedDate":"2024-04-05"},{"lineNumber":174,"author":{"gitId":"bachletuankhai"},"content":"                    event.consume();","lastModifiedDate":"2024-04-05"},{"lineNumber":175,"author":{"gitId":"bachletuankhai"},"content":"                }","lastModifiedDate":"2024-04-05"},{"lineNumber":176,"author":{"gitId":"bachletuankhai"},"content":"                func.run();","lastModifiedDate":"2024-04-05"},{"lineNumber":177,"author":{"gitId":"bachletuankhai"},"content":"            }","lastModifiedDate":"2024-04-05"},{"lineNumber":178,"author":{"gitId":"bachletuankhai"},"content":"        });","lastModifiedDate":"2024-04-05"},{"lineNumber":179,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":180,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":181,"author":{"gitId":"bachletuankhai"},"content":"    private void clearKeyPressHandlers() {","lastModifiedDate":"2024-04-05"},{"lineNumber":182,"author":{"gitId":"bachletuankhai"},"content":"        keyPressHandlers.forEach(handler -\u003e getRoot().removeEventFilter(KeyEvent.KEY_PRESSED, handler));","lastModifiedDate":"2024-04-05"},{"lineNumber":183,"author":{"gitId":"bachletuankhai"},"content":"        keyPressHandlers.clear();","lastModifiedDate":"2024-04-05"},{"lineNumber":184,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":185,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":186,"author":{"gitId":"meenulekha"},"content":"    void fillInnerParts() {","lastModifiedDate":"2024-04-03"},{"lineNumber":187,"author":{"gitId":"meenulekha"},"content":"        EventListPanel eventListPanel \u003d new EventListPanel(logic.getFilteredEventList());","lastModifiedDate":"2024-04-03"},{"lineNumber":188,"author":{"gitId":"meenulekha"},"content":"        eventListPanelPlaceholder.getChildren().add(eventListPanel.getRoot());","lastModifiedDate":"2024-04-03"},{"lineNumber":189,"author":{"gitId":"bachletuankhai"},"content":"        // set focus trigger on the event list panel to F4","lastModifiedDate":"2024-04-05"},{"lineNumber":190,"author":{"gitId":"bachletuankhai"},"content":"        setKeyPressHandler(eventListPanel::focus, KeyCombination.keyCombination(\"F4\"));","lastModifiedDate":"2024-04-05"},{"lineNumber":191,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":192,"author":{"gitId":"meenulekha"},"content":"        if (eventResultDisplay \u003d\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":193,"author":{"gitId":"meenulekha"},"content":"            eventResultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2024-04-03"},{"lineNumber":194,"author":{"gitId":"meenulekha"},"content":"            eventResultDisplayPlaceholder.getChildren().add(eventResultDisplay.getRoot());","lastModifiedDate":"2024-04-03"},{"lineNumber":195,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":196,"author":{"gitId":"bachletuankhai"},"content":"        // set focus trigger on the event result display to F3","lastModifiedDate":"2024-04-05"},{"lineNumber":197,"author":{"gitId":"bachletuankhai"},"content":"        setKeyPressHandler(eventResultDisplay::focus, KeyCombination.keyCombination(\"F3\"));","lastModifiedDate":"2024-04-05"},{"lineNumber":198,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":199,"author":{"gitId":"meenulekha"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2024-04-03"},{"lineNumber":200,"author":{"gitId":"meenulekha"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2024-04-03"},{"lineNumber":201,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":202,"author":{"gitId":"bachletuankhai"},"content":"        UserInputHistory\u003cString\u003e history \u003d logic.getUserInputHistory();","lastModifiedDate":"2024-04-05"},{"lineNumber":203,"author":{"gitId":"bachletuankhai"},"content":"        EventCommandBox commandBox \u003d new EventCommandBox(this::executeCommand, history::getPreviousChat,","lastModifiedDate":"2024-04-05"},{"lineNumber":204,"author":{"gitId":"bachletuankhai"},"content":"                history::getNextChat, history::addChatToHistory);","lastModifiedDate":"2024-04-05"},{"lineNumber":205,"author":{"gitId":"meenulekha"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2024-04-03"},{"lineNumber":206,"author":{"gitId":"bachletuankhai"},"content":"        // set focus trigger on the command box to F2","lastModifiedDate":"2024-04-05"},{"lineNumber":207,"author":{"gitId":"bachletuankhai"},"content":"        setKeyPressHandler(commandBox::focus, KeyCombination.keyCombination(\"F2\"));","lastModifiedDate":"2024-04-05"},{"lineNumber":208,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":209,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":210,"author":{"gitId":"bachletuankhai"},"content":"    private void clearInnerParts() {","lastModifiedDate":"2024-04-05"},{"lineNumber":211,"author":{"gitId":"bachletuankhai"},"content":"        eventListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2024-04-05"},{"lineNumber":212,"author":{"gitId":"bachletuankhai"},"content":"        eventResultDisplayPlaceholder.getChildren().clear();","lastModifiedDate":"2024-04-05"},{"lineNumber":213,"author":{"gitId":"bachletuankhai"},"content":"        statusbarPlaceholder.getChildren().clear();","lastModifiedDate":"2024-04-05"},{"lineNumber":214,"author":{"gitId":"bachletuankhai"},"content":"        commandBoxPlaceholder.getChildren().clear();","lastModifiedDate":"2024-04-05"},{"lineNumber":215,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":216,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":217,"author":{"gitId":"meenulekha"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2024-04-03"},{"lineNumber":218,"author":{"gitId":"meenulekha"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2024-04-03"},{"lineNumber":219,"author":{"gitId":"meenulekha"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2024-04-03"},{"lineNumber":220,"author":{"gitId":"meenulekha"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":221,"author":{"gitId":"meenulekha"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2024-04-03"},{"lineNumber":222,"author":{"gitId":"meenulekha"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2024-04-03"},{"lineNumber":223,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":224,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":225,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":226,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":227,"author":{"gitId":"meenulekha"},"content":"    void show() {","lastModifiedDate":"2024-04-03"},{"lineNumber":228,"author":{"gitId":"meenulekha"},"content":"        primaryStage.show();","lastModifiedDate":"2024-04-03"},{"lineNumber":229,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":230,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":231,"author":{"gitId":"meenulekha"},"content":"    private void showMainWindow() throws IOException {","lastModifiedDate":"2024-04-03"},{"lineNumber":232,"author":{"gitId":"bachletuankhai"},"content":"        // Clean up the current window","lastModifiedDate":"2024-04-05"},{"lineNumber":233,"author":{"gitId":"bachletuankhai"},"content":"        clearAccelerators();","lastModifiedDate":"2024-04-05"},{"lineNumber":234,"author":{"gitId":"bachletuankhai"},"content":"        clearKeyPressHandlers();","lastModifiedDate":"2024-04-05"},{"lineNumber":235,"author":{"gitId":"bachletuankhai"},"content":"        clearInnerParts();","lastModifiedDate":"2024-04-05"},{"lineNumber":236,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":237,"author":{"gitId":"meenulekha"},"content":"        // Close the current window","lastModifiedDate":"2024-04-03"},{"lineNumber":238,"author":{"gitId":"meenulekha"},"content":"        primaryStage.close();","lastModifiedDate":"2024-04-03"},{"lineNumber":239,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":240,"author":{"gitId":"meenulekha"},"content":"        // Create a new MainWindow","lastModifiedDate":"2024-04-03"},{"lineNumber":241,"author":{"gitId":"meenulekha"},"content":"        MainWindow mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2024-04-03"},{"lineNumber":242,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":243,"author":{"gitId":"meenulekha"},"content":"        // Show the MainWindow","lastModifiedDate":"2024-04-03"},{"lineNumber":244,"author":{"gitId":"meenulekha"},"content":"        mainWindow.show();","lastModifiedDate":"2024-04-03"},{"lineNumber":245,"author":{"gitId":"meenulekha"},"content":"        mainWindow.fillInnerParts();","lastModifiedDate":"2024-04-03"},{"lineNumber":246,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":247,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":248,"author":{"gitId":"meenulekha"},"content":"    public EventListPanel getEventListPanel() {","lastModifiedDate":"2024-04-03"},{"lineNumber":249,"author":{"gitId":"meenulekha"},"content":"        return eventListPanel;","lastModifiedDate":"2024-04-03"},{"lineNumber":250,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":251,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":252,"author":{"gitId":"meenulekha"},"content":"    private EventCommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":253,"author":{"gitId":"meenulekha"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":254,"author":{"gitId":"meenulekha"},"content":"            if (logic \u003d\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":255,"author":{"gitId":"meenulekha"},"content":"                throw new IllegalStateException(\"Logic is not properly initialized\");","lastModifiedDate":"2024-04-03"},{"lineNumber":256,"author":{"gitId":"meenulekha"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":257,"author":{"gitId":"meenulekha"},"content":"            EventCommandResult eventCommandResult \u003d logic.executeEvent(commandText);","lastModifiedDate":"2024-04-03"},{"lineNumber":258,"author":{"gitId":"meenulekha"},"content":"            logger.info(\"Result: \" + eventCommandResult.getFeedbackToUser());","lastModifiedDate":"2024-04-03"},{"lineNumber":259,"author":{"gitId":"meenulekha"},"content":"            if (eventResultDisplay \u003d\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":260,"author":{"gitId":"meenulekha"},"content":"                throw new IllegalStateException(\"eventResultDisplay is not properly initialized\");","lastModifiedDate":"2024-04-03"},{"lineNumber":261,"author":{"gitId":"meenulekha"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":262,"author":{"gitId":"meenulekha"},"content":"            eventResultDisplay.setFeedbackToUser(eventCommandResult.getFeedbackToUser());","lastModifiedDate":"2024-04-03"},{"lineNumber":263,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":264,"author":{"gitId":"meenulekha"},"content":"            if (eventCommandResult.isShowHelp()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":265,"author":{"gitId":"meenulekha"},"content":"                handleHelp();","lastModifiedDate":"2024-04-03"},{"lineNumber":266,"author":{"gitId":"meenulekha"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":267,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":268,"author":{"gitId":"meenulekha"},"content":"            if (eventCommandResult.isExit()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":269,"author":{"gitId":"meenulekha"},"content":"                handleExit();","lastModifiedDate":"2024-04-03"},{"lineNumber":270,"author":{"gitId":"meenulekha"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":271,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":272,"author":{"gitId":"meenulekha"},"content":"            if (eventCommandResult.isBack()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":273,"author":{"gitId":"meenulekha"},"content":"                handleBack();","lastModifiedDate":"2024-04-03"},{"lineNumber":274,"author":{"gitId":"meenulekha"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":275,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":276,"author":{"gitId":"meenulekha"},"content":"            return eventCommandResult;","lastModifiedDate":"2024-04-03"},{"lineNumber":277,"author":{"gitId":"meenulekha"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":278,"author":{"gitId":"meenulekha"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2024-04-03"},{"lineNumber":279,"author":{"gitId":"meenulekha"},"content":"            if (eventResultDisplay !\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":280,"author":{"gitId":"meenulekha"},"content":"                eventResultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2024-04-03"},{"lineNumber":281,"author":{"gitId":"meenulekha"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":282,"author":{"gitId":"meenulekha"},"content":"            eventResultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2024-04-03"},{"lineNumber":283,"author":{"gitId":"meenulekha"},"content":"            throw e;","lastModifiedDate":"2024-04-03"},{"lineNumber":284,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":285,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":286,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":197,"bachletuankhai":89}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    public static final HelpWindow INSTANCE \u003d new HelpWindow();","lastModifiedDate":"2024-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s2-cs2103t-f12-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2024-04-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"    private HelpWindow(Stage root) {","lastModifiedDate":"2024-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"    private HelpWindow() {","lastModifiedDate":"2024-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-04-05"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2024-04-05"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-04-05"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"    public static HelpWindow get() {","lastModifiedDate":"2024-04-05"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"        return INSTANCE;","lastModifiedDate":"2024-04-05"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *                               \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"     *                               \u003cli\u003eif this method is called on a thread other","lastModifiedDate":"2024-04-05"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"     *                               than the JavaFX Application Thread.\u003c/li\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"     *                               \u003cli\u003eif this method is called during animation","lastModifiedDate":"2024-04-05"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"     *                               or layout processing.\u003c/li\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"     *                               \u003cli\u003eif this method is called on the primary","lastModifiedDate":"2024-04-05"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"     *                               stage.\u003c/li\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"     *                               \u003cli\u003eif {@code dialogStage} is already showing.","lastModifiedDate":"2024-04-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *                               \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"bachletuankhai":19,"-":88}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import java.io.IOException;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-05"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import java.util.List;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2024-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.inputhistory.UserInputHistory;","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":" * The Main Window. Provides the basic application layout containing a menu bar","lastModifiedDate":"2024-04-05"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":" * and space where other JavaFX elements can be placed.","lastModifiedDate":"2024-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"    private List\u003cEventHandler\u003cKeyEvent\u003e\u003e keyPressHandlers;","lastModifiedDate":"2024-04-05"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"    @FXML","lastModifiedDate":"2024-04-05"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"    private MenuItem eventListMenuItem;","lastModifiedDate":"2024-04-05"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"bachletuankhai"},"content":"        this.keyPressHandlers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"bachletuankhai"},"content":"        helpWindow \u003d HelpWindow.get();","lastModifiedDate":"2024-04-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"bachletuankhai"},"content":"    private void clearAccelerators() {","lastModifiedDate":"2024-04-05"},{"lineNumber":91,"author":{"gitId":"bachletuankhai"},"content":"        helpMenuItem.setAccelerator(null);","lastModifiedDate":"2024-04-05"},{"lineNumber":92,"author":{"gitId":"bachletuankhai"},"content":"        eventListMenuItem.setAccelerator(null);","lastModifiedDate":"2024-04-05"},{"lineNumber":93,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":94,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-04-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"bachletuankhai"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666 is fixed in later version of","lastModifiedDate":"2024-04-05"},{"lineNumber":106,"author":{"gitId":"bachletuankhai"},"content":"         * SDK.","lastModifiedDate":"2024-04-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"bachletuankhai"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will not","lastModifiedDate":"2024-04-05"},{"lineNumber":111,"author":{"gitId":"bachletuankhai"},"content":"         * work when the focus is in them because the key event is consumed by the","lastModifiedDate":"2024-04-05"},{"lineNumber":112,"author":{"gitId":"bachletuankhai"},"content":"         * TextInputControl(s).","lastModifiedDate":"2024-04-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"bachletuankhai"},"content":"         * help window purposely so to support accelerators even when focus is in","lastModifiedDate":"2024-04-05"},{"lineNumber":116,"author":{"gitId":"bachletuankhai"},"content":"         * CommandBox or ResultDisplay.","lastModifiedDate":"2024-04-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-04-05"},{"lineNumber":127,"author":{"gitId":"bachletuankhai"},"content":"     * Sets the key press handler for the given key combination. This is a","lastModifiedDate":"2024-04-05"},{"lineNumber":128,"author":{"gitId":"bachletuankhai"},"content":"     * workaround for the bug reported here","lastModifiedDate":"2024-04-05"},{"lineNumber":129,"author":{"gitId":"bachletuankhai"},"content":"     * https://bugs.openjdk.java.net/browse/JDK-8131666.","lastModifiedDate":"2024-04-05"},{"lineNumber":130,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-04-05"},{"lineNumber":131,"author":{"gitId":"bachletuankhai"},"content":"     * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2024-04-05"},{"lineNumber":132,"author":{"gitId":"bachletuankhai"},"content":"     * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2024-04-05"},{"lineNumber":133,"author":{"gitId":"bachletuankhai"},"content":"     * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will not","lastModifiedDate":"2024-04-05"},{"lineNumber":134,"author":{"gitId":"bachletuankhai"},"content":"     * work when the focus is in them because the key event is consumed by the","lastModifiedDate":"2024-04-05"},{"lineNumber":135,"author":{"gitId":"bachletuankhai"},"content":"     * TextInputControl(s).","lastModifiedDate":"2024-04-05"},{"lineNumber":136,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-04-05"},{"lineNumber":137,"author":{"gitId":"bachletuankhai"},"content":"     * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2024-04-05"},{"lineNumber":138,"author":{"gitId":"bachletuankhai"},"content":"     * help window purposely so to support accelerators even when focus is in","lastModifiedDate":"2024-04-05"},{"lineNumber":139,"author":{"gitId":"bachletuankhai"},"content":"     * CommandBox or ResultDisplay.","lastModifiedDate":"2024-04-05"},{"lineNumber":140,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-04-05"},{"lineNumber":141,"author":{"gitId":"bachletuankhai"},"content":"     * @param func    the function to be executed when the key combination is","lastModifiedDate":"2024-04-05"},{"lineNumber":142,"author":{"gitId":"bachletuankhai"},"content":"     *                pressed","lastModifiedDate":"2024-04-05"},{"lineNumber":143,"author":{"gitId":"bachletuankhai"},"content":"     * @param keyComb the key combination","lastModifiedDate":"2024-04-05"},{"lineNumber":144,"author":{"gitId":"bachletuankhai"},"content":"     * @return the event handler","lastModifiedDate":"2024-04-05"},{"lineNumber":145,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-04-05"},{"lineNumber":146,"author":{"gitId":"bachletuankhai"},"content":"    private void setKeyPressHandler(Runnable func, KeyCombination keyComb) {","lastModifiedDate":"2024-04-05"},{"lineNumber":147,"author":{"gitId":"bachletuankhai"},"content":"        EventHandler\u003cKeyEvent\u003e handler \u003d event -\u003e {","lastModifiedDate":"2024-04-05"},{"lineNumber":148,"author":{"gitId":"bachletuankhai"},"content":"            if (keyComb.match(event)) {","lastModifiedDate":"2024-04-05"},{"lineNumber":149,"author":{"gitId":"bachletuankhai"},"content":"                if (event.getTarget() instanceof TextInputControl) {","lastModifiedDate":"2024-04-05"},{"lineNumber":150,"author":{"gitId":"bachletuankhai"},"content":"                    event.consume();","lastModifiedDate":"2024-04-05"},{"lineNumber":151,"author":{"gitId":"bachletuankhai"},"content":"                }","lastModifiedDate":"2024-04-05"},{"lineNumber":152,"author":{"gitId":"bachletuankhai"},"content":"                func.run();","lastModifiedDate":"2024-04-05"},{"lineNumber":153,"author":{"gitId":"bachletuankhai"},"content":"            }","lastModifiedDate":"2024-04-05"},{"lineNumber":154,"author":{"gitId":"bachletuankhai"},"content":"        };","lastModifiedDate":"2024-04-05"},{"lineNumber":155,"author":{"gitId":"bachletuankhai"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, handler);","lastModifiedDate":"2024-04-05"},{"lineNumber":156,"author":{"gitId":"bachletuankhai"},"content":"        keyPressHandlers.add(handler);","lastModifiedDate":"2024-04-05"},{"lineNumber":157,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":158,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":159,"author":{"gitId":"bachletuankhai"},"content":"    private void clearKeyPressHandler() {","lastModifiedDate":"2024-04-05"},{"lineNumber":160,"author":{"gitId":"bachletuankhai"},"content":"        keyPressHandlers.forEach(handler -\u003e getRoot().removeEventFilter(KeyEvent.KEY_PRESSED, handler));","lastModifiedDate":"2024-04-05"},{"lineNumber":161,"author":{"gitId":"bachletuankhai"},"content":"        keyPressHandlers.clear();","lastModifiedDate":"2024-04-05"},{"lineNumber":162,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":163,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":169,"author":{"gitId":"meenulekha"},"content":"        logger.info(\"PersonListPanel: \" + personListPanel);","lastModifiedDate":"2024-04-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":171,"author":{"gitId":"bachletuankhai"},"content":"        // set focus trigger for person list panel to F4","lastModifiedDate":"2024-04-04"},{"lineNumber":172,"author":{"gitId":"bachletuankhai"},"content":"        setKeyPressHandler(personListPanel::focus, KeyCombination.valueOf(\"F4\"));","lastModifiedDate":"2024-04-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":176,"author":{"gitId":"bachletuankhai"},"content":"        // set focus trigger for result display to F3","lastModifiedDate":"2024-04-04"},{"lineNumber":177,"author":{"gitId":"bachletuankhai"},"content":"        setKeyPressHandler(resultDisplay::focus, KeyCombination.valueOf(\"F3\"));","lastModifiedDate":"2024-04-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":182,"author":{"gitId":"bachletuankhai"},"content":"        UserInputHistory\u003cString\u003e history \u003d logic.getUserInputHistory();","lastModifiedDate":"2024-03-31"},{"lineNumber":183,"author":{"gitId":"bachletuankhai"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand, history::getPreviousChat, history::getNextChat,","lastModifiedDate":"2024-03-31"},{"lineNumber":184,"author":{"gitId":"bachletuankhai"},"content":"                history::addChatToHistory);","lastModifiedDate":"2024-03-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":186,"author":{"gitId":"bachletuankhai"},"content":"        // set focus trigger for command box to F2","lastModifiedDate":"2024-04-04"},{"lineNumber":187,"author":{"gitId":"bachletuankhai"},"content":"        setKeyPressHandler(commandBox::focus, KeyCombination.valueOf(\"F2\"));","lastModifiedDate":"2024-04-05"},{"lineNumber":188,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":189,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":190,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-04-05"},{"lineNumber":191,"author":{"gitId":"bachletuankhai"},"content":"     * Clear all the placeholders of this window.","lastModifiedDate":"2024-04-05"},{"lineNumber":192,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-04-05"},{"lineNumber":193,"author":{"gitId":"bachletuankhai"},"content":"    private void removeInnerParts() {","lastModifiedDate":"2024-04-05"},{"lineNumber":194,"author":{"gitId":"bachletuankhai"},"content":"        personListPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2024-04-05"},{"lineNumber":195,"author":{"gitId":"bachletuankhai"},"content":"        resultDisplayPlaceholder.getChildren().clear();","lastModifiedDate":"2024-04-05"},{"lineNumber":196,"author":{"gitId":"bachletuankhai"},"content":"        statusbarPlaceholder.getChildren().clear();","lastModifiedDate":"2024-04-05"},{"lineNumber":197,"author":{"gitId":"bachletuankhai"},"content":"        commandBoxPlaceholder.getChildren().clear();","lastModifiedDate":"2024-04-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":228,"author":{"gitId":"meenulekha"},"content":"    /** Navigates to the Event Window */","lastModifiedDate":"2024-04-04"},{"lineNumber":229,"author":{"gitId":"meenulekha"},"content":"    private void showEventWindow() throws IOException {","lastModifiedDate":"2024-04-03"},{"lineNumber":230,"author":{"gitId":"bachletuankhai"},"content":"        // Clean up","lastModifiedDate":"2024-04-05"},{"lineNumber":231,"author":{"gitId":"bachletuankhai"},"content":"        clearAccelerators();","lastModifiedDate":"2024-04-05"},{"lineNumber":232,"author":{"gitId":"bachletuankhai"},"content":"        clearKeyPressHandler();","lastModifiedDate":"2024-04-05"},{"lineNumber":233,"author":{"gitId":"bachletuankhai"},"content":"        removeInnerParts();","lastModifiedDate":"2024-04-05"},{"lineNumber":234,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":235,"author":{"gitId":"meenulekha"},"content":"        // Close the current window","lastModifiedDate":"2024-04-03"},{"lineNumber":236,"author":{"gitId":"meenulekha"},"content":"        primaryStage.close();","lastModifiedDate":"2024-04-03"},{"lineNumber":237,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":238,"author":{"gitId":"meenulekha"},"content":"        // Create a new MainWindow","lastModifiedDate":"2024-04-03"},{"lineNumber":239,"author":{"gitId":"meenulekha"},"content":"        EventWindow eventWindow \u003d new EventWindow(primaryStage, logic);","lastModifiedDate":"2024-04-03"},{"lineNumber":240,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":241,"author":{"gitId":"meenulekha"},"content":"        // Show the MainWindow","lastModifiedDate":"2024-04-03"},{"lineNumber":242,"author":{"gitId":"meenulekha"},"content":"        eventWindow.show();","lastModifiedDate":"2024-04-03"},{"lineNumber":243,"author":{"gitId":"meenulekha"},"content":"        eventWindow.fillInnerParts();","lastModifiedDate":"2024-04-03"},{"lineNumber":244,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":247,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":248,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":258,"author":{"gitId":"meenulekha"},"content":"    @FXML","lastModifiedDate":"2024-04-03"},{"lineNumber":259,"author":{"gitId":"meenulekha"},"content":"    void handleEvents() {","lastModifiedDate":"2024-04-03"},{"lineNumber":260,"author":{"gitId":"meenulekha"},"content":"        primaryStage.getIcons();","lastModifiedDate":"2024-04-03"},{"lineNumber":261,"author":{"gitId":"meenulekha"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":262,"author":{"gitId":"meenulekha"},"content":"            showEventWindow();","lastModifiedDate":"2024-04-03"},{"lineNumber":263,"author":{"gitId":"meenulekha"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":264,"author":{"gitId":"meenulekha"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2024-04-03"},{"lineNumber":265,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":266,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":273,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":274,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":275,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":276,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":284,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":285,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":288,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":291,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":293,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":295,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"meenulekha":24,"bachletuankhai":88,"-":186}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-04-05"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.person.Category;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Participant;","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Staff;","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"     * keywords in JavaFX. As a consequence, UI elements\u0027 variable names cannot be","lastModifiedDate":"2024-04-05"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"     * set to such keywords or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2024-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"     *      issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"    private Label comment;","lastModifiedDate":"2024-04-05"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"    @FXML","lastModifiedDate":"2024-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"    private Label category;","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"    @FXML","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"    private Label group;","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"     * display.","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"        id.setText(displayedIndex + \"\");","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"dhlee03"},"content":"        Image commentImage \u003d new Image(getClass().getResourceAsStream(\"/images/comment_icon.png\"));","lastModifiedDate":"2024-04-05"},{"lineNumber":59,"author":{"gitId":"dhlee03"},"content":"        ImageView commentImageView \u003d new ImageView(commentImage);","lastModifiedDate":"2024-04-05"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"        commentImageView.setFitHeight(20);","lastModifiedDate":"2024-04-05"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"        commentImageView.setFitWidth(20);","lastModifiedDate":"2024-04-05"},{"lineNumber":62,"author":{"gitId":"dhlee03"},"content":"        comment.setGraphic(person.getComment().hasComment() ? commentImageView : null);","lastModifiedDate":"2024-04-05"},{"lineNumber":63,"author":{"gitId":"dhlee03"},"content":"        comment.setText(null);","lastModifiedDate":"2024-04-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"dhlee03"},"content":"        group.setText(getGroupNumber(person));","lastModifiedDate":"2024-03-22"},{"lineNumber":67,"author":{"gitId":"dhlee03"},"content":"        category.setText(person.getCategory().value);","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"        category.getStyleClass().add(getCategoryStyleClass(person.getCategory()));","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"    private String getCategoryStyleClass(Category category) {","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"bachletuankhai"},"content":"        return \"category-label-\" + category.value.toLowerCase();","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":74,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":75,"author":{"gitId":"dhlee03"},"content":"    private String getGroupNumber(Person person) {","lastModifiedDate":"2024-03-22"},{"lineNumber":76,"author":{"gitId":"dhlee03"},"content":"        switch (person.getCategory().value) {","lastModifiedDate":"2024-03-22"},{"lineNumber":77,"author":{"gitId":"dhlee03"},"content":"        case \"PARTICIPANT\":","lastModifiedDate":"2024-03-22"},{"lineNumber":78,"author":{"gitId":"dhlee03"},"content":"            return Integer.toString(((Participant) person).getGroupNumber());","lastModifiedDate":"2024-03-22"},{"lineNumber":79,"author":{"gitId":"dhlee03"},"content":"        case \"STAFF\":","lastModifiedDate":"2024-03-22"},{"lineNumber":80,"author":{"gitId":"dhlee03"},"content":"            return Integer.toString(((Staff) person).getGroupNumber());","lastModifiedDate":"2024-03-22"},{"lineNumber":81,"author":{"gitId":"dhlee03"},"content":"        default:","lastModifiedDate":"2024-03-22"},{"lineNumber":82,"author":{"gitId":"dhlee03"},"content":"            return \"N/A (Sponsors)\";","lastModifiedDate":"2024-03-22"},{"lineNumber":83,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"dhlee03":25,"bachletuankhai":16,"-":44}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"     * Focuses on the first row of the person list.","lastModifiedDate":"2024-04-04"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"    public void focusOnFirstRow() {","lastModifiedDate":"2024-04-04"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"        personListView.getSelectionModel().clearSelection();","lastModifiedDate":"2024-04-04"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"        personListView.getSelectionModel().select(0);","lastModifiedDate":"2024-04-04"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"        personListView.getFocusModel().focus(0);","lastModifiedDate":"2024-04-04"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"     * Focuses on the person list panel.","lastModifiedDate":"2024-04-04"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"    public void focus() {","lastModifiedDate":"2024-04-04"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"        personListView.requestFocus();","lastModifiedDate":"2024-04-04"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using","lastModifiedDate":"2024-04-04"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"     * a {@code PersonCard}.","lastModifiedDate":"2024-04-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"bachletuankhai":18,"-":48}},{"path":"src/main/java/seedu/address/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-04-04"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"     * Focuses on the result display.","lastModifiedDate":"2024-04-04"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-04-04"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"    public void focus() {","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"        resultDisplay.requestFocus();","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-04"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"bachletuankhai":7,"-":28}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"        if (mainWindow !\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"        } else {","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"            logger.severe(\"MainWindow is not initialized\");","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"meenulekha":4,"-":88}},{"path":"src/main/java/seedu/address/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"meenulekha"},"content":"        if (fxmlFileUrl \u003d\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"meenulekha"},"content":"            throw new IllegalArgumentException(\"FXML file not found: \" + fxmlFileNameWithFolder);","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"meenulekha":3,"-":88}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"\u003cStackPane styleClass\u003d\"round-container\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"    \u003cInsets top\u003d\"1\" right\u003d\"3\" bottom\u003d\"1\" left\u003d\"3\" /\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"bachletuankhai":5,"-":8}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #21222c;","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"  -fx-font-size: 14pt;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #2c2d37;","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"  -fx-base: #2c2d37;","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"  -fx-control-inner-background: #2c2d37;","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #2c2d37;","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":".table-view .column-header,","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":".table-view .filler {","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-color: transparent transparent derive(-fx-base, 80%) transparent;","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"  -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"  -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: transparent;","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"bachletuankhai"},"content":".list-header {","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #55565b;","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-radius: 13 13 0 0;","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"bachletuankhai"},"content":"  -fx-min-height: 35px;","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"bachletuankhai"},"content":"  -fx-max-height: 35px;","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"bachletuankhai"},"content":".list-header .label {","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"bachletuankhai"},"content":"  -fx-font-size: 12pt;","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"bachletuankhai"},"content":"  -fx-font-family: \"Segoe UI Bold\";","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"bachletuankhai"},"content":"  -fx-font-weight: 700;","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"bachletuankhai"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"bachletuankhai"},"content":"  -fx-opacity: 1;","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  -fx-graphic-text-gap: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #2c2d37;","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-color: #21222c;","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"bachletuankhai"},"content":"  /* bottom border only */","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-width: 0 0 1 0;","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #2c2d37;","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-color: #21222c;","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"bachletuankhai"},"content":"  /* bottom border only */","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-width: 0 0 1 0;","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"  -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"bachletuankhai"},"content":".list-container {","lastModifiedDate":"2024-03-16"},{"lineNumber":144,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: rgba(49, 51, 65, 0.2);","lastModifiedDate":"2024-03-21"},{"lineNumber":145,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-width: 0;","lastModifiedDate":"2024-03-16"},{"lineNumber":146,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-insets: 0;","lastModifiedDate":"2024-03-16"},{"lineNumber":147,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-radius: 13 13 0 0;","lastModifiedDate":"2024-03-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"  -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":163,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #2c2d37;","lastModifiedDate":"2024-03-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":167,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #21222c;","lastModifiedDate":"2024-03-14"},{"lineNumber":168,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-width: 0px;","lastModifiedDate":"2024-03-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #191a21;","lastModifiedDate":"2024-03-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":176,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #2c2d37;","lastModifiedDate":"2024-03-14"},{"lineNumber":177,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-width: 0;","lastModifiedDate":"2024-03-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"  -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":180,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":181,"author":{"gitId":"bachletuankhai"},"content":"  -fx-max-height: 85;","lastModifiedDate":"2024-03-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"  -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"  -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":192,"author":{"gitId":"bachletuankhai"},"content":"  -fx-font-size: 11pt;","lastModifiedDate":"2024-03-16"},{"lineNumber":193,"author":{"gitId":"bachletuankhai"},"content":"  -fx-max-height: 30px;","lastModifiedDate":"2024-03-16"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #191a21;","lastModifiedDate":"2024-03-16"},{"lineNumber":198,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-color: #191a21;","lastModifiedDate":"2024-03-16"},{"lineNumber":199,"author":{"gitId":"-"},"content":"  -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"  -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #343746;","lastModifiedDate":"2024-03-16"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #191a21;","lastModifiedDate":"2024-03-16"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"  -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"  -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"bachletuankhai"},"content":".button:pressed,","lastModifiedDate":"2024-03-14"},{"lineNumber":261,"author":{"gitId":"bachletuankhai"},"content":".button:default:hover:pressed {","lastModifiedDate":"2024-03-14"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"  -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"  -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"  -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"  -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"bachletuankhai"},"content":".button:disabled,","lastModifiedDate":"2024-03-14"},{"lineNumber":275,"author":{"gitId":"bachletuankhai"},"content":".button:default:disabled {","lastModifiedDate":"2024-03-14"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"  -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"  -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"  -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"  -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"  -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"  -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"  -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"  -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":316,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #21222c;","lastModifiedDate":"2024-03-21"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":319,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":320,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #3f4047;","lastModifiedDate":"2024-03-21"},{"lineNumber":321,"author":{"gitId":"-"},"content":"  -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"bachletuankhai"},"content":".scroll-bar .increment-button,","lastModifiedDate":"2024-03-14"},{"lineNumber":325,"author":{"gitId":"bachletuankhai"},"content":".scroll-bar .decrement-button {","lastModifiedDate":"2024-03-14"},{"lineNumber":326,"author":{"gitId":"-"},"content":"  -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":327,"author":{"gitId":"-"},"content":"  -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":330,"author":{"gitId":"bachletuankhai"},"content":".scroll-bar .increment-arrow,","lastModifiedDate":"2024-03-14"},{"lineNumber":331,"author":{"gitId":"bachletuankhai"},"content":".scroll-bar .decrement-arrow {","lastModifiedDate":"2024-03-14"},{"lineNumber":332,"author":{"gitId":"-"},"content":"  -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":335,"author":{"gitId":"bachletuankhai"},"content":".scroll-bar:vertical .increment-arrow,","lastModifiedDate":"2024-03-14"},{"lineNumber":336,"author":{"gitId":"bachletuankhai"},"content":".scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2024-03-14"},{"lineNumber":337,"author":{"gitId":"-"},"content":"  -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":340,"author":{"gitId":"bachletuankhai"},"content":".scroll-bar:horizontal .increment-arrow,","lastModifiedDate":"2024-03-14"},{"lineNumber":341,"author":{"gitId":"bachletuankhai"},"content":".scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2024-03-14"},{"lineNumber":342,"author":{"gitId":"-"},"content":"  -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":345,"author":{"gitId":"bachletuankhai"},"content":".round-container {","lastModifiedDate":"2024-03-14"},{"lineNumber":346,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #2c2d37;","lastModifiedDate":"2024-03-14"},{"lineNumber":347,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-insets: 0;","lastModifiedDate":"2024-03-14"},{"lineNumber":348,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-width: 0;","lastModifiedDate":"2024-03-14"},{"lineNumber":349,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-radius: 13 13 13 13;","lastModifiedDate":"2024-03-14"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-14"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":352,"author":{"gitId":"bachletuankhai"},"content":".category-label {","lastModifiedDate":"2024-03-21"},{"lineNumber":353,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: transparent;","lastModifiedDate":"2024-03-21"},{"lineNumber":354,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-radius: 15 15 15 15;","lastModifiedDate":"2024-03-21"},{"lineNumber":355,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-radius: 15 15 15 15;","lastModifiedDate":"2024-03-21"},{"lineNumber":356,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-insets: 0;","lastModifiedDate":"2024-03-21"},{"lineNumber":357,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-width: 2;","lastModifiedDate":"2024-03-21"},{"lineNumber":358,"author":{"gitId":"bachletuankhai"},"content":"  -fx-font-size: 11pt;","lastModifiedDate":"2024-03-21"},{"lineNumber":359,"author":{"gitId":"bachletuankhai"},"content":"  -fx-font-family: \"Segoe UI Bold\";","lastModifiedDate":"2024-03-21"},{"lineNumber":360,"author":{"gitId":"bachletuankhai"},"content":"  -fx-font-weight: 700;","lastModifiedDate":"2024-03-21"},{"lineNumber":361,"author":{"gitId":"bachletuankhai"},"content":"  -fx-padding: 5 10 5 10;","lastModifiedDate":"2024-03-21"},{"lineNumber":362,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-21"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":364,"author":{"gitId":"bachletuankhai"},"content":".category-label-participant {","lastModifiedDate":"2024-03-21"},{"lineNumber":365,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: rgba(64, 186, 140, 0.15);","lastModifiedDate":"2024-03-21"},{"lineNumber":366,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-color: #40ba8c;","lastModifiedDate":"2024-03-21"},{"lineNumber":367,"author":{"gitId":"bachletuankhai"},"content":"  -fx-text-fill: #40ba8c !important; /* Important to override the default color */","lastModifiedDate":"2024-03-21"},{"lineNumber":368,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-21"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":370,"author":{"gitId":"bachletuankhai"},"content":".category-label-sponsor {","lastModifiedDate":"2024-03-21"},{"lineNumber":371,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: rgba(169, 186, 64, 0.15);","lastModifiedDate":"2024-03-21"},{"lineNumber":372,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-color: #a9ba40;","lastModifiedDate":"2024-03-21"},{"lineNumber":373,"author":{"gitId":"bachletuankhai"},"content":"  -fx-text-fill: #a9ba40 !important; /* Important to override the default color */","lastModifiedDate":"2024-03-21"},{"lineNumber":374,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-21"},{"lineNumber":375,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":376,"author":{"gitId":"bachletuankhai"},"content":".category-label-staff {","lastModifiedDate":"2024-03-21"},{"lineNumber":377,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: rgba(103, 133, 193, 0.15);","lastModifiedDate":"2024-03-21"},{"lineNumber":378,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-color: #6785c1;","lastModifiedDate":"2024-03-21"},{"lineNumber":379,"author":{"gitId":"bachletuankhai"},"content":"  -fx-text-fill: #6785c1 !important; /* Important to override the default color */","lastModifiedDate":"2024-03-21"},{"lineNumber":380,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-21"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":382,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":383,"author":{"gitId":"-"},"content":"  -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":384,"author":{"gitId":"-"},"content":"  -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":385,"author":{"gitId":"bachletuankhai"},"content":"  -fx-padding: 10 0 10 0;","lastModifiedDate":"2024-03-21"},{"lineNumber":386,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-21"},{"lineNumber":387,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":388,"author":{"gitId":"bachletuankhai"},"content":"#cardPane .label {","lastModifiedDate":"2024-03-21"},{"lineNumber":389,"author":{"gitId":"bachletuankhai"},"content":"  -fx-font-size: 12pt;","lastModifiedDate":"2024-03-21"},{"lineNumber":390,"author":{"gitId":"bachletuankhai"},"content":"  -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2024-03-21"},{"lineNumber":391,"author":{"gitId":"bachletuankhai"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2024-03-21"},{"lineNumber":392,"author":{"gitId":"bachletuankhai"},"content":"  -fx-opacity: 1;","lastModifiedDate":"2024-03-21"},{"lineNumber":393,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":395,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":396,"author":{"gitId":"-"},"content":"  -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":397,"author":{"gitId":"bachletuankhai"},"content":"  -fx-text-fill: #f70d1a;","lastModifiedDate":"2024-03-14"},{"lineNumber":398,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":400,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":401,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #2c2d37;","lastModifiedDate":"2024-03-14"},{"lineNumber":402,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-radius: 13 13 13 13;","lastModifiedDate":"2024-03-14"},{"lineNumber":403,"author":{"gitId":"-"},"content":"  -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":404,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-width: 0;","lastModifiedDate":"2024-03-14"},{"lineNumber":405,"author":{"gitId":"-"},"content":"  -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":406,"author":{"gitId":"-"},"content":"  -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":407,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":408,"author":{"gitId":"bachletuankhai"},"content":"  -fx-min-height: 50;","lastModifiedDate":"2024-03-14"},{"lineNumber":409,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":411,"author":{"gitId":"bachletuankhai"},"content":"#filterField,","lastModifiedDate":"2024-03-14"},{"lineNumber":412,"author":{"gitId":"bachletuankhai"},"content":"#personListPanel,","lastModifiedDate":"2024-03-14"},{"lineNumber":413,"author":{"gitId":"bachletuankhai"},"content":"#personWebpage {","lastModifiedDate":"2024-03-14"},{"lineNumber":414,"author":{"gitId":"-"},"content":"  -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":415,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":417,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2024-03-14"},{"lineNumber":418,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background-color: #2c2d37;","lastModifiedDate":"2024-03-14"},{"lineNumber":419,"author":{"gitId":"-"},"content":"  -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":420,"author":{"gitId":"bachletuankhai"},"content":"  -fx-border-width: 0;","lastModifiedDate":"2024-03-14"},{"lineNumber":421,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":423,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":424,"author":{"gitId":"-"},"content":"  -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":425,"author":{"gitId":"-"},"content":"  -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":426,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":428,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":429,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":430,"author":{"gitId":"-"},"content":"  -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":431,"author":{"gitId":"-"},"content":"  -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":432,"author":{"gitId":"-"},"content":"  -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":433,"author":{"gitId":"-"},"content":"  -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":434,"author":{"gitId":"-"},"content":"  -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":435,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"bachletuankhai":111,"-":324}},{"path":"src/main/resources/view/EventListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"        \u003cGridPane HBox.hgrow\u003d\"ALWAYS\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"            \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"                \u003cColumnConstraints percentWidth\u003d\"8\" fx:id\u003d\"idColumn\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"                \u003cColumnConstraints percentWidth\u003d\"20\" fx:id\u003d\"nameColumn\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"                \u003cColumnConstraints percentWidth\u003d\"20\" fx:id\u003d\"dateColumn\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"                \u003cColumnConstraints percentWidth\u003d\"15\" fx:id\u003d\"categoryColumn\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"            \u003c/columnConstraints\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"            \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_small_label\" GridPane.columnIndex\u003d\"0\" alignment\u003d\"CENTER\"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"                   GridPane.hgrow\u003d\"ALWAYS\" GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"            \u003cLabel fx:id\u003d\"eventname\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$first\" GridPane.columnIndex\u003d\"1\" alignment\u003d\"CENTER\"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"                   GridPane.hgrow\u003d\"ALWAYS\" GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"            \u003cLabel fx:id\u003d\"eventdate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" GridPane.columnIndex\u003d\"2\"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"                   alignment\u003d\"CENTER\" GridPane.hgrow\u003d\"ALWAYS\" GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"            \u003cLabel fx:id\u003d\"eventcategory\" styleClass\u003d\"category-label\" text\u003d\"\\$category\" GridPane.columnIndex\u003d\"4\"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"                   alignment\u003d\"CENTER\" GridPane.hgrow\u003d\"ALWAYS\" GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"        \u003c/GridPane\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":34}},{"path":"src/main/resources/view/EventListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"\u003cVBox styleClass\u003d\"list-container\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"    \u003cGridPane styleClass\u003d\"list-header\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"            \u003cColumnConstraints percentWidth\u003d\"8\" fx:id\u003d\"idColumn\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"            \u003cColumnConstraints percentWidth\u003d\"20\" fx:id\u003d\"EventNameColumn\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"            \u003cColumnConstraints percentWidth\u003d\"20\" fx:id\u003d\"dateColumn\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"            \u003cColumnConstraints percentWidth\u003d\"16\" fx:id\u003d\"eventCategoryColumn\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"        \u003cLabel text\u003d\"ID\" GridPane.columnIndex\u003d\"0\" alignment\u003d\"CENTER\" GridPane.hgrow\u003d\"ALWAYS\"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"               GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"        \u003cLabel text\u003d\"NAME\" GridPane.columnIndex\u003d\"1\" alignment\u003d\"CENTER\" GridPane.hgrow\u003d\"ALWAYS\"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"               GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"        \u003cLabel text\u003d\"DATE\" GridPane.columnIndex\u003d\"2\" alignment\u003d\"CENTER\" GridPane.hgrow\u003d\"ALWAYS\"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"               GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"        \u003cLabel text\u003d\"CATEGORY\" GridPane.columnIndex\u003d\"4\" alignment\u003d\"CENTER\" GridPane.hgrow\u003d\"ALWAYS\"","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"               GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"    \u003cListView fx:id\u003d\"eventListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":27}},{"path":"src/main/resources/view/EventWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"         title\u003d\"HackLink\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"    \u003cicons\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"        \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"    \u003cscene\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"        \u003cScene\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"                \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Back\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"                       \u003cMenuItem fx:id\u003d\"backMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleBack\" text\u003d\"Back to Main\" /\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"                        \u003cInsets top\u003d\"12\" right\u003d\"20\" bottom\u003d\"8\" left\u003d\"20\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"eventResultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"                           minHeight\u003d\"110\" prefHeight\u003d\"110\" maxHeight\u003d\"115\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"                        \u003cInsets top\u003d\"8\" right\u003d\"20\" bottom\u003d\"8\" left\u003d\"20\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"                \u003cVBox fx:id\u003d\"eventsList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"                        \u003cInsets top\u003d\"8\" right\u003d\"20\" bottom\u003d\"8\" left\u003d\"20\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"                    \u003cStackPane fx:id\u003d\"eventListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":62,"bachletuankhai":1}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"  -fx-background: transparent;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bachletuankhai":1,"-":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"         title\u003d\"HackLink\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Events\"\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"            \u003cMenuItem fx:id\u003d\"eventListMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleEvents\" text\u003d\"show Events\" /\u003e","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"            \u003cInsets top\u003d\"12\" right\u003d\"20\" bottom\u003d\"8\" left\u003d\"20\" /\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"                   minHeight\u003d\"110\" prefHeight\u003d\"110\" maxHeight\u003d\"115\"\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"            \u003cInsets top\u003d\"8\" right\u003d\"20\" bottom\u003d\"8\" left\u003d\"20\" /\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"            \u003cInsets top\u003d\"8\" right\u003d\"20\" bottom\u003d\"8\" left\u003d\"20\" /\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"meenulekha":3,"bachletuankhai":5,"-":55}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"        \u003cGridPane HBox.hgrow\u003d\"ALWAYS\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"            \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"                \u003cColumnConstraints percentWidth\u003d\"8\" fx:id\u003d\"idColumn\"/\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"                \u003cColumnConstraints percentWidth\u003d\"17\" fx:id\u003d\"nameColumn\"/\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"                \u003cColumnConstraints percentWidth\u003d\"3\" fx:id\u003d\"commentColumn\"/\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"                \u003cColumnConstraints percentWidth\u003d\"20\" fx:id\u003d\"emailColumn\"/\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"                \u003cColumnConstraints percentWidth\u003d\"20\" fx:id\u003d\"phoneColumn\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"                \u003cColumnConstraints percentWidth\u003d\"15\" fx:id\u003d\"categoryColumn\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"                \u003cColumnConstraints percentWidth\u003d\"17\" fx:id\u003d\"groupColumn\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"            \u003c/columnConstraints\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"            \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_small_label\" GridPane.columnIndex\u003d\"0\" alignment\u003d\"CENTER\"","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"                   GridPane.hgrow\u003d\"ALWAYS\" GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"            \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$first\" GridPane.columnIndex\u003d\"1\"","lastModifiedDate":"2024-04-05"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"                   alignment\u003d\"CENTER\" GridPane.hgrow\u003d\"ALWAYS\" GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"            \u003cLabel fx:id\u003d\"comment\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$comment\" GridPane.columnIndex\u003d\"2\"","lastModifiedDate":"2024-04-05"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"                   alignment\u003d\"CENTER\" GridPane.hgrow\u003d\"ALWAYS\" GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-04-05"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" GridPane.columnIndex\u003d\"3\"","lastModifiedDate":"2024-04-05"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"                   alignment\u003d\"CENTER\" GridPane.hgrow\u003d\"ALWAYS\" GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" GridPane.columnIndex\u003d\"4\"","lastModifiedDate":"2024-04-05"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"                   alignment\u003d\"CENTER\" GridPane.hgrow\u003d\"ALWAYS\" GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"            \u003cLabel fx:id\u003d\"category\" styleClass\u003d\"category-label\" text\u003d\"\\$category\" GridPane.columnIndex\u003d\"5\"","lastModifiedDate":"2024-04-05"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"                   alignment\u003d\"CENTER\" GridPane.hgrow\u003d\"ALWAYS\" GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"            \u003cLabel fx:id\u003d\"group\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$group\" GridPane.columnIndex\u003d\"6\"","lastModifiedDate":"2024-04-05"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"                   alignment\u003d\"CENTER\" GridPane.hgrow\u003d\"ALWAYS\" GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"        \u003c/GridPane\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dhlee03":18,"bachletuankhai":7,"-":18}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"\u003cVBox styleClass\u003d\"list-container\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"    \u003cGridPane styleClass\u003d\"list-header\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"            \u003cColumnConstraints percentWidth\u003d\"8\" fx:id\u003d\"idColumn\"/\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"            \u003cColumnConstraints percentWidth\u003d\"20\" fx:id\u003d\"nameColumn\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"            \u003cColumnConstraints percentWidth\u003d\"20\" fx:id\u003d\"emailColumn\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"            \u003cColumnConstraints percentWidth\u003d\"20\" fx:id\u003d\"phoneColumn\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"            \u003cColumnConstraints percentWidth\u003d\"16\" fx:id\u003d\"categoryColumn\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"            \u003cColumnConstraints percentWidth\u003d\"16\" fx:id\u003d\"groupColumn\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"        \u003cLabel text\u003d\"ID\" GridPane.columnIndex\u003d\"0\" alignment\u003d\"CENTER\" GridPane.hgrow\u003d\"ALWAYS\"","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"               GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"        \u003cLabel text\u003d\"NAME\" GridPane.columnIndex\u003d\"1\" alignment\u003d\"CENTER\" GridPane.hgrow\u003d\"ALWAYS\"","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"               GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"        \u003cLabel text\u003d\"EMAIL\" GridPane.columnIndex\u003d\"2\" alignment\u003d\"CENTER\" GridPane.hgrow\u003d\"ALWAYS\"","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"               GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"        \u003cLabel text\u003d\"PHONE\" GridPane.columnIndex\u003d\"3\" alignment\u003d\"CENTER\" GridPane.hgrow\u003d\"ALWAYS\"","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"               GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"        \u003cLabel text\u003d\"CATEGORY\" GridPane.columnIndex\u003d\"4\" alignment\u003d\"CENTER\" GridPane.hgrow\u003d\"ALWAYS\"","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"               GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"        \u003cLabel text\u003d\"GROUP\" GridPane.columnIndex\u003d\"5\" alignment\u003d\"CENTER\" GridPane.hgrow\u003d\"ALWAYS\"","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"               GridPane.halignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dhlee03":17,"bachletuankhai":9,"-":7}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"round-container\" xmlns\u003d\"http://javafx.com/javafx/17\"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\" minHeight\u003d\"95\"\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"    \u003cInsets top\u003d\"5\" right\u003d\"3\" bottom\u003d\"5\" left\u003d\"3\" /\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"bachletuankhai":6,"-":7}},{"path":"src/test/java/seedu/address/commons/util/QueueUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"class QueueUtilTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"    private QueueUtil\u003cInteger\u003e queue;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"    void setUp() {","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"        queue \u003d new QueueUtil\u003c\u003e(5);","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    void addLast_threeItems_sizeIsThree() {","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(1);","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(2);","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(3);","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(3, queue.size());","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"    void addLast_sixItems_onlyFiveItemsRemaining() {","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(1);","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(2);","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(3);","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(4);","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(5);","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(6);","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(5, queue.size());","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(2, queue.get(0));","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"    void pollFirst_addThreeItems_itemsOutFifo() {","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(1);","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(2);","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(3);","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(1, queue.pollFirst());","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(2, queue.pollFirst());","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(3, queue.pollFirst());","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"        assertNull(queue.pollFirst());","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"        assertTrue(queue.isEmpty());","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"    void get_addThreeItems_correctIndex() {","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(1);","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(2);","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(3);","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(1, queue.get(0));","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(2, queue.get(1));","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(3, queue.get(2));","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e queue.get(-1));","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e queue.get(3));","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"    void size_addThreeItems_correctSize() {","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(0, queue.size());","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(1);","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(1, queue.size());","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(2);","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(2, queue.size());","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"        queue.pollFirst();","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(1, queue.size());","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"bachletuankhai"},"content":"    void traverseUp_tailToHead_correctOrderAndNullReachingHead() {","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(1);","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(2);","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(3);","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(3, queue.traverseUp());","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(2, queue.traverseUp());","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(1, queue.traverseUp());","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(null, queue.traverseUp());","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"bachletuankhai"},"content":"    void traverseDown_afterTraversingUp_correctOrderAndNull() {","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(1);","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(2);","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(3);","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"bachletuankhai"},"content":"        queue.traverseUp();","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"bachletuankhai"},"content":"        queue.traverseUp();","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"bachletuankhai"},"content":"        queue.traverseUp();","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(2, queue.traverseDown());","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(3, queue.traverseDown());","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"bachletuankhai"},"content":"        assertNull(queue.traverseDown());","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"bachletuankhai"},"content":"    void isEmpty_addItemThenPoll_correctSize() {","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"bachletuankhai"},"content":"        assertTrue(queue.isEmpty());","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"bachletuankhai"},"content":"        queue.addLast(1);","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"bachletuankhai"},"content":"        assertFalse(queue.isEmpty());","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"bachletuankhai"},"content":"        queue.pollFirst();","lastModifiedDate":"2024-03-31"},{"lineNumber":107,"author":{"gitId":"bachletuankhai"},"content":"        assertTrue(queue.isEmpty());","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"bachletuankhai":109}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CATEGORY_DESC_PARTICIPANT;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"import seedu.address.storage.JsonEventBookStorage;","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"        JsonEventBookStorage eventBookStorage \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"                new JsonEventBookStorage(temporaryFolder.resolve(\"eventBook.json\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, eventBookStorage, userPrefsStorage);","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"meenulekha"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"meenulekha"},"content":"        JsonEventBookStorage eventBookStorage \u003d new JsonEventBookStorage(prefPath) {","lastModifiedDate":"2024-04-03"},{"lineNumber":165,"author":{"gitId":"meenulekha"},"content":"            @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":166,"author":{"gitId":"meenulekha"},"content":"            public void saveEventBook(ReadOnlyEventBook eventBook, Path filePath)","lastModifiedDate":"2024-04-03"},{"lineNumber":167,"author":{"gitId":"meenulekha"},"content":"                    throws IOException {","lastModifiedDate":"2024-04-03"},{"lineNumber":168,"author":{"gitId":"meenulekha"},"content":"                throw e;","lastModifiedDate":"2024-04-03"},{"lineNumber":169,"author":{"gitId":"meenulekha"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":170,"author":{"gitId":"meenulekha"},"content":"        };","lastModifiedDate":"2024-04-03"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"meenulekha"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, eventBookStorage, userPrefsStorage);","lastModifiedDate":"2024-04-03"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"dhlee03"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-04-03"},{"lineNumber":180,"author":{"gitId":"dhlee03"},"content":"                + CATEGORY_DESC_PARTICIPANT;","lastModifiedDate":"2024-04-03"},{"lineNumber":181,"author":{"gitId":"dhlee03"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"dhlee03":4,"meenulekha":14,"-":168}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":" * Contains integration tests (interaction with the Model) for","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":" * {@code AddCommand}.","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)), expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"    public void undo_afterAddingNewPerson_removesPerson() throws CommandException {","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"        Command addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"        addCommand.execute(model);","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"        assertCommandSuccess(new UndoCommand(), model,","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS_UNDO, Messages.format(validPerson)), expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"    public void redo_afterUndo_addsPerson() throws CommandException {","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"        Command addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"        addCommand.execute(model);","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"bachletuankhai"},"content":"        Command undoCommand \u003d new UndoCommand();","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"bachletuankhai"},"content":"        undoCommand.execute(model);","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"bachletuankhai"},"content":"        assertCommandSuccess(new RedoCommand(), model,","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"bachletuankhai"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)), expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"meenulekha":5,"bachletuankhai":31,"-":43}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.exceptions.UndoException;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-04-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"    public void undo_validPerson_success() throws CommandException, UndoException {","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"        // Execute the add command","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"        addCommand.execute(modelStub);","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"        // Undo the add command","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"        CommandResult undoResult \u003d addCommand.undo(modelStub);","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"        // Verify that the person is removed from the model","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"bachletuankhai"},"content":"        assertFalse(modelStub.personsAdded.contains(validPerson));","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS_UNDO, Messages.format(validPerson)),","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"bachletuankhai"},"content":"                undoResult.getFeedbackToUser());","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"bachletuankhai"},"content":"    public void undo_nonExistentPerson_throwsCommandException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"bachletuankhai"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"bachletuankhai"},"content":"        Person nonExistentPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"bachletuankhai"},"content":"        AddCommand addCommand \u003d new AddCommand(nonExistentPerson);","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"bachletuankhai"},"content":"        // Undo the add command for a non-existent person","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"bachletuankhai"},"content":"        String expectedMessage \u003d AddCommand.MESSAGE_UNDO_NONEXISTENT_PERSON;","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"bachletuankhai"},"content":"        assertThrows(UndoException.class, expectedMessage, () -\u003e addCommand.undo(modelStub));","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"bachletuankhai"},"content":"    public void redo_validPerson_success() throws CommandException, UndoException {","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"bachletuankhai"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"bachletuankhai"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"bachletuankhai"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"bachletuankhai"},"content":"        // Execute the add command","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"bachletuankhai"},"content":"        addCommand.execute(modelStub);","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"bachletuankhai"},"content":"        // Undo the add command","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"bachletuankhai"},"content":"        addCommand.undo(modelStub);","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"bachletuankhai"},"content":"        // Redo the add command","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"bachletuankhai"},"content":"        CommandResult redoResult \u003d addCommand.redo(modelStub);","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"bachletuankhai"},"content":"        // Verify that the person is added back to the model","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"bachletuankhai"},"content":"        assertTrue(modelStub.personsAdded.contains(validPerson));","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"bachletuankhai"},"content":"                redoResult.getFeedbackToUser());","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":108,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"julia-cp"},"content":"        @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":205,"author":{"gitId":"julia-cp"},"content":"        public void groupPerson(Person target, int groupNumber) {","lastModifiedDate":"2024-04-03"},{"lineNumber":206,"author":{"gitId":"julia-cp"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":207,"author":{"gitId":"julia-cp"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":208,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":219,"author":{"gitId":"bachletuankhai"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":220,"author":{"gitId":"bachletuankhai"},"content":"        public CommandResult undoAddressBook() throws UndoException {","lastModifiedDate":"2024-03-29"},{"lineNumber":221,"author":{"gitId":"bachletuankhai"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":222,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":223,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":224,"author":{"gitId":"bachletuankhai"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":225,"author":{"gitId":"bachletuankhai"},"content":"        public CommandResult redoAddressBook() throws UndoException {","lastModifiedDate":"2024-03-29"},{"lineNumber":226,"author":{"gitId":"bachletuankhai"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":227,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":228,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":229,"author":{"gitId":"bachletuankhai"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":230,"author":{"gitId":"bachletuankhai"},"content":"        public boolean canUndoAddressBook() {","lastModifiedDate":"2024-03-29"},{"lineNumber":231,"author":{"gitId":"bachletuankhai"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":232,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":233,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":234,"author":{"gitId":"bachletuankhai"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":235,"author":{"gitId":"bachletuankhai"},"content":"        public boolean canRedoAddressBook() {","lastModifiedDate":"2024-03-29"},{"lineNumber":236,"author":{"gitId":"bachletuankhai"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":237,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":238,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":239,"author":{"gitId":"bachletuankhai"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":240,"author":{"gitId":"bachletuankhai"},"content":"        public void addCommand(ReversibleCommand command) {","lastModifiedDate":"2024-03-29"},{"lineNumber":241,"author":{"gitId":"bachletuankhai"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":242,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":243,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":244,"author":{"gitId":"meenulekha"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2024-04-03"},{"lineNumber":245,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":246,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":247,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":248,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":249,"author":{"gitId":"meenulekha"},"content":"        public void deleteEvent(Event target) {","lastModifiedDate":"2024-04-03"},{"lineNumber":250,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":253,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":254,"author":{"gitId":"meenulekha"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2024-04-03"},{"lineNumber":255,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":256,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":257,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":258,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":259,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":260,"author":{"gitId":"meenulekha"},"content":"        public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2024-04-03"},{"lineNumber":261,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":262,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":263,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":264,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":265,"author":{"gitId":"meenulekha"},"content":"        public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2024-04-03"},{"lineNumber":266,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":267,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":268,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":269,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":270,"author":{"gitId":"meenulekha"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2024-04-03"},{"lineNumber":271,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":272,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":273,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":274,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":275,"author":{"gitId":"meenulekha"},"content":"        public ReadOnlyEventBook getEventBook() {","lastModifiedDate":"2024-04-03"},{"lineNumber":276,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":277,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":278,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":279,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":280,"author":{"gitId":"meenulekha"},"content":"        public Path getEventBookFilePath() {","lastModifiedDate":"2024-04-03"},{"lineNumber":281,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":282,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":283,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":284,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":285,"author":{"gitId":"meenulekha"},"content":"        public void setEventBookFilePath(Path eventBookFilePath) {","lastModifiedDate":"2024-04-03"},{"lineNumber":286,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":287,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":288,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":289,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":290,"author":{"gitId":"meenulekha"},"content":"        public void setEventBook(ReadOnlyEventBook eventBook) {","lastModifiedDate":"2024-04-03"},{"lineNumber":291,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":292,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":295,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":297,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":298,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":303,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":309,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":310,"author":{"gitId":"dhlee03"},"content":"            return this.person.isSameIdentity(person);","lastModifiedDate":"2024-04-13"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":315,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":316,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":322,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":323,"author":{"gitId":"dhlee03"},"content":"            return personsAdded.stream().anyMatch(person::isSameIdentity);","lastModifiedDate":"2024-04-13"},{"lineNumber":324,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":329,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":334,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":336,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":337,"author":{"gitId":"bachletuankhai"},"content":"        @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":338,"author":{"gitId":"bachletuankhai"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2024-03-28"},{"lineNumber":339,"author":{"gitId":"bachletuankhai"},"content":"            personsAdded.remove(target);","lastModifiedDate":"2024-03-28"},{"lineNumber":340,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":341,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":342,"author":{"gitId":"bachletuankhai"},"content":"        @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":343,"author":{"gitId":"bachletuankhai"},"content":"        public void addCommand(ReversibleCommand c) {","lastModifiedDate":"2024-03-30"},{"lineNumber":344,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":347,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"dhlee03":2,"julia-cp":5,"meenulekha":51,"bachletuankhai":85,"-":204}},{"path":"src/test/java/seedu/address/logic/commands/AddEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-12"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-12"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-12"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-12"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-12"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.testutil.TypicalEvents.EVENT1;","lastModifiedDate":"2024-04-12"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-04-12"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-12"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-04-12"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-12"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2024-04-12"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.commands.exceptions.UndoException;","lastModifiedDate":"2024-04-12"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-04-12"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.ReadOnlyEventBook;","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-04-12"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-12"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"public class AddEventCommandTest {","lastModifiedDate":"2024-04-12"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"    public void constructor_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2024-04-12"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddEventCommand(null));","lastModifiedDate":"2024-04-12"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"    public void execute_eventAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2024-04-12"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"        ModelStubAcceptingEventAdded modelStub \u003d new ModelStubAcceptingEventAdded();","lastModifiedDate":"2024-04-12"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"        Event validEvent \u003d new EventBuilder().build();","lastModifiedDate":"2024-04-12"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"        EventCommandResult commandResult \u003d new AddEventCommand(validEvent).execute(modelStub);","lastModifiedDate":"2024-04-12"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"        assertTrue(modelStub.eventsAdded.contains(validEvent));","lastModifiedDate":"2024-04-12"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"        assertEquals(String.format(AddEventCommand.MESSAGE_SUCCESS, validEvent),","lastModifiedDate":"2024-04-12"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-04-12"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"    public void execute_duplicateEvent_throwsCommandException() {","lastModifiedDate":"2024-04-12"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"        Event validEvent \u003d new EventBuilder().build();","lastModifiedDate":"2024-04-12"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"        AddEventCommand addCommand \u003d new AddEventCommand(validEvent);","lastModifiedDate":"2024-04-12"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"        ModelStub modelStub \u003d new ModelStubWithEvent(validEvent);","lastModifiedDate":"2024-04-12"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2024-04-12"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"                AddEventCommand.MESSAGE_DUPLICATE_EVENT, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2024-04-12"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"    public void undo_validEvent_success() throws CommandException, UndoException {","lastModifiedDate":"2024-04-12"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"        ModelStubAcceptingEventAdded modelStub \u003d new ModelStubAcceptingEventAdded();","lastModifiedDate":"2024-04-12"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"        Event validEvent \u003d new EventBuilder().build();","lastModifiedDate":"2024-04-12"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"        AddEventCommand addCommand \u003d new AddEventCommand(validEvent);","lastModifiedDate":"2024-04-12"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"        // Execute the add command","lastModifiedDate":"2024-04-12"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"        addCommand.execute(modelStub);","lastModifiedDate":"2024-04-12"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"        // Undo the add command","lastModifiedDate":"2024-04-12"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"        CommandResult undoResult \u003d addCommand.undo(modelStub);","lastModifiedDate":"2024-04-12"},{"lineNumber":67,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":68,"author":{"gitId":"meenulekha"},"content":"        // Verify that the event is removed from the model","lastModifiedDate":"2024-04-12"},{"lineNumber":69,"author":{"gitId":"meenulekha"},"content":"        assertFalse(modelStub.hasEvent(validEvent));","lastModifiedDate":"2024-04-12"},{"lineNumber":70,"author":{"gitId":"meenulekha"},"content":"        assertEquals(String.format(AddEventCommand.MESSAGE_SUCCESS_UNDO, validEvent),","lastModifiedDate":"2024-04-12"},{"lineNumber":71,"author":{"gitId":"meenulekha"},"content":"                undoResult.getFeedbackToUser());","lastModifiedDate":"2024-04-12"},{"lineNumber":72,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":73,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":74,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":75,"author":{"gitId":"meenulekha"},"content":"    public void undo_nonExistentEvent_throwsCommandException() {","lastModifiedDate":"2024-04-12"},{"lineNumber":76,"author":{"gitId":"meenulekha"},"content":"        ModelStubAcceptingEventAdded modelStub \u003d new ModelStubAcceptingEventAdded();","lastModifiedDate":"2024-04-12"},{"lineNumber":77,"author":{"gitId":"meenulekha"},"content":"        Event nonExistentEvent \u003d new EventBuilder().build();","lastModifiedDate":"2024-04-12"},{"lineNumber":78,"author":{"gitId":"meenulekha"},"content":"        AddEventCommand addCommand \u003d new AddEventCommand(nonExistentEvent);","lastModifiedDate":"2024-04-12"},{"lineNumber":79,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":80,"author":{"gitId":"meenulekha"},"content":"        // Undo the add command for a non-existent event","lastModifiedDate":"2024-04-12"},{"lineNumber":81,"author":{"gitId":"meenulekha"},"content":"        String expectedMessage \u003d AddEventCommand.MESSAGE_UNDO_NONEXISTENT_EVENT;","lastModifiedDate":"2024-04-12"},{"lineNumber":82,"author":{"gitId":"meenulekha"},"content":"        assertThrows(UndoException.class, expectedMessage, () -\u003e addCommand.undo(modelStub));","lastModifiedDate":"2024-04-12"},{"lineNumber":83,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":84,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":85,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":86,"author":{"gitId":"meenulekha"},"content":"    public void redo_validEvent_success() throws CommandException, UndoException {","lastModifiedDate":"2024-04-12"},{"lineNumber":87,"author":{"gitId":"meenulekha"},"content":"        ModelStubAcceptingEventAdded modelStub \u003d new ModelStubAcceptingEventAdded();","lastModifiedDate":"2024-04-12"},{"lineNumber":88,"author":{"gitId":"meenulekha"},"content":"        Event validEvent \u003d new EventBuilder().build();","lastModifiedDate":"2024-04-12"},{"lineNumber":89,"author":{"gitId":"meenulekha"},"content":"        AddEventCommand addCommand \u003d new AddEventCommand(validEvent);","lastModifiedDate":"2024-04-12"},{"lineNumber":90,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":91,"author":{"gitId":"meenulekha"},"content":"        // Execute the add command","lastModifiedDate":"2024-04-12"},{"lineNumber":92,"author":{"gitId":"meenulekha"},"content":"        addCommand.execute(modelStub);","lastModifiedDate":"2024-04-12"},{"lineNumber":93,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":94,"author":{"gitId":"meenulekha"},"content":"        // Undo the add command","lastModifiedDate":"2024-04-12"},{"lineNumber":95,"author":{"gitId":"meenulekha"},"content":"        addCommand.undo(modelStub);","lastModifiedDate":"2024-04-12"},{"lineNumber":96,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":97,"author":{"gitId":"meenulekha"},"content":"        // Redo the add command","lastModifiedDate":"2024-04-12"},{"lineNumber":98,"author":{"gitId":"meenulekha"},"content":"        CommandResult redoResult \u003d addCommand.redo(modelStub);","lastModifiedDate":"2024-04-12"},{"lineNumber":99,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":100,"author":{"gitId":"meenulekha"},"content":"        // Verify that the event is added back to the model","lastModifiedDate":"2024-04-12"},{"lineNumber":101,"author":{"gitId":"meenulekha"},"content":"        assertTrue(modelStub.hasEvent(validEvent));","lastModifiedDate":"2024-04-12"},{"lineNumber":102,"author":{"gitId":"meenulekha"},"content":"        assertEquals(String.format(AddEventCommand.MESSAGE_SUCCESS, validEvent),","lastModifiedDate":"2024-04-12"},{"lineNumber":103,"author":{"gitId":"meenulekha"},"content":"                redoResult.getFeedbackToUser());","lastModifiedDate":"2024-04-12"},{"lineNumber":104,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":105,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":106,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":107,"author":{"gitId":"meenulekha"},"content":"    public void equals() {","lastModifiedDate":"2024-04-12"},{"lineNumber":108,"author":{"gitId":"meenulekha"},"content":"        Event eventOne \u003d new EventBuilder().withEventName(\"event 1\").build();","lastModifiedDate":"2024-04-12"},{"lineNumber":109,"author":{"gitId":"meenulekha"},"content":"        Event eventTwo \u003d new EventBuilder().withEventName(\"event 2\").build();","lastModifiedDate":"2024-04-12"},{"lineNumber":110,"author":{"gitId":"meenulekha"},"content":"        AddEventCommand addEventOneCommand \u003d new AddEventCommand(eventOne);","lastModifiedDate":"2024-04-12"},{"lineNumber":111,"author":{"gitId":"meenulekha"},"content":"        AddEventCommand addEventTwoCommand \u003d new AddEventCommand(eventTwo);","lastModifiedDate":"2024-04-12"},{"lineNumber":112,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":113,"author":{"gitId":"meenulekha"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-12"},{"lineNumber":114,"author":{"gitId":"meenulekha"},"content":"        assertTrue(addEventOneCommand.equals(addEventOneCommand));","lastModifiedDate":"2024-04-12"},{"lineNumber":115,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":116,"author":{"gitId":"meenulekha"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-12"},{"lineNumber":117,"author":{"gitId":"meenulekha"},"content":"        AddEventCommand addEventOneCommandCopy \u003d new AddEventCommand(eventOne);","lastModifiedDate":"2024-04-12"},{"lineNumber":118,"author":{"gitId":"meenulekha"},"content":"        assertTrue(addEventOneCommand.equals(addEventOneCommandCopy));","lastModifiedDate":"2024-04-12"},{"lineNumber":119,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":120,"author":{"gitId":"meenulekha"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-12"},{"lineNumber":121,"author":{"gitId":"meenulekha"},"content":"        assertFalse(addEventOneCommand.equals(1));","lastModifiedDate":"2024-04-12"},{"lineNumber":122,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":123,"author":{"gitId":"meenulekha"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-12"},{"lineNumber":124,"author":{"gitId":"meenulekha"},"content":"        assertFalse(addEventOneCommand.equals(null));","lastModifiedDate":"2024-04-12"},{"lineNumber":125,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":126,"author":{"gitId":"meenulekha"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2024-04-12"},{"lineNumber":127,"author":{"gitId":"meenulekha"},"content":"        assertFalse(addEventOneCommand.equals(addEventTwoCommand));","lastModifiedDate":"2024-04-12"},{"lineNumber":128,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":129,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":130,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":131,"author":{"gitId":"meenulekha"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-04-12"},{"lineNumber":132,"author":{"gitId":"meenulekha"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommand(EVENT1);","lastModifiedDate":"2024-04-12"},{"lineNumber":133,"author":{"gitId":"meenulekha"},"content":"        String expected \u003d AddEventCommand.class.getCanonicalName() + \"{toAdd\u003d\" + EVENT1 + \"}\";","lastModifiedDate":"2024-04-12"},{"lineNumber":134,"author":{"gitId":"meenulekha"},"content":"        assertEquals(expected, addEventCommand.toString());","lastModifiedDate":"2024-04-12"},{"lineNumber":135,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":136,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":137,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-12"},{"lineNumber":138,"author":{"gitId":"meenulekha"},"content":"     * A Model stub that contains a single event.","lastModifiedDate":"2024-04-12"},{"lineNumber":139,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-12"},{"lineNumber":140,"author":{"gitId":"meenulekha"},"content":"    private class ModelStubWithEvent extends ModelStub {","lastModifiedDate":"2024-04-12"},{"lineNumber":141,"author":{"gitId":"meenulekha"},"content":"        private final Event event;","lastModifiedDate":"2024-04-12"},{"lineNumber":142,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":143,"author":{"gitId":"meenulekha"},"content":"        ModelStubWithEvent(Event event) {","lastModifiedDate":"2024-04-12"},{"lineNumber":144,"author":{"gitId":"meenulekha"},"content":"            this.event \u003d event;","lastModifiedDate":"2024-04-12"},{"lineNumber":145,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":146,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":147,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":148,"author":{"gitId":"meenulekha"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2024-04-12"},{"lineNumber":149,"author":{"gitId":"meenulekha"},"content":"            return this.event.isSameEvent(event);","lastModifiedDate":"2024-04-12"},{"lineNumber":150,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":151,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":152,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":153,"author":{"gitId":"meenulekha"},"content":"        public void addCommand(ReversibleCommand command) {","lastModifiedDate":"2024-04-12"},{"lineNumber":154,"author":{"gitId":"meenulekha"},"content":"            return;","lastModifiedDate":"2024-04-12"},{"lineNumber":155,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":156,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":157,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":158,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-12"},{"lineNumber":159,"author":{"gitId":"meenulekha"},"content":"     * A Model stub that always accept the event being added.","lastModifiedDate":"2024-04-12"},{"lineNumber":160,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-12"},{"lineNumber":161,"author":{"gitId":"meenulekha"},"content":"    private class ModelStubAcceptingEventAdded extends ModelStub {","lastModifiedDate":"2024-04-12"},{"lineNumber":162,"author":{"gitId":"meenulekha"},"content":"        final ArrayList\u003cEvent\u003e eventsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-12"},{"lineNumber":163,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":164,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":165,"author":{"gitId":"meenulekha"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2024-04-12"},{"lineNumber":166,"author":{"gitId":"meenulekha"},"content":"            return eventsAdded.stream().anyMatch(event::isSameEvent);","lastModifiedDate":"2024-04-12"},{"lineNumber":167,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":168,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":169,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":170,"author":{"gitId":"meenulekha"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2024-04-12"},{"lineNumber":171,"author":{"gitId":"meenulekha"},"content":"            requireNonNull(event);","lastModifiedDate":"2024-04-12"},{"lineNumber":172,"author":{"gitId":"meenulekha"},"content":"            eventsAdded.add(event);","lastModifiedDate":"2024-04-12"},{"lineNumber":173,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":174,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":175,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":176,"author":{"gitId":"meenulekha"},"content":"        public void deleteEvent(Event target) {","lastModifiedDate":"2024-04-12"},{"lineNumber":177,"author":{"gitId":"meenulekha"},"content":"            eventsAdded.remove(target);","lastModifiedDate":"2024-04-12"},{"lineNumber":178,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":179,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":180,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":181,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":182,"author":{"gitId":"meenulekha"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2024-04-12"},{"lineNumber":183,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":184,"author":{"gitId":"meenulekha"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-04-12"},{"lineNumber":185,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":186,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":187,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":188,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":189,"author":{"gitId":"meenulekha"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2024-04-12"},{"lineNumber":190,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":191,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":192,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":193,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":194,"author":{"gitId":"meenulekha"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2024-04-12"},{"lineNumber":195,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":196,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":197,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":198,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":199,"author":{"gitId":"meenulekha"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2024-04-12"},{"lineNumber":200,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":201,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":202,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":203,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":204,"author":{"gitId":"meenulekha"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2024-04-12"},{"lineNumber":205,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":206,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":207,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":208,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":209,"author":{"gitId":"meenulekha"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2024-04-12"},{"lineNumber":210,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":211,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":212,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":213,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":214,"author":{"gitId":"meenulekha"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2024-04-12"},{"lineNumber":215,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":216,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":217,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":218,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":219,"author":{"gitId":"meenulekha"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2024-04-12"},{"lineNumber":220,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":221,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":222,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":223,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":224,"author":{"gitId":"meenulekha"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-04-12"},{"lineNumber":225,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":226,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":227,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":228,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":229,"author":{"gitId":"meenulekha"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-04-12"},{"lineNumber":230,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":231,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":232,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":233,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":234,"author":{"gitId":"meenulekha"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2024-04-12"},{"lineNumber":235,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":236,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":237,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":238,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":239,"author":{"gitId":"meenulekha"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2024-04-12"},{"lineNumber":240,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":241,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":242,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":243,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":244,"author":{"gitId":"meenulekha"},"content":"        public void groupPerson(Person target, int groupNumber) {","lastModifiedDate":"2024-04-12"},{"lineNumber":245,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":246,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":247,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":248,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":249,"author":{"gitId":"meenulekha"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2024-04-12"},{"lineNumber":250,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":251,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":252,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":253,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":254,"author":{"gitId":"meenulekha"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-04-12"},{"lineNumber":255,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":256,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":257,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":258,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":259,"author":{"gitId":"meenulekha"},"content":"        public CommandResult undoAddressBook() throws UndoException {","lastModifiedDate":"2024-04-12"},{"lineNumber":260,"author":{"gitId":"meenulekha"},"content":"            return null;","lastModifiedDate":"2024-04-12"},{"lineNumber":261,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":262,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":263,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":264,"author":{"gitId":"meenulekha"},"content":"        public CommandResult redoAddressBook() throws UndoException {","lastModifiedDate":"2024-04-12"},{"lineNumber":265,"author":{"gitId":"meenulekha"},"content":"            return null;","lastModifiedDate":"2024-04-12"},{"lineNumber":266,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":267,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":268,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":269,"author":{"gitId":"meenulekha"},"content":"        public boolean canUndoAddressBook() {","lastModifiedDate":"2024-04-12"},{"lineNumber":270,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":271,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":272,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":273,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":274,"author":{"gitId":"meenulekha"},"content":"        public boolean canRedoAddressBook() {","lastModifiedDate":"2024-04-12"},{"lineNumber":275,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":276,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":277,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":278,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":279,"author":{"gitId":"meenulekha"},"content":"        public void addCommand(ReversibleCommand command) {","lastModifiedDate":"2024-04-12"},{"lineNumber":280,"author":{"gitId":"meenulekha"},"content":"            return;","lastModifiedDate":"2024-04-12"},{"lineNumber":281,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":282,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":283,"author":{"gitId":"meenulekha"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2024-04-12"},{"lineNumber":284,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":285,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":286,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":287,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":288,"author":{"gitId":"meenulekha"},"content":"        public void deleteEvent(Event target) {","lastModifiedDate":"2024-04-12"},{"lineNumber":289,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":290,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":291,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":292,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":293,"author":{"gitId":"meenulekha"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2024-04-12"},{"lineNumber":294,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":295,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":296,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":297,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":298,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":299,"author":{"gitId":"meenulekha"},"content":"        public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2024-04-12"},{"lineNumber":300,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":301,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":302,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":303,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":304,"author":{"gitId":"meenulekha"},"content":"        public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2024-04-12"},{"lineNumber":305,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":306,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":307,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":308,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":309,"author":{"gitId":"meenulekha"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2024-04-12"},{"lineNumber":310,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":311,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":312,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":313,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":314,"author":{"gitId":"meenulekha"},"content":"        public ReadOnlyEventBook getEventBook() {","lastModifiedDate":"2024-04-12"},{"lineNumber":315,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":316,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":317,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":318,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":319,"author":{"gitId":"meenulekha"},"content":"        public Path getEventBookFilePath() {","lastModifiedDate":"2024-04-12"},{"lineNumber":320,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":321,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":322,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":323,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":324,"author":{"gitId":"meenulekha"},"content":"        public void setEventBookFilePath(Path eventBookFilePath) {","lastModifiedDate":"2024-04-12"},{"lineNumber":325,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":326,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":327,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":328,"author":{"gitId":"meenulekha"},"content":"        @Override","lastModifiedDate":"2024-04-12"},{"lineNumber":329,"author":{"gitId":"meenulekha"},"content":"        public void setEventBook(ReadOnlyEventBook eventBook) {","lastModifiedDate":"2024-04-12"},{"lineNumber":330,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-12"},{"lineNumber":331,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-12"},{"lineNumber":332,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":333,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-12"}],"authorContributionMap":{"meenulekha":333}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"meenulekha":3,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/ClearEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.logic.commands.ClearEventCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"public class ClearEventCommandTest {","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"    public void execute_emptyEventBook_success() {","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"        assertEquals(new ClearEventCommand().execute(model).getFeedbackToUser(), MESSAGE_SUCCESS);","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"    public void execute_nonEmptyEventBook_success() {","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(),","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"                getTypicalEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(),","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"                getTypicalEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"        expectedModel.setEventBook(new EventBook());","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"        assertEquals(new ClearEventCommand().execute(model).getFeedbackToUser(), MESSAGE_SUCCESS);","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"meenulekha":38}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GROUP;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"    public static final String VALID_CATEGORY_PARTICIPANT \u003d \"PARTICIPANT\";","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"julia-cp"},"content":"    public static final String VALID_CATEGORY_STAFF \u003d \"STAFF\";","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"julia-cp"},"content":"    public static final int VALID_GROUP \u003d 2;","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"    public static final String CATEGORY_DESC_PARTICIPANT \u003d \" \" + PREFIX_CATEGORY + VALID_CATEGORY_PARTICIPANT;","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"julia-cp"},"content":"    public static final String CATEGORY_DESC_STAFF \u003d \" \" + PREFIX_CATEGORY + VALID_CATEGORY_STAFF;","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"julia-cp"},"content":"    public static final String GROUP_DESC \u003d \" \" + PREFIX_GROUP + VALID_GROUP;","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"julia-cp"},"content":"    public static final String INVALID_GROUP_DESC \u003d \" \" + PREFIX_GROUP + \"one\"; // not an integer","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"dhlee03"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"dhlee03"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"dhlee03":4,"julia-cp":7,"-":112}},{"path":"src/test/java/seedu/address/logic/commands/CommentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"public class CommentCommandTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"    public void execute_comment_success() throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"        CommentCommand commentCommand \u003d new CommentCommand(INDEX_FIRST_PERSON, new Comment(\"This is a comment.\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"        commentCommand.execute(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"        assertEquals(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()).getComment(),","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"                new Comment(\"This is a comment.\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"    public void execute_no_comment() {","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"        Comment comment \u003d new Comment(\"No comment provided.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"        assertEquals(comment, person.getComment());","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"    public void undo() throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"        CommentCommand commentCommand \u003d new CommentCommand(INDEX_FIRST_PERSON, new Comment(\"This is a comment.\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"        commentCommand.execute(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"        commentCommand.undo(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"        assertEquals(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()).getComment(),","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"                new Comment(\"She is an Expert.\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"    public void redo() throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"        CommentCommand commentCommand \u003d new CommentCommand(INDEX_FIRST_PERSON, new Comment(\"This is a comment.\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"        commentCommand.execute(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"        commentCommand.undo(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"        commentCommand.redo(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"        assertEquals(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()).getComment(),","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"                new Comment(\"This is a comment.\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"dhlee03":51,"meenulekha":2}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), model.getEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":114,"author":{"gitId":"bachletuankhai"},"content":"    public void executeUndoRedo_validIndexUnfilteredList_success() {","lastModifiedDate":"2024-03-30"},{"lineNumber":115,"author":{"gitId":"bachletuankhai"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-30"},{"lineNumber":116,"author":{"gitId":"bachletuankhai"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-30"},{"lineNumber":117,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":118,"author":{"gitId":"meenulekha"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"bachletuankhai"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2024-03-30"},{"lineNumber":120,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":121,"author":{"gitId":"bachletuankhai"},"content":"        // delete -\u003e first person deleted","lastModifiedDate":"2024-03-30"},{"lineNumber":122,"author":{"gitId":"bachletuankhai"},"content":"        assertCommandSuccess(deleteCommand, model,","lastModifiedDate":"2024-03-30"},{"lineNumber":123,"author":{"gitId":"bachletuankhai"},"content":"                String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)),","lastModifiedDate":"2024-03-30"},{"lineNumber":124,"author":{"gitId":"bachletuankhai"},"content":"                expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":125,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":126,"author":{"gitId":"bachletuankhai"},"content":"        // undo -\u003e reverts addressbook back to previous state and filtered person list","lastModifiedDate":"2024-03-30"},{"lineNumber":127,"author":{"gitId":"bachletuankhai"},"content":"        // to show all persons","lastModifiedDate":"2024-03-30"},{"lineNumber":128,"author":{"gitId":"bachletuankhai"},"content":"        expectedModel.addPerson(personToDelete);","lastModifiedDate":"2024-03-30"},{"lineNumber":129,"author":{"gitId":"bachletuankhai"},"content":"        assertCommandSuccess(new UndoCommand(), model,","lastModifiedDate":"2024-03-30"},{"lineNumber":130,"author":{"gitId":"bachletuankhai"},"content":"                String.format(DeleteCommand.MESSAGE_SUCCESS_UNDO, Messages.format(personToDelete)), expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":131,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":132,"author":{"gitId":"bachletuankhai"},"content":"        // redo -\u003e same first person deleted again","lastModifiedDate":"2024-03-30"},{"lineNumber":133,"author":{"gitId":"bachletuankhai"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2024-03-30"},{"lineNumber":134,"author":{"gitId":"bachletuankhai"},"content":"        assertCommandSuccess(new RedoCommand(), model,","lastModifiedDate":"2024-03-30"},{"lineNumber":135,"author":{"gitId":"bachletuankhai"},"content":"                String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, Messages.format(personToDelete)),","lastModifiedDate":"2024-03-30"},{"lineNumber":136,"author":{"gitId":"bachletuankhai"},"content":"                expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":137,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":138,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"meenulekha":5,"bachletuankhai":25,"-":117}},{"path":"src/test/java/seedu/address/logic/commands/DeleteEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.UniqueEventList;","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":" * Contains integration tests (interaction with the Model) and unit tests for {@code DeleteEventCommand}.","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"public class DeleteEventCommandTest {","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"        Event eventToDelete \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"        DeleteEventCommand deleteCommand \u003d new DeleteEventCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"        try {","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"            // Execute the delete command","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"            EventCommandResult commandResult \u003d deleteCommand.execute(model);","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"            // Prepare the expected event list after the delete command is executed","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"            UniqueEventList expectedEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"            expectedEventList.setEvents(model.getFilteredEventList());","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"            // Prepare the expected model","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"            Model expectedModel \u003d new ModelManager(model.getAddressBook(),","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"                    model.getEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"            // Prepare the expected message","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"            String expectedMessage \u003d String.format(DeleteEventCommand.MESSAGE_DELETE_EVENT_SUCCESS,","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"                    eventToDelete.toString());","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"            // Assert that the feedback message is as expected","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"            assertEquals(expectedMessage, commandResult.getFeedbackToUser());","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"            // Assert that the filtered event list in the model matches the expected event list","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"            assertEquals(expectedEventList.asUnmodifiableObservableList(), model.getFilteredEventList());","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"            fail(\"Execution of command should not fail.\", e);","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEventList().size() + 1);","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"        DeleteEventCommand deleteCommand \u003d new DeleteEventCommand(outOfBoundIndex);","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"        try {","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"meenulekha"},"content":"            deleteCommand.execute(model);","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"The expected CommandException was not thrown.\");","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"meenulekha"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"meenulekha"},"content":"            assertEquals(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX, e.getMessage());","lastModifiedDate":"2024-04-13"},{"lineNumber":71,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":72,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":73,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":74,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":75,"author":{"gitId":"meenulekha"},"content":"    public void equals() {","lastModifiedDate":"2024-04-13"},{"lineNumber":76,"author":{"gitId":"meenulekha"},"content":"        DeleteEventCommand deleteFirstCommand \u003d new DeleteEventCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2024-04-13"},{"lineNumber":77,"author":{"gitId":"meenulekha"},"content":"        DeleteEventCommand deleteSecondCommand \u003d new DeleteEventCommand(INDEX_SECOND_EVENT);","lastModifiedDate":"2024-04-13"},{"lineNumber":78,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":79,"author":{"gitId":"meenulekha"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-13"},{"lineNumber":80,"author":{"gitId":"meenulekha"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2024-04-13"},{"lineNumber":81,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":82,"author":{"gitId":"meenulekha"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-13"},{"lineNumber":83,"author":{"gitId":"meenulekha"},"content":"        DeleteEventCommand deleteFirstCommandCopy \u003d new DeleteEventCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2024-04-13"},{"lineNumber":84,"author":{"gitId":"meenulekha"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2024-04-13"},{"lineNumber":85,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":86,"author":{"gitId":"meenulekha"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-13"},{"lineNumber":87,"author":{"gitId":"meenulekha"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2024-04-13"},{"lineNumber":88,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":89,"author":{"gitId":"meenulekha"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-13"},{"lineNumber":90,"author":{"gitId":"meenulekha"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2024-04-13"},{"lineNumber":91,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":92,"author":{"gitId":"meenulekha"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2024-04-13"},{"lineNumber":93,"author":{"gitId":"meenulekha"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2024-04-13"},{"lineNumber":94,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":95,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":96,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":97,"author":{"gitId":"meenulekha"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-04-13"},{"lineNumber":98,"author":{"gitId":"meenulekha"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-04-13"},{"lineNumber":99,"author":{"gitId":"meenulekha"},"content":"        DeleteEventCommand deleteCommand \u003d new DeleteEventCommand(targetIndex);","lastModifiedDate":"2024-04-13"},{"lineNumber":100,"author":{"gitId":"meenulekha"},"content":"        String expected \u003d DeleteEventCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2024-04-13"},{"lineNumber":101,"author":{"gitId":"meenulekha"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2024-04-13"},{"lineNumber":102,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":103,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":104,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":105,"author":{"gitId":"meenulekha"},"content":"    public void executeUndoRedo_validIndexUnfilteredList_success() {","lastModifiedDate":"2024-04-13"},{"lineNumber":106,"author":{"gitId":"meenulekha"},"content":"        // Select the event to be deleted","lastModifiedDate":"2024-04-13"},{"lineNumber":107,"author":{"gitId":"meenulekha"},"content":"        Event eventToDelete \u003d model.getFilteredEventList().get(INDEX_SECOND_EVENT.getZeroBased());","lastModifiedDate":"2024-04-13"},{"lineNumber":108,"author":{"gitId":"meenulekha"},"content":"        DeleteEventCommand deleteCommand \u003d new DeleteEventCommand(INDEX_SECOND_EVENT);","lastModifiedDate":"2024-04-13"},{"lineNumber":109,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":110,"author":{"gitId":"meenulekha"},"content":"        try {","lastModifiedDate":"2024-04-13"},{"lineNumber":111,"author":{"gitId":"meenulekha"},"content":"            // Execute the delete command","lastModifiedDate":"2024-04-13"},{"lineNumber":112,"author":{"gitId":"meenulekha"},"content":"            EventCommandResult deleteResult \u003d deleteCommand.execute(model);","lastModifiedDate":"2024-04-13"},{"lineNumber":113,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":114,"author":{"gitId":"meenulekha"},"content":"            // Verify that the delete operation was successful","lastModifiedDate":"2024-04-13"},{"lineNumber":115,"author":{"gitId":"meenulekha"},"content":"            assertEquals(String.format(DeleteEventCommand.MESSAGE_DELETE_EVENT_SUCCESS,","lastModifiedDate":"2024-04-13"},{"lineNumber":116,"author":{"gitId":"meenulekha"},"content":"                            Messages.formatEvent(eventToDelete)),","lastModifiedDate":"2024-04-13"},{"lineNumber":117,"author":{"gitId":"meenulekha"},"content":"                    deleteResult.getFeedbackToUser());","lastModifiedDate":"2024-04-13"},{"lineNumber":118,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":119,"author":{"gitId":"meenulekha"},"content":"            // Get the current state of the model","lastModifiedDate":"2024-04-13"},{"lineNumber":120,"author":{"gitId":"meenulekha"},"content":"            ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(),","lastModifiedDate":"2024-04-13"},{"lineNumber":121,"author":{"gitId":"meenulekha"},"content":"                    model.getEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-13"},{"lineNumber":122,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":123,"author":{"gitId":"meenulekha"},"content":"            // Verify that the event is deleted from the model\u0027s list of events","lastModifiedDate":"2024-04-13"},{"lineNumber":124,"author":{"gitId":"meenulekha"},"content":"            assertFalse(expectedModel.getFilteredEventList().contains(eventToDelete));","lastModifiedDate":"2024-04-13"},{"lineNumber":125,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":126,"author":{"gitId":"meenulekha"},"content":"            // Undo the delete operation","lastModifiedDate":"2024-04-13"},{"lineNumber":127,"author":{"gitId":"meenulekha"},"content":"            CommandResult undoResult \u003d new UndoCommand().execute(model);","lastModifiedDate":"2024-04-13"},{"lineNumber":128,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":129,"author":{"gitId":"meenulekha"},"content":"            // Verify that the undo operation was successful","lastModifiedDate":"2024-04-13"},{"lineNumber":130,"author":{"gitId":"meenulekha"},"content":"            assertEquals(String.format(DeleteEventCommand.MESSAGE_SUCCESS_UNDO, Messages.formatEvent(eventToDelete)),","lastModifiedDate":"2024-04-13"},{"lineNumber":131,"author":{"gitId":"meenulekha"},"content":"                    undoResult.getFeedbackToUser());","lastModifiedDate":"2024-04-13"},{"lineNumber":132,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":133,"author":{"gitId":"meenulekha"},"content":"            // Redo the delete operation","lastModifiedDate":"2024-04-13"},{"lineNumber":134,"author":{"gitId":"meenulekha"},"content":"            CommandResult redoResult \u003d new RedoCommand().execute(model);","lastModifiedDate":"2024-04-13"},{"lineNumber":135,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":136,"author":{"gitId":"meenulekha"},"content":"            // Verify that the event is deleted again from the model\u0027s list of events","lastModifiedDate":"2024-04-13"},{"lineNumber":137,"author":{"gitId":"meenulekha"},"content":"            assertFalse(expectedModel.getFilteredEventList().contains(eventToDelete));","lastModifiedDate":"2024-04-13"},{"lineNumber":138,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":139,"author":{"gitId":"meenulekha"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2024-04-13"},{"lineNumber":140,"author":{"gitId":"meenulekha"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", e);","lastModifiedDate":"2024-04-13"},{"lineNumber":141,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-13"},{"lineNumber":142,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":143,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":144,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"meenulekha":144}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":" * EditCommand.","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"                new EventBook(model.getEventBook()), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"dhlee03"},"content":"                .build();","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"dhlee03"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"meenulekha"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"meenulekha"},"content":"                new EventBook(model.getEventBook()), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"meenulekha"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"meenulekha"},"content":"                new EventBook(model.getEventBook()), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"meenulekha"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"meenulekha"},"content":"                new EventBook(model.getEventBook()), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"bachletuankhai"},"content":"     * Edit filtered list where index is larger than size of filtered list, but","lastModifiedDate":"2024-03-30"},{"lineNumber":140,"author":{"gitId":"bachletuankhai"},"content":"     * smaller than size of address book","lastModifiedDate":"2024-03-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":156,"author":{"gitId":"bachletuankhai"},"content":"    public void executeUndoRedo_validIndexUnfilteredList_success() throws Exception {","lastModifiedDate":"2024-03-30"},{"lineNumber":157,"author":{"gitId":"bachletuankhai"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-30"},{"lineNumber":158,"author":{"gitId":"bachletuankhai"},"content":"        Person personToEdit \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-30"},{"lineNumber":159,"author":{"gitId":"bachletuankhai"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2024-03-30"},{"lineNumber":160,"author":{"gitId":"bachletuankhai"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-03-30"},{"lineNumber":161,"author":{"gitId":"meenulekha"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-04-03"},{"lineNumber":162,"author":{"gitId":"meenulekha"},"content":"                new EventBook(model.getEventBook()), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":163,"author":{"gitId":"bachletuankhai"},"content":"        expectedModel.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":164,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":165,"author":{"gitId":"bachletuankhai"},"content":"        // edit -\u003e first person edited","lastModifiedDate":"2024-03-30"},{"lineNumber":166,"author":{"gitId":"bachletuankhai"},"content":"        editCommand.execute(model);","lastModifiedDate":"2024-03-30"},{"lineNumber":167,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":168,"author":{"gitId":"bachletuankhai"},"content":"        // undo -\u003e reverts addressbook back to previous state and filtered person list","lastModifiedDate":"2024-03-30"},{"lineNumber":169,"author":{"gitId":"bachletuankhai"},"content":"        // to show all persons","lastModifiedDate":"2024-03-30"},{"lineNumber":170,"author":{"gitId":"bachletuankhai"},"content":"        expectedModel.setPerson(editedPerson, personToEdit);","lastModifiedDate":"2024-03-30"},{"lineNumber":171,"author":{"gitId":"bachletuankhai"},"content":"        assertCommandSuccess(new UndoCommand(), model,","lastModifiedDate":"2024-03-30"},{"lineNumber":172,"author":{"gitId":"bachletuankhai"},"content":"                String.format(EditCommand.MESSAGE_SUCCESS_UNDO, Messages.format(personToEdit)), expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":173,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":174,"author":{"gitId":"bachletuankhai"},"content":"        // redo -\u003e same first person edited again","lastModifiedDate":"2024-03-30"},{"lineNumber":175,"author":{"gitId":"bachletuankhai"},"content":"        expectedModel.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-30"},{"lineNumber":176,"author":{"gitId":"bachletuankhai"},"content":"        assertCommandSuccess(new RedoCommand(), model,","lastModifiedDate":"2024-03-30"},{"lineNumber":177,"author":{"gitId":"bachletuankhai"},"content":"                String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)), expectedModel);","lastModifiedDate":"2024-03-30"},{"lineNumber":178,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":179,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":180,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":181,"author":{"gitId":"julia-cp"},"content":"    public void execute_editNonSponsorGroup_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":182,"author":{"gitId":"julia-cp"},"content":"        PersonBuilder editedPersonBuilder \u003d new PersonBuilder();","lastModifiedDate":"2024-04-03"},{"lineNumber":183,"author":{"gitId":"julia-cp"},"content":"        Person editedPerson \u003d editedPersonBuilder.withCategory(\"PARTICIPANT\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":184,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":185,"author":{"gitId":"julia-cp"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson)","lastModifiedDate":"2024-04-03"},{"lineNumber":186,"author":{"gitId":"julia-cp"},"content":"                .withGroup(2).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":187,"author":{"gitId":"julia-cp"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-04-03"},{"lineNumber":188,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":189,"author":{"gitId":"meenulekha"},"content":"        Model modelUsed \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-04-03"},{"lineNumber":190,"author":{"gitId":"meenulekha"},"content":"                new EventBook(model.getEventBook()), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":191,"author":{"gitId":"julia-cp"},"content":"        modelUsed.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-04-03"},{"lineNumber":192,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":193,"author":{"gitId":"julia-cp"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-04-03"},{"lineNumber":194,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":195,"author":{"gitId":"meenulekha"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-04-03"},{"lineNumber":196,"author":{"gitId":"meenulekha"},"content":"                new EventBook(model.getEventBook()), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":197,"author":{"gitId":"julia-cp"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-04-03"},{"lineNumber":198,"author":{"gitId":"julia-cp"},"content":"        expectedModel.groupPerson(editedPerson, 2);","lastModifiedDate":"2024-04-03"},{"lineNumber":199,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":200,"author":{"gitId":"julia-cp"},"content":"        assertCommandSuccess(editCommand, modelUsed, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":201,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":202,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":203,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":204,"author":{"gitId":"julia-cp"},"content":"    public void execute_editSponsorGroup_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":205,"author":{"gitId":"julia-cp"},"content":"        PersonBuilder editedPersonBuilder \u003d new PersonBuilder();","lastModifiedDate":"2024-04-03"},{"lineNumber":206,"author":{"gitId":"julia-cp"},"content":"        Person editedPerson \u003d editedPersonBuilder.withCategory(\"SPONSOR\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":207,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":208,"author":{"gitId":"julia-cp"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson)","lastModifiedDate":"2024-04-03"},{"lineNumber":209,"author":{"gitId":"julia-cp"},"content":"                .withGroup(2).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":210,"author":{"gitId":"julia-cp"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-04-03"},{"lineNumber":211,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":212,"author":{"gitId":"meenulekha"},"content":"        Model modelUsed \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-04-03"},{"lineNumber":213,"author":{"gitId":"meenulekha"},"content":"                new EventBook(model.getEventBook()), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":214,"author":{"gitId":"julia-cp"},"content":"        modelUsed.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-04-03"},{"lineNumber":215,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":216,"author":{"gitId":"julia-cp"},"content":"        assertCommandFailure(editCommand, modelUsed, EditCommand.MESSAGE_SPONSOR_HAS_NO_GROUP);","lastModifiedDate":"2024-04-03"},{"lineNumber":217,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":218,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":219,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":220,"author":{"gitId":"julia-cp"},"content":"    public void execute_editSponsor_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":221,"author":{"gitId":"julia-cp"},"content":"        PersonBuilder editedPersonBuilder \u003d new PersonBuilder();","lastModifiedDate":"2024-04-03"},{"lineNumber":222,"author":{"gitId":"julia-cp"},"content":"        Person editedPerson \u003d editedPersonBuilder.withCategory(\"SPONSOR\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":223,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":224,"author":{"gitId":"julia-cp"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":225,"author":{"gitId":"julia-cp"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-04-03"},{"lineNumber":226,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":227,"author":{"gitId":"meenulekha"},"content":"        Model modelUsed \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-04-03"},{"lineNumber":228,"author":{"gitId":"meenulekha"},"content":"                new EventBook(model.getEventBook()), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":229,"author":{"gitId":"julia-cp"},"content":"        modelUsed.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-04-03"},{"lineNumber":230,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":231,"author":{"gitId":"julia-cp"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-04-03"},{"lineNumber":232,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":233,"author":{"gitId":"meenulekha"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-04-03"},{"lineNumber":234,"author":{"gitId":"meenulekha"},"content":"                new EventBook(model.getEventBook()), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":235,"author":{"gitId":"julia-cp"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-04-03"},{"lineNumber":236,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":237,"author":{"gitId":"julia-cp"},"content":"        assertCommandSuccess(editCommand, modelUsed, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":238,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":239,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"dhlee03":2,"julia-cp":50,"meenulekha":23,"bachletuankhai":27,"-":173}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"dhlee03"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", category\u003d\"","lastModifiedDate":"2024-04-14"},{"lineNumber":57,"author":{"gitId":"dhlee03"},"content":"                + editPersonDescriptor.getCategory().orElse(null) + \", group\u003d\"","lastModifiedDate":"2024-04-14"},{"lineNumber":58,"author":{"gitId":"dhlee03"},"content":"                + editPersonDescriptor.getGroup().orElse(null) + \"}\";","lastModifiedDate":"2024-04-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"dhlee03":3,"-":58}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"    public void equals() {","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(new ExitCommand(), new ExitCommand());","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"bachletuankhai":6,"-":20}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.ContactContainsKeywordsPredicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"        ContactContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"                new ContactContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"        ContactContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"                new ContactContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"dhlee03"},"content":"        ContactContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"dhlee03"},"content":"        ContactContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"dhlee03"},"content":"        ContactContainsKeywordsPredicate predicate \u003d new ContactContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"dhlee03"},"content":"    private ContactContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"dhlee03"},"content":"        return new ContactContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"dhlee03":10,"meenulekha":3,"-":79}},{"path":"src/test/java/seedu/address/logic/commands/FindEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"import java.util.Collections;","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.EventNameContainsKeywordsPredicate;","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":" * Contains integration tests (interaction with the Model) for {@code FindEventCommand}.","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"public class FindEventCommandTest {","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"    public void equals() {","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"        EventNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"                new EventNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"        EventNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"                new EventNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"        FindEventCommand findFirstCommand \u003d new FindEventCommand(firstPredicate);","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"        FindEventCommand findSecondCommand \u003d new FindEventCommand(secondPredicate);","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"        FindEventCommand findFirstCommandCopy \u003d new FindEventCommand(firstPredicate);","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"     * Parses {@code userInput} into an {@code EventContainsKeywordsPredicate}.","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-13"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"    private EventNameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"        return new EventNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"meenulekha":62}},{"path":"src/test/java/seedu/address/logic/commands/GroupCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"julia-cp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"julia-cp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"julia-cp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"julia-cp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"julia-cp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"julia-cp"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"julia-cp"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"julia-cp"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"julia-cp"},"content":"public class GroupCommandTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"julia-cp"},"content":"    public void execute_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"julia-cp"},"content":"        Person personToGroup \u003d new PersonBuilder().build();","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"julia-cp"},"content":"        model.setPerson(model.getFilteredPersonList().get(0), personToGroup);","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"julia-cp"},"content":"        GroupCommand groupCommand \u003d new GroupCommand(INDEX_FIRST_PERSON, 2);","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"julia-cp"},"content":"        String expectedMessage \u003d String.format(GroupCommand.MESSAGE_GROUP_PERSON_SUCCESS,","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"julia-cp"},"content":"                Messages.format(personToGroup));","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"                new EventBook(model.getEventBook()), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"julia-cp"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), personToGroup);","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"julia-cp"},"content":"        expectedModel.groupPerson(personToGroup, 2);","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"julia-cp"},"content":"        assertCommandSuccess(groupCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"julia-cp"},"content":"    public void execute_noTargetGroup_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"julia-cp"},"content":"        Person personToGroup \u003d new PersonBuilder().build();","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"julia-cp"},"content":"        model.setPerson(model.getFilteredPersonList().get(0), personToGroup);","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"julia-cp"},"content":"        GroupCommand groupCommandToSetTotalGroupNumber \u003d new GroupCommand(INDEX_FIRST_PERSON, 3);","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"julia-cp"},"content":"        GroupCommand groupCommand \u003d new GroupCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"julia-cp"},"content":"        String expectedMessage \u003d String.format(GroupCommand.MESSAGE_GROUP_PERSON_SUCCESS,","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"julia-cp"},"content":"                Messages.format(personToGroup));","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"                new EventBook(model.getEventBook()), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"julia-cp"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), personToGroup);","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"julia-cp"},"content":"        assertCommandSuccess(groupCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"julia-cp"},"content":"    public void execute_invalidPersonIndex_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"julia-cp"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"julia-cp"},"content":"        GroupCommand groupCommand \u003d new GroupCommand(outOfBoundIndex, 2);","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"julia-cp"},"content":"        assertCommandFailure(groupCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"julia-cp"},"content":"    public void execute_groupSponsor_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"julia-cp"},"content":"        Person personToGroup \u003d new PersonBuilder().withCategory(\"SPONSOR\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"julia-cp"},"content":"        model.setPerson(model.getFilteredPersonList().get(0), personToGroup);","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"julia-cp"},"content":"        GroupCommand groupCommand \u003d new GroupCommand(INDEX_FIRST_PERSON, 2);","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"julia-cp"},"content":"        assertCommandFailure(groupCommand, model, GroupCommand.MESSAGE_PERSON_WITHOUT_GROUP);","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"julia-cp"},"content":"    public void execute_groupStaff_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"julia-cp"},"content":"        Person personToGroup \u003d new PersonBuilder().withCategory(\"STAFF\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"julia-cp"},"content":"        model.setPerson(model.getFilteredPersonList().get(0), personToGroup);","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"julia-cp"},"content":"        GroupCommand groupCommand \u003d new GroupCommand(INDEX_FIRST_PERSON, 2);","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"julia-cp"},"content":"        String expectedMessage \u003d String.format(GroupCommand.MESSAGE_GROUP_PERSON_SUCCESS,","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"julia-cp"},"content":"                Messages.format(personToGroup));","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"meenulekha"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"meenulekha"},"content":"                new EventBook(model.getEventBook()), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"julia-cp"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), personToGroup);","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"julia-cp"},"content":"        expectedModel.groupPerson(personToGroup, 2);","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"julia-cp"},"content":"        assertCommandSuccess(groupCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"julia-cp"},"content":"    public void execute_groupParticipant_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"julia-cp"},"content":"        Person personToGroup \u003d new PersonBuilder().withCategory(\"PARTICIPANT\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"julia-cp"},"content":"        model.setPerson(model.getFilteredPersonList().get(0), personToGroup);","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"julia-cp"},"content":"        GroupCommand groupCommand \u003d new GroupCommand(INDEX_FIRST_PERSON, 2);","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"julia-cp"},"content":"        String expectedMessage \u003d String.format(GroupCommand.MESSAGE_GROUP_PERSON_SUCCESS,","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"julia-cp"},"content":"                Messages.format(personToGroup));","lastModifiedDate":"2024-04-03"},{"lineNumber":109,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":110,"author":{"gitId":"meenulekha"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-04-03"},{"lineNumber":111,"author":{"gitId":"meenulekha"},"content":"                new EventBook(model.getEventBook()), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":112,"author":{"gitId":"julia-cp"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), personToGroup);","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"julia-cp"},"content":"        expectedModel.groupPerson(personToGroup, 2);","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":115,"author":{"gitId":"julia-cp"},"content":"        assertCommandSuccess(groupCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":117,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"julia-cp"},"content":"    public void executeUndoRedo_validIndex_success() throws Exception {","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"julia-cp"},"content":"        Person personToGroup \u003d new PersonBuilder().withCategory(\"PARTICIPANT\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"julia-cp"},"content":"        model.setPerson(model.getFilteredPersonList().get(0), personToGroup);","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"julia-cp"},"content":"        GroupCommand previousGroupCommand \u003d new GroupCommand(INDEX_FIRST_PERSON, 4);","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"julia-cp"},"content":"        GroupCommand groupCommand \u003d new GroupCommand(INDEX_FIRST_PERSON, 2);","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"meenulekha"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"meenulekha"},"content":"                new EventBook(model.getEventBook()), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"julia-cp"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), personToGroup);","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"julia-cp"},"content":"        expectedModel.groupPerson(personToGroup, 2);","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"julia-cp"},"content":"        // first person -\u003e group 4","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"julia-cp"},"content":"        previousGroupCommand.execute(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"julia-cp"},"content":"        // first person -\u003e group 2","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"julia-cp"},"content":"        groupCommand.execute(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":136,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"julia-cp"},"content":"        // undo -\u003e reverts addressbook back to previous state","lastModifiedDate":"2024-04-03"},{"lineNumber":138,"author":{"gitId":"julia-cp"},"content":"        expectedModel.groupPerson(personToGroup, 4);","lastModifiedDate":"2024-04-03"},{"lineNumber":139,"author":{"gitId":"julia-cp"},"content":"        assertCommandSuccess(new UndoCommand(), model,","lastModifiedDate":"2024-04-03"},{"lineNumber":140,"author":{"gitId":"julia-cp"},"content":"                String.format(GroupCommand.MESSAGE_SUCCESS_UNDO, Messages.format(personToGroup)), expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":141,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":142,"author":{"gitId":"julia-cp"},"content":"        // redo -\u003e same first person edited again","lastModifiedDate":"2024-04-03"},{"lineNumber":143,"author":{"gitId":"julia-cp"},"content":"        expectedModel.groupPerson(personToGroup, 2);","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"julia-cp"},"content":"        assertCommandSuccess(new RedoCommand(), model,","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"julia-cp"},"content":"                String.format(GroupCommand.MESSAGE_GROUP_PERSON_SUCCESS, Messages.format(personToGroup)),","lastModifiedDate":"2024-04-03"},{"lineNumber":146,"author":{"gitId":"julia-cp"},"content":"                expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":147,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":150,"author":{"gitId":"julia-cp"},"content":"    public void equals() {","lastModifiedDate":"2024-04-03"},{"lineNumber":151,"author":{"gitId":"julia-cp"},"content":"        final GroupCommand standardCommand \u003d new GroupCommand(INDEX_FIRST_PERSON, 2);","lastModifiedDate":"2024-04-03"},{"lineNumber":152,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":153,"author":{"gitId":"julia-cp"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":154,"author":{"gitId":"julia-cp"},"content":"        GroupCommand commandWithSameValues \u003d new GroupCommand(INDEX_FIRST_PERSON, 2);","lastModifiedDate":"2024-04-03"},{"lineNumber":155,"author":{"gitId":"julia-cp"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-04-03"},{"lineNumber":156,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":157,"author":{"gitId":"julia-cp"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":158,"author":{"gitId":"julia-cp"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-04-03"},{"lineNumber":159,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":160,"author":{"gitId":"julia-cp"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":161,"author":{"gitId":"julia-cp"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-04-03"},{"lineNumber":162,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":163,"author":{"gitId":"julia-cp"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":164,"author":{"gitId":"julia-cp"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-04-03"},{"lineNumber":165,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":166,"author":{"gitId":"julia-cp"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":167,"author":{"gitId":"julia-cp"},"content":"        assertFalse(standardCommand.equals(new GroupCommand(INDEX_SECOND_PERSON, 2)));","lastModifiedDate":"2024-04-03"},{"lineNumber":168,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":169,"author":{"gitId":"julia-cp"},"content":"        // different targetGroupNumber -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":170,"author":{"gitId":"julia-cp"},"content":"        assertFalse(standardCommand.equals(new GroupCommand(INDEX_FIRST_PERSON, 3)));","lastModifiedDate":"2024-04-03"},{"lineNumber":171,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":172,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":173,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":174,"author":{"gitId":"julia-cp"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-04-03"},{"lineNumber":175,"author":{"gitId":"julia-cp"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-04-03"},{"lineNumber":176,"author":{"gitId":"julia-cp"},"content":"        int targetGroupNumber \u003d 2;","lastModifiedDate":"2024-04-03"},{"lineNumber":177,"author":{"gitId":"julia-cp"},"content":"        GroupCommand groupCommand \u003d new GroupCommand(INDEX_FIRST_PERSON, targetGroupNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":178,"author":{"gitId":"julia-cp"},"content":"        String expected \u003d GroupCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \", targetGroup\u003d\"","lastModifiedDate":"2024-04-03"},{"lineNumber":179,"author":{"gitId":"julia-cp"},"content":"                + targetGroupNumber + \"}\";","lastModifiedDate":"2024-04-03"},{"lineNumber":180,"author":{"gitId":"julia-cp"},"content":"        assertEquals(expected, groupCommand.toString());","lastModifiedDate":"2024-04-03"},{"lineNumber":181,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":182,"author":{"gitId":"julia-cp"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"julia-cp":169,"meenulekha":13}},{"path":"src/test/java/seedu/address/logic/commands/GroupRandomCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"julia-cp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"julia-cp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"julia-cp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"julia-cp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"julia-cp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"julia-cp"},"content":"public class GroupRandomCommandTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"julia-cp"},"content":"    public void execute_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"julia-cp"},"content":"        GroupRandomCommand groupRandomCommand \u003d new GroupRandomCommand(3);","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"julia-cp"},"content":"        String expectedMessage \u003d String.format(GroupRandomCommand.MESSAGE_GROUP_RANDOM_SUCCESS);","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"                new EventBook(model.getEventBook()), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"julia-cp"},"content":"        assertCommandSuccess(groupRandomCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"julia-cp"},"content":"    public void execute_invalidGroupSize_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"julia-cp"},"content":"        GroupRandomCommand groupRandomCommand \u003d new GroupRandomCommand(0);","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"julia-cp"},"content":"        assertCommandFailure(groupRandomCommand, model, GroupRandomCommand.MESSAGE_INVALID_MAX_GROUP_SIZE);","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"julia-cp"},"content":"    public void executeUndoRedo_validIndex_success() throws Exception {","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"julia-cp"},"content":"        GroupRandomCommand groupRandomCommand \u003d new GroupRandomCommand(3);","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"                new EventBook(model.getEventBook()), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"julia-cp"},"content":"        groupRandomCommand.execute(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"julia-cp"},"content":"        // undo -\u003e reverts addressbook back to previous state","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"julia-cp"},"content":"        assertCommandSuccess(new UndoCommand(), model,","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"julia-cp"},"content":"                String.format(GroupRandomCommand.MESSAGE_SUCCESS_UNDO), expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"julia-cp"},"content":"        // redo -\u003e same first person edited again","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"julia-cp"},"content":"        assertCommandSuccess(new RedoCommand(), model,","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"julia-cp"},"content":"                String.format(GroupRandomCommand.MESSAGE_GROUP_RANDOM_SUCCESS), expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"julia-cp"},"content":"    public void equals() {","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"julia-cp"},"content":"        final GroupRandomCommand standardCommand \u003d new GroupRandomCommand(2);","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"julia-cp"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"julia-cp"},"content":"        GroupRandomCommand commandWithSameValues \u003d new GroupRandomCommand(2);","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"julia-cp"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"julia-cp"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"julia-cp"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"julia-cp"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"julia-cp"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"julia-cp"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"julia-cp"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"julia-cp"},"content":"        // different maxGroupSize -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"julia-cp"},"content":"        assertFalse(standardCommand.equals(new GroupRandomCommand(3)));","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"julia-cp"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"julia-cp"},"content":"        int maxGroupSize \u003d 2;","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"julia-cp"},"content":"        GroupRandomCommand groupRandomCommand \u003d new GroupRandomCommand(maxGroupSize);","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"julia-cp"},"content":"        String expected \u003d GroupRandomCommand.class.getCanonicalName() + \"{maxGroupSize\u003d\" + maxGroupSize + \"}\";","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"julia-cp"},"content":"        assertEquals(expected, groupRandomCommand.toString());","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"julia-cp"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"julia-cp":80,"meenulekha":7}},{"path":"src/test/java/seedu/address/logic/commands/LinkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"public class LinkCommandTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"    public void execute_linkCommand_success() {","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"        Index[] indexes \u003d {Index.fromZeroBased(0)};","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"        LinkCommand linkCommand \u003d new LinkCommand(indexes);","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"        try {","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"            linkCommand.execute(model);","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"            assertEquals(\"Exported all selected people\", LinkCommand.MESSAGE_SUCCESS);","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"            fail();","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"    public void execute_linkCommand_failure() {","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"        Index[] indexes \u003d {Index.fromZeroBased(999)};","lastModifiedDate":"2024-04-14"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"        LinkCommand linkCommand \u003d new LinkCommand(indexes);","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"        try {","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"            linkCommand.execute(model);","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"            fail();","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"            assertEquals(\"The person index provided is invalid\", e.getMessage());","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"    public void duplicateIndexes() {","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"        Index[] indexes \u003d {Index.fromZeroBased(0), Index.fromZeroBased(0)};","lastModifiedDate":"2024-04-14"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"        LinkCommand linkCommand \u003d new LinkCommand(indexes);","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"        try {","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"            linkCommand.execute(model);","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"            fail();","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"            assertEquals(\"Duplicate index detected\", e.getMessage());","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"dhlee03":51,"meenulekha":4}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), model.getEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"meenulekha":3,"-":37}},{"path":"src/test/java/seedu/address/logic/commands/ListEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.logic.commands.ListEventCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListEventCommand.","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"public class ListEventCommandTest {","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"    private Model model;","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"    private Model expectedModel;","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"    public void setUp() {","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), model.getEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"        ListEventCommand listEventCommand \u003d new ListEventCommand();","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"        assertEquals(listEventCommand.execute(model).getFeedbackToUser(), MESSAGE_SUCCESS);","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"        // No need to show any specific event, as we\u0027re testing the behavior when the list is filtered","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"        ListEventCommand listEventCommand \u003d new ListEventCommand();","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"        assertEquals(listEventCommand.execute(model).getFeedbackToUser(), MESSAGE_SUCCESS);","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"meenulekha":45}},{"path":"src/test/java/seedu/address/logic/commands/RedoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"class RedoCommandTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    private Model model;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"    void setUp() {","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"    void execute_noUndoneCommand_fail() {","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"        assertCommandFailure(new RedoCommand(), model, String.format(RedoCommand.MESSAGE_FAILURE_NO_COMMAND_TO_REDO));","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"meenulekha":2,"bachletuankhai":24}},{"path":"src/test/java/seedu/address/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"class UndoCommandTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    private Model model;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"    void setUp() {","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"    void execute_emptyHistory_fail() {","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"        assertCommandFailure(new UndoCommand(), model, String.format(UndoCommand.MESSAGE_FAILURE_NO_COMMAND_TO_UNDO));","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"    public void execute_reversibleCommandStub_success() throws CommandException {","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"        Command command \u003d new ReversibleCommandStub();","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"        command.execute(model);","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"        // Stub execution has no effect on model","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"        assertCommandSuccess(new UndoCommand(), model, ReversibleCommandStub.MESSAGE_SUCCESS_UNDO, model);","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"    private class ReversibleCommandStub extends Command implements ReversibleCommand {","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"        public static final String MESSAGE_SUCCESS \u003d \"success\";","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"        public static final String MESSAGE_SUCCESS_UNDO \u003d \"undo\";","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"        public static final String MESSAGE_SUCCESS_REDO \u003d \"redo\";","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"        @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"        public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"            model.addCommand(this);","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"        @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"        public CommandResult undo(Model model) {","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"            return new CommandResult(MESSAGE_SUCCESS_UNDO);","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"        @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"        public CommandResult redo(Model model) {","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"            return new CommandResult(MESSAGE_SUCCESS_REDO);","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"meenulekha":2,"bachletuankhai":56}},{"path":"src/test/java/seedu/address/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-14"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"public class ViewCommandTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"    public void execute() throws CommandException {","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalEventBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"        assertEquals(\"Viewing comment of Person: Alice Pauline; Phone: 94351253; Email: alice@example.com; \"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"                + \"Category: PARTICIPANT\\n\" + \"She is an Expert.\", viewCommand.execute(model).getFeedbackToUser());","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"dhlee03":21,"meenulekha":2}},{"path":"src/test/java/seedu/address/logic/inputhistory/UserInputHistoryManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.inputhistory;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"class UserInputHistoryManagerTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"    private static final String[] CHAT_HISTORY \u003d {\"Hello\", \"World\", \"How\", \"Are\", \"You\"};","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"    private UserInputHistoryManager history;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    void setUp() {","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"        history \u003d new UserInputHistoryManager();","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    void addInputs() {","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"        for (String chat : CHAT_HISTORY) {","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"            history.addChatToHistory(chat);","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"    void addChatToHistory() {","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"        addInputs();","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(history.size(), CHAT_HISTORY.length);","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"        assertTrue(history.hasHistory());","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"    void getPreviousChat() {","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"        addInputs();","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"        for (int i \u003d CHAT_HISTORY.length - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"            assertEquals(CHAT_HISTORY[i], history.getPreviousChat());","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"        assertNull(history.getPreviousChat());","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"    void getNextChat() {","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"        addInputs();","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"        for (int i \u003d CHAT_HISTORY.length - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"            history.getPreviousChat();","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"        for (int i \u003d 1; i \u003c CHAT_HISTORY.length; i++) {","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"            assertEquals(CHAT_HISTORY[i], history.getNextChat());","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"        assertNull(history.getNextChat());","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"    void getPreviousChat_emptyHistory_returnsNull() {","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"        assertNull(history.getPreviousChat());","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"    void getNextChat_emptyHistory_returnsNull() {","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"        assertNull(history.getNextChat());","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"    void hasHistory_emptyHistory_returnsFalse() {","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"        assertFalse(history.hasHistory());","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"bachletuankhai":69}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CATEGORY_DESC_PARTICIPANT;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CATEGORY_DESC_STAFF;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUP_DESC;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"                + CATEGORY_DESC_PARTICIPANT, new AddCommand(expectedPerson));","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB)","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":55,"author":{"gitId":"dhlee03"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + CATEGORY_DESC_PARTICIPANT,","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":57,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"julia-cp"},"content":"        // participant with a group","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"julia-cp"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"julia-cp"},"content":"                + CATEGORY_DESC_PARTICIPANT + GROUP_DESC, new AddCommand(expectedPerson));","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"julia-cp"},"content":"        // staff with a group","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"julia-cp"},"content":"        expectedPerson \u003d new PersonBuilder(BOB).withCategory(\"STAFF\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"julia-cp"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"julia-cp"},"content":"                + CATEGORY_DESC_STAFF + GROUP_DESC, new AddCommand(expectedPerson));","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"dhlee03"},"content":"                + CATEGORY_DESC_PARTICIPANT;","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"dhlee03"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":114,"author":{"gitId":"dhlee03"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"dhlee03"},"content":"                        + CATEGORY_DESC_PARTICIPANT,","lastModifiedDate":"2024-04-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"dhlee03"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"dhlee03"},"content":"                        + CATEGORY_DESC_PARTICIPANT, expectedMessage);","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"dhlee03"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"dhlee03"},"content":"                        + CATEGORY_DESC_PARTICIPANT, expectedMessage);","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"dhlee03"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"dhlee03"},"content":"                        + CATEGORY_DESC_PARTICIPANT, expectedMessage);","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"dhlee03"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"dhlee03"},"content":"                        + CATEGORY_DESC_PARTICIPANT, expectedMessage);","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"dhlee03"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-04-03"},{"lineNumber":144,"author":{"gitId":"dhlee03"},"content":"                + CATEGORY_DESC_PARTICIPANT, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"dhlee03"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2024-04-03"},{"lineNumber":148,"author":{"gitId":"dhlee03"},"content":"                + CATEGORY_DESC_PARTICIPANT, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"dhlee03"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2024-04-03"},{"lineNumber":152,"author":{"gitId":"dhlee03"},"content":"                + CATEGORY_DESC_PARTICIPANT, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"dhlee03"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-04-03"},{"lineNumber":156,"author":{"gitId":"dhlee03"},"content":"                        + CATEGORY_DESC_PARTICIPANT, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":160,"author":{"gitId":"dhlee03"},"content":"                + CATEGORY_DESC_PARTICIPANT,","lastModifiedDate":"2024-04-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"dhlee03":26,"julia-cp":11,"-":126}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"julia-cp"},"content":"import seedu.address.logic.commands.GroupCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"julia-cp"},"content":"import seedu.address.logic.commands.GroupRandomCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.ContactContainsKeywordsPredicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"dhlee03"},"content":"        assertEquals(new FindCommand(new ContactContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"julia-cp"},"content":"    public void parseCommand_group() throws Exception {","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"julia-cp"},"content":"        GroupCommand command \u003d (GroupCommand) parser.parseCommand(GroupCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"julia-cp"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" 3\");","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"julia-cp"},"content":"        assertEquals(new GroupCommand(INDEX_FIRST_PERSON, 3), command);","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":101,"author":{"gitId":"julia-cp"},"content":"    public void parseCommand_grouprandom() throws Exception {","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"julia-cp"},"content":"        GroupRandomCommand command \u003d (GroupRandomCommand) parser.parseCommand(GroupRandomCommand.COMMAND_WORD","lastModifiedDate":"2024-04-03"},{"lineNumber":103,"author":{"gitId":"julia-cp"},"content":"                + \" \" + \" 3\");","lastModifiedDate":"2024-04-03"},{"lineNumber":104,"author":{"gitId":"julia-cp"},"content":"        assertEquals(new GroupRandomCommand(3), command);","lastModifiedDate":"2024-04-03"},{"lineNumber":105,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"dhlee03":2,"julia-cp":17,"-":99}},{"path":"src/test/java/seedu/address/logic/parser/CommentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.commands.CommentCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"public class CommentCommandParserTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"    private CommentCommandParser parser \u003d new CommentCommandParser();","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"    public void parse_validArgs_returnsCommentCommand() {","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"        assertParseSuccess(parser, \"1 This is a comment.\",","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"                            new CommentCommand(INDEX_FIRST_PERSON, new Comment(\"This is a comment.\")));","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"                            String.format(MESSAGE_INVALID_COMMAND_FORMAT, CommentCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"dhlee03":26}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUP_DESC;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"dhlee03"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_PHONE_AMY,","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":88,"author":{"gitId":"dhlee03"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"dhlee03"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"julia-cp"},"content":"        // group","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"julia-cp"},"content":"        userInput \u003d targetIndex.getOneBased() + GROUP_DESC;","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"julia-cp"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withGroup(VALID_GROUP).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":154,"author":{"gitId":"dhlee03"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-04-03"},{"lineNumber":155,"author":{"gitId":"dhlee03"},"content":"                + PHONE_DESC_AMY + EMAIL_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB;","lastModifiedDate":"2024-04-03"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":158,"author":{"gitId":"dhlee03"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL));","lastModifiedDate":"2024-04-03"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":161,"author":{"gitId":"dhlee03"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_EMAIL_DESC + INVALID_PHONE_DESC","lastModifiedDate":"2024-04-03"},{"lineNumber":162,"author":{"gitId":"dhlee03"},"content":"                + INVALID_EMAIL_DESC;","lastModifiedDate":"2024-04-03"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":165,"author":{"gitId":"dhlee03"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL));","lastModifiedDate":"2024-04-03"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"dhlee03":9,"julia-cp":5,"-":153}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.ContactContainsKeywordsPredicate;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"                new FindCommand(new ContactContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"dhlee03":2,"-":32}},{"path":"src/test/java/seedu/address/logic/parser/GroupCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"julia-cp"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GROUP_DESC;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"julia-cp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"julia-cp"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"julia-cp"},"content":"import seedu.address.logic.commands.GroupCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Group;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"julia-cp"},"content":"public class GroupCommandParserTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"julia-cp"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"julia-cp"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"julia-cp"},"content":"    private GroupCommandParser parser \u003d new GroupCommandParser();","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"julia-cp"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"julia-cp"},"content":"        // no index specified","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"julia-cp"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"julia-cp"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"julia-cp"},"content":"        // negative index","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"julia-cp"},"content":"        assertParseFailure(parser, \"-5\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"julia-cp"},"content":"        // zero index","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"julia-cp"},"content":"        assertParseFailure(parser, \"0\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"julia-cp"},"content":"        // invalid index","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"julia-cp"},"content":"        assertParseFailure(parser, \"some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"julia-cp"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"julia-cp"},"content":"        // invalid group","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"julia-cp"},"content":"        assertParseFailure(parser, \"1\" + INVALID_GROUP_DESC,","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"julia-cp"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"julia-cp"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"julia-cp"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"julia-cp"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + VALID_GROUP;","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"julia-cp"},"content":"        GroupCommand expectedCommand \u003d new GroupCommand(targetIndex, VALID_GROUP);","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"julia-cp"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"julia-cp"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"julia-cp"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"julia-cp"},"content":"        String userInput \u003d String.valueOf(targetIndex.getOneBased());","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"julia-cp"},"content":"        Group.setTotalGroupNumber(1);","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"julia-cp"},"content":"        GroupCommand expectedCommand \u003d new GroupCommand(targetIndex);","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"julia-cp"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"julia-cp"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"julia-cp":73}},{"path":"src/test/java/seedu/address/logic/parser/GroupRandomCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"julia-cp"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"julia-cp"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"julia-cp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"julia-cp"},"content":"import seedu.address.logic.commands.GroupRandomCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"julia-cp"},"content":"public class GroupRandomCommandParserTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"julia-cp"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"julia-cp"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupRandomCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"julia-cp"},"content":"    private GroupRandomCommandParser parser \u003d new GroupRandomCommandParser();","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"julia-cp"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"julia-cp"},"content":"        // no maximum group size specified","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"julia-cp"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"julia-cp"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"julia-cp"},"content":"        // invalid maximum group size","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"julia-cp"},"content":"        assertParseFailure(parser, \"some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"julia-cp"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"julia-cp"},"content":"        int maxGroupSize \u003d 2;","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"julia-cp"},"content":"        String userInput \u003d \" \" + maxGroupSize;","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"julia-cp"},"content":"        GroupRandomCommand expectedCommand \u003d new GroupRandomCommand(maxGroupSize);","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"julia-cp"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"julia-cp"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"julia-cp":42}},{"path":"src/test/java/seedu/address/logic/parser/LinkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-14"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-14"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.commands.LinkCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"public class LinkCommandParserTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"    public void parse_oneIndex_success() {","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"        // single index","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"        LinkCommandParser parser \u003d new LinkCommandParser();","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"        assertParseSuccess(parser, \"1\", new LinkCommand(new Index[]{Index.fromOneBased(1)}));","lastModifiedDate":"2024-04-14"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"    public void parse_multipleIndexes_success() {","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"        // multiple indexes","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"        LinkCommandParser parser \u003d new LinkCommandParser();","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"        assertParseSuccess(parser, \"1 2 3\", new LinkCommand(new Index[]{Index.fromOneBased(1), Index.fromOneBased(2),","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"                Index.fromOneBased(3)}));","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"    public void parse_invalidIndex_failure() {","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"        // invalid index","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"        LinkCommandParser parser \u003d new LinkCommandParser();","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"        assertParseFailure(parser, \"1 a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, LinkCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-14"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"dhlee03":34}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Group;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"julia-cp"},"content":"    private static final int INVALID_GROUP \u003d -1;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"julia-cp"},"content":"    private static final int VALID_GROUP \u003d 2;","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":119,"author":{"gitId":"julia-cp"},"content":"    public void parseGroup_invalidInteger_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"julia-cp"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGroup(String.valueOf(INVALID_GROUP)));","lastModifiedDate":"2024-04-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":124,"author":{"gitId":"julia-cp"},"content":"    public void parseGroup_invalidValue_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"julia-cp"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGroup(\"random string\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"julia-cp"},"content":"    public void parseGroup_validValueWithoutWhitespace_returnsGroup() throws Exception {","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"julia-cp"},"content":"        Group expectedGroup \u003d new Group(VALID_GROUP);","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"julia-cp"},"content":"        assertEquals(expectedGroup, ParserUtil.parseGroup(String.valueOf(VALID_GROUP)));","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"julia-cp":10,"-":124}},{"path":"src/test/java/seedu/address/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"public class ViewCommandParserTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"    private ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"    public void parse_validArgs_returnsViewCommand() {","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"        assertParseSuccess(parser, \"1\", new ViewCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"dhlee03":23}},{"path":"src/test/java/seedu/address/logic/parser/alias/AddParticipantAliasTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.parser.alias;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"public class AddParticipantAliasTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"    private AddParticipantAlias parser \u003d new AddParticipantAlias();","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"    void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"        // whitespace only preamble","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"    public void parse_compulsoryFieldMissing_ownUsageMessage() {","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddParticipantAlias.MESSAGE_USAGE);","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"        // missing name prefix","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB, expectedMessage);","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"        // missing phone prefix","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB, expectedMessage);","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"        // missing email prefix","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB, expectedMessage);","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"        // all prefixes missing","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB, expectedMessage);","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"        // invalid name","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"        // invalid phone","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"        // invalid email","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"        // non-empty preamble","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"bachletuankhai"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"bachletuankhai"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddParticipantAlias.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"bachletuankhai":75}},{"path":"src/test/java/seedu/address/logic/parser/alias/AddSponsorAliasTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.parser.alias;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.testutil.TypicalPersons.BOB_SPONSOR;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"public class AddSponsorAliasTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"    private AddSponsorAlias parser \u003d new AddSponsorAlias();","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"    void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB_SPONSOR).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"        // whitespace only preamble","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"    public void parse_compulsoryFieldMissing_ownUsageMessage() {","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddSponsorAlias.MESSAGE_USAGE);","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"        // missing name prefix","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB, expectedMessage);","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"        // missing phone prefix","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB, expectedMessage);","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"        // missing email prefix","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB, expectedMessage);","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"        // all prefixes missing","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB, expectedMessage);","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"        // invalid name","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"        // invalid phone","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"        // invalid email","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"        // non-empty preamble","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"bachletuankhai"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"bachletuankhai"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddSponsorAlias.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"bachletuankhai":75}},{"path":"src/test/java/seedu/address/logic/parser/alias/AddStaffAliasTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.parser.alias;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.testutil.TypicalPersons.BOB_STAFF;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"public class AddStaffAliasTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"    private AddStaffAlias parser \u003d new AddStaffAlias();","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"    void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB_STAFF).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"        // whitespace only preamble","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"    public void parse_compulsoryFieldMissing_ownUsageMessage() {","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddStaffAlias.MESSAGE_USAGE);","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"        // missing name prefix","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB, expectedMessage);","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"        // missing phone prefix","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB, expectedMessage);","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"        // missing email prefix","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB, expectedMessage);","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"        // all prefixes missing","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB, expectedMessage);","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"        // invalid name","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"        // invalid phone","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"        // invalid email","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"        // non-empty preamble","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"bachletuankhai"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB,","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"bachletuankhai"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddStaffAlias.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"bachletuankhai":75}},{"path":"src/test/java/seedu/address/logic/parser/alias/AliasParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.parser.alias;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.parser.DeleteCommandParser;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.parser.FindCommandParser;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"class AliasParserTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    private AliasParser parser \u003d new AliasParser();","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"    void parseAlias_addParticipant() throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"        Person person \u003d new PersonBuilder().withCategory(\"PARTICIPANT\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"        String args \u003d \" \" + PersonUtil.getPersonDetailNoCategory(person); // must add whitespace to parse","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"        AddCommand command \u003d (AddCommand) parser.parseAlias(AddParticipantAlias.ALIAS_WORD, args);","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"    void parseAlias_addStaff() throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"        Person person \u003d new PersonBuilder().withCategory(\"STAFF\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"        String args \u003d \" \" + PersonUtil.getPersonDetailNoCategory(person); // must add whitespace to parse","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"        AddCommand command \u003d (AddCommand) parser.parseAlias(AddStaffAlias.ALIAS_WORD, args);","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"bachletuankhai"},"content":"    void parseAlias_addSponsor() throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"bachletuankhai"},"content":"        Person person \u003d new PersonBuilder().withCategory(\"SPONSOR\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"bachletuankhai"},"content":"        String args \u003d \" \" + PersonUtil.getPersonDetailNoCategory(person); // must add whitespace to parse","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"        AddCommand command \u003d (AddCommand) parser.parseAlias(AddSponsorAlias.ALIAS_WORD, args);","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"    void parseAlias_delete() throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"        String args \u003d \" 1\";","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(parser.parseAlias(DeleteAlias.ALIAS_WORD, args), new DeleteCommandParser().parse(args));","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"bachletuankhai"},"content":"    void parseAlias_edit() throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"bachletuankhai"},"content":"        String args \u003d \" 1 \" + PersonUtil.getPersonDetailNoCategory(new PersonBuilder().build());","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(parser.parseAlias(EditAlias.ALIAS_WORD, args), new EditAlias().parse(args));","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"    void parseAlias_exit() throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(parser.parseAlias(ExitAlias.ALIAS_WORD, \"\"), new ExitCommand());","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"bachletuankhai"},"content":"    void parseAlias_invalidAlias() throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"        assertNull(parser.parseAlias(\"add\", \"\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"bachletuankhai"},"content":"    void parseAlias_find() throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"bachletuankhai"},"content":"        String args \u003d \"John\";","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(parser.parseAlias(FindAlias.ALIAS_WORD, args), new FindCommandParser().parse(args));","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"bachletuankhai"},"content":"    void parseAlias_undo() throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(parser.parseAlias(UndoAlias.ALIAS_WORD, \"\"), new UndoCommand());","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"bachletuankhai"},"content":"    void parseAlias_redo() throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"bachletuankhai"},"content":"        assertEquals(parser.parseAlias(RedoAlias.ALIAS_WORD, \"\"), new RedoCommand());","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"bachletuankhai":87}},{"path":"src/test/java/seedu/address/logic/parser/alias/DeleteAliasTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.parser.alias;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"class DeleteAliasTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"    private DeleteAlias parser \u003d new DeleteAlias();","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    void parse_validArg_success() throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"    void parse_invalidArg_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"bachletuankhai":25}},{"path":"src/test/java/seedu/address/logic/parser/alias/EditAliasTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.parser.alias;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"class EditAliasTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"    private EditAlias parser \u003d new EditAlias();","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"    void parse_allFieldsSpecified_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"                                                                                       .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"                                                                                       .build();","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"bachletuankhai":32}},{"path":"src/test/java/seedu/address/logic/parser/alias/ExitAliasTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.parser.alias;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"class ExitAliasTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"    public void parse_returnExitCommand() {","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"        ExitAlias parser \u003d new ExitAlias();","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"        assertParseSuccess(parser, \"some random string\", new ExitCommand());","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"bachletuankhai":15}},{"path":"src/test/java/seedu/address/logic/parser/alias/FindAliasTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.parser.alias;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.person.ContactContainsKeywordsPredicate;","lastModifiedDate":"2024-04-04"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"class FindAliasTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"    private FindAlias parser \u003d new FindAlias();","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"    void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"        FindCommand expectedFindCommand \u003d new FindCommand(","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"bachletuankhai"},"content":"                new ContactContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2024-04-04"},{"lineNumber":27,"author":{"gitId":"bachletuankhai"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"bachletuankhai":32}},{"path":"src/test/java/seedu/address/logic/parser/alias/RedoAliasTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.parser.alias;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"class RedoAliasTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"    void parse_returnsRedoCommand() {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"        assertParseSuccess(new RedoAlias(), \"random input\", new RedoCommand());","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"bachletuankhai":15}},{"path":"src/test/java/seedu/address/logic/parser/alias/UndoAliasTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bachletuankhai"},"content":"package seedu.address.logic.parser.alias;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"bachletuankhai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"bachletuankhai"},"content":"class UndoAliasTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"bachletuankhai"},"content":"    void parse() {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"bachletuankhai"},"content":"        assertParseSuccess(new UndoAlias(), \"random input\", new UndoCommand());","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"bachletuankhai"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"bachletuankhai":15}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"dhlee03"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"dhlee03":2,"-":102}},{"path":"src/test/java/seedu/address/model/EventBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.model;","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"import java.util.Collections;","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.EventCategory;","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"public class EventBookTest {","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"    public void constructor_noArgs_success() {","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"        EventBook eventBook \u003d new EventBook();","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"        assertNotNull(eventBook);","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"    public void constructor_withReadOnlyEventBook_success() {","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"        EventBook eventBook \u003d new EventBook(new ReadOnlyEventBook() {","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"            @Override","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"            public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"                return FXCollections.observableArrayList(Collections.emptyList());","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"            }","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"        });","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"        assertNotNull(eventBook);","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"    public void setEvents_nullList_throwsNullPointerException() {","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"        EventBook eventBook \u003d new EventBook();","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"        assertThrows(NullPointerException.class, () -\u003e eventBook.setEvents(null));","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"    public void resetData_nullData_throwsNullPointerException() {","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"        EventBook eventBook \u003d new EventBook();","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"        assertThrows(NullPointerException.class, () -\u003e eventBook.resetData(null));","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"    public void hasEvent_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"        EventBook eventBook \u003d new EventBook();","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"        assertThrows(NullPointerException.class, () -\u003e eventBook.hasEvent(null));","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"    public void hasEvent_eventNotInList_returnsFalse() {","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"        EventBook eventBook \u003d new EventBook();","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"        Event event \u003d new Event(new EventName(\"Meeting\"), new EventDate(\"01-01-2025\"), new EventCategory(\"STAFF\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"        assertFalse(eventBook.hasEvent(event));","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"meenulekha"},"content":"    public void addEvent_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"meenulekha"},"content":"        EventBook eventBook \u003d new EventBook();","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"meenulekha"},"content":"        assertThrows(NullPointerException.class, () -\u003e eventBook.addEvent(null));","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":71,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":72,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":73,"author":{"gitId":"meenulekha"},"content":"    public void removeEvent_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2024-04-13"},{"lineNumber":74,"author":{"gitId":"meenulekha"},"content":"        EventBook eventBook \u003d new EventBook();","lastModifiedDate":"2024-04-13"},{"lineNumber":75,"author":{"gitId":"meenulekha"},"content":"        assertThrows(NullPointerException.class, () -\u003e eventBook.removeEvent(null));","lastModifiedDate":"2024-04-13"},{"lineNumber":76,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":77,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":78,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":79,"author":{"gitId":"meenulekha"},"content":"    public void equals_sameObject_returnsTrue() {","lastModifiedDate":"2024-04-13"},{"lineNumber":80,"author":{"gitId":"meenulekha"},"content":"        EventBook eventBook \u003d new EventBook();","lastModifiedDate":"2024-04-13"},{"lineNumber":81,"author":{"gitId":"meenulekha"},"content":"        assertTrue(eventBook.equals(eventBook));","lastModifiedDate":"2024-04-13"},{"lineNumber":82,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":83,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":84,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":85,"author":{"gitId":"meenulekha"},"content":"    public void equals_differentClass_returnsFalse() {","lastModifiedDate":"2024-04-13"},{"lineNumber":86,"author":{"gitId":"meenulekha"},"content":"        EventBook eventBook \u003d new EventBook();","lastModifiedDate":"2024-04-13"},{"lineNumber":87,"author":{"gitId":"meenulekha"},"content":"        assertFalse(eventBook.equals(new Object()));","lastModifiedDate":"2024-04-13"},{"lineNumber":88,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":89,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":90,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":91,"author":{"gitId":"meenulekha"},"content":"    public void equals_differentEvents_returnsFalse() {","lastModifiedDate":"2024-04-13"},{"lineNumber":92,"author":{"gitId":"meenulekha"},"content":"        EventBook eventBook1 \u003d new EventBook();","lastModifiedDate":"2024-04-13"},{"lineNumber":93,"author":{"gitId":"meenulekha"},"content":"        EventBook eventBook2 \u003d new EventBook();","lastModifiedDate":"2024-04-13"},{"lineNumber":94,"author":{"gitId":"meenulekha"},"content":"        Event event1 \u003d new Event(new EventName(\"Meeting1\"), new EventDate(\"01-01-2025\"), new EventCategory(\"STAFF\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":95,"author":{"gitId":"meenulekha"},"content":"        Event event2 \u003d new Event(new EventName(\"Meeting2\"), new EventDate(\"02-01-2025\"), new EventCategory(\"STAFF\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":96,"author":{"gitId":"meenulekha"},"content":"        eventBook1.addEvent(event1);","lastModifiedDate":"2024-04-13"},{"lineNumber":97,"author":{"gitId":"meenulekha"},"content":"        eventBook2.addEvent(event2);","lastModifiedDate":"2024-04-13"},{"lineNumber":98,"author":{"gitId":"meenulekha"},"content":"        assertFalse(eventBook1.equals(eventBook2));","lastModifiedDate":"2024-04-13"},{"lineNumber":99,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":100,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":101,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":102,"author":{"gitId":"meenulekha"},"content":"    public void hashCode_sameObject_equalHashCodes() {","lastModifiedDate":"2024-04-13"},{"lineNumber":103,"author":{"gitId":"meenulekha"},"content":"        EventBook eventBook \u003d new EventBook();","lastModifiedDate":"2024-04-13"},{"lineNumber":104,"author":{"gitId":"meenulekha"},"content":"        assertEquals(eventBook.hashCode(), eventBook.hashCode());","lastModifiedDate":"2024-04-13"},{"lineNumber":105,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":106,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":107,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":108,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"meenulekha":108}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":99,"author":{"gitId":"meenulekha"},"content":"        EventBook eventBook \u003d new EventBook();","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"meenulekha"},"content":"        EventBook differentEventBook \u003d new EventBook();","lastModifiedDate":"2024-04-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"meenulekha"},"content":"        modelManager \u003d new ModelManager(addressBook, eventBook, userPrefs);","lastModifiedDate":"2024-04-03"},{"lineNumber":106,"author":{"gitId":"meenulekha"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, eventBook, userPrefs);","lastModifiedDate":"2024-04-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"meenulekha"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, eventBook, userPrefs)));","lastModifiedDate":"2024-04-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":124,"author":{"gitId":"meenulekha"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, eventBook, userPrefs)));","lastModifiedDate":"2024-04-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":132,"author":{"gitId":"meenulekha"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, eventBook, differentUserPrefs)));","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"meenulekha":7,"-":127}},{"path":"src/test/java/seedu/address/model/event/EventCategoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.model.event;","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"public class EventCategoryTest {","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"    public void constructor_nullCategory_throwsNullPointerException() {","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EventCategory(null));","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"    public void constructor_invalidCategory_throwsIllegalArgumentException() {","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"        String invalidCategory \u003d \"InvalidCategory\";","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new EventCategory(invalidCategory));","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"    public void isValidCategory_nullCategory_returnsFalse() {","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"        assertFalse(EventCategory.isValidCategory(null));","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"    public void isValidCategory_invalidCategory_returnsFalse() {","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"        assertFalse(EventCategory.isValidCategory(\"InvalidCategory\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"    public void isValidCategory_validCategory_returnsTrue() {","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"        assertTrue(EventCategory.isValidCategory(\"STAFF\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"    public void toString_validCategory_returnsSameValue() {","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"        String categoryValue \u003d \"PARTICIPANT\";","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"        EventCategory category \u003d new EventCategory(categoryValue);","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"        assertEquals(categoryValue, category.toString());","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"    public void equals_sameInstance_returnsTrue() {","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"        EventCategory category \u003d new EventCategory(\"STAFF\");","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"        assertTrue(category.equals(category));","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"    public void equals_null_returnsFalse() {","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"        EventCategory category \u003d new EventCategory(\"STAFF\");","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"        assertFalse(category.equals(null));","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"    public void equals_differentTypes_returnsFalse() {","lastModifiedDate":"2024-04-13"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"        EventCategory category \u003d new EventCategory(\"STAFF\");","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"        assertFalse(category.equals(5.0f));","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"    public void equals_differentValues_returnsFalse() {","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"        EventCategory category1 \u003d new EventCategory(\"STAFF\");","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"        EventCategory category2 \u003d new EventCategory(\"SPONSOR\");","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"meenulekha"},"content":"        assertFalse(category1.equals(category2));","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":71,"author":{"gitId":"meenulekha"},"content":"    public void hashCode_sameValues_returnEqualHashCodes() {","lastModifiedDate":"2024-04-13"},{"lineNumber":72,"author":{"gitId":"meenulekha"},"content":"        EventCategory category1 \u003d new EventCategory(\"SPONSOR\");","lastModifiedDate":"2024-04-13"},{"lineNumber":73,"author":{"gitId":"meenulekha"},"content":"        EventCategory category2 \u003d new EventCategory(\"SPONSOR\");","lastModifiedDate":"2024-04-13"},{"lineNumber":74,"author":{"gitId":"meenulekha"},"content":"        assertEquals(category1.hashCode(), category2.hashCode());","lastModifiedDate":"2024-04-13"},{"lineNumber":75,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":76,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-13"},{"lineNumber":77,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"meenulekha":77}},{"path":"src/test/java/seedu/address/model/event/EventDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.model.event;","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"public class EventDateTest {","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"    public void isValidDate_validDate_true() {","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"        assertTrue(EventDate.isValidDate(\"01-01-2025\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"    public void isValidDate_invalidDate_false() {","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"        assertFalse(EventDate.isValidDate(\"32-01-2023\")); // Invalid day","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"        assertFalse(EventDate.isValidDate(\"01-13-2023\")); // Invalid month","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"        assertFalse(EventDate.isValidDate(\"01-01-10000\")); // Invalid year","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"        assertFalse(EventDate.isValidDate(\"2023-01-01\")); // Invalid format","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"        assertFalse(EventDate.isValidDate(\"\")); // Empty string","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"        assertFalse(EventDate.isValidDate(\"abc\")); // Non-numeric characters","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"meenulekha":25}},{"path":"src/test/java/seedu/address/model/event/EventNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.model.event;","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"public class EventNameTest {","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"    public void constructor_nullName_throwsNullPointerException() {","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EventName(null));","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new EventName(invalidName));","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"    public void isValidName_nullName_returnsFalse() {","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"        assertFalse(EventName.isValidName(null));","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"    public void isValidName_emptyString_returnsFalse() {","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"        assertFalse(EventName.isValidName(\"\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"    public void isValidName_spacesOnly_returnsFalse() {","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"        assertFalse(EventName.isValidName(\"   \"));","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"    public void isValidName_nonAlphanumeric_returnsFalse() {","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"        assertFalse(EventName.isValidName(\"^$#\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"    public void isValidName_containsNonAlphanumeric_returnsFalse() {","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"        assertFalse(EventName.isValidName(\"peter*\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"    public void isValidName_validName_returnsTrue() {","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"        assertTrue(EventName.isValidName(\"Meeting with clients\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"    public void isValidName_numbersOnly_returnsTrue() {","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"        assertTrue(EventName.isValidName(\"12345\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"    public void isValidName_alphanumericWithSpaces_returnsTrue() {","lastModifiedDate":"2024-04-13"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"        assertTrue(EventName.isValidName(\"Meeting 123 with Clients\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"    public void isValidName_withSpecialCharacters_returnsFalse() {","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"        assertFalse(EventName.isValidName(\"Meeting #123 with Clients\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"meenulekha"},"content":"    public void equals_sameInstance_returnsTrue() {","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"meenulekha"},"content":"        EventName name \u003d new EventName(\"Meeting\");","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"meenulekha"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2024-04-13"},{"lineNumber":71,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":72,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":73,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":74,"author":{"gitId":"meenulekha"},"content":"    public void equals_null_returnsFalse() {","lastModifiedDate":"2024-04-13"},{"lineNumber":75,"author":{"gitId":"meenulekha"},"content":"        EventName name \u003d new EventName(\"Meeting\");","lastModifiedDate":"2024-04-13"},{"lineNumber":76,"author":{"gitId":"meenulekha"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2024-04-13"},{"lineNumber":77,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":78,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":79,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":80,"author":{"gitId":"meenulekha"},"content":"    public void equals_differentTypes_returnsFalse() {","lastModifiedDate":"2024-04-13"},{"lineNumber":81,"author":{"gitId":"meenulekha"},"content":"        EventName name \u003d new EventName(\"Meeting\");","lastModifiedDate":"2024-04-13"},{"lineNumber":82,"author":{"gitId":"meenulekha"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2024-04-13"},{"lineNumber":83,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":84,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":85,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":86,"author":{"gitId":"meenulekha"},"content":"    public void equals_differentValues_returnsFalse() {","lastModifiedDate":"2024-04-13"},{"lineNumber":87,"author":{"gitId":"meenulekha"},"content":"        EventName name1 \u003d new EventName(\"Meeting\");","lastModifiedDate":"2024-04-13"},{"lineNumber":88,"author":{"gitId":"meenulekha"},"content":"        EventName name2 \u003d new EventName(\"Conference\");","lastModifiedDate":"2024-04-13"},{"lineNumber":89,"author":{"gitId":"meenulekha"},"content":"        assertFalse(name1.equals(name2));","lastModifiedDate":"2024-04-13"},{"lineNumber":90,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":91,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":92,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":93,"author":{"gitId":"meenulekha"},"content":"    public void equals_sameValues_returnsTrue() {","lastModifiedDate":"2024-04-13"},{"lineNumber":94,"author":{"gitId":"meenulekha"},"content":"        EventName name1 \u003d new EventName(\"Meeting\");","lastModifiedDate":"2024-04-13"},{"lineNumber":95,"author":{"gitId":"meenulekha"},"content":"        EventName name2 \u003d new EventName(\"Meeting\");","lastModifiedDate":"2024-04-13"},{"lineNumber":96,"author":{"gitId":"meenulekha"},"content":"        assertTrue(name1.equals(name2));","lastModifiedDate":"2024-04-13"},{"lineNumber":97,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":98,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-13"},{"lineNumber":99,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"meenulekha":99}},{"path":"src/test/java/seedu/address/model/event/EventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.model.event;","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"public class EventTest {","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"    public void constructor_validArguments_success() {","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"        EventName eventName \u003d new EventName(\"Meeting\");","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"        EventDate eventDate \u003d new EventDate(\"01-01-2025\");","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"        EventCategory eventCategory \u003d new EventCategory(\"STAFF\");","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"        Event event \u003d new Event(eventName, eventDate, eventCategory);","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"        assertEquals(eventName, event.getEventName());","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"        assertEquals(eventDate, event.getEventDate());","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"        assertEquals(eventCategory, event.getEventCategory());","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"    public void isSameEvent_sameEvent_true() {","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"        EventName eventName \u003d new EventName(\"Meeting\");","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"        EventDate eventDate \u003d new EventDate(\"01-01-2025\");","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"        EventCategory eventCategory \u003d new EventCategory(\"STAFF\");","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"        Event event1 \u003d new Event(eventName, eventDate, eventCategory);","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"        Event event2 \u003d new Event(eventName, eventDate, eventCategory);","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"        assertTrue(event1.isSameEvent(event2));","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"    public void isSameEvent_differentEvents_false() {","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"        Event event1 \u003d new Event(new EventName(\"Meeting\"), new EventDate(\"01-01-2025\"), new EventCategory(\"STAFF\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"        Event event2 \u003d new Event(new EventName(\"Conference\"), new EventDate(\"02-01-2025\"), new EventCategory(\"STAFF\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"        assertFalse(event1.isSameEvent(event2));","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"    public void equals_differentEvents_false() {","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"        Event event1 \u003d new Event(new EventName(\"Meeting\"), new EventDate(\"01-01-2025\"), new EventCategory(\"STAFF\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"        Event event2 \u003d new Event(new EventName(\"Conference\"), new EventDate(\"02-01-2025\"), new EventCategory(\"STAFF\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"        assertFalse(event1.equals(event2));","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"    public void hashCode_sameEvents_equalHashCodes() {","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"        Event event1 \u003d new Event(new EventName(\"Meeting\"), new EventDate(\"01-01-2025\"), new EventCategory(\"STAFF\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"        Event event2 \u003d new Event(new EventName(\"Meeting\"), new EventDate(\"01-01-2025\"), new EventCategory(\"STAFF\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"        assertEquals(event1.hashCode(), event2.hashCode());","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"    public void toString_validEvent_correctStringRepresentation() {","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"        Event event \u003d new Event(new EventName(\"Meeting\"), new EventDate(\"01-01-2025\"), new EventCategory(\"STAFF\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"        String expectedString \u003d \"eventName\u003dMeeting, eventDate\u003d01-01-2025, eventCategory\u003dSTAFF\";","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"        assertEquals(expectedString, event.toString());","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"meenulekha":66}},{"path":"src/test/java/seedu/address/model/event/UniqueEventListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.model.event;","lastModifiedDate":"2024-04-13"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-13"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-13"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-13"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-13"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-13"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"import java.util.Collections;","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"import java.util.List;","lastModifiedDate":"2024-04-13"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"public class UniqueEventListTest {","lastModifiedDate":"2024-04-13"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"    public void contains_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"        UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-04-13"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.contains(null));","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"    public void contains_eventNotInList_returnsFalse() {","lastModifiedDate":"2024-04-13"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"        UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"        assertFalse(uniqueEventList.contains(new Event(new EventName(\"Meeting\"), new EventDate(\"01-01-2025\"),","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"                new EventCategory(\"STAFF\"))));","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"    public void contains_eventInList_returnsTrue() {","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"        Event event \u003d new Event(new EventName(\"Meeting\"), new EventDate(\"01-01-2025\"), new EventCategory(\"STAFF\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"        UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"        uniqueEventList.add(event);","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"        assertTrue(uniqueEventList.contains(event));","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"    public void add_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"        UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.add(null));","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"    public void add_duplicateEvent_throwsDuplicateEventException() {","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"        Event event \u003d new Event(new EventName(\"Meeting\"), new EventDate(\"01-01-2025\"), new EventCategory(\"STAFF\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"        UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"        uniqueEventList.add(event);","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.add(event));","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"    public void setEvent_nullTargetOrEditedEvent_throwsNullPointerException() {","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"        UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvent(null, null));","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"        Event event \u003d new Event(new EventName(\"Meeting\"), new EventDate(\"01-01-2025\"), new EventCategory(\"STAFF\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"        uniqueEventList.add(event);","lastModifiedDate":"2024-04-13"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvent(event, null));","lastModifiedDate":"2024-04-13"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvent(null, event));","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"    public void setEvent_targetNotInList_throwsEventNotFoundException() {","lastModifiedDate":"2024-04-13"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"        UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-04-13"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"        Event target \u003d new Event(new EventName(\"Meeting\"), new EventDate(\"01-01-2025\"), new EventCategory(\"STAFF\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":67,"author":{"gitId":"meenulekha"},"content":"        Event editedEvent \u003d new Event(new EventName(\"Conference\"), new EventDate(\"02-01-2025\"),","lastModifiedDate":"2024-04-13"},{"lineNumber":68,"author":{"gitId":"meenulekha"},"content":"                new EventCategory(\"STAFF\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"meenulekha"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e uniqueEventList.setEvent(target, editedEvent));","lastModifiedDate":"2024-04-13"},{"lineNumber":70,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":71,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":72,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":73,"author":{"gitId":"meenulekha"},"content":"    public void setEvent_editedEventIsDuplicate_throwsDuplicateEventException() {","lastModifiedDate":"2024-04-13"},{"lineNumber":74,"author":{"gitId":"meenulekha"},"content":"        Event event1 \u003d new Event(new EventName(\"Meeting\"), new EventDate(\"01-01-2025\"), new EventCategory(\"STAFF\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":75,"author":{"gitId":"meenulekha"},"content":"        Event event2 \u003d new Event(new EventName(\"Conference\"), new EventDate(\"02-01-2025\"), new EventCategory(\"STAFF\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":76,"author":{"gitId":"meenulekha"},"content":"        UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-04-13"},{"lineNumber":77,"author":{"gitId":"meenulekha"},"content":"        uniqueEventList.add(event1);","lastModifiedDate":"2024-04-13"},{"lineNumber":78,"author":{"gitId":"meenulekha"},"content":"        uniqueEventList.add(event2);","lastModifiedDate":"2024-04-13"},{"lineNumber":79,"author":{"gitId":"meenulekha"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.setEvent(event1, event2));","lastModifiedDate":"2024-04-13"},{"lineNumber":80,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":81,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":82,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":83,"author":{"gitId":"meenulekha"},"content":"    public void remove_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2024-04-13"},{"lineNumber":84,"author":{"gitId":"meenulekha"},"content":"        UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-04-13"},{"lineNumber":85,"author":{"gitId":"meenulekha"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.remove(null));","lastModifiedDate":"2024-04-13"},{"lineNumber":86,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":87,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":88,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":89,"author":{"gitId":"meenulekha"},"content":"    public void remove_eventDoesNotExist_throwsEventNotFoundException() {","lastModifiedDate":"2024-04-13"},{"lineNumber":90,"author":{"gitId":"meenulekha"},"content":"        UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-04-13"},{"lineNumber":91,"author":{"gitId":"meenulekha"},"content":"        Event event \u003d new Event(new EventName(\"Meeting\"), new EventDate(\"01-01-2025\"), new EventCategory(\"STAFF\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":92,"author":{"gitId":"meenulekha"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e uniqueEventList.remove(event));","lastModifiedDate":"2024-04-13"},{"lineNumber":93,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":94,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":95,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":96,"author":{"gitId":"meenulekha"},"content":"    public void remove_existingEvent_removesEvent() {","lastModifiedDate":"2024-04-13"},{"lineNumber":97,"author":{"gitId":"meenulekha"},"content":"        Event event \u003d new Event(new EventName(\"Meeting\"), new EventDate(\"01-01-2025\"), new EventCategory(\"STAFF\"));","lastModifiedDate":"2024-04-13"},{"lineNumber":98,"author":{"gitId":"meenulekha"},"content":"        UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-04-13"},{"lineNumber":99,"author":{"gitId":"meenulekha"},"content":"        uniqueEventList.add(event);","lastModifiedDate":"2024-04-13"},{"lineNumber":100,"author":{"gitId":"meenulekha"},"content":"        uniqueEventList.remove(event);","lastModifiedDate":"2024-04-13"},{"lineNumber":101,"author":{"gitId":"meenulekha"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-04-13"},{"lineNumber":102,"author":{"gitId":"meenulekha"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2024-04-13"},{"lineNumber":103,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":104,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":105,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":106,"author":{"gitId":"meenulekha"},"content":"    public void setEvents_nullUniqueEventList_throwsNullPointerException() {","lastModifiedDate":"2024-04-13"},{"lineNumber":107,"author":{"gitId":"meenulekha"},"content":"        UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-04-13"},{"lineNumber":108,"author":{"gitId":"meenulekha"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvents((UniqueEventList) null));","lastModifiedDate":"2024-04-13"},{"lineNumber":109,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":110,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":111,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":112,"author":{"gitId":"meenulekha"},"content":"    public void setEvents_nullList_throwsNullPointerException() {","lastModifiedDate":"2024-04-13"},{"lineNumber":113,"author":{"gitId":"meenulekha"},"content":"        UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-04-13"},{"lineNumber":114,"author":{"gitId":"meenulekha"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvents((List\u003cEvent\u003e) null));","lastModifiedDate":"2024-04-13"},{"lineNumber":115,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":116,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":117,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":118,"author":{"gitId":"meenulekha"},"content":"    public void setEvents_listContainsDuplicateEvents_throwsDuplicateEventException() {","lastModifiedDate":"2024-04-13"},{"lineNumber":119,"author":{"gitId":"meenulekha"},"content":"        List\u003cEvent\u003e listWithDuplicateEvents \u003d Arrays.asList(new Event(new EventName(\"Meeting\"),","lastModifiedDate":"2024-04-13"},{"lineNumber":120,"author":{"gitId":"meenulekha"},"content":"                        new EventDate(\"01-01-2025\"), new EventCategory(\"STAFF\")),","lastModifiedDate":"2024-04-13"},{"lineNumber":121,"author":{"gitId":"meenulekha"},"content":"                new Event(new EventName(\"Meeting\"), new EventDate(\"01-01-2025\"), new EventCategory(\"STAFF\")));","lastModifiedDate":"2024-04-13"},{"lineNumber":122,"author":{"gitId":"meenulekha"},"content":"        UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-04-13"},{"lineNumber":123,"author":{"gitId":"meenulekha"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.setEvents(listWithDuplicateEvents));","lastModifiedDate":"2024-04-13"},{"lineNumber":124,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":125,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":126,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":127,"author":{"gitId":"meenulekha"},"content":"    public void setEvents_listIsNotEmpty_clearsAndAddsEvents() {","lastModifiedDate":"2024-04-13"},{"lineNumber":128,"author":{"gitId":"meenulekha"},"content":"        List\u003cEvent\u003e listWithEvents \u003d Arrays.asList(new Event(new EventName(\"Meeting\"),","lastModifiedDate":"2024-04-13"},{"lineNumber":129,"author":{"gitId":"meenulekha"},"content":"                        new EventDate(\"01-01-2025\"), new EventCategory(\"STAFF\")),","lastModifiedDate":"2024-04-13"},{"lineNumber":130,"author":{"gitId":"meenulekha"},"content":"                new Event(new EventName(\"Conference\"), new EventDate(\"02-01-2025\"), new EventCategory(\"STAFF\")));","lastModifiedDate":"2024-04-13"},{"lineNumber":131,"author":{"gitId":"meenulekha"},"content":"        UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-04-13"},{"lineNumber":132,"author":{"gitId":"meenulekha"},"content":"        uniqueEventList.add(new Event(new EventName(\"Random Event\"), new EventDate(\"03-01-2025\"),","lastModifiedDate":"2024-04-13"},{"lineNumber":133,"author":{"gitId":"meenulekha"},"content":"                new EventCategory(\"SPONSOR\")));","lastModifiedDate":"2024-04-13"},{"lineNumber":134,"author":{"gitId":"meenulekha"},"content":"        uniqueEventList.setEvents(listWithEvents);","lastModifiedDate":"2024-04-13"},{"lineNumber":135,"author":{"gitId":"meenulekha"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-04-13"},{"lineNumber":136,"author":{"gitId":"meenulekha"},"content":"        expectedUniqueEventList.setEvents(listWithEvents);","lastModifiedDate":"2024-04-13"},{"lineNumber":137,"author":{"gitId":"meenulekha"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2024-04-13"},{"lineNumber":138,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":139,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":140,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":141,"author":{"gitId":"meenulekha"},"content":"    public void setEvents_listIsEmpty_clearsEvents() {","lastModifiedDate":"2024-04-13"},{"lineNumber":142,"author":{"gitId":"meenulekha"},"content":"        List\u003cEvent\u003e emptyList \u003d Collections.emptyList();","lastModifiedDate":"2024-04-13"},{"lineNumber":143,"author":{"gitId":"meenulekha"},"content":"        UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-04-13"},{"lineNumber":144,"author":{"gitId":"meenulekha"},"content":"        uniqueEventList.add(new Event(new EventName(\"Random Event\"), new EventDate(\"03-01-2025\"),","lastModifiedDate":"2024-04-13"},{"lineNumber":145,"author":{"gitId":"meenulekha"},"content":"                new EventCategory(\"PARTICIPANT\")));","lastModifiedDate":"2024-04-13"},{"lineNumber":146,"author":{"gitId":"meenulekha"},"content":"        uniqueEventList.setEvents(emptyList);","lastModifiedDate":"2024-04-13"},{"lineNumber":147,"author":{"gitId":"meenulekha"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-04-13"},{"lineNumber":148,"author":{"gitId":"meenulekha"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2024-04-13"},{"lineNumber":149,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":150,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":151,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":152,"author":{"gitId":"meenulekha"},"content":"    public void equals_sameList_returnsTrue() {","lastModifiedDate":"2024-04-13"},{"lineNumber":153,"author":{"gitId":"meenulekha"},"content":"        UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-04-13"},{"lineNumber":154,"author":{"gitId":"meenulekha"},"content":"        UniqueEventList otherUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-04-13"},{"lineNumber":155,"author":{"gitId":"meenulekha"},"content":"        assertTrue(uniqueEventList.equals(otherUniqueEventList));","lastModifiedDate":"2024-04-13"},{"lineNumber":156,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":157,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":158,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":159,"author":{"gitId":"meenulekha"},"content":"    public void equals_differentLists_returnsFalse() {","lastModifiedDate":"2024-04-13"},{"lineNumber":160,"author":{"gitId":"meenulekha"},"content":"        UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-04-13"},{"lineNumber":161,"author":{"gitId":"meenulekha"},"content":"        UniqueEventList otherUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-04-13"},{"lineNumber":162,"author":{"gitId":"meenulekha"},"content":"        uniqueEventList.add(new Event(new EventName(\"Meeting\"), new EventDate(\"01-01-2025\"),","lastModifiedDate":"2024-04-13"},{"lineNumber":163,"author":{"gitId":"meenulekha"},"content":"                new EventCategory(\"STAFF\")));","lastModifiedDate":"2024-04-13"},{"lineNumber":164,"author":{"gitId":"meenulekha"},"content":"        assertFalse(uniqueEventList.equals(otherUniqueEventList));","lastModifiedDate":"2024-04-13"},{"lineNumber":165,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":166,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":167,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":168,"author":{"gitId":"meenulekha"},"content":"    public void hashCode_sameList_equalHashCodes() {","lastModifiedDate":"2024-04-13"},{"lineNumber":169,"author":{"gitId":"meenulekha"},"content":"        UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-04-13"},{"lineNumber":170,"author":{"gitId":"meenulekha"},"content":"        UniqueEventList otherUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-04-13"},{"lineNumber":171,"author":{"gitId":"meenulekha"},"content":"        assertEquals(uniqueEventList.hashCode(), otherUniqueEventList.hashCode());","lastModifiedDate":"2024-04-13"},{"lineNumber":172,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":173,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":174,"author":{"gitId":"meenulekha"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":175,"author":{"gitId":"meenulekha"},"content":"    public void toString_validUniqueEventList_correctStringRepresentation() {","lastModifiedDate":"2024-04-13"},{"lineNumber":176,"author":{"gitId":"meenulekha"},"content":"        UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2024-04-13"},{"lineNumber":177,"author":{"gitId":"meenulekha"},"content":"        uniqueEventList.add(new Event(new EventName(\"Meeting\"), new EventDate(\"01-01-2025\"),","lastModifiedDate":"2024-04-13"},{"lineNumber":178,"author":{"gitId":"meenulekha"},"content":"                new EventCategory(\"STAFF\")));","lastModifiedDate":"2024-04-13"},{"lineNumber":179,"author":{"gitId":"meenulekha"},"content":"        String expectedString \u003d \"[eventName\u003dMeeting, eventDate\u003d01-01-2025, eventCategory\u003dSTAFF]\";","lastModifiedDate":"2024-04-13"},{"lineNumber":180,"author":{"gitId":"meenulekha"},"content":"        assertEquals(expectedString, uniqueEventList.toString());","lastModifiedDate":"2024-04-13"},{"lineNumber":181,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":182,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-13"}],"authorContributionMap":{"meenulekha":182}},{"path":"src/test/java/seedu/address/model/person/CommentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"public class CommentTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"    public void equals() {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"        Comment comment \u003d new Comment(\"Test comment\");","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"        assertEquals(comment, comment);","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"        assertNotEquals(comment, null);","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"        assertNotEquals(comment, 5);","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"        // different comment -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"        Comment differentComment \u003d new Comment(\"Different comment\");","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"        assertNotEquals(comment, differentComment);","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"        // same comment -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"        Comment sameComment \u003d new Comment(\"Test comment\");","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"        Comment sameComment2 \u003d new Comment(\"Test comment\");","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"        assertEquals(sameComment, sameComment2);","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"    public void isValidComment() {","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"        // no comment -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"        assertFalse(Comment.isValidComment(\"\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"        // invalid comment -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"        assertFalse(Comment.isValidComment(\" \"));","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"        // valid comment -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"        assertTrue(Comment.isValidComment(\"Test comment\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-05"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-04-05"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"    public void hasComment() {","lastModifiedDate":"2024-04-05"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"        Comment comment \u003d new Comment(\"Test comment\");","lastModifiedDate":"2024-04-05"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"        assertTrue(comment.hasComment());","lastModifiedDate":"2024-04-05"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"        Comment noComment \u003d new Comment(\"No comment provided.\");","lastModifiedDate":"2024-04-05"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"        assertFalse(noComment.hasComment());","lastModifiedDate":"2024-04-05"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-05"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"dhlee03":52}},{"path":"src/test/java/seedu/address/model/person/ContactContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import java.util.Collections;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"import java.util.List;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"public class ContactContainsKeywordsPredicateTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"    public void equals() {","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"        // One keyword","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"        ContactContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"                new ContactContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"        // Multiple keywords","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"        predicate \u003d new ContactContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"        // Only one matching keyword","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"dhlee03"},"content":"        predicate \u003d new ContactContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"dhlee03"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"dhlee03"},"content":"        // Mixed-case keywords","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"dhlee03"},"content":"        predicate \u003d new ContactContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"dhlee03"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"dhlee03"},"content":"    public void test_nameDoesNotContainKeyword_returnsFalse() {","lastModifiedDate":"2024-04-14"},{"lineNumber":63,"author":{"gitId":"dhlee03"},"content":"        // Zero keywords","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"dhlee03"},"content":"        ContactContainsKeywordsPredicate predicate \u003d new ContactContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"dhlee03"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"dhlee03"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"dhlee03"},"content":"        predicate \u003d new ContactContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"dhlee03"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"dhlee03"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"dhlee03"},"content":"        predicate \u003d new ContactContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"dhlee03"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"dhlee03"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"dhlee03"},"content":"        // keywords match category","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"dhlee03"},"content":"        predicate \u003d new ContactContainsKeywordsPredicate(Arrays.asList(\"participant\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"dhlee03"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice\").withCategory(\"PARTICIPANT\").build()));","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"dhlee03"},"content":"        //keywords match comment","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"dhlee03"},"content":"        predicate \u003d new ContactContainsKeywordsPredicate(Arrays.asList(\"comment\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"dhlee03"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice\").withComment(\"This is comment\").build()));","lastModifiedDate":"2024-04-03"},{"lineNumber":83,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"dhlee03"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"dhlee03"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"dhlee03"},"content":"        ContactContainsKeywordsPredicate predicate \u003d new ContactContainsKeywordsPredicate(keywords);","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"dhlee03"},"content":"        String expected \u003d ContactContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2024-04-03"},{"lineNumber":91,"author":{"gitId":"dhlee03"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-04-03"},{"lineNumber":92,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"dhlee03":93}},{"path":"src/test/java/seedu/address/model/person/GroupTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"public class GroupTest {","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"    public void constructor_null() {","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"        Group group \u003d new Group();","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"        assertEquals(group.getGroupNumber(), 0);","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"    public void constructor_valid() {","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"        Group group \u003d new Group(5);","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"        assertEquals(group.getGroupNumber(), 5);","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"    public void isValidGroup() {","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"        // invalid group number","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"        assertFalse(Group.isValidGroup(-1)); // negative number","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"        assertTrue(Group.isValidGroup(0)); // zero","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"        // valid group number","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"        assertTrue(Group.isValidGroup(0)); // zero","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"        assertTrue(Group.isValidGroup(100));","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"    public void equals() {","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"        Group group \u003d new Group(5);","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"        assertEquals(group, new Group(5));","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"        assertNotEquals(group, new Group(6));","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"    public void setTotalGroupNumber() {","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"        Group.setTotalGroupNumber(5);","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"        assertEquals(Group.getTotalGroupNumber(), 5);","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"dhlee03":50}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"dhlee03"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"dhlee03":1,"-":84}},{"path":"src/test/java/seedu/address/model/person/PersonFactoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"public class PersonFactoryTest {","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"    public void createPerson() {","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"        assertTrue(PersonFactory.createPerson(ALICE.getName(), ALICE.getPhone(), ALICE.getEmail(),","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"                new Category(\"STAFF\")) instanceof Staff);","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"        assertTrue(PersonFactory.createPerson(ALICE.getName(), ALICE.getPhone(), ALICE.getEmail(),","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"                new Category(\"PARTICIPANT\")) instanceof Participant);","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"        assertTrue(PersonFactory.createPerson(ALICE.getName(), ALICE.getPhone(), ALICE.getEmail(),","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"                new Category(\"SPONSOR\")) instanceof Sponsor);","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"dhlee03":20}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"bachletuankhai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2024-04-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"    public void isSameIdentity_sameObject_returnsTrue() {","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"        assertTrue(ALICE.isSameIdentity(ALICE));","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"    public void isSameIdentity_null_returnsFalse() {","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"        assertFalse(ALICE.isSameIdentity(null));","lastModifiedDate":"2024-04-13"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"    public void isSameIdentity_diffNameDiffPhoneDiffEmail_returnsFalse() {","lastModifiedDate":"2024-04-14"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"        // different name, phone number and email, all other attributes same -\u003e false","lastModifiedDate":"2024-04-13"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-04-13"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"                .withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":34,"author":{"gitId":"dhlee03"},"content":"        assertFalse(ALICE.isSameIdentity(editedAlice));","lastModifiedDate":"2024-04-13"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":38,"author":{"gitId":"dhlee03"},"content":"    public void isSameIdentity_diffCategory_returnsTrue() {","lastModifiedDate":"2024-04-14"},{"lineNumber":39,"author":{"gitId":"dhlee03"},"content":"        // different category, all other attributes same -\u003e true","lastModifiedDate":"2024-04-13"},{"lineNumber":40,"author":{"gitId":"dhlee03"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withCategory(\"STAFF\").build();","lastModifiedDate":"2024-04-13"},{"lineNumber":41,"author":{"gitId":"dhlee03"},"content":"        assertTrue(ALICE.isSameIdentity(editedAlice));","lastModifiedDate":"2024-04-13"},{"lineNumber":42,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":44,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"    public void isSameIdentity_diffCategoryDiffName_returnsFalse() {","lastModifiedDate":"2024-04-14"},{"lineNumber":46,"author":{"gitId":"dhlee03"},"content":"        // different category and name, all other attributes same -\u003e false","lastModifiedDate":"2024-04-13"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withCategory(\"STAFF\").withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"        assertFalse(ALICE.isSameIdentity(editedAlice));","lastModifiedDate":"2024-04-13"},{"lineNumber":49,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":50,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":51,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":52,"author":{"gitId":"dhlee03"},"content":"    public void isSameIdentity_diffCategoryDiffPhone_returnsTrue() {","lastModifiedDate":"2024-04-14"},{"lineNumber":53,"author":{"gitId":"dhlee03"},"content":"        // different category and phone number, all other attributes same -\u003e true","lastModifiedDate":"2024-04-13"},{"lineNumber":54,"author":{"gitId":"dhlee03"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withCategory(\"STAFF\").withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":55,"author":{"gitId":"dhlee03"},"content":"        assertTrue(ALICE.isSameIdentity(editedAlice));","lastModifiedDate":"2024-04-13"},{"lineNumber":56,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-04-13"},{"lineNumber":57,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":58,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-04-13"},{"lineNumber":59,"author":{"gitId":"dhlee03"},"content":"    public void isSameIdentity_diffCategoryDiffEmail_returnsTrue() {","lastModifiedDate":"2024-04-14"},{"lineNumber":60,"author":{"gitId":"dhlee03"},"content":"        // different category and email, all other attributes same -\u003e true","lastModifiedDate":"2024-04-13"},{"lineNumber":61,"author":{"gitId":"dhlee03"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withCategory(\"STAFF\").withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2024-04-13"},{"lineNumber":62,"author":{"gitId":"dhlee03"},"content":"        assertTrue(ALICE.isSameIdentity(editedAlice));","lastModifiedDate":"2024-04-13"},{"lineNumber":63,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":66,"author":{"gitId":"dhlee03"},"content":"    public void isSameIdentity_sameNameAndPhoneOtherDiff_returnsTrue() {","lastModifiedDate":"2024-04-14"},{"lineNumber":67,"author":{"gitId":"bachletuankhai"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_AMY).withComment(\"some comment\").build();","lastModifiedDate":"2024-04-12"},{"lineNumber":68,"author":{"gitId":"dhlee03"},"content":"        assertTrue(ALICE.isSameIdentity(editedAlice));","lastModifiedDate":"2024-04-13"},{"lineNumber":69,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":71,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":72,"author":{"gitId":"dhlee03"},"content":"    public void isSameIdentity_sameNameDiffPhone_returnsFalse() {","lastModifiedDate":"2024-04-14"},{"lineNumber":73,"author":{"gitId":"bachletuankhai"},"content":"        // different phone number and email, all other attributes same -\u003e false","lastModifiedDate":"2024-04-12"},{"lineNumber":74,"author":{"gitId":"bachletuankhai"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2024-04-12"},{"lineNumber":75,"author":{"gitId":"dhlee03"},"content":"        assertFalse(ALICE.isSameIdentity(editedAlice));","lastModifiedDate":"2024-04-13"},{"lineNumber":76,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-12"},{"lineNumber":78,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":79,"author":{"gitId":"dhlee03"},"content":"    public void isSameIdentity_diffNameSamePhone_returnsFalse() {","lastModifiedDate":"2024-04-14"},{"lineNumber":80,"author":{"gitId":"bachletuankhai"},"content":"        // different name, all other attributes same -\u003e false","lastModifiedDate":"2024-04-12"},{"lineNumber":81,"author":{"gitId":"bachletuankhai"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-04-12"},{"lineNumber":82,"author":{"gitId":"dhlee03"},"content":"        assertFalse(ALICE.isSameIdentity(editedAlice));","lastModifiedDate":"2024-04-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"bachletuankhai"},"content":"        // different name and email, all other attributes same -\u003e false","lastModifiedDate":"2024-04-12"},{"lineNumber":85,"author":{"gitId":"bachletuankhai"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2024-04-12"},{"lineNumber":86,"author":{"gitId":"dhlee03"},"content":"        assertFalse(ALICE.isSameIdentity(editedAlice));","lastModifiedDate":"2024-04-13"},{"lineNumber":87,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-12"},{"lineNumber":90,"author":{"gitId":"dhlee03"},"content":"    public void isSameIdentity_diffNameDiffPhone_returnsFalse() {","lastModifiedDate":"2024-04-14"},{"lineNumber":91,"author":{"gitId":"bachletuankhai"},"content":"        // different name and phone number, all other attributes same -\u003e false","lastModifiedDate":"2024-04-12"},{"lineNumber":92,"author":{"gitId":"bachletuankhai"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-04-12"},{"lineNumber":93,"author":{"gitId":"dhlee03"},"content":"        assertFalse(ALICE.isSameIdentity(editedAlice));","lastModifiedDate":"2024-04-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"dhlee03"},"content":"        String expected \u003d Participant.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName()","lastModifiedDate":"2024-03-22"},{"lineNumber":130,"author":{"gitId":"dhlee03"},"content":"                + \", phone\u003d\" + ALICE.getPhone() + \", email\u003d\" + ALICE.getEmail()","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"dhlee03"},"content":"                + \", category\u003d\" + ALICE.getCategory() + \", comment\u003d\" + ALICE.getComment()","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"julia-cp"},"content":"                + \", group\u003d\" + ALICE.getGroup() + \"}\";","lastModifiedDate":"2024-04-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"dhlee03":51,"julia-cp":1,"bachletuankhai":18,"-":65}},{"path":"src/test/java/seedu/address/model/person/SponsorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"public class SponsorTest {","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"    public void isSameIdentity() {","lastModifiedDate":"2024-04-13"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"        Sponsor sponsor \u003d (Sponsor) new PersonBuilder().withCategory(\"SPONSOR\").build();","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"        assert (sponsor.isSameIdentity(sponsor));","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"        assert (!sponsor.isSameIdentity(null));","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"        // same identity, different category -\u003e returns true","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"        Staff staff \u003d (Staff) new PersonBuilder().withCategory(\"STAFF\").build();","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"        assert (sponsor.isSameIdentity(staff));","lastModifiedDate":"2024-04-13"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"        Sponsor differentSponsor \u003d (Sponsor) new PersonBuilder().withCategory(\"SPONSOR\").withName(\"john\").build();","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"        assert (!sponsor.isSameIdentity(differentSponsor));","lastModifiedDate":"2024-04-13"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"dhlee03":25}},{"path":"src/test/java/seedu/address/model/person/StaffTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"dhlee03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"public class StaffTest {","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"    public void isSamePerson() {","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"        Staff staff \u003d (Staff) new PersonBuilder().withCategory(\"STAFF\").withName(\"John\").build();","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"        Staff staffCopy \u003d (Staff) new PersonBuilder().withCategory(\"STAFF\").withName(\"John\").build();","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"        Staff other \u003d (Staff) new PersonBuilder().withCategory(\"STAFF\").withName(\"Peter\").build();","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"        assertFalse(staff.isSameIdentity(other));","lastModifiedDate":"2024-04-13"},{"lineNumber":18,"author":{"gitId":"dhlee03"},"content":"        assert (staff.isSameIdentity(staffCopy));","lastModifiedDate":"2024-04-13"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"        Sponsor sponsor \u003d (Sponsor) new PersonBuilder().withCategory(\"SPONSOR\").withName(\"Jake\").build();","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"dhlee03"},"content":"        assertFalse(staff.isSameIdentity(sponsor));","lastModifiedDate":"2024-04-13"},{"lineNumber":22,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"    public void getGroupNumber() {","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"        Staff test \u003d (Staff) new PersonBuilder().withCategory(\"STAFF\").withName(\"John\").build();","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"dhlee03"},"content":"        test.setGroupNumber(1);","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"        assertNotEquals(5, test.getGroupNumber());","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"dhlee03"},"content":"        assertEquals(1, test.getGroupNumber());","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"dhlee03":33}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"dhlee03"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"dhlee03"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"julia-cp"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":127,"author":{"gitId":"julia-cp"},"content":"    public void groupPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":128,"author":{"gitId":"julia-cp"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.groupPerson(ALICE, 2));","lastModifiedDate":"2024-04-03"},{"lineNumber":129,"author":{"gitId":"julia-cp"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":130,"author":{"gitId":"julia-cp"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"dhlee03":2,"julia-cp":5,"-":169}},{"path":"src/test/java/seedu/address/model/util/SampleDataUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dhlee03"},"content":"package seedu.address.model.util;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"dhlee03"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"bachletuankhai"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-04-14"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"dhlee03"},"content":"public class SampleDataUtilTest {","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"dhlee03"},"content":"    public void getSamplePersons() {","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"dhlee03"},"content":"        SampleDataUtil.getSamplePersons();","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"dhlee03"},"content":"        for (int i \u003d 0; i \u003c 6; i++) {","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"dhlee03"},"content":"            assertTrue(SampleDataUtil.getSamplePersons()[i] instanceof Person);","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"dhlee03"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"dhlee03"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-14"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":"    @Test","lastModifiedDate":"2024-04-14"},{"lineNumber":20,"author":{"gitId":"bachletuankhai"},"content":"    public void getSampleEvents_returnsEventArray() {","lastModifiedDate":"2024-04-14"},{"lineNumber":21,"author":{"gitId":"bachletuankhai"},"content":"        SampleDataUtil.getSampleEvents();","lastModifiedDate":"2024-04-14"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"        for (int i \u003d 0; i \u003c 7; i++) {","lastModifiedDate":"2024-04-14"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"            assertTrue(SampleDataUtil.getSampleEvents()[i] instanceof Event);","lastModifiedDate":"2024-04-14"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"        }","lastModifiedDate":"2024-04-14"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-14"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"dhlee03":17,"bachletuankhai":9}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"    private static final String INVALID_CATEGORY \u003d \"student\";","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"dhlee03"},"content":"    private static final String VALID_CATEGORY \u003d BENSON.getCategory().toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"    private static final String VALID_COMMENT \u003d BENSON.getComment().toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"julia-cp"},"content":"    private static final String VALID_GROUP \u003d BENSON.getGroup().toString();","lastModifiedDate":"2024-04-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"julia-cp"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_CATEGORY, VALID_COMMENT,","lastModifiedDate":"2024-04-10"},{"lineNumber":38,"author":{"gitId":"julia-cp"},"content":"                        VALID_GROUP);","lastModifiedDate":"2024-04-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"dhlee03"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"julia-cp"},"content":"                VALID_CATEGORY, VALID_COMMENT, VALID_GROUP);","lastModifiedDate":"2024-04-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"julia-cp"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_CATEGORY, VALID_COMMENT,","lastModifiedDate":"2024-04-10"},{"lineNumber":55,"author":{"gitId":"julia-cp"},"content":"                        VALID_GROUP);","lastModifiedDate":"2024-04-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"dhlee03"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"julia-cp"},"content":"                VALID_CATEGORY, VALID_COMMENT, VALID_GROUP);","lastModifiedDate":"2024-04-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"julia-cp"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_CATEGORY, VALID_COMMENT,","lastModifiedDate":"2024-04-10"},{"lineNumber":72,"author":{"gitId":"julia-cp"},"content":"                        VALID_GROUP);","lastModifiedDate":"2024-04-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"dhlee03"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"julia-cp"},"content":"                VALID_CATEGORY, VALID_COMMENT, VALID_GROUP);","lastModifiedDate":"2024-04-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"dhlee03":6,"julia-cp":10,"-":68}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"        JsonEventBookStorage eventBookStorage \u003d new JsonEventBookStorage(getTempFilePath(\"eb\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, eventBookStorage, userPrefsStorage);","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"meenulekha":2,"-":67}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"julia-cp"},"content":"import seedu.address.model.person.Group;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"        descriptor.setCategory(person.getCategory());","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"julia-cp"},"content":"     * Sets the {@code groupNumber} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"julia-cp"},"content":"    public EditPersonDescriptorBuilder withGroup(int groupNumber) {","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"julia-cp"},"content":"        descriptor.setGroup(new Group(groupNumber));","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"dhlee03":1,"julia-cp":4,"-":66}},{"path":"src/test/java/seedu/address/testutil/EventBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":" * A utility class to help with building Eventbook objects.","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":" * {@code EventBook eb \u003d new EventBookBuilder().withEVENT(\"EVENT1\").build();}","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"        */","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":"public class EventBookBuilder {","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"    private EventBook eventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"    public EventBookBuilder() {","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"        eventBook \u003d new EventBook();","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"    public EventBookBuilder(EventBook eventBook) {","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"        this.eventBook \u003d eventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"    public EventBookBuilder withEvent(Event event) {","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"        eventBook.addEvent(event);","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"        return this;","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"    public EventBook build() {","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"        return eventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":33}},{"path":"src/test/java/seedu/address/testutil/EventBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-04-04"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.EventCategory;","lastModifiedDate":"2024-04-04"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2024-04-04"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.EventFactory;","lastModifiedDate":"2024-04-04"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2024-04-04"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":" * A utility class to help with building event objects.","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"public class EventBuilder {","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"    public static final String DEFAULT_NAME \u003d \"Meeting\";","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"    public static final String DEFAULT_DATE \u003d \"05-05-2024\";","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"    public static final String DEFAULT_CATEGORY \u003d \"PARTICIPANT\";","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"    private EventName name;","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"    private EventDate date;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"    private EventCategory category;","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"    public EventBuilder() {","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"        name \u003d new EventName(DEFAULT_NAME);","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"        date \u003d new EventDate(DEFAULT_DATE);","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"        category \u003d new EventCategory(DEFAULT_CATEGORY);","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"    public EventBuilder(Event eventToCopy) {","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"        name \u003d eventToCopy.getEventName();","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"        date \u003d eventToCopy.getEventDate();","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"        category \u003d eventToCopy.getEventCategory();","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"    public EventBuilder withEventName(String name) {","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"        this.name \u003d new EventName(name);","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"        return this;","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"meenulekha"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"meenulekha"},"content":"    public EventBuilder withEventDate(String phone) {","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"meenulekha"},"content":"        this.date \u003d new EventDate(phone);","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"meenulekha"},"content":"        return this;","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"meenulekha"},"content":"     * Sets the {@code Category} of the {@code Category} that we are building.","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"meenulekha"},"content":"    public EventBuilder withEventCategory(String category) {","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"meenulekha"},"content":"        this.category \u003d new EventCategory(category);","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"meenulekha"},"content":"        return this;","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"meenulekha"},"content":"    public Event build() {","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"meenulekha"},"content":"        return EventFactory.createEvent(name, date, category);","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":71}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Category;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"dhlee03"},"content":"import seedu.address.model.person.PersonFactory;","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":19,"author":{"gitId":"dhlee03"},"content":"    public static final String DEFAULT_CATEGORY \u003d \"PARTICIPANT\";","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"dhlee03"},"content":"    public static final String DEFAULT_COMMENT \u003d \"No comment provided.\";","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"dhlee03"},"content":"    private Category category;","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"dhlee03"},"content":"    private Comment comment;","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"dhlee03"},"content":"        category \u003d new Category(DEFAULT_CATEGORY);","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"dhlee03"},"content":"        comment \u003d new Comment(DEFAULT_COMMENT);","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"        category \u003d personToCopy.getCategory();","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"dhlee03"},"content":"        comment \u003d personToCopy.getComment();","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"dhlee03"},"content":"     * Sets the {@code Category} of the {@code Category} that we are building.","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"dhlee03"},"content":"    public PersonBuilder withCategory(String category) {","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"dhlee03"},"content":"        this.category \u003d new Category(category);","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"dhlee03"},"content":"     * Sets the {@code Comment} of the {@code Person} that we are building.","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"dhlee03"},"content":"    public PersonBuilder withComment(String comment) {","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"dhlee03"},"content":"        this.comment \u003d new Comment(comment);","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2024-04-03"},{"lineNumber":93,"author":{"gitId":"dhlee03"},"content":"        return PersonFactory.createPerson(name, phone, email, category, comment);","lastModifiedDate":"2024-04-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"dhlee03":19,"-":76}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"dhlee03"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CATEGORY;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"dhlee03"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"bachletuankhai"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"bachletuankhai"},"content":"        sb.append(getPersonDetailNoCategory(person));","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"        sb.append(PREFIX_CATEGORY + person.getCategory().value + \" \");","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"bachletuankhai"},"content":"        return sb.toString();","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"bachletuankhai"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"bachletuankhai"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"bachletuankhai"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"bachletuankhai"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details, excluding that person\u0027s category.","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"bachletuankhai"},"content":"     *","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"bachletuankhai"},"content":"     * @param person The person to get details","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"     * @return Person details without category","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"bachletuankhai"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"    public static String getPersonDetailNoCategory(Person person) {","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"dhlee03":2,"bachletuankhai":13,"-":44}},{"path":"src/test/java/seedu/address/testutil/TypicalEvents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"meenulekha"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"meenulekha"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"meenulekha"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"meenulekha"},"content":"import java.util.List;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.EventBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"meenulekha"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2024-04-04"},{"lineNumber":9,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"meenulekha"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"meenulekha"},"content":" * A utility class containing a list of {@code event} objects to be used in tests.","lastModifiedDate":"2024-04-04"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"public class TypicalEvents {","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"    public static final Event EVENT1 \u003d new EventBuilder().withEventName(\"event 1\")","lastModifiedDate":"2024-04-04"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"            .withEventDate(\"01-01-2025\").withEventCategory(\"PARTICIPANT\").build();","lastModifiedDate":"2024-04-12"},{"lineNumber":16,"author":{"gitId":"meenulekha"},"content":"    public static final Event EVENT2 \u003d new EventBuilder().withEventName(\"event 2\").withEventDate(\"02-02-2025\")","lastModifiedDate":"2024-04-12"},{"lineNumber":17,"author":{"gitId":"meenulekha"},"content":"            .withEventCategory(\"PARTICIPANT\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"meenulekha"},"content":"    public static final Event EVENT3 \u003d new EventBuilder().withEventName(\"event 3\").withEventDate(\"03-03-2025\")","lastModifiedDate":"2024-04-12"},{"lineNumber":19,"author":{"gitId":"meenulekha"},"content":"            .withEventCategory(\"STAFF\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"meenulekha"},"content":"    public static final Event EVENT4 \u003d new EventBuilder().withEventName(\"event 4\").withEventDate(\"04-04-2025\")","lastModifiedDate":"2024-04-12"},{"lineNumber":21,"author":{"gitId":"meenulekha"},"content":"            .withEventCategory(\"SPONSOR\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"meenulekha"},"content":"    public static final Event EVENT5 \u003d new EventBuilder().withEventName(\"event 5\").withEventDate(\"05-05-2025\")","lastModifiedDate":"2024-04-12"},{"lineNumber":23,"author":{"gitId":"meenulekha"},"content":"            .withEventCategory(\"PARTICIPANT\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"meenulekha"},"content":"    public static final Event EVENT6 \u003d new EventBuilder().withEventName(\"event 6\").withEventDate(\"06-06-2025\")","lastModifiedDate":"2024-04-12"},{"lineNumber":25,"author":{"gitId":"meenulekha"},"content":"            .withEventCategory(\"STAFF\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"meenulekha"},"content":"    public static final Event EVENT7 \u003d new EventBuilder().withEventName(\"event 7\").withEventDate(\"07-07-2025\")","lastModifiedDate":"2024-04-12"},{"lineNumber":27,"author":{"gitId":"meenulekha"},"content":"            .withEventCategory(\"SPONSOR\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"meenulekha"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"meenulekha"},"content":"    private TypicalEvents() {","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"meenulekha"},"content":"    } // prevents instantiation","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"meenulekha"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"meenulekha"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"meenulekha"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"meenulekha"},"content":"    public static EventBook getTypicalEventBook() {","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"meenulekha"},"content":"        EventBook eb \u003d new EventBook();","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"meenulekha"},"content":"        for (Event event : getTypicalEvents()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"meenulekha"},"content":"            eb.addEvent(event);","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"meenulekha"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"meenulekha"},"content":"        return eb;","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"meenulekha"},"content":"    public static List\u003cEvent\u003e getTypicalEvents() {","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"meenulekha"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(EVENT1, EVENT2, EVENT3, EVENT4, EVENT5, EVENT6, EVENT7));","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"meenulekha"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"meenulekha"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"meenulekha":49}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"meenulekha"},"content":"    public static final Index INDEX_FIRST_EVENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-04-13"},{"lineNumber":13,"author":{"gitId":"meenulekha"},"content":"    public static final Index INDEX_SECOND_EVENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2024-04-13"},{"lineNumber":14,"author":{"gitId":"meenulekha"},"content":"    public static final Index INDEX_THIRD_EVENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2024-04-13"},{"lineNumber":15,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"meenulekha":4,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":18,"author":{"gitId":"bachletuankhai"},"content":" * A utility class containing a list of {@code Person} objects to be used in","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"bachletuankhai"},"content":" * tests.","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"bachletuankhai"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\").withEmail(\"alice@example.com\")","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"bachletuankhai"},"content":"            .withPhone(\"94351253\").withComment(\"She is an Expert.\").withCategory(\"PARTICIPANT\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"bachletuankhai"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\").withEmail(\"johnd@example.com\")","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"bachletuankhai"},"content":"            .withPhone(\"98765432\").withComment(\"No comment provided.\").withCategory(\"PARTICIPANT\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"dhlee03"},"content":"            .withEmail(\"heinz@example.com\").withComment(\"Sick.\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"dhlee03"},"content":"            .withEmail(\"cornelia@example.com\").withCategory(\"SPONSOR\").withComment(\"No comment provided.\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"bachletuankhai"},"content":"            .withEmail(\"werner@example.com\").withCategory(\"STAFF\").withComment(\"No comment provided.\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"dhlee03"},"content":"            .withEmail(\"lydia@example.com\").withCategory(\"PARTICIPANT\").withComment(\"Nice effort.\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"dhlee03"},"content":"            .withEmail(\"anna@example.com\").withCategory(\"STAFF\").withComment(\"No comment provided.\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"bachletuankhai"},"content":"            .withEmail(\"stefan@example.com\").withCategory(\"SPONSOR\").withComment(\"No comment provided.\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"bachletuankhai"},"content":"            .withEmail(\"hans@example.com\").withCategory(\"SPONSOR\").withComment(\"No comment provided.\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"bachletuankhai"},"content":"            .withEmail(VALID_EMAIL_AMY).withCategory(\"PARTICIPANT\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"dhlee03"},"content":"            .withEmail(VALID_EMAIL_BOB).withCategory(\"PARTICIPANT\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"bachletuankhai"},"content":"    public static final Person BOB_SPONSOR \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"bachletuankhai"},"content":"            .withEmail(VALID_EMAIL_BOB).withCategory(\"SPONSOR\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"bachletuankhai"},"content":"    public static final Person BOB_STAFF \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"bachletuankhai"},"content":"            .withEmail(VALID_EMAIL_BOB).withCategory(\"STAFF\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":56,"author":{"gitId":"dhlee03"},"content":"    private TypicalPersons() {","lastModifiedDate":"2024-03-22"},{"lineNumber":57,"author":{"gitId":"dhlee03"},"content":"    } // prevents instantiation","lastModifiedDate":"2024-03-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"dhlee03":7,"bachletuankhai":14,"-":52}},{"path":"src/test/java/seedu/address/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"meenulekha"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"meenulekha"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"meenulekha"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"meenulekha":3,"-":112}}]
