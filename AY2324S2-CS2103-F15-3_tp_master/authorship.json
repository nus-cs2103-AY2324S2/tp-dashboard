[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions) [![codecov](https://codecov.io/gh/AY2324S2-CS2103-F15-3/tp/graph/badge.svg?token\u003dNYM3SACDB7)](https://codecov.io/gh/AY2324S2-CS2103-F15-3/tp)","lastModifiedDate":"2024-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## HRConnect","lastModifiedDate":"2024-02-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-19"},{"lineNumber":7,"author":{"gitId":"lihaoquan"},"content":"HRConnect is designed for HR officers in tech startups, streamlining the management of external contacts.","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"lihaoquan"},"content":"It efficiently organizes contacts for potential hires, hiring agencies, and legal consultants, significantly","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"lihaoquan"},"content":"reducing the time spent searching for contact information, thereby optimizing the recruiting process.","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"lihaoquan"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"lihaoquan":5,"-":6}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"lihaoquan"},"content":"### Yong Yu Sian","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"lihaoquan"},"content":"\u003cimg src\u003d\"images/ys112.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"lihaoquan"},"content":"[[github](https://github.com/ys112)]","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"lihaoquan"},"content":"[[portfolio](team/ys112.md)]","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"lihaoquan"},"content":"* Role: Software Engineer","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"* Responsibilities: Deliverables and deadlines, Integration","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"YuvBindal"},"content":"### Yuv Bindal","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"lihaoquan"},"content":"\u003cimg src\u003d\"images/yuvbindal.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"lihaoquan"},"content":"[[github](http://github.com/YuvBindal)]","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"lihaoquan"},"content":"[[portfolio](team/yuvbindal.md)]","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"YuvBindal"},"content":"* Role: Software Engineer","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"* Responsibilities: Testing","lastModifiedDate":"2024-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"lihaoquan"},"content":"### Lee Xin En","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"lihaoquan"},"content":"\u003cimg src\u003d\"images/xinen26.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"lihaoquan"},"content":"[[github](http://github.com/xinen26)]","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"lihaoquan"},"content":"[[portfolio](team/xinen26.md)]","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"lihaoquan"},"content":"* Role: Software Engineer","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"* Responsibilities: Scheduling and tracking","lastModifiedDate":"2024-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"lihaoquan"},"content":"### Ho Wei Herng, Christopher","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"lihaoquan"},"content":"\u003cimg src\u003d\"images/chrisho1341.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"lihaoquan"},"content":"[[github](http://github.com/ChrisHo1341)]","lastModifiedDate":"2024-02-26"},{"lineNumber":47,"author":{"gitId":"lihaoquan"},"content":"[[portfolio](team/chrisho1341.md)]","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"lihaoquan"},"content":"* Role: Software Engineer","lastModifiedDate":"2024-02-26"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"* Responsibilities: Documentation and code quality","lastModifiedDate":"2024-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"lihaoquan"},"content":"### Li Haoquan","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"lihaoquan"},"content":"\u003cimg src\u003d\"images/lihaoquan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"lihaoquan"},"content":"[[github](http://github.com/lihaoquan)]","lastModifiedDate":"2024-02-26"},{"lineNumber":57,"author":{"gitId":"lihaoquan"},"content":"[[portfolio](team/lihaoquan.md)]","lastModifiedDate":"2024-02-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"lihaoquan"},"content":"* Role: Software Engineer","lastModifiedDate":"2024-02-26"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"* Responsibilities: Integration, UI","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"lihaoquan":23,"YuvBindal":2,"ys112":5,"-":30}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document `docs/diagrams` folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-02-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"xinen26"},"content":"### \\[Developed\\] Edit_Applicant feature","lastModifiedDate":"2024-03-20"},{"lineNumber":159,"author":{"gitId":"xinen26"},"content":"The edit_applicant functionality allows users to edit applicants\u0027 details. The details that can be edited include `Name`, `Phone`, `Email`, `Address`, `Stage`, `Role` and `Tag`.","lastModifiedDate":"2024-03-20"},{"lineNumber":160,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":161,"author":{"gitId":"xinen26"},"content":"![EditSequenceDiagram](images/EditSequenceDiagram.png)","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Logic.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram-Model.png)","lastModifiedDate":"2024-02-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"ys112"},"content":"**Target user profile**: HR officer for tech-related startup","lastModifiedDate":"2024-02-26"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"ys112"},"content":"**Value proposition**:","lastModifiedDate":"2024-02-26"},{"lineNumber":271,"author":{"gitId":"ys112"},"content":"* Managing contacts for three main types of external liaisons:","lastModifiedDate":"2024-02-26"},{"lineNumber":272,"author":{"gitId":"ys112"},"content":"  * potential hires","lastModifiedDate":"2024-02-26"},{"lineNumber":273,"author":{"gitId":"ys112"},"content":"  * hiring agencies","lastModifiedDate":"2024-02-26"},{"lineNumber":274,"author":{"gitId":"ys112"},"content":"  * legal consultants","lastModifiedDate":"2024-02-26"},{"lineNumber":275,"author":{"gitId":"ys112"},"content":"*  Reduce time spent on searching for relevant contacts for liaisons.","lastModifiedDate":"2024-02-26"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"ys112"},"content":"Priorities: Essential (needed for basic functionality) - `Essential`, Typical (common needs) - `Typical`, Novel (good to have but not a need) - `Novel`, Out of Scope (not needed) - `Out of Scope`","lastModifiedDate":"2024-02-26"},{"lineNumber":280,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":281,"author":{"gitId":"ys112"},"content":"| As a/an ...                      | I can ...                                                                                                                                                                | So that ...                                                                                          | Priority (Essential, Typical, Novel, Out of Scope) |","lastModifiedDate":"2024-02-26"},{"lineNumber":282,"author":{"gitId":"ys112"},"content":"| -------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ---------------------------------------------------------------------------------------------------- |----------------------------------------------------|","lastModifiedDate":"2024-02-26"},{"lineNumber":283,"author":{"gitId":"ys112"},"content":"| User                             | add new contacts                                                                                                                                                         |                                                                                                      | Essential                                          |","lastModifiedDate":"2024-02-26"},{"lineNumber":284,"author":{"gitId":"ys112"},"content":"| User                             | delete existing contacts                                                                                                                                                 |                                                                                                      | Essential                                          |","lastModifiedDate":"2024-02-26"},{"lineNumber":285,"author":{"gitId":"ys112"},"content":"| User                             | view existing contacts                                                                                                                                                   |                                                                                                      | Essential                                          |","lastModifiedDate":"2024-02-26"},{"lineNumber":286,"author":{"gitId":"ys112"},"content":"| HR professional                  | manage all my work contacts in one place,                                                                                                                                | I can efficiently communicate with recruitment agencies, candidates and other stakeholders           | Essential                                          |","lastModifiedDate":"2024-02-26"},{"lineNumber":287,"author":{"gitId":"ys112"},"content":"| User                             | update existing contacts                                                                                                                                                 |                                                                                                      | Typical                                            |","lastModifiedDate":"2024-02-26"},{"lineNumber":288,"author":{"gitId":"ys112"},"content":"| User                             | purge all curent data                                                                                                                                                    | I can get rid of sample/experimental data I while exploring the app                                  | Typical                                            |","lastModifiedDate":"2024-02-26"},{"lineNumber":289,"author":{"gitId":"ys112"},"content":"| HR Recruiter                     | filter through my contact list based on what stage of the hiring process the applicants are in                                                                           | I can contact those who are shortlisted                                                              | Typical                                            |","lastModifiedDate":"2024-02-26"},{"lineNumber":290,"author":{"gitId":"ys112"},"content":"| HR Recruiter                     | add tags to contacts to specify which roles they are applying for                                                                                                        | I can keep them organized                                                                            | Typical                                            |","lastModifiedDate":"2024-02-26"},{"lineNumber":291,"author":{"gitId":"ys112"},"content":"| HR personnel                     | add notes or comments to individual contact entries                                                                                                                      | I can keep track of important additional information/interactions                                    | Typical                                            |","lastModifiedDate":"2024-02-26"},{"lineNumber":292,"author":{"gitId":"ys112"},"content":"| experienced HR professional      | filter and identify candidates by tags                                                                                                                                   | I can follow up with them promptly                                                                   | Typical                                            |","lastModifiedDate":"2024-02-26"},{"lineNumber":293,"author":{"gitId":"ys112"},"content":"| User                             | search through my contacts based on specific criteria                                                                                                                    | I can quickly find any information I need                                                            | Typical                                            |","lastModifiedDate":"2024-02-26"},{"lineNumber":294,"author":{"gitId":"ys112"},"content":"| HR Recruiter                     | extract contacts into a separate address book                                                                                                                            | I can import them to the company database easily                                                     | Typical                                            |","lastModifiedDate":"2024-02-26"},{"lineNumber":295,"author":{"gitId":"ys112"},"content":"| HR Recruiter                     | upload images to set profile pictures for my contacts                                                                                                                    | I can identify them when face to face                                                                | Typical                                            |","lastModifiedDate":"2024-02-26"},{"lineNumber":296,"author":{"gitId":"ys112"},"content":"| first-time user                  | have an intuitive experience and can quickly understand its features and functionalities                                                                                 | I can start using it effectively without wasting time                                                | Typical                                            |","lastModifiedDate":"2024-02-26"},{"lineNumber":297,"author":{"gitId":"ys112"},"content":"| first-time user                  | can find clear instructions on how to use HRConnect                                                                                                                      | I can easily start managing my contacts using HRConnect                                              | Typical                                            |","lastModifiedDate":"2024-02-26"},{"lineNumber":298,"author":{"gitId":"ys112"},"content":"| HR Recruiter                     | Create new contacts with templates based on person (employees, intern, interviewee etc.)                                                                                 |                                                                                                      | Novel                                              |","lastModifiedDate":"2024-02-26"},{"lineNumber":299,"author":{"gitId":"ys112"},"content":"| long-time user                   | create shortcuts for tasks                                                                                                                                               | I can save time on frequenty used functions                                                          | Novel                                              |","lastModifiedDate":"2024-02-26"},{"lineNumber":300,"author":{"gitId":"ys112"},"content":"| User                             | receive notifications or reminders from HRConnect                                                                                                                        | I can be kept up to date with upcoming interviews, deadlines or follow-up tasks                      | Novel                                              |","lastModifiedDate":"2024-02-26"},{"lineNumber":301,"author":{"gitId":"ys112"},"content":"| User                             | can conduct background checks on potential hires directly within HRConnect                                                                                               | I can find out the suitability of a candidate easily                                                 | Novel                                              |","lastModifiedDate":"2024-02-26"},{"lineNumber":302,"author":{"gitId":"ys112"},"content":"| first-time user                  | easily import my data                                                                                                                                                    | it won\u0027t be intimidating and I won\u0027t give up on using it after my first use                          | Novel                                              |","lastModifiedDate":"2024-02-26"},{"lineNumber":303,"author":{"gitId":"ys112"},"content":"| HR personnel                     | sync any information changes across different devices                                                                                                                    | I can update information efficiently and ensure that all data is up to date for my coworkers as well | Novel                                              |","lastModifiedDate":"2024-02-26"},{"lineNumber":304,"author":{"gitId":"ys112"},"content":"| long-time user.                  | archive/hide unused contacts                                                                                                                                             | I am not distracted by irrelevant data                                                               | Novel                                              |","lastModifiedDate":"2024-02-26"},{"lineNumber":305,"author":{"gitId":"ys112"},"content":"| HR Recruiter                     | create custom automated processes for repetitive tasks                                                                                                                   | I can save time on such tasks                                                                        | Novel                                              |","lastModifiedDate":"2024-02-26"},{"lineNumber":306,"author":{"gitId":"ys112"},"content":"| potential user exploring the app | see the app populated with sample data                                                                                                                                   | I can easily see the benefits of the app when frequently used                                        | Novel                                              |","lastModifiedDate":"2024-02-26"},{"lineNumber":307,"author":{"gitId":"ys112"},"content":"| HR personnel                     | keep track of the status of job applications or recruitment processes for each candidate                                                                                 | I can monitor progress and follow up as needed                                                       | Novel                                              |","lastModifiedDate":"2024-02-26"},{"lineNumber":308,"author":{"gitId":"ys112"},"content":"| User                             | track the status of each potential hire in the recruitment process                                                                                                       | I can take action as needed                                                                          | Novel                                              |","lastModifiedDate":"2024-02-26"},{"lineNumber":309,"author":{"gitId":"ys112"},"content":"| User                             | conduct surveys and collect feedback from specific groups within my contacts                                                                                             | I can easily conduct surveys as needed                                                               | Novel                                              |","lastModifiedDate":"2024-02-26"},{"lineNumber":310,"author":{"gitId":"ys112"},"content":"| first-time user                  | access a brief tutorial on how to navigate HRConnect                                                                                                                     | I can quickly familiarize myself with its features and functions                                     | Out of scope                                       |","lastModifiedDate":"2024-02-26"},{"lineNumber":311,"author":{"gitId":"ys112"},"content":"| User                             | generate reports or analytics on hiring activities such as time-to-fill metrics, source of hire, and diversity statistics                                                | I can easily access such information as needed                                                       | Out of scope                                       |","lastModifiedDate":"2024-02-26"},{"lineNumber":312,"author":{"gitId":"ys112"},"content":"| User                             | integrate HRConnect with other HR systems or tools such as applicant tracking systems or payroll software                                                                | data exchange and workflows can be streamlined                                                       | Out of scope                                       |","lastModifiedDate":"2024-02-26"},{"lineNumber":313,"author":{"gitId":"ys112"},"content":"| User                             | schedule and conduct virtual interviews directly within HRConnect, including video conferencing and interview notes                                                      |                                                                                                      | Out of scope                                       |","lastModifiedDate":"2024-02-26"},{"lineNumber":314,"author":{"gitId":"ys112"},"content":"| User                             | track and manage employee referrals and incentives programs within HRConnect, including tracking referral bonuses and monitoring the effectiveness of referral campaigns |                                                                                                      | Out of scope                                       |","lastModifiedDate":"2024-02-26"},{"lineNumber":315,"author":{"gitId":"ys112"},"content":"| User                             | generate customizable offer letters and employment contracts directly within HRConnect, including integrating e-signature solutions                                      | I can perform these tasks more efficiently                                                           | Out of scope                                       |","lastModifiedDate":"2024-02-26"},{"lineNumber":316,"author":{"gitId":"ys112"},"content":"| User                             | create and manage employee development plans with HRConnect                                                                                                              |                                                                                                      | Out of scope                                       |","lastModifiedDate":"2024-02-26"},{"lineNumber":317,"author":{"gitId":"ys112"},"content":"| User                             | create and manage succession plans with HRConnect, including identifying high-potential employees, mapping career paths and planning for leadership transitions          |                                                                                                      | Out of scope                                       |","lastModifiedDate":"2024-02-26"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"xinen26"},"content":"(For all use cases below, the **System** is the `HRConnect` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2024-02-27"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":324,"author":{"gitId":"xinen26"},"content":"**Use case: Add a contact**","lastModifiedDate":"2024-02-27"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":326,"author":{"gitId":"xinen26"},"content":"**MSS**","lastModifiedDate":"2024-02-27"},{"lineNumber":327,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":328,"author":{"gitId":"xinen26"},"content":"1.  User requests to list of contacts","lastModifiedDate":"2024-02-27"},{"lineNumber":329,"author":{"gitId":"xinen26"},"content":"2.  HRConnect shows a list of contacts","lastModifiedDate":"2024-02-27"},{"lineNumber":330,"author":{"gitId":"xinen26"},"content":"3.  User requests to add a specific contact to the list","lastModifiedDate":"2024-02-27"},{"lineNumber":331,"author":{"gitId":"xinen26"},"content":"4.  HRConnect adds the contact","lastModifiedDate":"2024-02-27"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":333,"author":{"gitId":"xinen26"},"content":"    Use case ends.","lastModifiedDate":"2024-02-27"},{"lineNumber":334,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":335,"author":{"gitId":"xinen26"},"content":"**Extensions**","lastModifiedDate":"2024-02-27"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":337,"author":{"gitId":"xinen26"},"content":"* 3a. The given format is invalid.","lastModifiedDate":"2024-02-27"},{"lineNumber":338,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":339,"author":{"gitId":"xinen26"},"content":"    * 3a1. HRConnect shows an error message.","lastModifiedDate":"2024-02-27"},{"lineNumber":340,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":341,"author":{"gitId":"xinen26"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-02-27"},{"lineNumber":342,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":343,"author":{"gitId":"xinen26"},"content":"* 3b. The contact details have been added before.","lastModifiedDate":"2024-02-27"},{"lineNumber":344,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":345,"author":{"gitId":"xinen26"},"content":"    * 3b1. HRConnect shows an error message.","lastModifiedDate":"2024-02-27"},{"lineNumber":346,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":347,"author":{"gitId":"xinen26"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-02-27"},{"lineNumber":348,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":349,"author":{"gitId":"xinen26"},"content":"**Use case: Clear**","lastModifiedDate":"2024-02-27"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":351,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2024-02-27"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":353,"author":{"gitId":"xinen26"},"content":"1.  User requests to list of contacts","lastModifiedDate":"2024-02-27"},{"lineNumber":354,"author":{"gitId":"xinen26"},"content":"2.  HRConnect shows a list of contacts","lastModifiedDate":"2024-02-27"},{"lineNumber":355,"author":{"gitId":"xinen26"},"content":"3.  User requests to clear the list","lastModifiedDate":"2024-02-27"},{"lineNumber":356,"author":{"gitId":"xinen26"},"content":"4.  HRConnect deletes all entries in list","lastModifiedDate":"2024-02-27"},{"lineNumber":357,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":358,"author":{"gitId":"xinen26"},"content":"    Use case ends.","lastModifiedDate":"2024-02-27"},{"lineNumber":359,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":360,"author":{"gitId":"xinen26"},"content":"**Extensions**","lastModifiedDate":"2024-02-27"},{"lineNumber":361,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":362,"author":{"gitId":"xinen26"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-02-27"},{"lineNumber":363,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":364,"author":{"gitId":"xinen26"},"content":"  Use case ends.","lastModifiedDate":"2024-02-27"},{"lineNumber":365,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":366,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":367,"author":{"gitId":"xinen26"},"content":"**Use case: Add comment to contact**","lastModifiedDate":"2024-02-27"},{"lineNumber":368,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":369,"author":{"gitId":"xinen26"},"content":"**MSS**","lastModifiedDate":"2024-02-27"},{"lineNumber":370,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":371,"author":{"gitId":"xinen26"},"content":"1.  User requests to list of contacts","lastModifiedDate":"2024-02-27"},{"lineNumber":372,"author":{"gitId":"xinen26"},"content":"2.  HRConnect shows a list of contacts","lastModifiedDate":"2024-02-27"},{"lineNumber":373,"author":{"gitId":"xinen26"},"content":"3.  User requests to add a comment to a specific person in the list","lastModifiedDate":"2024-02-27"},{"lineNumber":374,"author":{"gitId":"xinen26"},"content":"4.  HRConnect adds comment to the person","lastModifiedDate":"2024-02-27"},{"lineNumber":375,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":376,"author":{"gitId":"xinen26"},"content":"    Use case ends.","lastModifiedDate":"2024-02-27"},{"lineNumber":377,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":378,"author":{"gitId":"xinen26"},"content":"**Extensions**","lastModifiedDate":"2024-02-27"},{"lineNumber":379,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":380,"author":{"gitId":"xinen26"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-02-27"},{"lineNumber":381,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":382,"author":{"gitId":"xinen26"},"content":"  Use case ends.","lastModifiedDate":"2024-02-27"},{"lineNumber":383,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":384,"author":{"gitId":"xinen26"},"content":"* 3a. The given Application ID is invalid.","lastModifiedDate":"2024-02-27"},{"lineNumber":385,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":386,"author":{"gitId":"xinen26"},"content":"    * 3a1. HRConnect shows an error message.","lastModifiedDate":"2024-02-27"},{"lineNumber":387,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":388,"author":{"gitId":"xinen26"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-02-27"},{"lineNumber":389,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":390,"author":{"gitId":"xinen26"},"content":"* 3b. The comment is empty.","lastModifiedDate":"2024-02-27"},{"lineNumber":391,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":392,"author":{"gitId":"xinen26"},"content":"    * 3b1. HRConnect shows an error message.","lastModifiedDate":"2024-02-27"},{"lineNumber":393,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":394,"author":{"gitId":"xinen26"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-02-27"},{"lineNumber":395,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":396,"author":{"gitId":"xinen26"},"content":"* 3c. The comment is a duplicate of a previous comment assigned to the same contact.","lastModifiedDate":"2024-02-27"},{"lineNumber":397,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":398,"author":{"gitId":"xinen26"},"content":"    * 3c1. HRConnect shows an error message.","lastModifiedDate":"2024-02-27"},{"lineNumber":399,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":400,"author":{"gitId":"xinen26"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-02-27"},{"lineNumber":401,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"xinen26"},"content":"**Use case: Delete a contact**","lastModifiedDate":"2024-02-27"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"xinen26"},"content":"1.  User requests to list of contacts","lastModifiedDate":"2024-02-27"},{"lineNumber":408,"author":{"gitId":"xinen26"},"content":"2.  HRConnect shows a list of contacts","lastModifiedDate":"2024-02-27"},{"lineNumber":409,"author":{"gitId":"xinen26"},"content":"3.  User requests to delete a specific contact on the list","lastModifiedDate":"2024-02-27"},{"lineNumber":410,"author":{"gitId":"xinen26"},"content":"4.  HRConnect deletes the person","lastModifiedDate":"2024-02-27"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"xinen26"},"content":"    * 3a1. HRConnect shows an error message.","lastModifiedDate":"2024-02-27"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":427,"author":{"gitId":"xinen26"},"content":"**Use case: Edit a person**","lastModifiedDate":"2024-02-27"},{"lineNumber":428,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":429,"author":{"gitId":"xinen26"},"content":"**MSS**","lastModifiedDate":"2024-02-27"},{"lineNumber":430,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":431,"author":{"gitId":"xinen26"},"content":"1.  User requests to list of contacts","lastModifiedDate":"2024-02-27"},{"lineNumber":432,"author":{"gitId":"xinen26"},"content":"2.  HRConnect shows a list of contacts","lastModifiedDate":"2024-02-27"},{"lineNumber":433,"author":{"gitId":"xinen26"},"content":"3.  User requests to edit a specific person\u0027s details in the list","lastModifiedDate":"2024-02-27"},{"lineNumber":434,"author":{"gitId":"xinen26"},"content":"4.  HRConnect edits the details belonging to the person","lastModifiedDate":"2024-02-27"},{"lineNumber":435,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":436,"author":{"gitId":"xinen26"},"content":"    Use case ends.","lastModifiedDate":"2024-02-27"},{"lineNumber":437,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":438,"author":{"gitId":"xinen26"},"content":"**Extensions**","lastModifiedDate":"2024-02-27"},{"lineNumber":439,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":440,"author":{"gitId":"xinen26"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-02-27"},{"lineNumber":441,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":442,"author":{"gitId":"xinen26"},"content":"  Use case ends.","lastModifiedDate":"2024-02-27"},{"lineNumber":443,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":444,"author":{"gitId":"xinen26"},"content":"* 3a. The given index of the person is invalid.","lastModifiedDate":"2024-02-27"},{"lineNumber":445,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":446,"author":{"gitId":"xinen26"},"content":"    * 3a1. HRConnect shows an error message.","lastModifiedDate":"2024-02-27"},{"lineNumber":447,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":448,"author":{"gitId":"xinen26"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-02-27"},{"lineNumber":449,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":450,"author":{"gitId":"xinen26"},"content":"* 3b. The given format of the command is invalid.","lastModifiedDate":"2024-02-27"},{"lineNumber":451,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":452,"author":{"gitId":"xinen26"},"content":"    * 3b1. HRConnect shows an error message.","lastModifiedDate":"2024-02-27"},{"lineNumber":453,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":454,"author":{"gitId":"xinen26"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-02-27"},{"lineNumber":455,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":456,"author":{"gitId":"xinen26"},"content":"**Use case: Export contacts**","lastModifiedDate":"2024-02-27"},{"lineNumber":457,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":458,"author":{"gitId":"xinen26"},"content":"**MSS**","lastModifiedDate":"2024-02-27"},{"lineNumber":459,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":460,"author":{"gitId":"xinen26"},"content":"1.  User requests to list of contacts","lastModifiedDate":"2024-02-27"},{"lineNumber":461,"author":{"gitId":"xinen26"},"content":"2.  HRConnect shows a list of contacts","lastModifiedDate":"2024-02-27"},{"lineNumber":462,"author":{"gitId":"xinen26"},"content":"3.  User requests to export contacts into a separate address book section.","lastModifiedDate":"2024-02-27"},{"lineNumber":463,"author":{"gitId":"xinen26"},"content":"4.  HRConnect exports the specified range of contacts to the designated page.","lastModifiedDate":"2024-02-27"},{"lineNumber":464,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":465,"author":{"gitId":"xinen26"},"content":"    Use case ends.","lastModifiedDate":"2024-02-27"},{"lineNumber":466,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":467,"author":{"gitId":"xinen26"},"content":"**Extensions**","lastModifiedDate":"2024-02-27"},{"lineNumber":468,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":469,"author":{"gitId":"xinen26"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-02-27"},{"lineNumber":470,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":471,"author":{"gitId":"xinen26"},"content":"  Use case ends","lastModifiedDate":"2024-02-27"},{"lineNumber":472,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":473,"author":{"gitId":"xinen26"},"content":"* 3a. The given format of the command is invalid.","lastModifiedDate":"2024-02-27"},{"lineNumber":474,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":475,"author":{"gitId":"xinen26"},"content":"    * 3a1. HRConnect shows an error message.","lastModifiedDate":"2024-02-27"},{"lineNumber":476,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":477,"author":{"gitId":"xinen26"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-02-27"},{"lineNumber":478,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":479,"author":{"gitId":"xinen26"},"content":"* 3b. The given range is invalid.","lastModifiedDate":"2024-02-27"},{"lineNumber":480,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":481,"author":{"gitId":"xinen26"},"content":"    * 3b1. HRConnect shows an error message.","lastModifiedDate":"2024-02-27"},{"lineNumber":482,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":483,"author":{"gitId":"xinen26"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-02-27"},{"lineNumber":484,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":485,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":486,"author":{"gitId":"xinen26"},"content":"**Use case: Filter Tag**","lastModifiedDate":"2024-02-27"},{"lineNumber":487,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":488,"author":{"gitId":"xinen26"},"content":"**MSS**","lastModifiedDate":"2024-02-27"},{"lineNumber":489,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":490,"author":{"gitId":"xinen26"},"content":"1.  User requests to list of contacts","lastModifiedDate":"2024-02-27"},{"lineNumber":491,"author":{"gitId":"xinen26"},"content":"2.  HRConnect shows a list of contacts","lastModifiedDate":"2024-02-27"},{"lineNumber":492,"author":{"gitId":"xinen26"},"content":"3.  User requests to filter through the contact list based on what stage the interviewee is in","lastModifiedDate":"2024-02-27"},{"lineNumber":493,"author":{"gitId":"xinen26"},"content":"4.  HRConnect returns entries only for interviewees in that particular stage.","lastModifiedDate":"2024-02-27"},{"lineNumber":494,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":495,"author":{"gitId":"xinen26"},"content":"    Use case ends.","lastModifiedDate":"2024-02-27"},{"lineNumber":496,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":497,"author":{"gitId":"xinen26"},"content":"**Extensions**","lastModifiedDate":"2024-02-27"},{"lineNumber":498,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":499,"author":{"gitId":"xinen26"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-02-27"},{"lineNumber":500,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":501,"author":{"gitId":"xinen26"},"content":"  Use case ends","lastModifiedDate":"2024-02-27"},{"lineNumber":502,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":503,"author":{"gitId":"xinen26"},"content":"* 3a. The given format of the command is invalid.","lastModifiedDate":"2024-02-27"},{"lineNumber":504,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":505,"author":{"gitId":"xinen26"},"content":"    * 3a1. HRConnect shows an error message.","lastModifiedDate":"2024-02-27"},{"lineNumber":506,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":507,"author":{"gitId":"xinen26"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-02-27"},{"lineNumber":508,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":509,"author":{"gitId":"xinen26"},"content":"* 3b. The tag does not exist.","lastModifiedDate":"2024-02-27"},{"lineNumber":510,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":511,"author":{"gitId":"xinen26"},"content":"    * 3b1. HRConnect shows an error message.","lastModifiedDate":"2024-02-27"},{"lineNumber":512,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":513,"author":{"gitId":"xinen26"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-02-27"},{"lineNumber":514,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":515,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":516,"author":{"gitId":"xinen26"},"content":"**Use case: Find keyword**","lastModifiedDate":"2024-02-27"},{"lineNumber":517,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":518,"author":{"gitId":"xinen26"},"content":"**MSS**","lastModifiedDate":"2024-02-27"},{"lineNumber":519,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":520,"author":{"gitId":"xinen26"},"content":"1.  User requests to list of contacts","lastModifiedDate":"2024-02-27"},{"lineNumber":521,"author":{"gitId":"xinen26"},"content":"2.  HRConnect shows a list of contacts","lastModifiedDate":"2024-02-27"},{"lineNumber":522,"author":{"gitId":"xinen26"},"content":"3.  User requests to find entries that match the keyword in the list","lastModifiedDate":"2024-02-27"},{"lineNumber":523,"author":{"gitId":"xinen26"},"content":"4.  HRConnect returns entries that match the keyword","lastModifiedDate":"2024-02-27"},{"lineNumber":524,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":525,"author":{"gitId":"xinen26"},"content":"    Use case ends.","lastModifiedDate":"2024-02-27"},{"lineNumber":526,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":527,"author":{"gitId":"xinen26"},"content":"**Extensions**","lastModifiedDate":"2024-02-27"},{"lineNumber":528,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":529,"author":{"gitId":"xinen26"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-02-27"},{"lineNumber":530,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":531,"author":{"gitId":"xinen26"},"content":"  Use case ends","lastModifiedDate":"2024-02-27"},{"lineNumber":532,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":533,"author":{"gitId":"xinen26"},"content":"**Use case: List**","lastModifiedDate":"2024-02-27"},{"lineNumber":534,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":535,"author":{"gitId":"xinen26"},"content":"**MSS**","lastModifiedDate":"2024-02-27"},{"lineNumber":536,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":537,"author":{"gitId":"xinen26"},"content":"1.  User requests to list persons","lastModifiedDate":"2024-02-27"},{"lineNumber":538,"author":{"gitId":"xinen26"},"content":"2.  AddressBook shows a list of persons","lastModifiedDate":"2024-02-27"},{"lineNumber":539,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":540,"author":{"gitId":"xinen26"},"content":"    Use case ends.","lastModifiedDate":"2024-02-27"},{"lineNumber":541,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":542,"author":{"gitId":"xinen26"},"content":"**Extensions**","lastModifiedDate":"2024-02-27"},{"lineNumber":543,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":544,"author":{"gitId":"xinen26"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-02-27"},{"lineNumber":545,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":546,"author":{"gitId":"xinen26"},"content":"  Use case ends","lastModifiedDate":"2024-02-27"},{"lineNumber":547,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":548,"author":{"gitId":"xinen26"},"content":"**Use case: Add tag**","lastModifiedDate":"2024-02-27"},{"lineNumber":549,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":550,"author":{"gitId":"xinen26"},"content":"**MSS**","lastModifiedDate":"2024-02-27"},{"lineNumber":551,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":552,"author":{"gitId":"xinen26"},"content":"1.  User requests to list of contacts","lastModifiedDate":"2024-02-27"},{"lineNumber":553,"author":{"gitId":"xinen26"},"content":"2.  HRConnect shows a list of contacts","lastModifiedDate":"2024-02-27"},{"lineNumber":554,"author":{"gitId":"xinen26"},"content":"3.  User requests to add specific tags to specific contacts for easy filtering later.","lastModifiedDate":"2024-02-27"},{"lineNumber":555,"author":{"gitId":"xinen26"},"content":"4.  HRConnect adds the specified tag to the designated contact.","lastModifiedDate":"2024-02-27"},{"lineNumber":556,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":557,"author":{"gitId":"xinen26"},"content":"    Use case ends.","lastModifiedDate":"2024-02-27"},{"lineNumber":558,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":559,"author":{"gitId":"xinen26"},"content":"**Extensions**","lastModifiedDate":"2024-02-27"},{"lineNumber":560,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":561,"author":{"gitId":"xinen26"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-02-27"},{"lineNumber":562,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":563,"author":{"gitId":"xinen26"},"content":"* 3a. The application ID does not exist.","lastModifiedDate":"2024-02-27"},{"lineNumber":564,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":565,"author":{"gitId":"xinen26"},"content":"    * 3a1. HRConnect shows an error message.","lastModifiedDate":"2024-02-27"},{"lineNumber":566,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":567,"author":{"gitId":"xinen26"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-02-27"},{"lineNumber":568,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":569,"author":{"gitId":"xinen26"},"content":"* 3b. The tag does not exist.","lastModifiedDate":"2024-02-27"},{"lineNumber":570,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":571,"author":{"gitId":"xinen26"},"content":"    * 3b1. HRConnect shows an error message.","lastModifiedDate":"2024-02-27"},{"lineNumber":572,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":573,"author":{"gitId":"xinen26"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-02-27"},{"lineNumber":574,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":575,"author":{"gitId":"xinen26"},"content":"  Use case ends","lastModifiedDate":"2024-02-27"},{"lineNumber":576,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":577,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":578,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":580,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"YuvBindal"},"content":"4. Searches, additions, and updates to contacts should be processed within 2 seconds under normal operational conditions.","lastModifiedDate":"2024-03-04"},{"lineNumber":586,"author":{"gitId":"YuvBindal"},"content":"5. HRConnect should feature an intuitive user interface for easy management of contacts without prior training.","lastModifiedDate":"2024-03-04"},{"lineNumber":587,"author":{"gitId":"YuvBindal"},"content":"6. The system should provide clear error messages and guidance for correcting invalid inputs.","lastModifiedDate":"2024-03-04"},{"lineNumber":588,"author":{"gitId":"YuvBindal"},"content":"7. User data, including contacts, notes, and tags, must be securely handled both in transit and at rest.","lastModifiedDate":"2024-03-04"},{"lineNumber":589,"author":{"gitId":"YuvBindal"},"content":"8. The system should be designed to scale horizontally to accommodate growing numbers of users and contacts.","lastModifiedDate":"2024-03-04"},{"lineNumber":590,"author":{"gitId":"YuvBindal"},"content":"9. It should maintain performance and usability as data volume and number of concurrent users increase.","lastModifiedDate":"2024-03-04"},{"lineNumber":591,"author":{"gitId":"YuvBindal"},"content":"10. HRConnect should be available 24/7 with a target uptime of 99.9%, excluding scheduled maintenance.","lastModifiedDate":"2024-03-04"},{"lineNumber":592,"author":{"gitId":"YuvBindal"},"content":"11. It should include mechanisms for data backup and recovery to prevent data loss.","lastModifiedDate":"2024-03-04"},{"lineNumber":593,"author":{"gitId":"YuvBindal"},"content":"12. The system should be compatible with major operating systems (Windows, macOS, Linux) and browsers (Chrome, Firefox, Safari).","lastModifiedDate":"2024-03-04"},{"lineNumber":594,"author":{"gitId":"YuvBindal"},"content":"13. The application should be built using modular, well-documented code to facilitate maintenance and future updates.","lastModifiedDate":"2024-03-04"},{"lineNumber":595,"author":{"gitId":"YuvBindal"},"content":"14. It should allow for the easy addition of new features without significant restructuring of the existing codebase.","lastModifiedDate":"2024-03-04"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":601,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"ChrisHo1341"},"content":"* **Time-to-fill**: The time taken to find and hire a new candidate","lastModifiedDate":"2024-03-07"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"YuvBindal":11,"ys112":47,"xinen26":237,"-":359,"ChrisHo1341":1}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"**HRConnect is a Command Line Interface (CLI) optimized desktop application designed for storing contacts of potential hires, hiring agencies, and legal consultants.**","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"By using commands, HR officers can efficiently organize contacts for their recruiting process.","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"1. Download the latest `hrconnect.jar` from [here](https://github.com/AY2324S2-CS2103-F15-3/tp/releases).","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your HRConnect.","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar hrconnect.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"xinen26"},"content":"   * `add_applicant /name John Doe /phone 98765432 /email johnd@example.com /address 311, Clementi Ave 2, #02-25 /role SWE /tag friends` : Adds a contact named `John Doe` to the HRConnect.","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"lihaoquan"},"content":"* When users input a command along with its arguments, it will be trimmed (remove leading whitespace, trailing whitespace, and whitespace in between words when there are more than one space) and converted to lowercase for parsing.","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"lihaoquan"},"content":"* When parsing arguments: “John Doe “, “John   Doe”, and “   John   Doe” will all be converted to “john doe”.","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"lihaoquan"},"content":"* When parsing commands: “/FILTER”, “/FILTER   stage_one ”, “    /FILTER STAGE_ONE   ” will all be converted to “/filter stage_one”.","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"lihaoquan"},"content":"* Words in angle brackets `\u003c\u003e` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"lihaoquan"},"content":"  e.g. in `/filter \u003cTag\u003e`, `\u003cTag\u003e` is a parameter which can be used as `/filter initial_application`.","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"xinen26"},"content":"  e.g `/name NAME [/tag TAG]` can be used as `/name John Doe /tag friend` or as `/name John Doe`.","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"xinen26"},"content":"* Parameters can be in any order for `add_applicant` and `edit_applicant` commands.\u003cbr\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"xinen26"},"content":"  e.g. if the command specifies `/name NAME /phone PHONE_NUMBER`, `/phone PHONE_NUMBER /name NAME` is also acceptable.","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"xinen26"},"content":"* Parameters must be in strict order for `filter`, `note`, `export`, and `tag` command.","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"ys112"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2024-02-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"xinen26"},"content":"### Add an applicant: `add_applicant`","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"xinen26"},"content":"Adds an applicant to HRConnect.","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"xinen26"},"content":"Format: `add_applicant /name Name /phone Phone_Number /email Email /address Address /role Role [/tag Tag]…​`","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"xinen26"},"content":"An applicant can have any number of tags (including 0)","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"xinen26"},"content":"* `add_applicant /name John Doe /phone 98765432 /email johnDoe@gmail.com /address John street, block 123, #01-01 /role CEO /tag friend`","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"xinen26"},"content":"### Listing all applicants : `list`","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"xinen26"},"content":"Shows a list of all applicants in the HRConnect.","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"xinen26"},"content":"### Editing an applicant : `edit_applicant`","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"xinen26"},"content":"Edits an existing applicant in the HRConnect.","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"xinen26"},"content":"Format: `edit_applicant Index [/name Name] [/phone Phone] [/email Email] [/address Address] [/stage Stage] [/role Role] [/tag Tag]…​`","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"xinen26"},"content":"* Edits the applicant at the specified `Index`. The index refers to the index number shown in the displayed applicant list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"xinen26"},"content":"* When editing tags, the existing tags of the applicant will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"xinen26"},"content":"* You can remove all the applicant’s tags by typing `/tag` without","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"xinen26"},"content":"*  `edit_applicant 1 /phone 91234567 /email johndoe@example.com` Edits the phone number and email address of the 1st applicant to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"xinen26"},"content":"*  `edit_applicant 2 /name Betsy Crower /tag` Edits the name of the 2nd applicant to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"xinen26"},"content":"### Locating applicants by name: `find`","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"xinen26"},"content":"Finds applicants whose names contain any of the given keywords.","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"ys112"},"content":"Format: `find Keyword [More_Keywords]`","lastModifiedDate":"2024-02-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"xinen26"},"content":"* Applicants matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"xinen26"},"content":"### Deleting an applicant : `delete`","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"xinen26"},"content":"Deletes the specified applicant from the HRConnect.","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"ys112"},"content":"Format: `delete Index`","lastModifiedDate":"2024-02-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"xinen26"},"content":"* Deletes the applicant at the specified `Index`.","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"xinen26"},"content":"* The index refers to the index number shown in the displayed applicant list.","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"xinen26"},"content":"* `list` followed by `delete 2` deletes the 2nd applicant in the HRConnect.","lastModifiedDate":"2024-03-19"},{"lineNumber":144,"author":{"gitId":"xinen26"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st applicant in the results of the `find` command.","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":146,"author":{"gitId":"xinen26"},"content":"### Adding tags to applicants: `/tag`","lastModifiedDate":"2024-03-19"},{"lineNumber":147,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":148,"author":{"gitId":"xinen26"},"content":"Attaches specific tags to applicants for easy filtering later","lastModifiedDate":"2024-03-19"},{"lineNumber":149,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":150,"author":{"gitId":"ChrisHo1341"},"content":"Format: `/tag \u003cApplicationID\u003e \u003cTag\u003e`","lastModifiedDate":"2024-03-07"},{"lineNumber":151,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":152,"author":{"gitId":"ChrisHo1341"},"content":"* Maps `\u003cTag\u003e` to the `\u003cApplicationID\u003e`","lastModifiedDate":"2024-03-07"},{"lineNumber":153,"author":{"gitId":"ChrisHo1341"},"content":"* `ApplicationID` must be a valid ID currently saved in HRConnect","lastModifiedDate":"2024-03-07"},{"lineNumber":154,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":155,"author":{"gitId":"ChrisHo1341"},"content":"Examples:","lastModifiedDate":"2024-03-07"},{"lineNumber":156,"author":{"gitId":"ChrisHo1341"},"content":"* `/tag 123456 \u003cinitial_application\u003e` maps the tag `\u003cinitial_application\u003e` to applicant 123456","lastModifiedDate":"2024-03-07"},{"lineNumber":157,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":158,"author":{"gitId":"xinen26"},"content":"### Filtering applicants by tag : `/filter`","lastModifiedDate":"2024-03-19"},{"lineNumber":159,"author":{"gitId":"xinen26"},"content":"Filter through contact list based on what role or stage the applicant is in.","lastModifiedDate":"2024-03-19"},{"lineNumber":160,"author":{"gitId":"ys112"},"content":"Format: `/filter \u003cTag\u003e`","lastModifiedDate":"2024-02-26"},{"lineNumber":161,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":162,"author":{"gitId":"ys112"},"content":"* Filters the contact list based on the `\u003cTag\u003e` provided.","lastModifiedDate":"2024-02-26"},{"lineNumber":163,"author":{"gitId":"ys112"},"content":"* Possible values for `\u003cTag\u003e` are `initial_application`, `technical_assessment`, `interview`, `decision_and_offer`.","lastModifiedDate":"2024-02-26"},{"lineNumber":164,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":165,"author":{"gitId":"ys112"},"content":"Examples:","lastModifiedDate":"2024-02-26"},{"lineNumber":166,"author":{"gitId":"xinen26"},"content":"* `filter /stage final_round` filters the contact list to show only applicants in the final round of application stage.","lastModifiedDate":"2024-03-19"},{"lineNumber":167,"author":{"gitId":"xinen26"},"content":"* `filter /role SWE` filters the contact list to show only applicants who applied for SWE role.","lastModifiedDate":"2024-03-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"xinen26"},"content":"### Adding notes to applicants by tag : `/note`","lastModifiedDate":"2024-03-19"},{"lineNumber":170,"author":{"gitId":"xinen26"},"content":"Facilitates the addition of notes or comments to individual applicant entries.","lastModifiedDate":"2024-03-19"},{"lineNumber":171,"author":{"gitId":"xinen26"},"content":"Format: `note \u003cApplicationId\u003e /note \u003cNote\u003e`","lastModifiedDate":"2024-03-19"},{"lineNumber":172,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":173,"author":{"gitId":"xinen26"},"content":"* Incorporate supplementary notes to enrich the applicant\u0027s profile.","lastModifiedDate":"2024-03-19"},{"lineNumber":174,"author":{"gitId":"xinen26"},"content":"* Possible values for `\u003cApplicationId\u003e` are integers.","lastModifiedDate":"2024-02-27"},{"lineNumber":175,"author":{"gitId":"xinen26"},"content":"* Possible values for `\u003cNote\u003e` are any non-empty string that provides relevant commentary.","lastModifiedDate":"2024-02-27"},{"lineNumber":176,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":177,"author":{"gitId":"xinen26"},"content":"Examples:","lastModifiedDate":"2024-02-27"},{"lineNumber":178,"author":{"gitId":"xinen26"},"content":"* `note 1 /note S/Pass Holder` will add the note “S/Pass Holder” to the applicant identified by ID 1.","lastModifiedDate":"2024-03-19"},{"lineNumber":179,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":180,"author":{"gitId":"xinen26"},"content":"### Exporting applicants contacts : `/export`","lastModifiedDate":"2024-03-20"},{"lineNumber":181,"author":{"gitId":"xinen26"},"content":"Use filter or find to isolate the applicants that match the desired stage or role or name. Export will then extract those applicants\u0027 contacts into an external JSON file.","lastModifiedDate":"2024-03-20"},{"lineNumber":182,"author":{"gitId":"xinen26"},"content":"Format: /export","lastModifiedDate":"2024-03-20"},{"lineNumber":183,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":184,"author":{"gitId":"YuvBindal"},"content":"* Achieve an additional layer of organisation to properly arrange contacts","lastModifiedDate":"2024-03-04"},{"lineNumber":185,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":186,"author":{"gitId":"YuvBindal"},"content":"Examples:","lastModifiedDate":"2024-03-04"},{"lineNumber":187,"author":{"gitId":"xinen26"},"content":"*  `/export` will append contacts from that page onto another external JSON file.","lastModifiedDate":"2024-03-20"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"ys112"},"content":"Clears all entries from the HRConnect.","lastModifiedDate":"2024-03-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"ys112"},"content":"HRConnect data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-03-06"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":207,"author":{"gitId":"ys112"},"content":"HRConnect data are saved automatically as a JSON file `[JAR file location]/data/hrconnect.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2024-03-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":210,"author":{"gitId":"ys112"},"content":"If your changes to the data file makes its format invalid, HRConnect will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":211,"author":{"gitId":"ys112"},"content":"Furthermore, certain edits can cause the HRConnect to behave in unexpected ways (e.g., if a value entered is outside of the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-03-06"},{"lineNumber":212,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"xinen26"},"content":"**Add_applicant** | `add_applicant /name Name /phone Phone_Number /email Email /address Address /role Role [/tag Tag]…​` \u003cbr\u003e e.g., `add_applicant /name James Chow /phone 96622612 /email james@example.com /address 321, Clementi Ave 2, #02-25 /role Junior Engineer`","lastModifiedDate":"2024-03-19"},{"lineNumber":221,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"xinen26"},"content":"**Edit_applicant** | `edit_applicant Index [/name Name] [/phone Phone] [/email Email] [/address Address] [/stage Stage] [/role Role] [/tag Tag]…​`\u003cbr\u003e e.g., `edit_applicant 2 /stage waitlisted`","lastModifiedDate":"2024-03-19"},{"lineNumber":224,"author":{"gitId":"ys112"},"content":"**Find** | `find Keyword [More_Keywords]`\u003cbr\u003e e.g., `find alice bob charlie`","lastModifiedDate":"2024-02-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"ys112"},"content":"**Exit** | `exit`","lastModifiedDate":"2024-02-26"},{"lineNumber":228,"author":{"gitId":"ys112"},"content":"**Filter** | `/filter \u003cTag\u003e`  \u003cbr\u003e e.g., `/filter initial_application`","lastModifiedDate":"2024-02-26"},{"lineNumber":229,"author":{"gitId":"xinen26"},"content":"**Note** | `note \u003cApplicationId\u003e /note \u003cNote\u003e`  \u003cbr\u003e e.g., `note 1 /note S/Pass Holder`","lastModifiedDate":"2024-03-19"},{"lineNumber":230,"author":{"gitId":"xinen26"},"content":"**Export** | `/export` \u003cbr\u003e e.g., `/export`","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"lihaoquan":8,"YuvBindal":4,"ys112":23,"xinen26":54,"-":131,"ChrisHo1341":10}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"lihaoquan"},"content":"Person *--\u003e Note","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"lihaoquan"},"content":"Person \u003c--- Applicant","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"lihaoquan":2,"-":21}},{"path":"docs/diagrams/EditSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xinen26"},"content":"@startuml","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"xinen26"},"content":"!include style.puml","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"xinen26"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"xinen26"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"xinen26"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"xinen26"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"xinen26"},"content":"participant \":EditApplicantCommandParser\" as EditApplicantCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"xinen26"},"content":"participant \"e:EditApplicantCommand\" as EditApplicantCommand LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"xinen26"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"xinen26"},"content":"end box","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"xinen26"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"xinen26"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"xinen26"},"content":"end box","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"xinen26"},"content":"[-\u003e LogicManager : execute(\"edit_applicant 2 /stage waitlisted\")","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"xinen26"},"content":"activate LogicManager","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"xinen26"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"edit_applicant 2 /stage waitlisted\")","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"xinen26"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"xinen26"},"content":"create EditApplicantCommandParser","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"xinen26"},"content":"AddressBookParser -\u003e EditApplicantCommandParser","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"xinen26"},"content":"activate EditApplicantCommandParser","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"xinen26"},"content":"EditApplicantCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"xinen26"},"content":"deactivate EditApplicantCommandParser","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"xinen26"},"content":"AddressBookParser -\u003e EditApplicantCommandParser : parse(\"2 /stage waitlisted\"\")","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"xinen26"},"content":"activate EditApplicantCommandParser","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"xinen26"},"content":"create EditApplicantCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"xinen26"},"content":"EditApplicantCommandParser -\u003e EditApplicantCommand :","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"xinen26"},"content":"activate EditApplicantCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"xinen26"},"content":"EditApplicantCommand --\u003e EditApplicantCommandParser","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"xinen26"},"content":"deactivate EditApplicantCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"xinen26"},"content":"EditApplicantCommandParser --\u003e AddressBookParser : e","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"xinen26"},"content":"deactivate EditApplicantCommandParser","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"xinen26"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"xinen26"},"content":"EditApplicantCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"xinen26"},"content":"destroy EditApplicantCommandParser","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"xinen26"},"content":"AddressBookParser --\u003e LogicManager : e","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"xinen26"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"xinen26"},"content":"LogicManager -\u003e EditApplicantCommand : execute(m)","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"xinen26"},"content":"activate EditApplicantCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"xinen26"},"content":"EditApplicantCommand -\u003e Model : setPerson(personToEdit, editedApplicant)","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"xinen26"},"content":"activate Model","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"xinen26"},"content":"Model --\u003e EditApplicantCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"xinen26"},"content":"deactivate Model","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"xinen26"},"content":"create CommandResult","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"xinen26"},"content":"EditApplicantCommand -\u003e CommandResult","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"xinen26"},"content":"activate CommandResult","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"xinen26"},"content":"CommandResult --\u003e EditApplicantCommand :","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"xinen26"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"xinen26"},"content":"EditApplicantCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"xinen26"},"content":"deactivate EditApplicantCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"xinen26"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"xinen26"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"xinen26"},"content":"@enduml","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"xinen26":71}},{"path":"docs/diagrams/FilterSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"YuvBindal"},"content":"@startuml","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"YuvBindal"},"content":"!include style.puml","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"YuvBindal"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"YuvBindal"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"YuvBindal"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"YuvBindal"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"YuvBindal"},"content":"participant \":FilterCommandParser\" as FilterCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"YuvBindal"},"content":"participant \"e:FilterCommand\" as FilterCommand LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"YuvBindal"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"YuvBindal"},"content":"end box","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"YuvBindal"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"YuvBindal"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"YuvBindal"},"content":"end box","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"YuvBindal"},"content":"[-\u003e LogicManager : execute(\"filter /role SWE /stage initial_application\")","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"YuvBindal"},"content":"activate LogicManager","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"YuvBindal"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"filter /role SWE /stage initial_application\")","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"YuvBindal"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"YuvBindal"},"content":"create FilterCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"YuvBindal"},"content":"AddressBookParser -\u003e FilterCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"YuvBindal"},"content":"activate FilterCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"YuvBindal"},"content":"FilterCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"YuvBindal"},"content":"deactivate FilterCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"YuvBindal"},"content":"AddressBookParser -\u003e FilterCommandParser : parse(\"/role SWE /stage initial_application\")","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"YuvBindal"},"content":"activate FilterCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"YuvBindal"},"content":"create FilterCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"YuvBindal"},"content":"FilterCommandParser -\u003e FilterCommand :","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"YuvBindal"},"content":"activate FilterCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"YuvBindal"},"content":"FilterCommand --\u003e FilterCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"YuvBindal"},"content":"deactivate FilterCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"YuvBindal"},"content":"FilterCommandParser --\u003e AddressBookParser : e","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"YuvBindal"},"content":"deactivate FilterCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"YuvBindal"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"YuvBindal"},"content":"FilterCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"YuvBindal"},"content":"destroy FilterCommandParser","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"YuvBindal"},"content":"AddressBookParser --\u003e LogicManager : e","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"YuvBindal"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"YuvBindal"},"content":"LogicManager -\u003e FilterCommand : execute(m)","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"YuvBindal"},"content":"activate FilterCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"YuvBindal"},"content":"FilterCommand -\u003e Model : updateFilteredPersonList(matchesCriteria)","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"YuvBindal"},"content":"activate Model","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"YuvBindal"},"content":"Model --\u003e FilterCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"YuvBindal"},"content":"deactivate Model","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"YuvBindal"},"content":"create CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"YuvBindal"},"content":"FilterCommand -\u003e CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"YuvBindal"},"content":"activate CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"YuvBindal"},"content":"CommandResult --\u003e FilterCommand :","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"YuvBindal"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"YuvBindal"},"content":"FilterCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"YuvBindal"},"content":"deactivate FilterCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"YuvBindal"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"YuvBindal"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"YuvBindal"},"content":"@enduml","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"YuvBindal":71}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"Class Applicant","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"Class Role","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"Class Stage","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"Class Note","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"Person *--\u003e Note","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"Applicant .left.|\u003e Person","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"Applicant *--\u003e Role","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"Applicant *--\u003e Stage","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"ys112":10,"-":54}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"Class JsonAdaptedApplicant","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"JsonAdaptedApplicant .up.|\u003e JsonAdaptedPerson","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"JsonSerializableAddressBook ..\u003e JsonAdaptedApplicant","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"ys112":3,"-":43}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"lihaoquan"},"content":"Class ApplicantCard","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"lihaoquan"},"content":"PersonListPanel -down-\u003e \"*\" ApplicantCard","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"lihaoquan"},"content":"ApplicantCard --|\u003e UiPart","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"lihaoquan"},"content":"ApplicantCard ..\u003e Model","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"lihaoquan":4,"-":60}},{"path":"docs/diagrams/add-note/NoteClass.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command {","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  +execute(Model): CommandResult","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"lihaoquan"},"content":"Class NoteCommand {","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  +COMMAND_WORD: String","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  +MESSAGE_USAGE: String","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"lihaoquan"},"content":"  +MESSAGE_ADD_NOTE_SUCCESS: String","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"lihaoquan"},"content":"  +MESSAGE_DELETE_NOTE_SUCCESS: String","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"lihaoquan"},"content":"  -index: Index","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"lihaoquan"},"content":"  -note: Note","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"lihaoquan"},"content":"  -withDate: boolean","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  +execute(Model): CommandResult","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"lihaoquan"},"content":"  -generateDate(): String","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class CommandException","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"lihaoquan"},"content":"NoteCommand -up-|\u003e Command","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Command ..\u003e CommandException: throws \u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"lihaoquan"},"content":"NoteCommand .right.\u003e CommandException: throws \u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"lihaoquan":9,"-":15}},{"path":"docs/diagrams/add-note/ParserClass.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"lihaoquan"},"content":"Class NoteCommandParser {","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"lihaoquan"},"content":"  +parse(): NoteCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class ParserException","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"lihaoquan"},"content":"NoteCommandParser .up.|\u003e Parser","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Parser .right.\u003e ParserException: throws \u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"lihaoquan"},"content":"NoteCommandParser .right.\u003e ParserException: throws \u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"lihaoquan":4,"-":10}},{"path":"docs/team/lihaoquan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lihaoquan"},"content":"---","lastModifiedDate":"2024-02-26"},{"lineNumber":2,"author":{"gitId":"lihaoquan"},"content":"layout: page","lastModifiedDate":"2024-02-26"},{"lineNumber":3,"author":{"gitId":"lihaoquan"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2024-02-26"},{"lineNumber":4,"author":{"gitId":"lihaoquan"},"content":"---","lastModifiedDate":"2024-02-26"},{"lineNumber":5,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":6,"author":{"gitId":"lihaoquan"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2024-02-26"},{"lineNumber":7,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":8,"author":{"gitId":"lihaoquan"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-02-26"},{"lineNumber":9,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":10,"author":{"gitId":"lihaoquan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-02-26"},{"lineNumber":11,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":12,"author":{"gitId":"lihaoquan"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2024-02-26"},{"lineNumber":13,"author":{"gitId":"lihaoquan"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2024-02-26"},{"lineNumber":14,"author":{"gitId":"lihaoquan"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"lihaoquan"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2024-02-26"},{"lineNumber":16,"author":{"gitId":"lihaoquan"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":18,"author":{"gitId":"lihaoquan"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":20,"author":{"gitId":"lihaoquan"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"lihaoquan"},"content":"* **Project management**:","lastModifiedDate":"2024-02-26"},{"lineNumber":23,"author":{"gitId":"lihaoquan"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":25,"author":{"gitId":"lihaoquan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"lihaoquan"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2024-02-26"},{"lineNumber":27,"author":{"gitId":"lihaoquan"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":29,"author":{"gitId":"lihaoquan"},"content":"* **Documentation**:","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"lihaoquan"},"content":"    * User Guide:","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"lihaoquan"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2024-02-26"},{"lineNumber":32,"author":{"gitId":"lihaoquan"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"lihaoquan"},"content":"    * Developer Guide:","lastModifiedDate":"2024-02-26"},{"lineNumber":34,"author":{"gitId":"lihaoquan"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":36,"author":{"gitId":"lihaoquan"},"content":"* **Community**:","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"lihaoquan"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-02-26"},{"lineNumber":38,"author":{"gitId":"lihaoquan"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"lihaoquan"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"lihaoquan"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-02-26"},{"lineNumber":41,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"lihaoquan"},"content":"* **Tools**:","lastModifiedDate":"2024-02-26"},{"lineNumber":43,"author":{"gitId":"lihaoquan"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"lihaoquan"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2024-02-26"},{"lineNumber":45,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"lihaoquan"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"lihaoquan":46}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"lihaoquan"},"content":"Let\u0027s walk you through the implementation of a new command — `note`.","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"lihaoquan"},"content":"`note INDEX r/REMARK` (e.g., `note 2 r/Likes baseball`)","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"lihaoquan"},"content":"## Create a new `note` command","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"lihaoquan"},"content":" * Changes the note of an existing person in the address book.","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"lihaoquan"},"content":"    public static final String COMMAND_WORD \u003d \"note\";","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"lihaoquan"},"content":"        return new CommandResult(\"Hello from note\");","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"lihaoquan"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `note` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"lihaoquan"},"content":"![Output displayed](../images/add-note/RemarkHello.png)","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"lihaoquan"},"content":"![The relationship between RemarkCommand and Command](../images/add-note/RemarkCommandClass.png)","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"lihaoquan"},"content":"            + \": Edits the note of the person identified \"","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"lihaoquan"},"content":"            + \"Existing note will be overwritten by the input.\\n\"","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"lihaoquan"},"content":"    private final String note;","lastModifiedDate":"2024-03-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"lihaoquan"},"content":"     * @param index of the person in the filtered person list to edit the note","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"lihaoquan"},"content":"     * @param note of the person to be updated to","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"lihaoquan"},"content":"    public RemarkCommand(Index index, String note) {","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"lihaoquan"},"content":"        requireAllNonNull(index, note);","lastModifiedDate":"2024-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"lihaoquan"},"content":"        this.note \u003d note;","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"lihaoquan"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), note));","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"lihaoquan"},"content":"                \u0026\u0026 note.equals(e.note);","lastModifiedDate":"2024-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"lihaoquan"},"content":"Now let’s move on to writing a parser that will extract the index and note from the input provided by the user.","lastModifiedDate":"2024-03-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"lihaoquan"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-note/RemarkCommandParserClass.png)","lastModifiedDate":"2024-03-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"lihaoquan"},"content":"This appears to be what we need to get a String of the note. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2024-03-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"lihaoquan"},"content":"    String note \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2024-03-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"lihaoquan"},"content":"    return new RemarkCommand(index, note);","lastModifiedDate":"2024-03-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"lihaoquan"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a note given to a person.","lastModifiedDate":"2024-03-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":233,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"lihaoquan"},"content":"## Add a placeholder element for note to the UI","lastModifiedDate":"2024-03-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"lihaoquan"},"content":"private Label note;","lastModifiedDate":"2024-03-11"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"lihaoquan"},"content":"\u003cLabel fx:id\u003d\"note\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$note\" /\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":261,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"lihaoquan"},"content":"![$note shows up in each entry](../images/add-note/$Remark.png)","lastModifiedDate":"2024-03-11"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"lihaoquan"},"content":"    note.setText(person.getRemark().value);","lastModifiedDate":"2024-03-11"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"lihaoquan"},"content":"![The note label is bound properly!](../images/add-note/RemarkBound.png)","lastModifiedDate":"2024-03-11"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"lihaoquan"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added note to Person: %1$s\";","lastModifiedDate":"2024-03-11"},{"lineNumber":334,"author":{"gitId":"lihaoquan"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed note from Person: %1$s\";","lastModifiedDate":"2024-03-11"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":347,"author":{"gitId":"lihaoquan"},"content":"                personToEdit.getAddress(), note, personToEdit.getTags());","lastModifiedDate":"2024-03-11"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":357,"author":{"gitId":"lihaoquan"},"content":"     * the note is added to or removed from","lastModifiedDate":"2024-03-11"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"lihaoquan"},"content":"        String message \u003d !note.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2024-03-11"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"lihaoquan"},"content":"![Congratulations!](../images/add-note/RemarkComplete.png)","lastModifiedDate":"2024-03-11"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":376,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"lihaoquan"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a note works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2024-03-11"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"lihaoquan"},"content":"![Using the context menu to jump to tests](../images/add-note/ContextMenu.png)","lastModifiedDate":"2024-03-11"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"lihaoquan"},"content":"![Creating a test for `execute`.](../images/add-note/CreateTest.png)","lastModifiedDate":"2024-03-11"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"lihaoquan":40,"-":359}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"lihaoquan"},"content":"**If you have done the [Add `note` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `note`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"lihaoquan":1,"-":111}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"YuvBindal"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing HR Connect ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"YuvBindal"},"content":"                        + \" populated with a sample HR Connect.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":89,"author":{"gitId":"YuvBindal"},"content":"                    + \" Will be starting with an empty HR Connect.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"YuvBindal"},"content":"        logger.info(\"Starting HR Connect \" + MainApp.VERSION);","lastModifiedDate":"2024-03-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"YuvBindal"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Hr Connect ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2024-03-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"YuvBindal":5,"-":181}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STAGE;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"import java.util.List;","lastModifiedDate":"2024-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"lihaoquan"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"    public static final String MESSAGE_INPUT_NOT_REQUIRED_FIELDS \u003d \"Input not required for the following field(s): \";","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"        // Compile the list of duplicate prefixes for error message in natural order","lastModifiedDate":"2024-03-09"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"        List\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2024-03-09"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).sorted().collect(Collectors.toList());","lastModifiedDate":"2024-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"     * Returns an error message indicating not required input prefixes.","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"    public static String getErrorMessageForInputNotRequiredPrefixes(Prefix... notRequiredPrefixes) {","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"        assert Arrays.asList(notRequiredPrefixes).contains(PREFIX_STAGE);","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"        // Compile the list of input not required prefixes for error message in natural order","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"        List\u003cString\u003e notRequiredFields \u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"            Stream.of(notRequiredPrefixes).filter(x -\u003e x.equals(PREFIX_STAGE)).map(Prefix::toString)","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"                .sorted().collect(Collectors.toList());","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"        return MESSAGE_INPUT_NOT_REQUIRED_FIELDS + String.join(\" \", notRequiredFields);","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"lihaoquan"},"content":"        return new ToStringBuilder(person)","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"lihaoquan"},"content":"                .add(\"name\", person.getName())","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"lihaoquan"},"content":"                .add(\"phone\", person.getPhone())","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"lihaoquan"},"content":"                .add(\"email\", person.getEmail())","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"lihaoquan"},"content":"                .add(\"address\", person.getAddress())","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"lihaoquan"},"content":"                .add(\"tags\", person.getTags())","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"lihaoquan"},"content":"                .add(\"note\", person.getNote())","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"lihaoquan"},"content":"                .add(\"noteDate\", person.getNoteDate())","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"lihaoquan"},"content":"                .toString();","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"ys112"},"content":"     * Formats the {@code applicant} for display to the user.","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"ys112"},"content":"    public static String format(Applicant applicant) {","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"ys112"},"content":"        builder.append(applicant.getName())","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"ys112"},"content":"            .append(\"; Phone: \")","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"ys112"},"content":"            .append(applicant.getPhone())","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"ys112"},"content":"            .append(\"; Email: \")","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"ys112"},"content":"            .append(applicant.getEmail())","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"ys112"},"content":"            .append(\"; Address: \")","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"ys112"},"content":"            .append(applicant.getAddress())","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"ys112"},"content":"            .append(\"; Role: \")","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"ys112"},"content":"            .append(applicant.getRole())","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"ys112"},"content":"            .append(\"; Stage: \")","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"ys112"},"content":"            .append(applicant.getStage())","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"ys112"},"content":"            .append(\"; Tags: \");","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"ys112"},"content":"        applicant.getTags().forEach(builder::append);","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lihaoquan":10,"ys112":40,"-":40}},{"path":"src/main/java/seedu/address/logic/commands/AddApplicantCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":" * Adds a applicant to the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"public class AddApplicantCommand extends Command {","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"    public static final String COMMAND_WORD \u003d \"add_applicant\";","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an applicant to the address book. \"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"            + PREFIX_NAME + \" NAME \"","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"            + PREFIX_PHONE + \" PHONE \"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"            + PREFIX_EMAIL + \" EMAIL \"","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"            + PREFIX_ADDRESS + \" ADDRESS \"","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"            + PREFIX_ROLE + \" ROLE \"","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"            + \"[\" + PREFIX_TAG + \" TAG]...\\n\"","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"            + PREFIX_NAME + \" John Doe \"","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"            + PREFIX_PHONE + \" 98765432 \"","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"            + PREFIX_EMAIL + \" johnd@example.com \"","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"            + PREFIX_ADDRESS + \" 311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"            + PREFIX_ROLE + \" SWE \"","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"            + PREFIX_TAG + \" friends \"","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"            + PREFIX_TAG + \" owesMoney\";","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New applicant added: %1$s\";","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"    public static final String MESSAGE_DUPLICATE_APPLICANT \u003d \"This applicant already exists in the address book\";","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"    private final Applicant toAddApplicant;","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"     * Creates an AddCommand to add the specified {@code Applicant}","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"    public AddApplicantCommand(Applicant applicant) {","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"        requireNonNull(applicant);","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"        toAddApplicant \u003d applicant;","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"        if (model.hasPerson(toAddApplicant)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"        model.addPerson(toAddApplicant);","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAddApplicant)));","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"ys112"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"ys112"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"ys112"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"ys112"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"ys112"},"content":"        if (!(other instanceof AddApplicantCommand)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"ys112"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"ys112"},"content":"        AddApplicantCommand otherAddCommand \u003d (AddApplicantCommand) other;","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"ys112"},"content":"        return toAddApplicant.equals(otherAddCommand.toAddApplicant);","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"ys112"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"ys112"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"ys112"},"content":"                .add(\"toAddApplicant\", toAddApplicant)","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"ys112"},"content":"                .toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"ys112":87}},{"path":"src/main/java/seedu/address/logic/commands/EditApplicantCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xinen26"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"xinen26"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"xinen26"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"xinen26"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"xinen26"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"xinen26"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"xinen26"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"xinen26"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STAGE;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"xinen26"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"xinen26"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"xinen26"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"xinen26"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"xinen26"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"xinen26"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"xinen26"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"xinen26"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"xinen26"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"xinen26"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"xinen26"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"xinen26"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"xinen26"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"xinen26"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"xinen26"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"xinen26"},"content":"import seedu.address.model.applicant.Role;","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"xinen26"},"content":"import seedu.address.model.applicant.Stage;","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"xinen26"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"xinen26"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"xinen26"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"xinen26"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"xinen26"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"xinen26"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"xinen26"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"xinen26"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"xinen26"},"content":" * Edits the details of an existing applicant in the address book.","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"xinen26"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"xinen26"},"content":"public class EditApplicantCommand extends Command {","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"xinen26"},"content":"    public static final String COMMAND_WORD \u003d \"edit_applicant\";","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"xinen26"},"content":"    public static final String DEFAULT_ROLE \u003d \"SWE\";","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"xinen26"},"content":"    public static final String DEFAULT_STAGE \u003d \"initial_application\";","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"xinen26"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"xinen26"},"content":"            + \": Edits the details of the \"","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"xinen26"},"content":"            + \"applicant identified \"","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"xinen26"},"content":"            + \"by the index number used in the displayed applicant list. \"","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"xinen26"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"xinen26"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"xinen26"},"content":"            + \"[\" + PREFIX_NAME + \" NAME] \"","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"xinen26"},"content":"            + \"[\" + PREFIX_PHONE + \" PHONE] \"","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"xinen26"},"content":"            + \"[\" + PREFIX_EMAIL + \" EMAIL] \"","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"xinen26"},"content":"            + \"[\" + PREFIX_ADDRESS + \" ADDRESS] \"","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"xinen26"},"content":"            + \"[\" + PREFIX_ROLE + \" ROLE] \"","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"xinen26"},"content":"            + \"[\" + PREFIX_STAGE + \" STAGE] \"","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"xinen26"},"content":"            + \"[\" + PREFIX_TAG + \" TAG]...\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"xinen26"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"xinen26"},"content":"            + PREFIX_PHONE + \" 91234567 \"","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"xinen26"},"content":"            + PREFIX_EMAIL + \" johndoe@example.com \"","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"xinen26"},"content":"            + PREFIX_ADDRESS + \" 311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"xinen26"},"content":"            + PREFIX_STAGE + \" final_round \"","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"xinen26"},"content":"            + PREFIX_ROLE + \" SWE \"","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"xinen26"},"content":"            + PREFIX_TAG + \" friends \"","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"xinen26"},"content":"            + PREFIX_TAG + \" owesMoney\";","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"xinen26"},"content":"    public static final String MESSAGE_EDIT_APPLICANT_SUCCESS \u003d \"Edited Applicant: %1$s\";","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"xinen26"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"xinen26"},"content":"    public static final String MESSAGE_DUPLICATE_APPLICANT \u003d \"This applicant already exists in \"","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"xinen26"},"content":"            + \"the address book.\";","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"xinen26"},"content":"    private final Index index;","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"xinen26"},"content":"    private final EditApplicantDescriptor editApplicantDescriptor;","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"xinen26"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"xinen26"},"content":"     * @param index of the applicant in the filtered applicant list to edit","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"xinen26"},"content":"     * @param editApplicantDescriptor details to edit the applicant with","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"xinen26"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"xinen26"},"content":"    public EditApplicantCommand(Index index, EditApplicantDescriptor editApplicantDescriptor) {","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"xinen26"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"xinen26"},"content":"        requireNonNull(editApplicantDescriptor);","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"xinen26"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"xinen26"},"content":"        this.editApplicantDescriptor \u003d new EditApplicantDescriptor(editApplicantDescriptor);","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"xinen26"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":87,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":88,"author":{"gitId":"xinen26"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"xinen26"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-15"},{"lineNumber":90,"author":{"gitId":"xinen26"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-15"},{"lineNumber":91,"author":{"gitId":"xinen26"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"xinen26"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"xinen26"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-15"},{"lineNumber":95,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":97,"author":{"gitId":"xinen26"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"xinen26"},"content":"        Applicant applicantToEdit;","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"xinen26"},"content":"        if (personToEdit instanceof Applicant) {","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"xinen26"},"content":"            applicantToEdit \u003d (Applicant) personToEdit;","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"xinen26"},"content":"        } else {","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"xinen26"},"content":"            applicantToEdit \u003d new Applicant((Person) personToEdit,","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"xinen26"},"content":"                    editApplicantDescriptor.getRole().orElse(new Role(DEFAULT_ROLE)),","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"xinen26"},"content":"                    editApplicantDescriptor.getStage().orElse(new Stage(DEFAULT_STAGE)));","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"xinen26"},"content":"        Applicant editedApplicant \u003d createEditedApplicant(applicantToEdit, editApplicantDescriptor);","lastModifiedDate":"2024-03-15"},{"lineNumber":107,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":108,"author":{"gitId":"xinen26"},"content":"        if (editedApplicant.equals(personToEdit) \u0026\u0026 model.hasPerson(editedApplicant)) {","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"xinen26"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2024-03-15"},{"lineNumber":110,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":111,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":112,"author":{"gitId":"xinen26"},"content":"        model.setPerson(personToEdit, editedApplicant);","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"xinen26"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-15"},{"lineNumber":114,"author":{"gitId":"xinen26"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_APPLICANT_SUCCESS,","lastModifiedDate":"2024-03-15"},{"lineNumber":115,"author":{"gitId":"xinen26"},"content":"                Messages.format(editedApplicant)));","lastModifiedDate":"2024-03-15"},{"lineNumber":116,"author":{"gitId":"xinen26"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":117,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":118,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"xinen26"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":120,"author":{"gitId":"xinen26"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2024-03-15"},{"lineNumber":121,"author":{"gitId":"xinen26"},"content":"     * edited with {@code editApplicantDescriptor}.","lastModifiedDate":"2024-03-15"},{"lineNumber":122,"author":{"gitId":"xinen26"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":123,"author":{"gitId":"xinen26"},"content":"    private Applicant createEditedApplicant(Applicant applicantToEdit,","lastModifiedDate":"2024-03-15"},{"lineNumber":124,"author":{"gitId":"xinen26"},"content":"                                                EditApplicantDescriptor editApplicantDescriptor) {","lastModifiedDate":"2024-03-15"},{"lineNumber":125,"author":{"gitId":"xinen26"},"content":"        assert applicantToEdit !\u003d null;","lastModifiedDate":"2024-03-15"},{"lineNumber":126,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":127,"author":{"gitId":"xinen26"},"content":"        Name updatedName \u003d editApplicantDescriptor.getName().orElse(applicantToEdit.getName());","lastModifiedDate":"2024-03-15"},{"lineNumber":128,"author":{"gitId":"xinen26"},"content":"        Phone updatedPhone \u003d editApplicantDescriptor.getPhone().orElse(applicantToEdit.getPhone());","lastModifiedDate":"2024-03-15"},{"lineNumber":129,"author":{"gitId":"xinen26"},"content":"        Email updatedEmail \u003d editApplicantDescriptor.getEmail().orElse(applicantToEdit.getEmail());","lastModifiedDate":"2024-03-15"},{"lineNumber":130,"author":{"gitId":"xinen26"},"content":"        Address updatedAddress \u003d editApplicantDescriptor.getAddress().orElse(applicantToEdit.getAddress());","lastModifiedDate":"2024-03-15"},{"lineNumber":131,"author":{"gitId":"xinen26"},"content":"        Role updatedRole \u003d editApplicantDescriptor.getRole().orElse(applicantToEdit.getRole());","lastModifiedDate":"2024-03-15"},{"lineNumber":132,"author":{"gitId":"xinen26"},"content":"        Stage updatedStage \u003d editApplicantDescriptor.getStage().orElse(applicantToEdit.getStage());","lastModifiedDate":"2024-03-15"},{"lineNumber":133,"author":{"gitId":"xinen26"},"content":"        Set\u003cTag\u003e updatedTags \u003d editApplicantDescriptor.getTags().orElse(applicantToEdit.getTags());","lastModifiedDate":"2024-03-15"},{"lineNumber":134,"author":{"gitId":"xinen26"},"content":"        Note updatedNote \u003d editApplicantDescriptor.getNote().orElse(applicantToEdit.getNote());","lastModifiedDate":"2024-03-15"},{"lineNumber":135,"author":{"gitId":"xinen26"},"content":"        return new Applicant(updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2024-03-15"},{"lineNumber":136,"author":{"gitId":"xinen26"},"content":"                updatedRole, updatedStage, updatedTags,","lastModifiedDate":"2024-03-15"},{"lineNumber":137,"author":{"gitId":"xinen26"},"content":"                updatedNote, editApplicantDescriptor.noteDate);","lastModifiedDate":"2024-03-15"},{"lineNumber":138,"author":{"gitId":"xinen26"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":139,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":140,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":141,"author":{"gitId":"xinen26"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":142,"author":{"gitId":"xinen26"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-15"},{"lineNumber":143,"author":{"gitId":"xinen26"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-15"},{"lineNumber":144,"author":{"gitId":"xinen26"},"content":"            return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":145,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":146,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":147,"author":{"gitId":"xinen26"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-15"},{"lineNumber":148,"author":{"gitId":"xinen26"},"content":"        if (!(other instanceof EditApplicantCommand)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":149,"author":{"gitId":"xinen26"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":150,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":151,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":152,"author":{"gitId":"xinen26"},"content":"        EditApplicantCommand otherEditApplicantCommand \u003d (EditApplicantCommand) other;","lastModifiedDate":"2024-03-15"},{"lineNumber":153,"author":{"gitId":"xinen26"},"content":"        return index.equals(otherEditApplicantCommand.index)","lastModifiedDate":"2024-03-15"},{"lineNumber":154,"author":{"gitId":"xinen26"},"content":"                \u0026\u0026 editApplicantDescriptor.equals(otherEditApplicantCommand.editApplicantDescriptor);","lastModifiedDate":"2024-03-15"},{"lineNumber":155,"author":{"gitId":"xinen26"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":156,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":157,"author":{"gitId":"xinen26"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":158,"author":{"gitId":"xinen26"},"content":"    public String toString() {","lastModifiedDate":"2024-03-15"},{"lineNumber":159,"author":{"gitId":"xinen26"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-15"},{"lineNumber":160,"author":{"gitId":"xinen26"},"content":"                .add(\"index\", index)","lastModifiedDate":"2024-03-15"},{"lineNumber":161,"author":{"gitId":"xinen26"},"content":"                .add(\"editApplicantDescriptor\", editApplicantDescriptor)","lastModifiedDate":"2024-03-15"},{"lineNumber":162,"author":{"gitId":"xinen26"},"content":"                .toString();","lastModifiedDate":"2024-03-15"},{"lineNumber":163,"author":{"gitId":"xinen26"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":164,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":165,"author":{"gitId":"xinen26"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":166,"author":{"gitId":"xinen26"},"content":"     * Stores the details to edit the applicant with. Each non-empty field value will replace the","lastModifiedDate":"2024-03-15"},{"lineNumber":167,"author":{"gitId":"xinen26"},"content":"     * corresponding field value of the applicant.","lastModifiedDate":"2024-03-15"},{"lineNumber":168,"author":{"gitId":"xinen26"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":169,"author":{"gitId":"xinen26"},"content":"    public static class EditApplicantDescriptor {","lastModifiedDate":"2024-03-15"},{"lineNumber":170,"author":{"gitId":"xinen26"},"content":"        private Name name;","lastModifiedDate":"2024-03-15"},{"lineNumber":171,"author":{"gitId":"xinen26"},"content":"        private Phone phone;","lastModifiedDate":"2024-03-15"},{"lineNumber":172,"author":{"gitId":"xinen26"},"content":"        private Email email;","lastModifiedDate":"2024-03-15"},{"lineNumber":173,"author":{"gitId":"xinen26"},"content":"        private Address address;","lastModifiedDate":"2024-03-15"},{"lineNumber":174,"author":{"gitId":"xinen26"},"content":"        private Role role;","lastModifiedDate":"2024-03-15"},{"lineNumber":175,"author":{"gitId":"xinen26"},"content":"        private Stage stage;","lastModifiedDate":"2024-03-15"},{"lineNumber":176,"author":{"gitId":"xinen26"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2024-03-15"},{"lineNumber":177,"author":{"gitId":"xinen26"},"content":"        private Note note;","lastModifiedDate":"2024-03-15"},{"lineNumber":178,"author":{"gitId":"xinen26"},"content":"        private String noteDate;","lastModifiedDate":"2024-03-15"},{"lineNumber":179,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":180,"author":{"gitId":"xinen26"},"content":"        public EditApplicantDescriptor() {}","lastModifiedDate":"2024-03-15"},{"lineNumber":181,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":182,"author":{"gitId":"xinen26"},"content":"        /**","lastModifiedDate":"2024-03-15"},{"lineNumber":183,"author":{"gitId":"xinen26"},"content":"         * Copy constructor.","lastModifiedDate":"2024-03-15"},{"lineNumber":184,"author":{"gitId":"xinen26"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-15"},{"lineNumber":185,"author":{"gitId":"xinen26"},"content":"         */","lastModifiedDate":"2024-03-15"},{"lineNumber":186,"author":{"gitId":"xinen26"},"content":"        public EditApplicantDescriptor(EditApplicantDescriptor toCopy) {","lastModifiedDate":"2024-03-15"},{"lineNumber":187,"author":{"gitId":"xinen26"},"content":"            setName(toCopy.name);","lastModifiedDate":"2024-03-15"},{"lineNumber":188,"author":{"gitId":"xinen26"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2024-03-15"},{"lineNumber":189,"author":{"gitId":"xinen26"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2024-03-15"},{"lineNumber":190,"author":{"gitId":"xinen26"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2024-03-15"},{"lineNumber":191,"author":{"gitId":"xinen26"},"content":"            setRole(toCopy.role);","lastModifiedDate":"2024-03-15"},{"lineNumber":192,"author":{"gitId":"xinen26"},"content":"            setStage(toCopy.stage);","lastModifiedDate":"2024-03-15"},{"lineNumber":193,"author":{"gitId":"xinen26"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2024-03-15"},{"lineNumber":194,"author":{"gitId":"xinen26"},"content":"            setNote(toCopy.note);","lastModifiedDate":"2024-03-15"},{"lineNumber":195,"author":{"gitId":"xinen26"},"content":"            setNoteDate(toCopy.noteDate);","lastModifiedDate":"2024-03-15"},{"lineNumber":196,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":197,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":198,"author":{"gitId":"xinen26"},"content":"        /**","lastModifiedDate":"2024-03-15"},{"lineNumber":199,"author":{"gitId":"xinen26"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2024-03-15"},{"lineNumber":200,"author":{"gitId":"xinen26"},"content":"         */","lastModifiedDate":"2024-03-15"},{"lineNumber":201,"author":{"gitId":"xinen26"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2024-03-15"},{"lineNumber":202,"author":{"gitId":"xinen26"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags, role, stage,","lastModifiedDate":"2024-03-16"},{"lineNumber":203,"author":{"gitId":"xinen26"},"content":"                    note);","lastModifiedDate":"2024-03-16"},{"lineNumber":204,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":205,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":206,"author":{"gitId":"xinen26"},"content":"        public void setName(Name name) {","lastModifiedDate":"2024-03-15"},{"lineNumber":207,"author":{"gitId":"xinen26"},"content":"            this.name \u003d name;","lastModifiedDate":"2024-03-15"},{"lineNumber":208,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":209,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":210,"author":{"gitId":"xinen26"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2024-03-15"},{"lineNumber":211,"author":{"gitId":"xinen26"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2024-03-15"},{"lineNumber":212,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":213,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":214,"author":{"gitId":"xinen26"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2024-03-15"},{"lineNumber":215,"author":{"gitId":"xinen26"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2024-03-15"},{"lineNumber":216,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":217,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":218,"author":{"gitId":"xinen26"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2024-03-15"},{"lineNumber":219,"author":{"gitId":"xinen26"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2024-03-15"},{"lineNumber":220,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":221,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":222,"author":{"gitId":"xinen26"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2024-03-15"},{"lineNumber":223,"author":{"gitId":"xinen26"},"content":"            this.email \u003d email;","lastModifiedDate":"2024-03-15"},{"lineNumber":224,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":225,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":226,"author":{"gitId":"xinen26"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2024-03-15"},{"lineNumber":227,"author":{"gitId":"xinen26"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2024-03-15"},{"lineNumber":228,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":229,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":230,"author":{"gitId":"xinen26"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2024-03-15"},{"lineNumber":231,"author":{"gitId":"xinen26"},"content":"            this.address \u003d address;","lastModifiedDate":"2024-03-15"},{"lineNumber":232,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":233,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":234,"author":{"gitId":"xinen26"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2024-03-15"},{"lineNumber":235,"author":{"gitId":"xinen26"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2024-03-15"},{"lineNumber":236,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":237,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":238,"author":{"gitId":"xinen26"},"content":"        public void setRole(Role role) {","lastModifiedDate":"2024-03-15"},{"lineNumber":239,"author":{"gitId":"xinen26"},"content":"            this.role \u003d role;","lastModifiedDate":"2024-03-15"},{"lineNumber":240,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":241,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":242,"author":{"gitId":"xinen26"},"content":"        public Optional\u003cRole\u003e getRole() {","lastModifiedDate":"2024-03-15"},{"lineNumber":243,"author":{"gitId":"xinen26"},"content":"            return Optional.ofNullable(role);","lastModifiedDate":"2024-03-15"},{"lineNumber":244,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":245,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":246,"author":{"gitId":"xinen26"},"content":"        public void setStage(Stage stage) {","lastModifiedDate":"2024-03-15"},{"lineNumber":247,"author":{"gitId":"xinen26"},"content":"            this.stage \u003d stage;","lastModifiedDate":"2024-03-15"},{"lineNumber":248,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":249,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":250,"author":{"gitId":"xinen26"},"content":"        public Optional\u003cStage\u003e getStage() {","lastModifiedDate":"2024-03-15"},{"lineNumber":251,"author":{"gitId":"xinen26"},"content":"            return Optional.ofNullable(stage);","lastModifiedDate":"2024-03-15"},{"lineNumber":252,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":253,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":254,"author":{"gitId":"xinen26"},"content":"        public Optional\u003cNote\u003e getNote() {","lastModifiedDate":"2024-03-15"},{"lineNumber":255,"author":{"gitId":"xinen26"},"content":"            return Optional.ofNullable(note);","lastModifiedDate":"2024-03-15"},{"lineNumber":256,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":257,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":258,"author":{"gitId":"xinen26"},"content":"        public void setNote(Note note) {","lastModifiedDate":"2024-03-15"},{"lineNumber":259,"author":{"gitId":"xinen26"},"content":"            this.note \u003d note;","lastModifiedDate":"2024-03-15"},{"lineNumber":260,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":261,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":262,"author":{"gitId":"xinen26"},"content":"        public void setNoteDate(String noteDate) {","lastModifiedDate":"2024-03-15"},{"lineNumber":263,"author":{"gitId":"xinen26"},"content":"            this.noteDate \u003d noteDate;","lastModifiedDate":"2024-03-15"},{"lineNumber":264,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":265,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":266,"author":{"gitId":"xinen26"},"content":"        /**","lastModifiedDate":"2024-03-15"},{"lineNumber":267,"author":{"gitId":"xinen26"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2024-03-15"},{"lineNumber":268,"author":{"gitId":"xinen26"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-15"},{"lineNumber":269,"author":{"gitId":"xinen26"},"content":"         */","lastModifiedDate":"2024-03-15"},{"lineNumber":270,"author":{"gitId":"xinen26"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-15"},{"lineNumber":271,"author":{"gitId":"xinen26"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2024-03-15"},{"lineNumber":272,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":273,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":274,"author":{"gitId":"xinen26"},"content":"        /**","lastModifiedDate":"2024-03-15"},{"lineNumber":275,"author":{"gitId":"xinen26"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-15"},{"lineNumber":276,"author":{"gitId":"xinen26"},"content":"         * if modification is attempted.","lastModifiedDate":"2024-03-15"},{"lineNumber":277,"author":{"gitId":"xinen26"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2024-03-15"},{"lineNumber":278,"author":{"gitId":"xinen26"},"content":"         */","lastModifiedDate":"2024-03-15"},{"lineNumber":279,"author":{"gitId":"xinen26"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2024-03-15"},{"lineNumber":280,"author":{"gitId":"xinen26"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2024-03-15"},{"lineNumber":281,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":282,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":283,"author":{"gitId":"xinen26"},"content":"        @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":284,"author":{"gitId":"xinen26"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2024-03-15"},{"lineNumber":285,"author":{"gitId":"xinen26"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-15"},{"lineNumber":286,"author":{"gitId":"xinen26"},"content":"                return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":287,"author":{"gitId":"xinen26"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":288,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":289,"author":{"gitId":"xinen26"},"content":"            // instanceof handles nulls","lastModifiedDate":"2024-03-15"},{"lineNumber":290,"author":{"gitId":"xinen26"},"content":"            if (!(other instanceof EditApplicantDescriptor)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":291,"author":{"gitId":"xinen26"},"content":"                return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":292,"author":{"gitId":"xinen26"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":293,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":294,"author":{"gitId":"xinen26"},"content":"            EditApplicantDescriptor otherEditApplicantDescriptor \u003d (EditApplicantDescriptor) other;","lastModifiedDate":"2024-03-15"},{"lineNumber":295,"author":{"gitId":"xinen26"},"content":"            return Objects.equals(name, otherEditApplicantDescriptor.name)","lastModifiedDate":"2024-03-15"},{"lineNumber":296,"author":{"gitId":"xinen26"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditApplicantDescriptor.phone)","lastModifiedDate":"2024-03-15"},{"lineNumber":297,"author":{"gitId":"xinen26"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditApplicantDescriptor.email)","lastModifiedDate":"2024-03-15"},{"lineNumber":298,"author":{"gitId":"xinen26"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditApplicantDescriptor.address)","lastModifiedDate":"2024-03-15"},{"lineNumber":299,"author":{"gitId":"xinen26"},"content":"                    \u0026\u0026 Objects.equals(role, otherEditApplicantDescriptor.role)","lastModifiedDate":"2024-03-15"},{"lineNumber":300,"author":{"gitId":"xinen26"},"content":"                    \u0026\u0026 Objects.equals(stage, otherEditApplicantDescriptor.stage)","lastModifiedDate":"2024-03-15"},{"lineNumber":301,"author":{"gitId":"xinen26"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditApplicantDescriptor.tags)","lastModifiedDate":"2024-03-15"},{"lineNumber":302,"author":{"gitId":"xinen26"},"content":"                    \u0026\u0026 Objects.equals(note, otherEditApplicantDescriptor.note);","lastModifiedDate":"2024-03-15"},{"lineNumber":303,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":304,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":305,"author":{"gitId":"xinen26"},"content":"        @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":306,"author":{"gitId":"xinen26"},"content":"        public String toString() {","lastModifiedDate":"2024-03-15"},{"lineNumber":307,"author":{"gitId":"xinen26"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2024-03-15"},{"lineNumber":308,"author":{"gitId":"xinen26"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2024-03-15"},{"lineNumber":309,"author":{"gitId":"xinen26"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2024-03-15"},{"lineNumber":310,"author":{"gitId":"xinen26"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2024-03-15"},{"lineNumber":311,"author":{"gitId":"xinen26"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2024-03-15"},{"lineNumber":312,"author":{"gitId":"xinen26"},"content":"                    .add(\"role\", role)","lastModifiedDate":"2024-03-15"},{"lineNumber":313,"author":{"gitId":"xinen26"},"content":"                    .add(\"stage\", stage)","lastModifiedDate":"2024-03-15"},{"lineNumber":314,"author":{"gitId":"xinen26"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2024-03-15"},{"lineNumber":315,"author":{"gitId":"xinen26"},"content":"                    .add(\"note\", note)","lastModifiedDate":"2024-03-15"},{"lineNumber":316,"author":{"gitId":"xinen26"},"content":"                    .toString();","lastModifiedDate":"2024-03-15"},{"lineNumber":317,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":318,"author":{"gitId":"xinen26"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":319,"author":{"gitId":"xinen26"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"xinen26":319}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"lihaoquan"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \" NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \" PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \" EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \" ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \" TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \" 91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \" johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"lihaoquan"},"content":"        Note updatedNote \u003d editPersonDescriptor.getNote().orElse(personToEdit.getNote());","lastModifiedDate":"2024-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"lihaoquan"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags,","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"lihaoquan"},"content":"                updatedNote, editPersonDescriptor.noteDate);","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"lihaoquan"},"content":"        private Note note;","lastModifiedDate":"2024-03-11"},{"lineNumber":145,"author":{"gitId":"lihaoquan"},"content":"        private String noteDate;","lastModifiedDate":"2024-03-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":159,"author":{"gitId":"lihaoquan"},"content":"            setNote(toCopy.note);","lastModifiedDate":"2024-03-11"},{"lineNumber":160,"author":{"gitId":"lihaoquan"},"content":"            setNoteDate(toCopy.noteDate);","lastModifiedDate":"2024-03-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"lihaoquan"},"content":"        public Optional\u003cNote\u003e getNote() {","lastModifiedDate":"2024-03-11"},{"lineNumber":203,"author":{"gitId":"lihaoquan"},"content":"            return Optional.ofNullable(note);","lastModifiedDate":"2024-03-11"},{"lineNumber":204,"author":{"gitId":"lihaoquan"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":205,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":206,"author":{"gitId":"lihaoquan"},"content":"        public void setNote(Note note) {","lastModifiedDate":"2024-03-11"},{"lineNumber":207,"author":{"gitId":"lihaoquan"},"content":"            this.note \u003d note;","lastModifiedDate":"2024-03-11"},{"lineNumber":208,"author":{"gitId":"lihaoquan"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":209,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":210,"author":{"gitId":"lihaoquan"},"content":"        public void setNoteDate(String noteDate) {","lastModifiedDate":"2024-03-11"},{"lineNumber":211,"author":{"gitId":"lihaoquan"},"content":"            this.noteDate \u003d noteDate;","lastModifiedDate":"2024-03-11"},{"lineNumber":212,"author":{"gitId":"lihaoquan"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":213,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":225,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":247,"author":{"gitId":"lihaoquan"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags)","lastModifiedDate":"2024-03-11"},{"lineNumber":248,"author":{"gitId":"lihaoquan"},"content":"                    \u0026\u0026 Objects.equals(note, otherEditPersonDescriptor.note);","lastModifiedDate":"2024-03-11"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":259,"author":{"gitId":"lihaoquan"},"content":"                    .add(\"note\", note)","lastModifiedDate":"2024-03-11"},{"lineNumber":260,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"lihaoquan":23,"-":240}},{"path":"src/main/java/seedu/address/logic/commands/ExportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ChrisHo1341"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"ChrisHo1341"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"ChrisHo1341"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"ChrisHo1341"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"ChrisHo1341"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"ChrisHo1341"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"ChrisHo1341"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"ChrisHo1341"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"ChrisHo1341"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"ChrisHo1341"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"ChrisHo1341"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"ChrisHo1341"},"content":"public class ExportCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"ChrisHo1341"},"content":"    ","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"ChrisHo1341"},"content":"    public static final String COMMAND_WORD \u003d \"export\";","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"ChrisHo1341"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"ChrisHo1341"},"content":"    + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"ChrisHo1341"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Contacts have been exported!\";","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"ChrisHo1341"},"content":"    private Path savePath \u003d Paths.get(\"data\", \"exportedcontacts.json\");","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"ChrisHo1341"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"ChrisHo1341"},"content":"     * ","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"ChrisHo1341"},"content":"     * @param indexes string of index","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"ChrisHo1341"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"ChrisHo1341"},"content":"    public ExportCommand() {}","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"ChrisHo1341"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"ChrisHo1341"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"ChrisHo1341"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"ChrisHo1341"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"ChrisHo1341"},"content":"        JsonAddressBookStorage storage \u003d new JsonAddressBookStorage(savePath);","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"ChrisHo1341"},"content":"        AddressBook book \u003d new AddressBook();","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"ChrisHo1341"},"content":"        book.setPersons(lastShownList);","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"ChrisHo1341"},"content":"        ","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"ChrisHo1341"},"content":"        try {","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"ChrisHo1341"},"content":"            storage.saveAddressBook(book);","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"ChrisHo1341"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"ChrisHo1341"},"content":"            System.out.println(\"life is liddat\");","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"ChrisHo1341"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"ChrisHo1341"},"content":" ","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"ChrisHo1341"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false);","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"ChrisHo1341"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"ChrisHo1341"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"ChrisHo1341":54}},{"path":"src/main/java/seedu/address/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YuvBindal"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"YuvBindal"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STAGE;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"YuvBindal"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"YuvBindal"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"YuvBindal"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"YuvBindal"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"YuvBindal"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"YuvBindal"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"YuvBindal"},"content":"import seedu.address.model.applicant.Role;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"YuvBindal"},"content":"import seedu.address.model.applicant.Stage;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"YuvBindal"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"YuvBindal"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"YuvBindal"},"content":" * Adds a person to the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"YuvBindal"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"YuvBindal"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"YuvBindal"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"YuvBindal"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters applications by tags. \"","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"YuvBindal"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"            + PREFIX_ROLE + \" roles \" + PREFIX_STAGE + \" stages \";","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"YuvBindal"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Persons Filtered: \";","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"YuvBindal"},"content":"    private final Role filteredRole;","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"YuvBindal"},"content":"    private final Stage filteredStage;","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"YuvBindal"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"YuvBindal"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"YuvBindal"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"YuvBindal"},"content":"    public FilterCommand(Optional\u003cRole\u003e filteredRole, Optional\u003cStage\u003e filteredStage) {","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"YuvBindal"},"content":"        //requireNonNull(filteredRole);","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"YuvBindal"},"content":"        //requireNonNull(filteredStage);","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"YuvBindal"},"content":"        if (filteredRole.equals(Optional.empty())) {","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"YuvBindal"},"content":"            this.filteredRole \u003d new Role(\"\");","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"YuvBindal"},"content":"        } else {","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"YuvBindal"},"content":"            this.filteredRole \u003d filteredRole.get();","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"YuvBindal"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"YuvBindal"},"content":"        if (filteredStage.equals(Optional.empty())) {","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"YuvBindal"},"content":"            this.filteredStage \u003d new Stage(\"\");","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"YuvBindal"},"content":"        } else {","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"YuvBindal"},"content":"            this.filteredStage \u003d filteredStage.get();","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"YuvBindal"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"YuvBindal"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"YuvBindal"},"content":"    public FilterCommand(Role filteredRole) {","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"YuvBindal"},"content":"        requireNonNull(filteredRole);","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"YuvBindal"},"content":"        this.filteredRole \u003d filteredRole;","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"YuvBindal"},"content":"        this.filteredStage \u003d new Stage(\"\");","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"YuvBindal"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"YuvBindal"},"content":"    public FilterCommand(Stage filteredStage) {","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"YuvBindal"},"content":"        requireNonNull(filteredStage);","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"YuvBindal"},"content":"        this.filteredRole \u003d new Role(\"\");","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"YuvBindal"},"content":"        this.filteredStage \u003d filteredStage;","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"YuvBindal"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"YuvBindal"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"YuvBindal"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"YuvBindal"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"YuvBindal"},"content":"        Predicate\u003cPerson\u003e matchesCriteria \u003d person -\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"YuvBindal"},"content":"            if (!(person instanceof Applicant)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"YuvBindal"},"content":"                return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"YuvBindal"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"YuvBindal"},"content":"            Applicant applicant \u003d (Applicant) person;","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"YuvBindal"},"content":"            // Check if the roleName matches filteredRole and stageName matches filteredStage","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"YuvBindal"},"content":"            boolean roleMatches \u003d applicant.getRole().equals(filteredRole);","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"YuvBindal"},"content":"            boolean stageMatches \u003d applicant.getStage().equals(filteredStage);","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"YuvBindal"},"content":"            if (filteredRole.roleName.isEmpty()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"YuvBindal"},"content":"                roleMatches \u003d true;","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"YuvBindal"},"content":"            } else if (filteredStage.stageName.isEmpty()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"YuvBindal"},"content":"                stageMatches \u003d true;","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"YuvBindal"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"YuvBindal"},"content":"            return roleMatches \u0026\u0026 stageMatches;","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"YuvBindal"},"content":"        };","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"YuvBindal"},"content":"        model.updateFilteredPersonList(matchesCriteria);","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"YuvBindal"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS));","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"YuvBindal"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"YuvBindal"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"YuvBindal"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"YuvBindal"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"YuvBindal"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"YuvBindal"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"YuvBindal"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"YuvBindal"},"content":"        if (!(other instanceof FilterCommand)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"YuvBindal"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"YuvBindal"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"YuvBindal"},"content":"        FilterCommand otherAddCommand \u003d (FilterCommand) other;","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"YuvBindal"},"content":"        return filteredRole.equals(otherAddCommand.filteredRole) \u0026\u0026 filteredStage.equals(otherAddCommand.filteredStage);","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"YuvBindal"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"YuvBindal"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"YuvBindal"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"YuvBindal"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"YuvBindal"},"content":"                .add(\"toFilterRole\", this.filteredRole)","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"YuvBindal"},"content":"                .add(\"toFilterStage\", this.filteredStage)","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"YuvBindal"},"content":"                .toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"YuvBindal"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"YuvBindal"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"YuvBindal":106,"ys112":4,"xinen26":1}},{"path":"src/main/java/seedu/address/logic/commands/NoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lihaoquan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"lihaoquan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"lihaoquan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"lihaoquan"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"lihaoquan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"lihaoquan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"lihaoquan"},"content":"import java.util.List;","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"lihaoquan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"lihaoquan"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"lihaoquan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"lihaoquan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"lihaoquan"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"lihaoquan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"lihaoquan"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"lihaoquan"},"content":" * Changes the note of an existing person in the address book.","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"lihaoquan"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"lihaoquan"},"content":"public class NoteCommand extends Command {","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"lihaoquan"},"content":"    public static final String COMMAND_WORD \u003d \"note\";","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"lihaoquan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the note of the person identified \"","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"lihaoquan"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"lihaoquan"},"content":"            + \"Existing note will be overwritten by the input.\\n\"","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"lihaoquan"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"lihaoquan"},"content":"            + PREFIX_NOTE + \"[NOTE]\\n\"","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"lihaoquan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"lihaoquan"},"content":"            + PREFIX_NOTE + \"Likes to swim.\";","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"lihaoquan"},"content":"    public static final String MESSAGE_ADD_NOTE_SUCCESS \u003d \"Added note to Person: %1$s\";","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"lihaoquan"},"content":"    public static final String MESSAGE_DELETE_NOTE_SUCCESS \u003d \"Removed note from Person: %1$s\";","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"lihaoquan"},"content":"    private final Index index;","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"lihaoquan"},"content":"    private final Note note;","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"lihaoquan"},"content":"    private final boolean withDate;","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"lihaoquan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"lihaoquan"},"content":"     * @param index of the person in the filtered person list to edit the note","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"lihaoquan"},"content":"     * @param note of the person to be updated to","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"lihaoquan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"lihaoquan"},"content":"    public NoteCommand(Index index, Note note, boolean withDate) {","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"lihaoquan"},"content":"        requireAllNonNull(index, note);","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"lihaoquan"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"lihaoquan"},"content":"        this.note \u003d note;","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"lihaoquan"},"content":"        this.withDate \u003d withDate;","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"lihaoquan"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"lihaoquan"},"content":"    @Override","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"lihaoquan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"lihaoquan"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"lihaoquan"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"lihaoquan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"lihaoquan"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"lihaoquan"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"lihaoquan"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"lihaoquan"},"content":"                personToEdit.getAddress(), personToEdit.getTags(), note, generateDate());","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"lihaoquan"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"lihaoquan"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"lihaoquan"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"lihaoquan"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"lihaoquan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"lihaoquan"},"content":"     * Generates a command execution success message based on whether the note is added to or removed from","lastModifiedDate":"2024-03-11"},{"lineNumber":71,"author":{"gitId":"lihaoquan"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"lihaoquan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"lihaoquan"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"lihaoquan"},"content":"        String message \u003d !note.value.isEmpty() ? MESSAGE_ADD_NOTE_SUCCESS : MESSAGE_DELETE_NOTE_SUCCESS;","lastModifiedDate":"2024-03-11"},{"lineNumber":75,"author":{"gitId":"lihaoquan"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"lihaoquan"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"lihaoquan"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":79,"author":{"gitId":"lihaoquan"},"content":"     * Generates a date for the note in the format: e.g March 5, 23","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"lihaoquan"},"content":"     * @return a date as string to accompany the note","lastModifiedDate":"2024-03-11"},{"lineNumber":81,"author":{"gitId":"lihaoquan"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":82,"author":{"gitId":"lihaoquan"},"content":"    private String generateDate() {","lastModifiedDate":"2024-03-11"},{"lineNumber":83,"author":{"gitId":"lihaoquan"},"content":"        if (withDate) {","lastModifiedDate":"2024-03-11"},{"lineNumber":84,"author":{"gitId":"lihaoquan"},"content":"            LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2024-03-11"},{"lineNumber":85,"author":{"gitId":"lihaoquan"},"content":"            return currentDate.format(DateTimeFormatter.ofPattern(\"MMMM d, yy\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":86,"author":{"gitId":"lihaoquan"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":87,"author":{"gitId":"lihaoquan"},"content":"        return \"\";","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"lihaoquan"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"lihaoquan"},"content":"    @Override","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"lihaoquan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-06"},{"lineNumber":92,"author":{"gitId":"lihaoquan"},"content":"        // short circuit if same object","lastModifiedDate":"2024-03-06"},{"lineNumber":93,"author":{"gitId":"lihaoquan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-06"},{"lineNumber":94,"author":{"gitId":"lihaoquan"},"content":"            return true;","lastModifiedDate":"2024-03-06"},{"lineNumber":95,"author":{"gitId":"lihaoquan"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":96,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":97,"author":{"gitId":"lihaoquan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-06"},{"lineNumber":98,"author":{"gitId":"lihaoquan"},"content":"        if (!(other instanceof NoteCommand)) {","lastModifiedDate":"2024-03-11"},{"lineNumber":99,"author":{"gitId":"lihaoquan"},"content":"            return false;","lastModifiedDate":"2024-03-06"},{"lineNumber":100,"author":{"gitId":"lihaoquan"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":101,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":102,"author":{"gitId":"lihaoquan"},"content":"        // state check","lastModifiedDate":"2024-03-06"},{"lineNumber":103,"author":{"gitId":"lihaoquan"},"content":"        NoteCommand e \u003d (NoteCommand) other;","lastModifiedDate":"2024-03-11"},{"lineNumber":104,"author":{"gitId":"lihaoquan"},"content":"        return index.equals(e.index)","lastModifiedDate":"2024-03-06"},{"lineNumber":105,"author":{"gitId":"lihaoquan"},"content":"                \u0026\u0026 note.equals(e.note);","lastModifiedDate":"2024-03-11"},{"lineNumber":106,"author":{"gitId":"lihaoquan"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":107,"author":{"gitId":"lihaoquan"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"lihaoquan":107}},{"path":"src/main/java/seedu/address/logic/parser/AddApplicantCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.Messages.MESSAGE_INPUT_NOT_REQUIRED_FIELDS;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"lihaoquan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"lihaoquan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_WITH_DATE;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STAGE;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"import seedu.address.logic.commands.AddApplicantCommand;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"import seedu.address.model.applicant.Role;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"import seedu.address.model.applicant.Stage;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":" * Parses input arguments and creates a new AddParserCommand object","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"public class AddApplicantCommandParser implements Parser\u003cAddApplicantCommand\u003e {","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"     * Parses the given {@code String} of arguments in the context of the AddParserCommand","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"     * and returns an AddParserCommand object for execution.","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"    public AddApplicantCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"lihaoquan"},"content":"                    PREFIX_ADDRESS, PREFIX_ROLE, PREFIX_STAGE, PREFIX_TAG, PREFIX_NOTE, PREFIX_NOTE_WITH_DATE);","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ROLE)","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddApplicantCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"        } else if (arePrefixesPresent(argMultimap, PREFIX_STAGE)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"            throw new ParseException(MESSAGE_INPUT_NOT_REQUIRED_FIELDS + PREFIX_STAGE);","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_ROLE);","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"        Role role \u003d ParserUtil.parseRole(argMultimap.getValue(PREFIX_ROLE).get());","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"        Stage stage \u003d new Stage(\"initial_application\");","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"lihaoquan"},"content":"        Note note \u003d getOptionalNoteParameter(argMultimap);","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"lihaoquan"},"content":"        String noteWithDate \u003d getOptionalNoteDateParameter(argMultimap);","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"lihaoquan"},"content":"        Applicant applicant \u003d new Applicant(name, phone, email, address, role, stage, tagList, note, noteWithDate);","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"        return new AddApplicantCommand(applicant);","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"lihaoquan"},"content":"    private Note getOptionalNoteParameter(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"lihaoquan"},"content":"        if (argMultimap.getValue(PREFIX_NOTE).isPresent()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"lihaoquan"},"content":"            return ParserUtil.parseNote(argMultimap.getValue(PREFIX_NOTE).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"lihaoquan"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"lihaoquan"},"content":"        return new Note(\"\");","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"lihaoquan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"lihaoquan"},"content":"    private String getOptionalNoteDateParameter(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"lihaoquan"},"content":"        if (argMultimap.getValue(PREFIX_NOTE_WITH_DATE).isPresent()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"lihaoquan"},"content":"            return ParserUtil.parseNoteWithDate(argMultimap.getValue(PREFIX_NOTE_WITH_DATE).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"lihaoquan"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"lihaoquan"},"content":"        return \"\";","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"lihaoquan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"ys112"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"ys112"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"ys112"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"ys112"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"lihaoquan":22,"ys112":68}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"lihaoquan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"lihaoquan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_WITH_DATE;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"lihaoquan"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"lihaoquan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"lihaoquan"},"content":"                        PREFIX_NOTE, PREFIX_NOTE_WITH_DATE);","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"lihaoquan"},"content":"        Note note \u003d getOptionalNoteParameter(argMultimap);","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"lihaoquan"},"content":"        String noteWithDate \u003d getOptionalNoteDateParameter(argMultimap);","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"lihaoquan"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList, note, noteWithDate);","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"lihaoquan"},"content":"    private Note getOptionalNoteParameter(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"lihaoquan"},"content":"        if (argMultimap.getValue(PREFIX_NOTE).isPresent()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"lihaoquan"},"content":"            return ParserUtil.parseNote(argMultimap.getValue(PREFIX_NOTE).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"lihaoquan"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"lihaoquan"},"content":"        return new Note(\"\");","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"lihaoquan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"lihaoquan"},"content":"    private String getOptionalNoteDateParameter(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"lihaoquan"},"content":"        if (argMultimap.getValue(PREFIX_NOTE_WITH_DATE).isPresent()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"lihaoquan"},"content":"            return ParserUtil.parseNoteWithDate(argMultimap.getValue(PREFIX_NOTE_WITH_DATE).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"lihaoquan"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"lihaoquan"},"content":"        return \"\";","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"lihaoquan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"lihaoquan":22,"-":58}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"xinen26"},"content":"import seedu.address.logic.commands.AddApplicantCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"xinen26"},"content":"import seedu.address.logic.commands.EditApplicantCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"ChrisHo1341"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"xinen26"},"content":"import seedu.address.logic.commands.NoteCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"        case AddApplicantCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"            return new AddApplicantCommandParser().parse(arguments);","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"YuvBindal"},"content":"        case \"filter\":","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"YuvBindal"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"xinen26"},"content":"        case EditApplicantCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"xinen26"},"content":"            return new EditApplicantCommandParser().parse(arguments);","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"ChrisHo1341"},"content":"        case ExportCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"ChrisHo1341"},"content":"            return new ExportCommand();","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"ChrisHo1341"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":88,"author":{"gitId":"lihaoquan"},"content":"        case NoteCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-11"},{"lineNumber":89,"author":{"gitId":"lihaoquan"},"content":"            return new NoteCommandParser().parse(arguments);","lastModifiedDate":"2024-03-11"},{"lineNumber":90,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lihaoquan":3,"YuvBindal":3,"ys112":2,"xinen26":5,"-":79,"ChrisHo1341":4}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"/name\");","lastModifiedDate":"2024-03-09"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"/phone\");","lastModifiedDate":"2024-03-09"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"/email\");","lastModifiedDate":"2024-03-09"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"/address\");","lastModifiedDate":"2024-03-09"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"    public static final Prefix PREFIX_ROLE \u003d new Prefix(\"/role\");","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"    public static final Prefix PREFIX_STAGE \u003d new Prefix(\"/stage\");","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"/tag\");","lastModifiedDate":"2024-03-09"},{"lineNumber":16,"author":{"gitId":"lihaoquan"},"content":"    public static final Prefix PREFIX_NOTE \u003d new Prefix(\"/note\");","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"lihaoquan"},"content":"    public static final Prefix PREFIX_NOTE_WITH_DATE \u003d new Prefix(\"/date\");","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"lihaoquan":2,"ys112":7,"-":10}},{"path":"src/main/java/seedu/address/logic/parser/EditApplicantCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xinen26"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"xinen26"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"xinen26"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"xinen26"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"xinen26"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"xinen26"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"xinen26"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"xinen26"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"xinen26"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"xinen26"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STAGE;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"xinen26"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"xinen26"},"content":"import java.util.Collection;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"xinen26"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"xinen26"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"xinen26"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"xinen26"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"xinen26"},"content":"import seedu.address.logic.commands.EditApplicantCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"xinen26"},"content":"import seedu.address.logic.commands.EditApplicantCommand.EditApplicantDescriptor;","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"xinen26"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"xinen26"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"xinen26"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"xinen26"},"content":" * Parses input arguments and creates a new EditApplicantCommand object","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"xinen26"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"xinen26"},"content":"public class EditApplicantCommandParser implements Parser\u003cEditApplicantCommand\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"xinen26"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"xinen26"},"content":"     * Parses the given {@code String} of arguments in the context of the EditApplicantCommand","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"xinen26"},"content":"     * and returns an EditApplicantCommand object for execution.","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"xinen26"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"xinen26"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"xinen26"},"content":"    public EditApplicantCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"xinen26"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"xinen26"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"xinen26"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"xinen26"},"content":"                        PREFIX_ADDRESS, PREFIX_ROLE, PREFIX_STAGE, PREFIX_TAG, PREFIX_NOTE);","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"xinen26"},"content":"        Index index;","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"xinen26"},"content":"        try {","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"xinen26"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"xinen26"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"xinen26"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"xinen26"},"content":"                    EditApplicantCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"xinen26"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"xinen26"},"content":"                PREFIX_ADDRESS, PREFIX_ROLE, PREFIX_STAGE, PREFIX_NOTE);","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"xinen26"},"content":"        EditApplicantDescriptor editApplicantDescriptor \u003d new EditApplicantDescriptor();","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"xinen26"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"xinen26"},"content":"            editApplicantDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"xinen26"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"xinen26"},"content":"            editApplicantDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"xinen26"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"xinen26"},"content":"            editApplicantDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"xinen26"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"xinen26"},"content":"            editApplicantDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"xinen26"},"content":"        if (argMultimap.getValue(PREFIX_ROLE).isPresent()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"xinen26"},"content":"            editApplicantDescriptor.setRole(ParserUtil.parseRole(argMultimap.getValue(PREFIX_ROLE).get()));","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"xinen26"},"content":"        if (argMultimap.getValue(PREFIX_STAGE).isPresent()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"xinen26"},"content":"            editApplicantDescriptor.setStage(ParserUtil.parseStage(argMultimap.getValue(PREFIX_STAGE).get()));","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"xinen26"},"content":"        if (argMultimap.getValue(PREFIX_NOTE).isPresent()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"xinen26"},"content":"            editApplicantDescriptor.setNote(ParserUtil.parseNote(argMultimap.getValue(PREFIX_NOTE).get()));","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"xinen26"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editApplicantDescriptor::setTags);","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"xinen26"},"content":"        if (!editApplicantDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"xinen26"},"content":"            throw new ParseException(EditApplicantCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"xinen26"},"content":"        return new EditApplicantCommand(index, editApplicantDescriptor);","lastModifiedDate":"2024-03-15"},{"lineNumber":87,"author":{"gitId":"xinen26"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":88,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"xinen26"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":90,"author":{"gitId":"xinen26"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2024-03-15"},{"lineNumber":91,"author":{"gitId":"xinen26"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"xinen26"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"xinen26"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"xinen26"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2024-03-15"},{"lineNumber":95,"author":{"gitId":"xinen26"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":97,"author":{"gitId":"xinen26"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2024-03-15"},{"lineNumber":98,"author":{"gitId":"xinen26"},"content":"            return Optional.empty();","lastModifiedDate":"2024-03-15"},{"lineNumber":99,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":100,"author":{"gitId":"xinen26"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2024-03-15"},{"lineNumber":101,"author":{"gitId":"xinen26"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2024-03-15"},{"lineNumber":102,"author":{"gitId":"xinen26"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":103,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":104,"author":{"gitId":"xinen26"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"xinen26":104}},{"path":"src/main/java/seedu/address/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"YuvBindal"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"YuvBindal"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"YuvBindal"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"YuvBindal"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STAGE;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"YuvBindal"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"YuvBindal"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"YuvBindal"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"YuvBindal"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"YuvBindal"},"content":"import seedu.address.model.applicant.Role;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"YuvBindal"},"content":"import seedu.address.model.applicant.Stage;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"YuvBindal"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"YuvBindal"},"content":" * Parses input arguments and creates a new FilterCommand object.","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"YuvBindal"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"YuvBindal"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"YuvBindal"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"YuvBindal"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterCommand","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"YuvBindal"},"content":"     * and returns a FilterCommand object for execution.","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"YuvBindal"},"content":"     * ","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"YuvBindal"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"YuvBindal"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"YuvBindal"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"YuvBindal"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"YuvBindal"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ROLE, PREFIX_STAGE);","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"YuvBindal"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ROLE) \u0026\u0026 (!arePrefixesPresent(argMultimap, PREFIX_STAGE)","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"YuvBindal"},"content":"                || !argMultimap.getPreamble().isEmpty())) {","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"YuvBindal"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"YuvBindal"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"YuvBindal"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_ROLE);","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"YuvBindal"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_STAGE);","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"YuvBindal"},"content":"        Optional\u003cStage\u003e filteredStage \u003d Optional.empty();","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"YuvBindal"},"content":"        Optional\u003cRole\u003e filteredRole \u003d Optional.empty();","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"YuvBindal"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_STAGE)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"YuvBindal"},"content":"            filteredStage \u003d Optional.ofNullable(ParserUtil.parseStage(argMultimap.getValue(PREFIX_STAGE).get()));","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"YuvBindal"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"YuvBindal"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_ROLE)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"YuvBindal"},"content":"            filteredRole \u003d Optional.ofNullable(ParserUtil.parseRole(argMultimap.getValue(PREFIX_ROLE).get()));","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"YuvBindal"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"YuvBindal"},"content":"        return new FilterCommand(filteredRole, filteredStage);","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"YuvBindal"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"YuvBindal"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"YuvBindal"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"YuvBindal"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"YuvBindal"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"YuvBindal"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"YuvBindal"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"YuvBindal"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"YuvBindal"},"content":"}","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"YuvBindal"},"content":"","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"YuvBindal":59}},{"path":"src/main/java/seedu/address/logic/parser/NoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lihaoquan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"lihaoquan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"lihaoquan"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"lihaoquan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"lihaoquan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_WITH_DATE;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"lihaoquan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"lihaoquan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"lihaoquan"},"content":"import seedu.address.logic.commands.NoteCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"lihaoquan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"lihaoquan"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"lihaoquan"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"lihaoquan"},"content":" * Class that parses note commands.","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"lihaoquan"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"lihaoquan"},"content":"public class NoteCommandParser {","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"lihaoquan"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"lihaoquan"},"content":"     * Parse user input for Note command.","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"lihaoquan"},"content":"     *","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"lihaoquan"},"content":"     * @param args Arguments when using the command.","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"lihaoquan"},"content":"     * @return a NoteCommand to be further processed.","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"lihaoquan"},"content":"     * @throws ParseException","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"lihaoquan"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"lihaoquan"},"content":"    public NoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"lihaoquan"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"lihaoquan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"lihaoquan"},"content":"                PREFIX_NOTE, PREFIX_NOTE_WITH_DATE);","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"lihaoquan"},"content":"        Index index;","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"lihaoquan"},"content":"        try {","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"lihaoquan"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"lihaoquan"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"lihaoquan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"lihaoquan"},"content":"                    NoteCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"lihaoquan"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"lihaoquan"},"content":"        String note \u003d argMultimap.getValue(PREFIX_NOTE).orElse(\"\");","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"lihaoquan"},"content":"        String withDate \u003d argMultimap.getValue(PREFIX_NOTE_WITH_DATE).orElse(\"false\").toLowerCase();","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"lihaoquan"},"content":"        boolean validWithDateArgument \u003d withDate.equals(\"true\") || withDate.equals(\"false\");","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"lihaoquan"},"content":"        if (!validWithDateArgument) {","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"lihaoquan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"lihaoquan"},"content":"                    NoteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"lihaoquan"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"lihaoquan"},"content":"        return new NoteCommand(index, new Note(note), withDate.equals(\"true\"));","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"lihaoquan"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"lihaoquan"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"lihaoquan":52}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"import seedu.address.model.applicant.Role;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"xinen26"},"content":"import seedu.address.model.applicant.Stage;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"xinen26"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"ys112"},"content":"     * Parses a {@code String role} into an {@code Role}.","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"ys112"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"xinen26"},"content":"     * @throws ParseException if the given {@code role} is invalid.","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"ys112"},"content":"    public static Role parseRole(String role) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"ys112"},"content":"        requireNonNull(role);","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"ys112"},"content":"        String trimmedRole \u003d role.trim();","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"ys112"},"content":"        return new Role(trimmedRole);","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"xinen26"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"xinen26"},"content":"     * Parses a {@code String stage} into an {@code Stage}.","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"xinen26"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"xinen26"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"xinen26"},"content":"     * @throws ParseException if the given {@code stage} is invalid.","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"xinen26"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"xinen26"},"content":"    public static Stage parseStage(String stage) throws ParseException {","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"xinen26"},"content":"        requireNonNull(stage);","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"xinen26"},"content":"        String trimmedStage \u003d stage;","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"xinen26"},"content":"        return new Stage(trimmedStage);","lastModifiedDate":"2024-03-16"},{"lineNumber":124,"author":{"gitId":"xinen26"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":125,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":126,"author":{"gitId":"xinen26"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":127,"author":{"gitId":"xinen26"},"content":"     * Parses a {@code String note} into an {@code Note}.","lastModifiedDate":"2024-03-16"},{"lineNumber":128,"author":{"gitId":"xinen26"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-16"},{"lineNumber":129,"author":{"gitId":"xinen26"},"content":"     *","lastModifiedDate":"2024-03-16"},{"lineNumber":130,"author":{"gitId":"xinen26"},"content":"     * @throws ParseException if the given {@code note} is invalid.","lastModifiedDate":"2024-03-16"},{"lineNumber":131,"author":{"gitId":"xinen26"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":132,"author":{"gitId":"xinen26"},"content":"    public static Note parseNote(String note) throws ParseException {","lastModifiedDate":"2024-03-16"},{"lineNumber":133,"author":{"gitId":"lihaoquan"},"content":"        if (note.isEmpty()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"lihaoquan"},"content":"            return new Note(\"\");","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"lihaoquan"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"xinen26"},"content":"        String trimmedNote \u003d note;","lastModifiedDate":"2024-03-16"},{"lineNumber":137,"author":{"gitId":"xinen26"},"content":"        return new Note(trimmedNote);","lastModifiedDate":"2024-03-16"},{"lineNumber":138,"author":{"gitId":"xinen26"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":139,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":140,"author":{"gitId":"lihaoquan"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"lihaoquan"},"content":"     * Parses a {@code String noteWithDate} into an {@code boolean}.","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"lihaoquan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"lihaoquan"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":144,"author":{"gitId":"lihaoquan"},"content":"     * @throws ParseException if the given {@code note} is invalid.","lastModifiedDate":"2024-03-18"},{"lineNumber":145,"author":{"gitId":"lihaoquan"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"lihaoquan"},"content":"    public static String parseNoteWithDate(String noteWithDate) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"lihaoquan"},"content":"        requireNonNull(noteWithDate);","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"lihaoquan"},"content":"        return noteWithDate;","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"lihaoquan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":150,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"lihaoquan":14,"ys112":12,"xinen26":27,"-":124}},{"path":"src/main/java/seedu/address/model/applicant/Applicant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":" * Represents an Applicant.","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"public class Applicant extends Person {","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"    private final Role role;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"    private final Stage stage;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"    public Applicant(Name name, Phone phone, Email email, Address address, Role role, Stage stage, Set\u003cTag\u003e tags,","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"                     Note note, String noteDate) {","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"        super(name, phone, email, address, tags, note, noteDate);","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"        this.role \u003d role;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"     *  For quick initialization of applicant with existing person","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"    public Applicant(Person p, Role role, Stage stage) {","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"        super(p.getName(), p.getPhone(), p.getEmail(), p.getAddress(), p.getTags(), p.getNote(), p.getNoteDate());","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"        this.role \u003d role;","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"    public Role getRole() {","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"        return role;","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"    public Stage getStage() {","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"        return stage;","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"     * Returns true if both applicants have the same identity and data fields.","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"     * This defines a stronger notion of equality between two applicants.","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"            return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"        if (!(other instanceof seedu.address.model.applicant.Applicant)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"ys112"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"        Applicant otherApplicant \u003d (Applicant) other;","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"        return super.equals(otherApplicant)","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"ys112"},"content":"            \u0026\u0026 role.equals(otherApplicant.role)","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"ys112"},"content":"            \u0026\u0026 stage.equals(otherApplicant.stage);","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"xinen26"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"xinen26"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"xinen26"},"content":"     * This defines a weaker notion of equality between two applicants.","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"xinen26"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"xinen26"},"content":"    public boolean isSameApplicant(Applicant otherApplicant) {","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"xinen26"},"content":"        if (otherApplicant \u003d\u003d this) {","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"xinen26"},"content":"            return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"xinen26"},"content":"        return otherApplicant !\u003d null","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"xinen26"},"content":"                \u0026\u0026 otherApplicant.getName().equals(getName())","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"xinen26"},"content":"                \u0026\u0026 otherApplicant.getPhone().equals(getPhone())","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"xinen26"},"content":"                \u0026\u0026 otherApplicant.getEmail().equals(getEmail())","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"xinen26"},"content":"                \u0026\u0026 otherApplicant.getAddress().equals(getAddress())","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"xinen26"},"content":"                \u0026\u0026 otherApplicant.getRole().equals(getRole())","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"xinen26"},"content":"                \u0026\u0026 otherApplicant.getStage().equals(getStage())","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"xinen26"},"content":"                \u0026\u0026 otherApplicant.getTags().equals(getTags())","lastModifiedDate":"2024-03-15"},{"lineNumber":87,"author":{"gitId":"xinen26"},"content":"                \u0026\u0026 otherApplicant.getNote().equals(getNote());","lastModifiedDate":"2024-03-15"},{"lineNumber":88,"author":{"gitId":"xinen26"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":90,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"ys112":69,"xinen26":21}},{"path":"src/main/java/seedu/address/model/applicant/Application.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"lihaoquan"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"lihaoquan"},"content":" * A class that represents a particular","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"lihaoquan"},"content":" * interview application.","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"lihaoquan"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"lihaoquan"},"content":"public class Application {","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"lihaoquan"},"content":"    public static final Stage INITIAL_APPLICATION \u003d new Stage(\"Initial Application\");","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"lihaoquan"},"content":"    public static final Stage TECHNICAL_ASSESSMENT \u003d new Stage(\"Technical Assessment\");","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"lihaoquan"},"content":"    public static final Stage INTERVIEW \u003d new Stage(\"Interview\");","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"lihaoquan"},"content":"    public static final Stage DECISION_AND_OFFER \u003d new Stage(\"Decision \u0026 Offer\");","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"lihaoquan"},"content":"    // TODO: Add more required roles here.","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"lihaoquan"},"content":"    public static final Role FRONT_END \u003d new Role(\"Front End\");","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"lihaoquan"},"content":"    public static final Role BACK_END \u003d new Role(\"Back End\");","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"lihaoquan"},"content":"    public Application(Applicant applicant, Role role) {","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"lihaoquan"},"content":"        // TODO: Add application logic here.","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"lihaoquan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"lihaoquan"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"lihaoquan":20,"ys112":1}},{"path":"src/main/java/seedu/address/model/applicant/Role.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":" * A job role that an applicant can apply for.","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"public class Role {","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"    public final String roleName;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"    public Role(String roleName) {","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"        this.roleName \u003d roleName;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"        return roleName;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"        return roleName \u003d\u003d null ? 0 : roleName.hashCode();","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"        if (!(other instanceof Role)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"        Role otherStage \u003d (Role) other;","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"        return roleName.equals(otherStage.roleName);","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"ys112":37}},{"path":"src/main/java/seedu/address/model/applicant/Stage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package seedu.address.model.applicant;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":" * An object that represents the stage that an","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":" * applicant is in during a hiring process.","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"public class Stage {","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"    public final String stageName;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"    public Stage(String stageName) {","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"        this.stageName \u003d stageName;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"        return stageName;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"        return stageName \u003d\u003d null ? 0 : stageName.hashCode();","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"            return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"        if (!(other instanceof Stage)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"        Stage otherStage \u003d (Stage) other;","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"        return stageName.equals(otherStage.stageName);","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"ys112":38}},{"path":"src/main/java/seedu/address/model/person/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lihaoquan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"lihaoquan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"lihaoquan"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"lihaoquan"},"content":" * Represents a Person\u0027s note in the address book.","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"lihaoquan"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"lihaoquan"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"lihaoquan"},"content":"public class Note {","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"lihaoquan"},"content":"    public final String value;","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"lihaoquan"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"lihaoquan"},"content":"     * Create a note to be added to a contact.","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"lihaoquan"},"content":"     *","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"lihaoquan"},"content":"     * @param note Note to be added to the contact.","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"lihaoquan"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"lihaoquan"},"content":"    public Note(String note) {","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"lihaoquan"},"content":"        requireNonNull(note);","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"lihaoquan"},"content":"        value \u003d note;","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"lihaoquan"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"lihaoquan"},"content":"    @Override","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"lihaoquan"},"content":"    public String toString() {","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"lihaoquan"},"content":"        return value;","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"lihaoquan"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"lihaoquan"},"content":"    @Override","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"lihaoquan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"lihaoquan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"lihaoquan"},"content":"                || (other instanceof Note // instanceof handles nulls","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"lihaoquan"},"content":"                \u0026\u0026 value.equals(((Note) other).value)); // state check","lastModifiedDate":"2024-03-11"},{"lineNumber":32,"author":{"gitId":"lihaoquan"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"lihaoquan"},"content":"    @Override","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"lihaoquan"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"lihaoquan"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"lihaoquan"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"lihaoquan"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"lihaoquan":38}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"lihaoquan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"lihaoquan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"lihaoquan"},"content":"    private final Note note;","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"lihaoquan"},"content":"    private final String noteDate;","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"lihaoquan"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags,","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"lihaoquan"},"content":"                  Note note, String noteDate) {","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"lihaoquan"},"content":"        this.note \u003d note;","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"lihaoquan"},"content":"        this.noteDate \u003d handleNoteDateNull(noteDate);","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":63,"author":{"gitId":"lihaoquan"},"content":"    public Note getNote() {","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"lihaoquan"},"content":"        return note;","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"lihaoquan"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"lihaoquan"},"content":"    public String getNoteDate() {","lastModifiedDate":"2024-03-11"},{"lineNumber":67,"author":{"gitId":"lihaoquan"},"content":"        return noteDate;","lastModifiedDate":"2024-03-11"},{"lineNumber":68,"author":{"gitId":"lihaoquan"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":111,"author":{"gitId":"lihaoquan"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags)","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"lihaoquan"},"content":"                \u0026\u0026 note.equals(otherPerson.note);","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"lihaoquan"},"content":"        return Objects.hash(name, phone, email, address, tags, note);","lastModifiedDate":"2024-03-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"lihaoquan"},"content":"                .add(\"note\", note)","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"lihaoquan"},"content":"                .add(\"noteDate\", noteDate)","lastModifiedDate":"2024-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"lihaoquan"},"content":"    private String handleNoteDateNull(String noteDate) {","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"lihaoquan"},"content":"        if (noteDate \u003d\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"lihaoquan"},"content":"            return \"\";","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"lihaoquan"},"content":"        } else if (!(noteDate.toLowerCase().equals(\"false\") ||","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"lihaoquan"},"content":"                noteDate.toLowerCase().equals(\"true\"))) {","lastModifiedDate":"2024-03-20"},{"lineNumber":140,"author":{"gitId":"lihaoquan"},"content":"            return noteDate;","lastModifiedDate":"2024-03-20"},{"lineNumber":141,"author":{"gitId":"lihaoquan"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"lihaoquan"},"content":"        if (noteDate.toLowerCase().equals(\"true\")) {","lastModifiedDate":"2024-03-18"},{"lineNumber":144,"author":{"gitId":"lihaoquan"},"content":"            LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2024-03-18"},{"lineNumber":145,"author":{"gitId":"lihaoquan"},"content":"            return currentDate.format(DateTimeFormatter.ofPattern(\"MMMM d, yy\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"lihaoquan"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"lihaoquan"},"content":"        return \"\";","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"lihaoquan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lihaoquan":36,"-":114}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"import seedu.address.model.applicant.Role;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"import seedu.address.model.applicant.Stage;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"lihaoquan"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"            new Applicant(new Name(\"Xiao Li\"), new Phone(\"92456721\"), new Email(\"xiaoli@hotmail.com\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"                new Address(\"Blk 685 Rangoon road 3, #12-09\"), new Role(\"SWE\"),","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"                new Stage(\"initial_application\"), getTagSet(), new Note(\"Forbes 30 under 30\"), \"\"),","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"            new Applicant(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"), new Role(\"Frontend Engineer\"),","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"                new Stage(\"initial_application\"), getTagSet(\"friends\"), new Note(\"\"), \"\"),","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"            new Applicant(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new Role(\"SWE\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"                new Stage(\"initial_application\"), getTagSet(\"colleagues\", \"friends\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"                new Note(\"\"), \"\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"            new Applicant(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Role(\"SWE\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"                new Stage(\"initial_application\"), getTagSet(\"neighbours\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"                new Note(\"\"), \"\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"            new Applicant(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new Role(\"SWE\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"                new Stage(\"initial_application\"), getTagSet(\"family\"), new Note(\"\"), \"\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"            new Applicant(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"), new Role(\"SWE\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"                new Stage(\"initial_application\"), getTagSet(\"classmates\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"                new Note(\"\"), \"\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"            new Applicant(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Role(\"SWE\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"                new Stage(\"initial_application\"), getTagSet(\"colleagues\"), new Note(\"\"), \"\")","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"lihaoquan":1,"ys112":27,"-":41}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedApplicant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import java.util.List;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"import seedu.address.model.applicant.Role;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"import seedu.address.model.applicant.Stage;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":" * Jackson-friendly version of {@link Applicant}.","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"class JsonAdaptedApplicant extends JsonAdaptedPerson {","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Applicant\u0027s %s field is missing!\";","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"    private final String role;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"    private final String stage;","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"     * Constructs a {@code JsonAdaptedApplicant} with the given person details.","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"    public JsonAdaptedApplicant(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"                                @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"                                @JsonProperty(\"role\") String role, @JsonProperty(\"stage\") String stage,","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"                                @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags, @JsonProperty(\"note\") String note,","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"                                @JsonProperty(\"noteDate\") String noteDate) {","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"        super(name, phone, email, address, tags, note, noteDate);","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"        this.role \u003d role;","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"     * Converts a given {@code Applicant} into this class for Jackson use.","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"    public JsonAdaptedApplicant(Applicant source) {","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"        // adapted from copilot","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"        super(source);","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"        this.role \u003d source.getRole().roleName;","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"        this.stage \u003d source.getStage().stageName;","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Applicant} object.","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"    public Applicant toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"        Person person \u003d super.toModelType();","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"        if (role \u003d\u003d null) {","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Role.class.getSimpleName()));","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"        final Role modelRole \u003d new Role(role);","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"        if (stage \u003d\u003d null) {","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Stage.class.getSimpleName()));","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"        final Stage modelStage \u003d new Stage(stage);","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"ys112"},"content":"        return new Applicant(person.getName(), person.getPhone(), person.getEmail(), person.getAddress(),","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"ys112"},"content":"            modelRole, modelStage, person.getTags(), person.getNote(), person.getNoteDate());","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"ys112":71}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"import com.fasterxml.jackson.annotation.JsonSubTypes;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"import com.fasterxml.jackson.annotation.JsonTypeInfo;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"lihaoquan"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":" *","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":" * JsonSubType code referenced from \u003ca href\u003d\"https://stackoverflow.com/questions/30362446/deserialize-json-with-jackson-","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":" * into-polymorphic-types-a-complete-example-is-giv\"\u003e...\u003c/a\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"@JsonTypeInfo(use \u003d JsonTypeInfo.Id.NAME, include \u003d JsonTypeInfo.As.PROPERTY)","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"@JsonSubTypes({","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"    @JsonSubTypes.Type(value \u003d JsonAdaptedApplicant.class, name \u003d \"JsonAdaptedApplicant\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"    @JsonSubTypes.Type(value \u003d JsonAdaptedPerson.class, name \u003d \"JsonAdaptedPerson\")","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"})","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":44,"author":{"gitId":"lihaoquan"},"content":"    private final String note;","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"lihaoquan"},"content":"    private final String noteDate;","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"lihaoquan"},"content":"                             @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags, @JsonProperty(\"note\") String note,","lastModifiedDate":"2024-03-11"},{"lineNumber":55,"author":{"gitId":"lihaoquan"},"content":"                             @JsonProperty(\"noteDate\") String noteDate) {","lastModifiedDate":"2024-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"lihaoquan"},"content":"        this.note \u003d note;","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"lihaoquan"},"content":"        this.noteDate \u003d noteDate;","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"lihaoquan"},"content":"        note \u003d source.getNote().value;","lastModifiedDate":"2024-03-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"lihaoquan"},"content":"        noteDate \u003d source.getNoteDate();","lastModifiedDate":"2024-03-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"lihaoquan"},"content":"        final Note modelNote \u003d new Note(note);","lastModifiedDate":"2024-03-11"},{"lineNumber":128,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":129,"author":{"gitId":"lihaoquan"},"content":"        final String modelNoteDate \u003d noteDate;","lastModifiedDate":"2024-03-11"},{"lineNumber":130,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":131,"author":{"gitId":"lihaoquan"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelNote, modelNoteDate);","lastModifiedDate":"2024-03-11"},{"lineNumber":132,"author":{"gitId":"lihaoquan"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"lihaoquan":15,"ys112":11,"-":107}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"        // Stores as respective person types","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"        for (Person p: source.getPersonList()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"            if (p instanceof Applicant) {","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"                persons.add(new JsonAdaptedApplicant((Applicant) p));","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"            } else {","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"                persons.add(new JsonAdaptedPerson(p));","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"     * Person and applicants are cast accordingly into the list.","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"            Person person \u003d null;","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"            if (jsonAdaptedPerson instanceof JsonAdaptedApplicant) {","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"ys112"},"content":"                person \u003d ((JsonAdaptedApplicant) jsonAdaptedPerson).toModelType();","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"            } else {","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"                person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ys112":17,"-":57}},{"path":"src/main/java/seedu/address/ui/ApplicantCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":" * An UI component that displays information of a {@code Applicant}.","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"public class ApplicantCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"    private static final String FXML \u003d \"ApplicantListCard.fxml\";","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"    public final Applicant applicant;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"    @FXML","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"    private HBox cardPane;","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"    @FXML","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"    private Label name;","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"    @FXML","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"    private Label id;","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"    @FXML","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"    private Label phone;","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"    @FXML","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"    private Label address;","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"    @FXML","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"    private Label email;","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"    @FXML","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"lihaoquan"},"content":"    private Label note;","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"lihaoquan"},"content":"    @FXML","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"    private Label role;","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"    @FXML","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"    private Label stage;","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"    @FXML","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"    private FlowPane tags;","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"     * Creates a {@code ApplicantCard} with the given {@code Applicant} and index to display.","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"    public ApplicantCard(Applicant applicant, int displayedIndex) {","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"        super(FXML);","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"        this.applicant \u003d applicant;","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"        name.setText(applicant.getName().fullName);","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"        phone.setText(applicant.getPhone().value);","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"        address.setText(applicant.getAddress().value);","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"        email.setText(applicant.getEmail().value);","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"ys112"},"content":"        role.setText(applicant.getRole().roleName);","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"        stage.setText(applicant.getStage().stageName);","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"        applicant.getTags().stream()","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"            .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"            .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"lihaoquan"},"content":"        String noteDate \u003d \"\";","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"lihaoquan"},"content":"        if (!applicant.getNoteDate().isEmpty()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"lihaoquan"},"content":"            noteDate \u003d \", \" + applicant.getNoteDate();","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"lihaoquan"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"lihaoquan"},"content":"        note.setText(applicant.getNote().value + noteDate);","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"lihaoquan":8,"ys112":65}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"xinen26"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s2-cs2103-f15-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"xinen26":1,"-":101}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"lihaoquan"},"content":"    private Label note;","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"lihaoquan"},"content":"    @FXML","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"lihaoquan"},"content":"        String noteDate \u003d \"\";","lastModifiedDate":"2024-03-11"},{"lineNumber":62,"author":{"gitId":"lihaoquan"},"content":"        if (!person.getNoteDate().isEmpty()) {","lastModifiedDate":"2024-03-11"},{"lineNumber":63,"author":{"gitId":"lihaoquan"},"content":"            noteDate \u003d \", \" + person.getNoteDate();","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"lihaoquan"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":65,"author":{"gitId":"lihaoquan"},"content":"        note.setText(person.getNote().value + noteDate);","lastModifiedDate":"2024-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":67,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"lihaoquan":8,"ys112":1,"-":59}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"                return;","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"            if (person instanceof Applicant) {","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"                setGraphic(new ApplicantCard((Applicant) person, getIndex() + 1).getRoot());","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ys112":6,"-":49}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"YuvBindal"},"content":"        logger.info(\"Launching HR Connect...\");","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"YuvBindal":1,"-":87}},{"path":"src/main/resources/view/ApplicantListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"      \u003cLabel fx:id\u003d\"role\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$role\" /\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"      \u003cLabel fx:id\u003d\"stage\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$stage\"/\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"lihaoquan"},"content":"      \u003cLabel fx:id\u003d\"note\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$note\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"lihaoquan":1,"ys112":42}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"YuvBindal"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Welcome to HR Connect: Enter command here...\"/\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"YuvBindal":1,"-":8}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"lihaoquan"},"content":"      \u003cLabel fx:id\u003d\"note\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$note\" /\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lihaoquan":1,"ys112":8,"-":32}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"import seedu.address.logic.commands.AddApplicantCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"ys112"},"content":"        String addApplicantCommand \u003d AddApplicantCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-03-18"},{"lineNumber":170,"author":{"gitId":"ys112"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + ROLE_DESC_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"ys112"},"content":"        assertCommandFailure(addApplicantCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"ys112":5,"-":171}},{"path":"src/test/java/seedu/address/logic/commands/AddApplicantCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"import static seedu.address.testutil.TypicalApplicants.getTypicalApplicantsAddressBook;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"import seedu.address.testutil.ApplicantBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"public class AddApplicantCommandIntegrationTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"    private Model model;","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"        model \u003d new ModelManager(getTypicalApplicantsAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"    public void execute_newApplicant_success() {","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"        Person validPerson \u003d new PersonBuilder().withName(\"Ma Yun\").build();","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"        Applicant validApplicant \u003d new ApplicantBuilder(validPerson).withRole(\"CEO\").build();","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"        expectedModel.addPerson(validApplicant);","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"        assertCommandSuccess(new AddApplicantCommand(validApplicant), model,","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"                String.format(AddApplicantCommand.MESSAGE_SUCCESS, Messages.format(validApplicant)),","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"                expectedModel);","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"    public void execute_duplicateApplicant_throwsCommandException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"        assertCommandFailure(new AddApplicantCommand((Applicant) personInList), model,","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"            AddApplicantCommand.MESSAGE_DUPLICATE_APPLICANT);","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"ys112":53}},{"path":"src/test/java/seedu/address/logic/commands/AddApplicantCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"import static seedu.address.testutil.TypicalApplicants.HELLEN_APPLICANT;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"import static seedu.address.testutil.TypicalApplicants.IVAN_APPLICANT;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"import seedu.address.testutil.ApplicantBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"public class AddApplicantCommandTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddApplicantCommand(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"    public void execute_applicantAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"        Applicant validApplicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"        CommandResult commandResult \u003d new AddApplicantCommand(validApplicant).execute(modelStub);","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"        assertEquals(String.format(AddApplicantCommand.MESSAGE_SUCCESS, Messages.format(validApplicant)),","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"        assertEquals(Arrays.asList(validApplicant), modelStub.personsAdded);","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"    public void execute_duplicateApplicant_throwsCommandException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"        Applicant validApplicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"        AddApplicantCommand addApplicantCommand \u003d new AddApplicantCommand(validApplicant);","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validApplicant);","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"        assertThrows(CommandException.class, AddApplicantCommand.MESSAGE_DUPLICATE_APPLICANT, () -\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"            addApplicantCommand.execute(modelStub));","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"    public void equals() {","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"ys112"},"content":"        AddApplicantCommand addHellenApplicantCommand \u003d new AddApplicantCommand(HELLEN_APPLICANT);","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"        AddApplicantCommand addIvanApplicantCommand \u003d new AddApplicantCommand(IVAN_APPLICANT);","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"        assertTrue(addHellenApplicantCommand.equals(addHellenApplicantCommand));","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"ys112"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"ys112"},"content":"        AddApplicantCommand addHellenApplicantCommandCopy \u003d new AddApplicantCommand(HELLEN_APPLICANT);","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"ys112"},"content":"        assertTrue(addHellenApplicantCommand.equals(addHellenApplicantCommandCopy));","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"ys112"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"ys112"},"content":"        assertFalse(addHellenApplicantCommand.equals(1));","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"ys112"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"ys112"},"content":"        assertFalse(addHellenApplicantCommand.equals(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"ys112"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"ys112"},"content":"        assertFalse(addHellenApplicantCommand.equals(addIvanApplicantCommand));","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"ys112"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"ys112"},"content":"        AddApplicantCommand addApplicantCommand \u003d new AddApplicantCommand(HELLEN_APPLICANT);","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"ys112"},"content":"        String expected \u003d AddApplicantCommand.class.getCanonicalName() + \"{toAddApplicant\u003d\" + HELLEN_APPLICANT + \"}\";","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"ys112"},"content":"        assertEquals(expected, addApplicantCommand.toString());","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"ys112"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"ys112"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"ys112"},"content":"        @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"ys112"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"ys112"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"ys112"},"content":"        @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"ys112"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"ys112"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"ys112"},"content":"        @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"ys112"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"ys112"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"ys112"},"content":"        @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"ys112"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"ys112"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"ys112"},"content":"        @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"ys112"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"ys112"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":116,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":117,"author":{"gitId":"ys112"},"content":"        @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"ys112"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"ys112"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"ys112"},"content":"        @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"ys112"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"ys112"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"ys112"},"content":"        @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"ys112"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"ys112"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"ys112"},"content":"        @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"ys112"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"ys112"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":135,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":136,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"ys112"},"content":"        @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":138,"author":{"gitId":"ys112"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-14"},{"lineNumber":139,"author":{"gitId":"ys112"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":140,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":141,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":142,"author":{"gitId":"ys112"},"content":"        @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":143,"author":{"gitId":"ys112"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2024-03-14"},{"lineNumber":144,"author":{"gitId":"ys112"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":145,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":146,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":147,"author":{"gitId":"ys112"},"content":"        @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":148,"author":{"gitId":"ys112"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2024-03-14"},{"lineNumber":149,"author":{"gitId":"ys112"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":150,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":151,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":152,"author":{"gitId":"ys112"},"content":"        @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":153,"author":{"gitId":"ys112"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2024-03-14"},{"lineNumber":154,"author":{"gitId":"ys112"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":155,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":156,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":157,"author":{"gitId":"ys112"},"content":"        @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":158,"author":{"gitId":"ys112"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-03-14"},{"lineNumber":159,"author":{"gitId":"ys112"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-14"},{"lineNumber":160,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":161,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":162,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":163,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":164,"author":{"gitId":"ys112"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2024-03-14"},{"lineNumber":165,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":166,"author":{"gitId":"ys112"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2024-03-14"},{"lineNumber":167,"author":{"gitId":"ys112"},"content":"        private final Person person;","lastModifiedDate":"2024-03-14"},{"lineNumber":168,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":169,"author":{"gitId":"ys112"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2024-03-14"},{"lineNumber":170,"author":{"gitId":"ys112"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-14"},{"lineNumber":171,"author":{"gitId":"ys112"},"content":"            this.person \u003d person;","lastModifiedDate":"2024-03-14"},{"lineNumber":172,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":173,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":174,"author":{"gitId":"ys112"},"content":"        @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":175,"author":{"gitId":"ys112"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-14"},{"lineNumber":176,"author":{"gitId":"ys112"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-14"},{"lineNumber":177,"author":{"gitId":"ys112"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2024-03-14"},{"lineNumber":178,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":179,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":180,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":181,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":182,"author":{"gitId":"ys112"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2024-03-14"},{"lineNumber":183,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":184,"author":{"gitId":"ys112"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2024-03-14"},{"lineNumber":185,"author":{"gitId":"ys112"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-14"},{"lineNumber":186,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":187,"author":{"gitId":"ys112"},"content":"        @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":188,"author":{"gitId":"ys112"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-14"},{"lineNumber":189,"author":{"gitId":"ys112"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-14"},{"lineNumber":190,"author":{"gitId":"ys112"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2024-03-14"},{"lineNumber":191,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":192,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":193,"author":{"gitId":"ys112"},"content":"        @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":194,"author":{"gitId":"ys112"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2024-03-14"},{"lineNumber":195,"author":{"gitId":"ys112"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-14"},{"lineNumber":196,"author":{"gitId":"ys112"},"content":"            personsAdded.add(person);","lastModifiedDate":"2024-03-14"},{"lineNumber":197,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":198,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":199,"author":{"gitId":"ys112"},"content":"        @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":200,"author":{"gitId":"ys112"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-14"},{"lineNumber":201,"author":{"gitId":"ys112"},"content":"            return new AddressBook();","lastModifiedDate":"2024-03-14"},{"lineNumber":202,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":203,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":204,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":205,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"ys112":205}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE_WITH_DATE;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STAGE;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"xinen26"},"content":"import seedu.address.testutil.EditApplicantDescriptorBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"xinen26"},"content":"    public static final String VALID_NAME_CHLOE \u003d \"Chloe Lim\";","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"xinen26"},"content":"    public static final String VALID_PHONE_CHLOE \u003d \"33333333\";","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"xinen26"},"content":"    public static final String VALID_EMAIL_CHLOE \u003d \"chloe@example.com\";","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"xinen26"},"content":"    public static final String VALID_ADDRESS_CHLOE \u003d \"Block 456, Chloe Street 2\";","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"    public static final String VALID_ROLE_AMY \u003d \"SWE\";","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"    public static final String VALID_ROLE_BOB \u003d \"Frontend Engineer\";","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"xinen26"},"content":"    public static final String VALID_ROLE_CHLOE \u003d \"ML Engineer\";","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"    public static final String VALID_STAGE_AMY \u003d \"initial_application\";","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"    public static final String VALID_STAGE_BOB \u003d \"initial_application\";","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"xinen26"},"content":"    public static final String VALID_STAGE_CHLOE \u003d \"final_round\";","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"    public static final String VALID_NOTE_BOB \u003d \"forbes 30 under 30\";","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"    public static final String VALID_NOTEDATE_BOB \u003d \"\";","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + \" \" + VALID_NAME_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + \" \" + VALID_NAME_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"xinen26"},"content":"    public static final String NAME_DESC_CHLOE \u003d \" \" + PREFIX_NAME + \" \" + VALID_NAME_CHLOE;","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + \" \" + VALID_PHONE_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + \" \" + VALID_PHONE_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"xinen26"},"content":"    public static final String PHONE_DESC_CHLOE \u003d \" \" + PREFIX_PHONE + \" \" + VALID_PHONE_CHLOE;","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + \" \" + VALID_EMAIL_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + \" \" + VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"xinen26"},"content":"    public static final String EMAIL_DESC_CHLOE \u003d \" \" + PREFIX_EMAIL + \" \" + VALID_EMAIL_CHLOE;","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + \" \" + VALID_ADDRESS_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"ys112"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + \" \" + VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"xinen26"},"content":"    public static final String ADDRESS_DESC_CHLOE \u003d \" \" + PREFIX_ADDRESS + \" \" + VALID_ADDRESS_CHLOE;","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"ys112"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + \" \" + VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"ys112"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + \" \" + VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"ys112"},"content":"    public static final String ROLE_DESC_AMY \u003d \" \" + PREFIX_ROLE + \" \" + VALID_ROLE_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"ys112"},"content":"    public static final String ROLE_DESC_BOB \u003d \" \" + PREFIX_ROLE + \" \" + VALID_ROLE_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"xinen26"},"content":"    public static final String ROLE_DESC_CHLOE \u003d \" \" + PREFIX_ROLE + \" \" + VALID_ROLE_CHLOE;","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"ys112"},"content":"    public static final String STAGE_DESC_AMY \u003d \" \" + PREFIX_STAGE + \" \" + VALID_ROLE_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"ys112"},"content":"    public static final String STAGE_DESC_BOB \u003d \" \" + PREFIX_STAGE + \" \" + VALID_ROLE_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"xinen26"},"content":"    public static final String STAGE_DESC_CHLOE \u003d \" \" + PREFIX_STAGE + \" \" + VALID_ROLE_CHLOE;","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"ys112"},"content":"    public static final String NOTE_DESC_BOB \u003d \" \" + PREFIX_NOTE + \" \" + VALID_NOTE_BOB;","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"ys112"},"content":"    public static final String NOTEDATE_DESC_BOB \u003d \" \" + PREFIX_NOTE_WITH_DATE + \" \" + VALID_NOTEDATE_BOB;","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"ys112"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \" \" + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"ys112"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \" \" + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"ys112"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \" \" + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \" hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"xinen26"},"content":"    public static final EditApplicantCommand.EditApplicantDescriptor DESC_CHLOE;","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"xinen26"},"content":"        DESC_CHLOE \u003d new EditApplicantDescriptorBuilder().withName(VALID_NAME_CHLOE)","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"xinen26"},"content":"                .withPhone(VALID_PHONE_CHLOE).withEmail(VALID_EMAIL_CHLOE).withAddress(VALID_ADDRESS_CHLOE)","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"xinen26"},"content":"                .withRole(VALID_ROLE_CHLOE).withStage(VALID_STAGE_CHLOE).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"ys112":29,"xinen26":17,"-":113}},{"path":"src/test/java/seedu/address/logic/commands/EditApplicantCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xinen26"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"xinen26"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"xinen26"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_CHLOE;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"xinen26"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STAGE_CHLOE;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"xinen26"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"xinen26"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"xinen26"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"xinen26"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"xinen26"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"xinen26"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalApplicantBook;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"xinen26"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"xinen26"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"xinen26"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"xinen26"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"xinen26"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"xinen26"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"xinen26"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"xinen26"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"xinen26"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"xinen26"},"content":"import seedu.address.testutil.ApplicantBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"xinen26"},"content":"import seedu.address.testutil.EditApplicantDescriptorBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"xinen26"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"xinen26"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"xinen26"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"xinen26"},"content":"public class EditApplicantCommandTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"xinen26"},"content":"    private Model model \u003d new ModelManager(getTypicalApplicantBook(), new UserPrefs());","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"xinen26"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"xinen26"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"xinen26"},"content":"        Applicant editedApplicant \u003d new ApplicantBuilder().build();","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"xinen26"},"content":"        EditApplicantCommand.EditApplicantDescriptor descriptor \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"xinen26"},"content":"                new EditApplicantDescriptorBuilder(editedApplicant).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"xinen26"},"content":"        EditApplicantCommand editApplicantCommand \u003d new EditApplicantCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"xinen26"},"content":"                descriptor);","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"xinen26"},"content":"        String expectedMessage \u003d String.format(EditApplicantCommand.MESSAGE_EDIT_APPLICANT_SUCCESS,","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"xinen26"},"content":"                Messages.format(editedApplicant));","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"xinen26"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"xinen26"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedApplicant);","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"xinen26"},"content":"        assertCommandSuccess(editApplicantCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"xinen26"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"xinen26"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"xinen26"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"xinen26"},"content":"        EditApplicantCommand editApplicantCommand \u003d new EditApplicantCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"xinen26"},"content":"                new EditApplicantCommand.EditApplicantDescriptor());","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"xinen26"},"content":"        Person editedPerson \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"xinen26"},"content":"                model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"xinen26"},"content":"        Applicant editedApplicant \u003d new ApplicantBuilder(editedPerson).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"xinen26"},"content":"        String expectedMessage \u003d String.format(EditApplicantCommand.MESSAGE_EDIT_APPLICANT_SUCCESS,","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"xinen26"},"content":"                Messages.format(editedApplicant));","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"xinen26"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"xinen26"},"content":"        assertCommandSuccess(editApplicantCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"xinen26"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"xinen26"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"xinen26"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"xinen26"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"xinen26"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"xinen26"},"content":"        Applicant editedApplicant \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"xinen26"},"content":"                new ApplicantBuilder(personInFilteredList).withRole(VALID_ROLE_CHLOE).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"xinen26"},"content":"        EditApplicantCommand editApplicantCommand \u003d new EditApplicantCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"xinen26"},"content":"                new EditApplicantDescriptorBuilder().withRole(VALID_ROLE_CHLOE).build());","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"xinen26"},"content":"        String expectedMessage \u003d String.format(EditApplicantCommand.MESSAGE_EDIT_APPLICANT_SUCCESS,","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"xinen26"},"content":"                Messages.format(editedApplicant));","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"xinen26"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"xinen26"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedApplicant);","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"xinen26"},"content":"        assertCommandSuccess(editApplicantCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"xinen26"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"xinen26"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"xinen26"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"xinen26"},"content":"     * but smaller than size of address book","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"xinen26"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"xinen26"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"xinen26"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"xinen26"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"xinen26"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"xinen26"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"xinen26"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"xinen26"},"content":"        EditApplicantCommand editApplicantCommand \u003d new EditApplicantCommand(outOfBoundIndex,","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"xinen26"},"content":"                new EditApplicantDescriptorBuilder().withStage(VALID_STAGE_CHLOE).build());","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"xinen26"},"content":"        assertCommandFailure(editApplicantCommand, model,","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"xinen26"},"content":"                Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"xinen26"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"xinen26"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"xinen26":106}},{"path":"src/test/java/seedu/address/logic/commands/EditApplicantDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xinen26"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"xinen26"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"xinen26"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"xinen26"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"xinen26"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_CHLOE;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"xinen26"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NOTE_DESC_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"xinen26"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"xinen26"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STAGE_DESC_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"xinen26"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"xinen26"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"xinen26"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"xinen26"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"xinen26"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"xinen26"},"content":"import seedu.address.logic.commands.EditApplicantCommand.EditApplicantDescriptor;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"xinen26"},"content":"import seedu.address.testutil.EditApplicantDescriptorBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"xinen26"},"content":"public class EditApplicantDescriptorTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"xinen26"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"xinen26"},"content":"    public void equals() {","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"xinen26"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"xinen26"},"content":"        EditApplicantDescriptor descriptorWithSameValues \u003d new EditApplicantDescriptor(DESC_CHLOE);","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"xinen26"},"content":"        assertTrue(DESC_CHLOE.equals(descriptorWithSameValues));","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"xinen26"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"xinen26"},"content":"        assertTrue(DESC_CHLOE.equals(DESC_CHLOE));","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"xinen26"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"xinen26"},"content":"        assertFalse(DESC_CHLOE.equals(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"xinen26"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"xinen26"},"content":"        assertFalse(DESC_CHLOE.equals(5));","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"xinen26"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"xinen26"},"content":"        assertFalse(DESC_CHLOE.equals(DESC_BOB));","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"xinen26"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"xinen26"},"content":"        EditApplicantDescriptor editedChloe \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"xinen26"},"content":"                new EditApplicantDescriptorBuilder(DESC_CHLOE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"xinen26"},"content":"        assertFalse(DESC_CHLOE.equals(editedChloe));","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"xinen26"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"xinen26"},"content":"        editedChloe \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"xinen26"},"content":"                new EditApplicantDescriptorBuilder(DESC_CHLOE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"xinen26"},"content":"        assertFalse(DESC_CHLOE.equals(editedChloe));","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"xinen26"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"xinen26"},"content":"        editedChloe \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"xinen26"},"content":"                new EditApplicantDescriptorBuilder(DESC_CHLOE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"xinen26"},"content":"        assertFalse(DESC_CHLOE.equals(editedChloe));","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"xinen26"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"xinen26"},"content":"        editedChloe \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"xinen26"},"content":"                new EditApplicantDescriptorBuilder(DESC_CHLOE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"xinen26"},"content":"        assertFalse(DESC_CHLOE.equals(editedChloe));","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"xinen26"},"content":"        // different role -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"xinen26"},"content":"        editedChloe \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"xinen26"},"content":"                new EditApplicantDescriptorBuilder(DESC_CHLOE).withRole(ROLE_DESC_BOB).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"xinen26"},"content":"        assertFalse(DESC_CHLOE.equals(editedChloe));","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"xinen26"},"content":"        // different stage -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"xinen26"},"content":"        editedChloe \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"xinen26"},"content":"                new EditApplicantDescriptorBuilder(DESC_CHLOE).withStage(STAGE_DESC_BOB).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"xinen26"},"content":"        assertFalse(DESC_CHLOE.equals(editedChloe));","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"xinen26"},"content":"        // different note -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"xinen26"},"content":"        editedChloe \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"xinen26"},"content":"                new EditApplicantDescriptorBuilder(DESC_CHLOE).withNote(NOTE_DESC_BOB).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"xinen26"},"content":"        assertFalse(DESC_CHLOE.equals(editedChloe));","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"xinen26"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"xinen26"},"content":"}","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"xinen26":80}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"lihaoquan"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \", note\u003d\"","lastModifiedDate":"2024-03-11"},{"lineNumber":69,"author":{"gitId":"lihaoquan"},"content":"                + editPersonDescriptor.getNote().orElse(null) + \"}\";","lastModifiedDate":"2024-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"lihaoquan":2,"-":70}},{"path":"src/test/java/seedu/address/logic/commands/NoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lihaoquan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-06"},{"lineNumber":2,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"lihaoquan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"lihaoquan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"lihaoquan"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"lihaoquan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"lihaoquan"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"lihaoquan"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"lihaoquan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"lihaoquan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"lihaoquan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"lihaoquan"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"lihaoquan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"lihaoquan"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"lihaoquan"},"content":"class NoteCommandTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"lihaoquan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"lihaoquan"},"content":"    @Test","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"lihaoquan"},"content":"    void execute_addNoteUnfilteredList_success() {","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"lihaoquan"},"content":"        Person targetPerson \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"lihaoquan"},"content":"        Person editedPerson \u003d new PersonBuilder(targetPerson).withNote(\"Updated Note\").build();","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"lihaoquan"},"content":"        NoteCommand executeCommand \u003d new NoteCommand(INDEX_FIRST_PERSON, new Note(\"Updated Note\"), false);","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"lihaoquan"},"content":"        String expectedResult \u003d String.format(executeCommand.MESSAGE_ADD_NOTE_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"lihaoquan"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"lihaoquan"},"content":"        expectedModel.setPerson(targetPerson, editedPerson);","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"lihaoquan"},"content":"        assertCommandSuccess(executeCommand, model, expectedResult, expectedModel);","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"lihaoquan"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"lihaoquan"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"lihaoquan"},"content":"    void execute_addNoteUnfilteredListWithDate_success() {","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"lihaoquan"},"content":"        Person targetPerson \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"lihaoquan"},"content":"        Person editedPerson \u003d new PersonBuilder(targetPerson).withNote(\"Updated Note\").withNoteDate().build();","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"lihaoquan"},"content":"        NoteCommand executeCommand \u003d new NoteCommand(INDEX_FIRST_PERSON, new Note(\"Updated Note\"), true);","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"lihaoquan"},"content":"        String expectedResult \u003d String.format(executeCommand.MESSAGE_ADD_NOTE_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"lihaoquan"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"lihaoquan"},"content":"        expectedModel.setPerson(targetPerson, editedPerson);","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"lihaoquan"},"content":"        assertCommandSuccess(executeCommand, model, expectedResult, expectedModel);","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"lihaoquan"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"lihaoquan"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"lihaoquan":53}},{"path":"src/test/java/seedu/address/logic/parser/AddApplicantCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STAGE_DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STAGE_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STAGE_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STAGE;","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"import seedu.address.logic.commands.AddApplicantCommand;","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"import seedu.address.testutil.ApplicantBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"public class AddApplicantCommandParserTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"    private AddApplicantCommandParser parser \u003d new AddApplicantCommandParser();","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"        Applicant expectedApplicant \u003d new ApplicantBuilder(BOB).withRole(VALID_ROLE_BOB)","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"            .withStage(VALID_STAGE_BOB).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"ys112"},"content":"        // whitespace only preamble","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"ys112"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"ys112"},"content":"                + ADDRESS_DESC_BOB + ROLE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"ys112"},"content":"            new AddApplicantCommand(expectedApplicant));","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"ys112"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"ys112"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"ys112"},"content":"                .build();","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"ys112"},"content":"        Applicant expectedApplicantMultipleTags \u003d new ApplicantBuilder(expectedPersonMultipleTags)","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"ys112"},"content":"            .withRole(VALID_ROLE_BOB).withStage(VALID_STAGE_BOB).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"ys112"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"ys112"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + ROLE_DESC_BOB","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"ys112"},"content":"                    + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddApplicantCommand(expectedApplicantMultipleTags));","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"ys112"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"ys112"},"content":"        String validExpectedApplicantString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"ys112"},"content":"                + ADDRESS_DESC_BOB + ROLE_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"ys112"},"content":"        // multiple names","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"ys112"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedApplicantString,","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"ys112"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"ys112"},"content":"        // multiple phones","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"ys112"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedApplicantString,","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"ys112"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"ys112"},"content":"        // multiple emails","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"ys112"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedApplicantString,","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"ys112"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"ys112"},"content":"        // multiple addresses","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"ys112"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedApplicantString,","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"ys112"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"ys112"},"content":"        // multiple role","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"ys112"},"content":"        assertParseFailure(parser, ROLE_DESC_AMY + validExpectedApplicantString,","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"ys112"},"content":"            Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ROLE));","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"ys112"},"content":"        // multiple fields repeated","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"ys112"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"ys112"},"content":"                validExpectedApplicantString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"ys112"},"content":"                    + ADDRESS_DESC_AMY + validExpectedApplicantString,","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"ys112"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE,","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"ys112"},"content":"                    PREFIX_ROLE));","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":116,"author":{"gitId":"ys112"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2024-03-14"},{"lineNumber":117,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"ys112"},"content":"        // invalid name","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"ys112"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedApplicantString,","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"ys112"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"ys112"},"content":"        // invalid email","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"ys112"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedApplicantString,","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"ys112"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"ys112"},"content":"        // invalid phone","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"ys112"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedApplicantString,","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"ys112"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"ys112"},"content":"        // invalid address","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"ys112"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedApplicantString,","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"ys112"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"ys112"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2024-03-14"},{"lineNumber":135,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":136,"author":{"gitId":"ys112"},"content":"        // invalid name","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"ys112"},"content":"        assertParseFailure(parser, validExpectedApplicantString + INVALID_NAME_DESC,","lastModifiedDate":"2024-03-14"},{"lineNumber":138,"author":{"gitId":"ys112"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-14"},{"lineNumber":139,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":140,"author":{"gitId":"ys112"},"content":"        // invalid email","lastModifiedDate":"2024-03-14"},{"lineNumber":141,"author":{"gitId":"ys112"},"content":"        assertParseFailure(parser, validExpectedApplicantString + INVALID_EMAIL_DESC,","lastModifiedDate":"2024-03-14"},{"lineNumber":142,"author":{"gitId":"ys112"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2024-03-14"},{"lineNumber":143,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":144,"author":{"gitId":"ys112"},"content":"        // invalid phone","lastModifiedDate":"2024-03-14"},{"lineNumber":145,"author":{"gitId":"ys112"},"content":"        assertParseFailure(parser, validExpectedApplicantString + INVALID_PHONE_DESC,","lastModifiedDate":"2024-03-14"},{"lineNumber":146,"author":{"gitId":"ys112"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2024-03-14"},{"lineNumber":147,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":148,"author":{"gitId":"ys112"},"content":"        // invalid address","lastModifiedDate":"2024-03-14"},{"lineNumber":149,"author":{"gitId":"ys112"},"content":"        assertParseFailure(parser, validExpectedApplicantString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2024-03-14"},{"lineNumber":150,"author":{"gitId":"ys112"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2024-03-14"},{"lineNumber":151,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":152,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":153,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":154,"author":{"gitId":"ys112"},"content":"    public void parse_notRequiredFields_failure() {","lastModifiedDate":"2024-03-14"},{"lineNumber":155,"author":{"gitId":"ys112"},"content":"        String validExpectedApplicantString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":156,"author":{"gitId":"ys112"},"content":"            + ADDRESS_DESC_BOB + ROLE_DESC_BOB + STAGE_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-14"},{"lineNumber":157,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":158,"author":{"gitId":"ys112"},"content":"        // stage field not required","lastModifiedDate":"2024-03-14"},{"lineNumber":159,"author":{"gitId":"ys112"},"content":"        assertParseFailure(parser, validExpectedApplicantString + STAGE_DESC_BOB,","lastModifiedDate":"2024-03-14"},{"lineNumber":160,"author":{"gitId":"ys112"},"content":"            Messages.getErrorMessageForInputNotRequiredPrefixes(PREFIX_STAGE));","lastModifiedDate":"2024-03-14"},{"lineNumber":161,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":162,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":163,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":164,"author":{"gitId":"ys112"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2024-03-14"},{"lineNumber":165,"author":{"gitId":"ys112"},"content":"        // zero tags","lastModifiedDate":"2024-03-14"},{"lineNumber":166,"author":{"gitId":"ys112"},"content":"        Person expectedPerson \u003d new ApplicantBuilder(AMY).withTags().build();","lastModifiedDate":"2024-03-14"},{"lineNumber":167,"author":{"gitId":"ys112"},"content":"        Applicant expectedApplicant \u003d new ApplicantBuilder(expectedPerson).withRole(VALID_ROLE_AMY)","lastModifiedDate":"2024-03-14"},{"lineNumber":168,"author":{"gitId":"ys112"},"content":"            .withStage(VALID_STAGE_AMY).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":169,"author":{"gitId":"ys112"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2024-03-14"},{"lineNumber":170,"author":{"gitId":"ys112"},"content":"                + ROLE_DESC_AMY, new AddApplicantCommand(expectedApplicant));","lastModifiedDate":"2024-03-14"},{"lineNumber":171,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":172,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":173,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":174,"author":{"gitId":"ys112"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2024-03-14"},{"lineNumber":175,"author":{"gitId":"ys112"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddApplicantCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-14"},{"lineNumber":176,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":177,"author":{"gitId":"ys112"},"content":"        // missing name prefix","lastModifiedDate":"2024-03-14"},{"lineNumber":178,"author":{"gitId":"ys112"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":179,"author":{"gitId":"ys112"},"content":"                + ROLE_DESC_BOB, expectedMessage);","lastModifiedDate":"2024-03-14"},{"lineNumber":180,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":181,"author":{"gitId":"ys112"},"content":"        // missing phone prefix","lastModifiedDate":"2024-03-14"},{"lineNumber":182,"author":{"gitId":"ys112"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":183,"author":{"gitId":"ys112"},"content":"            + ROLE_DESC_BOB, expectedMessage);","lastModifiedDate":"2024-03-14"},{"lineNumber":184,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":185,"author":{"gitId":"ys112"},"content":"        // missing email prefix","lastModifiedDate":"2024-03-14"},{"lineNumber":186,"author":{"gitId":"ys112"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":187,"author":{"gitId":"ys112"},"content":"            + ROLE_DESC_BOB, expectedMessage);","lastModifiedDate":"2024-03-14"},{"lineNumber":188,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":189,"author":{"gitId":"ys112"},"content":"        // missing address prefix","lastModifiedDate":"2024-03-14"},{"lineNumber":190,"author":{"gitId":"ys112"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":191,"author":{"gitId":"ys112"},"content":"            + ROLE_DESC_BOB, expectedMessage);","lastModifiedDate":"2024-03-14"},{"lineNumber":192,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":193,"author":{"gitId":"ys112"},"content":"        // missing role prefix","lastModifiedDate":"2024-03-14"},{"lineNumber":194,"author":{"gitId":"ys112"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2024-03-14"},{"lineNumber":195,"author":{"gitId":"ys112"},"content":"            expectedMessage);","lastModifiedDate":"2024-03-14"},{"lineNumber":196,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":197,"author":{"gitId":"ys112"},"content":"        // all prefixes missing","lastModifiedDate":"2024-03-14"},{"lineNumber":198,"author":{"gitId":"ys112"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":199,"author":{"gitId":"ys112"},"content":"            + VALID_ROLE_AMY, expectedMessage);","lastModifiedDate":"2024-03-14"},{"lineNumber":200,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":201,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":202,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":203,"author":{"gitId":"ys112"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-14"},{"lineNumber":204,"author":{"gitId":"ys112"},"content":"        // invalid name","lastModifiedDate":"2024-03-14"},{"lineNumber":205,"author":{"gitId":"ys112"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":206,"author":{"gitId":"ys112"},"content":"                + ROLE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":207,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":208,"author":{"gitId":"ys112"},"content":"        // invalid phone","lastModifiedDate":"2024-03-14"},{"lineNumber":209,"author":{"gitId":"ys112"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":210,"author":{"gitId":"ys112"},"content":"                + ROLE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":211,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":212,"author":{"gitId":"ys112"},"content":"        // invalid email","lastModifiedDate":"2024-03-14"},{"lineNumber":213,"author":{"gitId":"ys112"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":214,"author":{"gitId":"ys112"},"content":"                + ROLE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":215,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":216,"author":{"gitId":"ys112"},"content":"        // invalid address","lastModifiedDate":"2024-03-14"},{"lineNumber":217,"author":{"gitId":"ys112"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2024-03-14"},{"lineNumber":218,"author":{"gitId":"ys112"},"content":"                + ROLE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":219,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":220,"author":{"gitId":"ys112"},"content":"        // invalid tag","lastModifiedDate":"2024-03-14"},{"lineNumber":221,"author":{"gitId":"ys112"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":222,"author":{"gitId":"ys112"},"content":"                + ROLE_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":223,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":224,"author":{"gitId":"ys112"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2024-03-14"},{"lineNumber":225,"author":{"gitId":"ys112"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2024-03-14"},{"lineNumber":226,"author":{"gitId":"ys112"},"content":"                + ROLE_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":227,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":228,"author":{"gitId":"ys112"},"content":"        // non-empty preamble","lastModifiedDate":"2024-03-14"},{"lineNumber":229,"author":{"gitId":"ys112"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":230,"author":{"gitId":"ys112"},"content":"                + ADDRESS_DESC_BOB + ROLE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-14"},{"lineNumber":231,"author":{"gitId":"ys112"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddApplicantCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-14"},{"lineNumber":232,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":233,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"ys112":233}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"                    + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"ys112"},"content":"                        + validExpectedPersonString, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME,","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"ys112"},"content":"                PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"ys112":4,"-":192}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"import static seedu.address.testutil.TypicalApplicants.HELLEN_APPLICANT;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"import seedu.address.logic.commands.AddApplicantCommand;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"import seedu.address.testutil.ApplicantUtil;","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"    public void parseCommand_addApplicant() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"        AddApplicantCommand command \u003d (AddApplicantCommand) parser.parseCommand(","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"            ApplicantUtil.getAddApplicantCommand(HELLEN_APPLICANT));","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"        assertEquals(new AddApplicantCommand(HELLEN_APPLICANT), command);","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"ys112":8,"-":81}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedApplicantTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"import static seedu.address.storage.JsonAdaptedApplicant.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"import static seedu.address.testutil.TypicalApplicants.BENSON;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"import static seedu.address.testutil.TypicalApplicants.BENSON_APPLICANT;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"import java.util.List;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"import seedu.address.model.applicant.Role;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"import seedu.address.model.applicant.Stage;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"public class JsonAdaptedApplicantTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"    // Currently stage and role has no constraint hence no invalid data","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"    //TODO remove code duplications","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"    private static final String VALID_ROLE \u003d BENSON_APPLICANT.getRole().toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"    private static final String VALID_STAGE \u003d BENSON_APPLICANT.getPhone().toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"        .map(JsonAdaptedTag::new)","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"        .collect(Collectors.toList());","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"    private static final String VALID_NOTE \u003d TypicalPersons.BENSON.getNote().toString();","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"    private static final String VALID_NOTE_DATE \u003d TypicalPersons.BENSON.getNoteDate();","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"    public void toModelType_validApplicantDetails_returnsApplicant() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"        JsonAdaptedApplicant applicant \u003d new JsonAdaptedApplicant(BENSON_APPLICANT);","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"        assertEquals(BENSON_APPLICANT, applicant.toModelType());","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"    public void toModelType_nullRole_throwsIllegalValueException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"        JsonAdaptedApplicant applicant \u003d new JsonAdaptedApplicant(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"            null, VALID_STAGE, VALID_TAGS, VALID_NOTE, VALID_NOTE_DATE);","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Role.class.getSimpleName());","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"    public void toModelType_nullStage_throwsIllegalValueException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"        JsonAdaptedApplicant applicant \u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"                new JsonAdaptedApplicant(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_ROLE, null,","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"                    VALID_TAGS, VALID_NOTE, VALID_NOTE_DATE);","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Stage.class.getSimpleName());","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, applicant::toModelType);","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"ys112":57}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"lihaoquan"},"content":"    private static final String VALID_NOTE \u003d BENSON.getNote().toString();","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"lihaoquan"},"content":"    private static final String VALID_NOTE_DATE \u003d BENSON.getNoteDate();","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"lihaoquan"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"lihaoquan"},"content":"                        VALID_NOTE, VALID_NOTE_DATE);","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"lihaoquan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"lihaoquan"},"content":"                VALID_TAGS, VALID_NOTE, VALID_NOTE_DATE);","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"lihaoquan"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"lihaoquan"},"content":"                        VALID_NOTE, VALID_NOTE_DATE);","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"lihaoquan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"lihaoquan"},"content":"                VALID_TAGS, VALID_NOTE, VALID_NOTE_DATE);","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"lihaoquan"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"lihaoquan"},"content":"                        VALID_NOTE, VALID_NOTE_DATE);","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"lihaoquan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"lihaoquan"},"content":"                VALID_TAGS, VALID_NOTE, VALID_NOTE_DATE);","lastModifiedDate":"2024-03-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"lihaoquan"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2024-03-13"},{"lineNumber":99,"author":{"gitId":"lihaoquan"},"content":"                        VALID_NOTE, VALID_NOTE_DATE);","lastModifiedDate":"2024-03-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"lihaoquan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2024-03-13"},{"lineNumber":107,"author":{"gitId":"lihaoquan"},"content":"                VALID_TAGS, VALID_NOTE, VALID_NOTE_DATE);","lastModifiedDate":"2024-03-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"lihaoquan"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags,","lastModifiedDate":"2024-03-13"},{"lineNumber":118,"author":{"gitId":"lihaoquan"},"content":"                        VALID_NOTE, VALID_NOTE_DATE);","lastModifiedDate":"2024-03-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"lihaoquan":21,"-":101}},{"path":"src/test/java/seedu/address/testutil/ApplicantBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"import seedu.address.model.applicant.Role;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"import seedu.address.model.applicant.Stage;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":" * A utility class to help with building Applicant objects.","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"public class ApplicantBuilder extends PersonBuilder {","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"    public static final String DEFAULT_ROLE \u003d \"SWE\";","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"    public static final String DEFAULT_STAGE \u003d \"initial_application\";","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"    private Role role;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"    private Stage stage;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"     * Creates a {@code ApplicantBuilder} with the default details.","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"    public ApplicantBuilder() {","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"        super();","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"        role \u003d new Role(DEFAULT_ROLE);","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"        stage \u003d new Stage(DEFAULT_STAGE);","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"     * Initializes the ApplicantBuilder with the data of {@code applicantToCopy}.","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"    public ApplicantBuilder(Applicant applicantToCopy) {","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"        super(applicantToCopy);","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"        role \u003d applicantToCopy.getRole();","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"        stage \u003d applicantToCopy.getStage();","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"     * Initializes the ApplicantBuilder with the data of {@code personToCopy} with default fields of applicants","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"    public ApplicantBuilder(Person personToCopy) {","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"        super(personToCopy);","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"        role \u003d new Role(DEFAULT_ROLE);","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"        stage \u003d new Stage(DEFAULT_STAGE);","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"     * Sets the {@code Role} of the {@code Applicant} that we are building.","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"    public ApplicantBuilder withRole(String role) {","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"        this.role \u003d new Role(role);","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"        return this;","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"     * Sets the {@code Stage} of the {@code Applicant} that we are building.","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"    public ApplicantBuilder withStage(String stage) {","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"        this.stage \u003d new Stage(stage);","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"        return this;","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"    public Applicant build() {","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"        Person p \u003d super.build();","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"        return new Applicant(p, role, stage);","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"ys112":68}},{"path":"src/test/java/seedu/address/testutil/ApplicantUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":"import seedu.address.logic.commands.AddApplicantCommand;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":" * A utility class for Applicant.","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"public class ApplicantUtil {","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"     * Returns an add command string for adding the {@code Applicant}.","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"    public static String getAddApplicantCommand(Applicant applicant) {","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"        return AddApplicantCommand.COMMAND_WORD + \" \" + getApplicantDetails(applicant);","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"     * Returns the part of command string for the given {@code applicant}\u0027s details.","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"    public static String getApplicantDetails(Applicant applicant) {","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"        sb.append(PREFIX_NAME + applicant.getName().fullName + \" \");","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"        sb.append(PREFIX_PHONE + applicant.getPhone().value + \" \");","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"        sb.append(PREFIX_EMAIL + applicant.getEmail().value + \" \");","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"        sb.append(PREFIX_ADDRESS + applicant.getAddress().value + \" \");","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"        sb.append(PREFIX_ROLE + applicant.getRole().roleName + \" \");","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"        applicant.getTags().stream().forEach(","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"        );","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"        return sb.toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"    public static String getEditApplicantDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"        // TODO for edit applicant","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"            } else {","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"ys112"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"        return sb.toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"ys112":65}},{"path":"src/test/java/seedu/address/testutil/EditApplicantDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xinen26"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"xinen26"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"xinen26"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"xinen26"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"xinen26"},"content":"import seedu.address.logic.commands.EditApplicantCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"xinen26"},"content":"import seedu.address.logic.commands.EditApplicantCommand.EditApplicantDescriptor;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"xinen26"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"xinen26"},"content":"import seedu.address.model.applicant.Role;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"xinen26"},"content":"import seedu.address.model.applicant.Stage;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"xinen26"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"xinen26"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"xinen26"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"xinen26"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"xinen26"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"xinen26"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"xinen26"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"xinen26"},"content":" * A utility class to help with building EditApplicantDescriptor objects.","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"xinen26"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"xinen26"},"content":"public class EditApplicantDescriptorBuilder {","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"xinen26"},"content":"    private EditApplicantCommand.EditApplicantDescriptor descriptor;","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"xinen26"},"content":"    public EditApplicantDescriptorBuilder() {","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"xinen26"},"content":"        descriptor \u003d new EditApplicantDescriptor();","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"xinen26"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"xinen26"},"content":"    public EditApplicantDescriptorBuilder(EditApplicantCommand.EditApplicantDescriptor descriptor) {","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"xinen26"},"content":"        this.descriptor \u003d new EditApplicantCommand.EditApplicantDescriptor(descriptor);","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"xinen26"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"xinen26"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"xinen26"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"xinen26"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"xinen26"},"content":"    public EditApplicantDescriptorBuilder(Applicant applicant) {","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"xinen26"},"content":"        descriptor \u003d new EditApplicantCommand.EditApplicantDescriptor();","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"xinen26"},"content":"        descriptor.setName(applicant.getName());","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"xinen26"},"content":"        descriptor.setPhone(applicant.getPhone());","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"xinen26"},"content":"        descriptor.setEmail(applicant.getEmail());","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"xinen26"},"content":"        descriptor.setAddress(applicant.getAddress());","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"xinen26"},"content":"        descriptor.setRole(applicant.getRole());","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"xinen26"},"content":"        descriptor.setNote(applicant.getNote());","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"xinen26"},"content":"        descriptor.setStage(applicant.getStage());","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"xinen26"},"content":"        descriptor.setTags(applicant.getTags());","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"xinen26"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"xinen26"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"xinen26"},"content":"     * Sets the {@code Name} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"xinen26"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"xinen26"},"content":"    public EditApplicantDescriptorBuilder withName(String name) {","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"xinen26"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"xinen26"},"content":"        return this;","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"xinen26"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"xinen26"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"xinen26"},"content":"     * Sets the {@code Phone} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"xinen26"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"xinen26"},"content":"    public EditApplicantDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"xinen26"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"xinen26"},"content":"        return this;","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"xinen26"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"xinen26"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"xinen26"},"content":"     * Sets the {@code Email} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"xinen26"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"xinen26"},"content":"    public EditApplicantDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"xinen26"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"xinen26"},"content":"        return this;","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"xinen26"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"xinen26"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"xinen26"},"content":"     * Sets the {@code Address} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"xinen26"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"xinen26"},"content":"    public EditApplicantDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"xinen26"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"xinen26"},"content":"        return this;","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"xinen26"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"xinen26"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"xinen26"},"content":"     * Sets the {@code Role} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"xinen26"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"xinen26"},"content":"    public EditApplicantDescriptorBuilder withRole(String role) {","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"xinen26"},"content":"        descriptor.setRole(new Role(role));","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"xinen26"},"content":"        return this;","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"xinen26"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"xinen26"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"xinen26"},"content":"     * Sets the {@code Stage} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"xinen26"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"xinen26"},"content":"    public EditApplicantDescriptorBuilder withStage(String stage) {","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"xinen26"},"content":"        descriptor.setStage(new Stage(stage));","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"xinen26"},"content":"        return this;","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"xinen26"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"xinen26"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"xinen26"},"content":"     * Sets the {@code Note} of the {@code EditApplicantDescriptor} that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"xinen26"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"xinen26"},"content":"    public EditApplicantDescriptorBuilder withNote(String note) {","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"xinen26"},"content":"        descriptor.setNote(new Note(note));","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"xinen26"},"content":"        return this;","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"xinen26"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"xinen26"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"xinen26"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditApplicantDescriptor}","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"xinen26"},"content":"     * that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"xinen26"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"xinen26"},"content":"    public EditApplicantDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2024-03-16"},{"lineNumber":110,"author":{"gitId":"xinen26"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"xinen26"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"xinen26"},"content":"        return this;","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"xinen26"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"xinen26"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"xinen26"},"content":"    public EditApplicantCommand.EditApplicantDescriptor build() {","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"xinen26"},"content":"        return descriptor;","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"xinen26"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"xinen26"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"xinen26":118}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"lihaoquan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"lihaoquan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"lihaoquan"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"lihaoquan"},"content":"    public static final String DEFAULT_NOTE \u003d \"\";","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"lihaoquan"},"content":"    public static final String DEFAULT_NOTE_DATE \u003d \"\";","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"lihaoquan"},"content":"    private Note note;","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"lihaoquan"},"content":"    private String noteDate;","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"lihaoquan"},"content":"        note \u003d new Note(DEFAULT_NOTE);","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"lihaoquan"},"content":"        noteDate \u003d DEFAULT_NOTE_DATE;","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"lihaoquan"},"content":"        note \u003d personToCopy.getNote();","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"lihaoquan"},"content":"        noteDate \u003d personToCopy.getNoteDate();","lastModifiedDate":"2024-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"lihaoquan"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":104,"author":{"gitId":"lihaoquan"},"content":"     * Sets the {@code Note} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-13"},{"lineNumber":105,"author":{"gitId":"lihaoquan"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":106,"author":{"gitId":"lihaoquan"},"content":"    public PersonBuilder withNote(String note) {","lastModifiedDate":"2024-03-11"},{"lineNumber":107,"author":{"gitId":"lihaoquan"},"content":"        this.note \u003d new Note(note);","lastModifiedDate":"2024-03-11"},{"lineNumber":108,"author":{"gitId":"lihaoquan"},"content":"        return this;","lastModifiedDate":"2024-03-06"},{"lineNumber":109,"author":{"gitId":"lihaoquan"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":110,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":111,"author":{"gitId":"lihaoquan"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"lihaoquan"},"content":"     * Sets the {@code withNoteDate} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"lihaoquan"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"lihaoquan"},"content":"    public PersonBuilder withNoteDate() {","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"lihaoquan"},"content":"        this.noteDate \u003d LocalDate.now().format(DateTimeFormatter.ofPattern(\"MMMM d, yy\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"lihaoquan"},"content":"        return this;","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"lihaoquan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"lihaoquan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":120,"author":{"gitId":"lihaoquan"},"content":"        return new Person(name, phone, email, address, tags, note, noteDate);","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"lihaoquan":28,"-":95}},{"path":"src/test/java/seedu/address/testutil/TypicalApplicants.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ys112"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"ys112"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"ys112"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"ys112"},"content":"import java.util.List;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"ys112"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"ys112"},"content":"import seedu.address.model.applicant.Applicant;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"ys112"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"ys112"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"ys112"},"content":" * A utility class containing a list of {@code Applicant} objects to be used in tests.","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"ys112"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"ys112"},"content":"public class TypicalApplicants {","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"ys112"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"ys112"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"ys112"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"ys112"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"ys112"},"content":"    public static final Applicant ALICE_APPLICANT \u003d new ApplicantBuilder(ALICE)","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"ys112"},"content":"        .withRole(\"SWE\").withStage(\"initial_application\").build();","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"ys112"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"ys112"},"content":"        .withAddress(\"311, Clementi Ave 2, #02-25\").withEmail(\"johnd@example.com\").withPhone(\"98765432\").build();","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"ys112"},"content":"    public static final Applicant BENSON_APPLICANT \u003d new ApplicantBuilder(BENSON)","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"ys112"},"content":"        .withRole(\"SWE\").withStage(\"initial_application\").build();","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"ys112"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"ys112"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"ys112"},"content":"    public static final Applicant CARL_APPLICANT \u003d new ApplicantBuilder(CARL)","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"ys112"},"content":"        .withRole(\"UX designer\").withStage(\"technical_assessment\").build();","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"ys112"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"ys112"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"ys112"},"content":"    public static final Applicant DANIEL_APPLICANT \u003d new ApplicantBuilder(DANIEL)","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"ys112"},"content":"        .withRole(\"UX designer\").withStage(\"technical_assessment\").build();","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"ys112"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"ys112"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"ys112"},"content":"    public static final Applicant ELLE_APPLICANT \u003d new ApplicantBuilder(ELLE)","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"ys112"},"content":"        .withRole(\"Backend Engineer\").withStage(\"interview\").build();","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"ys112"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"ys112"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"ys112"},"content":"    public static final Applicant FIONA_APPLICANT \u003d new ApplicantBuilder(FIONA)","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"ys112"},"content":"        .withRole(\"ML Engineer\").withStage(\"decision_and_offer\").build();","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"ys112"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"ys112"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"ys112"},"content":"    public static final Applicant GEORGE_APPLICANT \u003d new ApplicantBuilder(GEORGE)","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"ys112"},"content":"        .withRole(\"DevOps Engineer\").withStage(\"decision_and_offer\").build();","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"ys112"},"content":"    // Manually added","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"ys112"},"content":"    public static final Person HELLEN \u003d new PersonBuilder().withName(\"Hellen Kelly\").withPhone(\"98453242\")","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"ys112"},"content":"        .withEmail(\"hellen@example.com\").withAddress(\"9th street\").build();","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"ys112"},"content":"    public static final Applicant HELLEN_APPLICANT \u003d new ApplicantBuilder(HELLEN)","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"ys112"},"content":"        .withRole(\"Cloud Engineer\").withStage(\"initial_application\").build();","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"ys112"},"content":"    public static final Person IVAN \u003d new PersonBuilder().withName(\"Ivan Lim\").withPhone(\"97233423\")","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"ys112"},"content":"        .withEmail(\"ivan@example.com\").withAddress(\"10th street\").build();","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"ys112"},"content":"    public static final Applicant IVAN_APPLICANT \u003d new ApplicantBuilder(IVAN)","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"ys112"},"content":"        .withRole(\"Network Engineer\").withStage(\"initial_application\").build();","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"ys112"},"content":"    private TypicalApplicants() {} // prevents instantiation","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"ys112"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"ys112"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"ys112"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"ys112"},"content":"    public static AddressBook getTypicalApplicantsAddressBook() {","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"ys112"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"ys112"},"content":"        for (Applicant person : getTypicalApplicants()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"ys112"},"content":"            ab.addPerson(person);","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"ys112"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"ys112"},"content":"        return ab;","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"ys112"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"ys112"},"content":"    public static List\u003cApplicant\u003e getTypicalApplicants() {","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"ys112"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE_APPLICANT, BENSON_APPLICANT, CARL_APPLICANT, DANIEL_APPLICANT,","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"ys112"},"content":"            ELLE_APPLICANT, FIONA_APPLICANT, GEORGE_APPLICANT));","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"ys112"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"ys112"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"ys112":83}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"xinen26"},"content":"    public static AddressBook getTypicalApplicantBook() {","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"xinen26"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"xinen26"},"content":"        for (Person person : getTypicalApplicants()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"xinen26"},"content":"            ab.addPerson(person);","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"xinen26"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"xinen26"},"content":"        return ab;","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"xinen26"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":83,"author":{"gitId":"xinen26"},"content":"    public static List\u003cPerson\u003e getTypicalApplicants() {","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"xinen26"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(AMY, BOB));","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"xinen26"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"xinen26":10,"-":76}}]
